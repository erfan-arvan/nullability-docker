Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 1 time.  Unmatched entries are ignored!
Unterminated calls:
  org.jgraph.example.HelloWorld.main(java.lang.String[]) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

missing variables in newEnterExitRel:
  parent = org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.CellEditorHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
  child = org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.CellEditorHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@469c0298
parent varinfos missing from parent_to_child_map:
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.JGraph.DOT_GRID_MODE]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.JGraph.DOT_GRID_MODE-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.DOT_GRID_MODE-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.JGraph.CROSS_GRID_MODE]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.JGraph.CROSS_GRID_MODE-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.CROSS_GRID_MODE-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.JGraph.LINE_GRID_MODE]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.JGraph.LINE_GRID_MODE-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.JGraph.LINE_GRID_MODE-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1]
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].lastParent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].cell
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].parent
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].childViews
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].allAttributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].attributes
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.dropAction-1].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis].groupBounds
   org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis-1].groupBounds
rel.parent_to_child_map:
    org.jgraph.plaf.basic.BasicGraphUI.this => orig(org.jgraph.plaf.basic.BasicGraphUI.this)
    org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW => orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
    org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER => orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
    org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP => orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
    org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS => orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
    org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES => orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
    org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS => orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
    org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize => orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
    org.jgraph.JGraph.VERSION => orig(org.jgraph.JGraph.VERSION)
    org.jgraph.JGraph.VERSION.toString => orig(org.jgraph.JGraph.VERSION.toString)
    org.jgraph.JGraph.DOT_GRID_MODE => org.jgraph.JGraph.DOT_GRID_MODE
    org.jgraph.JGraph.CROSS_GRID_MODE => org.jgraph.JGraph.CROSS_GRID_MODE
    org.jgraph.JGraph.LINE_GRID_MODE => org.jgraph.JGraph.LINE_GRID_MODE
    org.jgraph.JGraph.IS_MAC => orig(org.jgraph.JGraph.IS_MAC)
    org.jgraph.JGraph.uiClassID => orig(org.jgraph.JGraph.uiClassID)
    org.jgraph.JGraph.uiClassID.toString => orig(org.jgraph.JGraph.uiClassID.toString)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
    org.jgraph.JGraph.GRAPH_MODEL_PROPERTY => orig(org.jgraph.JGraph.GRAPH_MODEL_PROPERTY)
    org.jgraph.JGraph.GRAPH_MODEL_PROPERTY.toString => orig(org.jgraph.JGraph.GRAPH_MODEL_PROPERTY.toString)
    org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY => orig(org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY)
    org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY.toString => orig(org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY.toString)
    org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY => orig(org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY)
    org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY.toString => orig(org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY.toString)
    org.jgraph.JGraph.EDITABLE_PROPERTY => orig(org.jgraph.JGraph.EDITABLE_PROPERTY)
    org.jgraph.JGraph.EDITABLE_PROPERTY.toString => orig(org.jgraph.JGraph.EDITABLE_PROPERTY.toString)
    org.jgraph.JGraph.SELECTIONENABLED_PROPERTY => orig(org.jgraph.JGraph.SELECTIONENABLED_PROPERTY)
    org.jgraph.JGraph.SELECTIONENABLED_PROPERTY.toString => orig(org.jgraph.JGraph.SELECTIONENABLED_PROPERTY.toString)
    org.jgraph.JGraph.SCALE_PROPERTY => orig(org.jgraph.JGraph.SCALE_PROPERTY)
    org.jgraph.JGraph.SCALE_PROPERTY.toString => orig(org.jgraph.JGraph.SCALE_PROPERTY.toString)
    org.jgraph.JGraph.ANTIALIASED_PROPERTY => orig(org.jgraph.JGraph.ANTIALIASED_PROPERTY)
    org.jgraph.JGraph.ANTIALIASED_PROPERTY.toString => orig(org.jgraph.JGraph.ANTIALIASED_PROPERTY.toString)
    org.jgraph.JGraph.GRID_SIZE_PROPERTY => orig(org.jgraph.JGraph.GRID_SIZE_PROPERTY)
    org.jgraph.JGraph.GRID_SIZE_PROPERTY.toString => orig(org.jgraph.JGraph.GRID_SIZE_PROPERTY.toString)
    org.jgraph.JGraph.GRID_VISIBLE_PROPERTY => orig(org.jgraph.JGraph.GRID_VISIBLE_PROPERTY)
    org.jgraph.JGraph.GRID_VISIBLE_PROPERTY.toString => orig(org.jgraph.JGraph.GRID_VISIBLE_PROPERTY.toString)
    org.jgraph.JGraph.GRID_COLOR_PROPERTY => orig(org.jgraph.JGraph.GRID_COLOR_PROPERTY)
    org.jgraph.JGraph.GRID_COLOR_PROPERTY.toString => orig(org.jgraph.JGraph.GRID_COLOR_PROPERTY.toString)
    org.jgraph.JGraph.HANDLE_COLOR_PROPERTY => orig(org.jgraph.JGraph.HANDLE_COLOR_PROPERTY)
    org.jgraph.JGraph.HANDLE_COLOR_PROPERTY.toString => orig(org.jgraph.JGraph.HANDLE_COLOR_PROPERTY.toString)
    org.jgraph.JGraph.HANDLE_SIZE_PROPERTY => orig(org.jgraph.JGraph.HANDLE_SIZE_PROPERTY)
    org.jgraph.JGraph.HANDLE_SIZE_PROPERTY.toString => orig(org.jgraph.JGraph.HANDLE_SIZE_PROPERTY.toString)
    org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY => orig(org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY)
    org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY.toString => orig(org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY.toString)
    org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY => orig(org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY)
    org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY.toString => orig(org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY.toString)
    org.jgraph.JGraph.PORTS_SCALED_PROPERTY => orig(org.jgraph.JGraph.PORTS_SCALED_PROPERTY)
    org.jgraph.JGraph.PORTS_SCALED_PROPERTY.toString => orig(org.jgraph.JGraph.PORTS_SCALED_PROPERTY.toString)
    org.jgraph.JGraph.SELECTION_MODEL_PROPERTY => orig(org.jgraph.JGraph.SELECTION_MODEL_PROPERTY)
    org.jgraph.JGraph.SELECTION_MODEL_PROPERTY.toString => orig(org.jgraph.JGraph.SELECTION_MODEL_PROPERTY.toString)
    org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY => orig(org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY)
    org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY.toString => orig(org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY.toString)
    org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE => orig(org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE)
    org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE.toString => orig(org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE.toString)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..] => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..])
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..].getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..].getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..] => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..])
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].allAttributes => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].allAttributes)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].attributes => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].attributes)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing => orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
    org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane => orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
    org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize => orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
    org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize => orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModel => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.handle => orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
    org.jgraph.plaf.basic.BasicGraphUI.this.handle.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent => orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
    org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.focus => orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
    org.jgraph.plaf.basic.BasicGraphUI.this.focus.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus => orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
    org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.editingCell => orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
    org.jgraph.plaf.basic.BasicGraphUI.this.editingCell.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize => orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
    org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation => orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
    org.jgraph.plaf.basic.BasicGraphUI.this.dropAction => orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
    org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView => orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
    org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.keyListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.componentListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.componentListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.timer => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.timer)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.lastPosition => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.lastPosition)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.outer => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.outer)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.inner => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.inner)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.canImport => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.canImport)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component)
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component.getClass().getName() => orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component.getClass().getName())
    org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget => orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..]) => orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..]))
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..])-1 => orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..]))-1
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..]) => orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..]))
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..])-1 => orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..]))-1
child.var_infos:
    this
    org.jgraph.plaf.basic.BasicGraphUI.this
    org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW
    org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER
    org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP
    org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS
    org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES
    org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS
    org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize
    org.jgraph.plaf.basic.BasicGraphUI.this.graph
    org.jgraph.JGraph.VERSION
    org.jgraph.JGraph.VERSION.toString
    org.jgraph.JGraph.DOT_GRID_MODE
    org.jgraph.JGraph.CROSS_GRID_MODE
    org.jgraph.JGraph.LINE_GRID_MODE
    org.jgraph.JGraph.IS_MAC
    org.jgraph.JGraph.uiClassID
    org.jgraph.JGraph.uiClassID.toString
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable
    org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing
    org.jgraph.JGraph.GRAPH_MODEL_PROPERTY
    org.jgraph.JGraph.GRAPH_MODEL_PROPERTY.toString
    org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY
    org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY.toString
    org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY
    org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY.toString
    org.jgraph.JGraph.EDITABLE_PROPERTY
    org.jgraph.JGraph.EDITABLE_PROPERTY.toString
    org.jgraph.JGraph.SELECTIONENABLED_PROPERTY
    org.jgraph.JGraph.SELECTIONENABLED_PROPERTY.toString
    org.jgraph.JGraph.SCALE_PROPERTY
    org.jgraph.JGraph.SCALE_PROPERTY.toString
    org.jgraph.JGraph.ANTIALIASED_PROPERTY
    org.jgraph.JGraph.ANTIALIASED_PROPERTY.toString
    org.jgraph.JGraph.GRID_SIZE_PROPERTY
    org.jgraph.JGraph.GRID_SIZE_PROPERTY.toString
    org.jgraph.JGraph.GRID_VISIBLE_PROPERTY
    org.jgraph.JGraph.GRID_VISIBLE_PROPERTY.toString
    org.jgraph.JGraph.GRID_COLOR_PROPERTY
    org.jgraph.JGraph.GRID_COLOR_PROPERTY.toString
    org.jgraph.JGraph.HANDLE_COLOR_PROPERTY
    org.jgraph.JGraph.HANDLE_COLOR_PROPERTY.toString
    org.jgraph.JGraph.HANDLE_SIZE_PROPERTY
    org.jgraph.JGraph.HANDLE_SIZE_PROPERTY.toString
    org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY
    org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY.toString
    org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY
    org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY.toString
    org.jgraph.JGraph.PORTS_SCALED_PROPERTY
    org.jgraph.JGraph.PORTS_SCALED_PROPERTY.toString
    org.jgraph.JGraph.SELECTION_MODEL_PROPERTY
    org.jgraph.JGraph.SELECTION_MODEL_PROPERTY.toString
    org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY
    org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY.toString
    org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE
    org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE.toString
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..]
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..].getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..]
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].allAttributes
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].attributes
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing
    org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane
    org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize
    org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModel
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.handle
    org.jgraph.plaf.basic.BasicGraphUI.this.handle.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint
    org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent
    org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.focus
    org.jgraph.plaf.basic.BasicGraphUI.this.focus.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus
    org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.editingCell
    org.jgraph.plaf.basic.BasicGraphUI.this.editingCell.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize
    org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation
    org.jgraph.plaf.basic.BasicGraphUI.this.dropAction
    org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView
    org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener
    org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener
    org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.keyListener
    org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.componentListener
    org.jgraph.plaf.basic.BasicGraphUI.this.componentListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener
    org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener
    org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener
    org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener
    org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.timer
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.lastPosition
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.outer
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.inner
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.canImport
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component
    org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component.getClass().getName()
    org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget
    orig(org.jgraph.plaf.basic.BasicGraphUI.this)
    orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
    orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
    orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
    orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
    orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
    orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
    orig(org.jgraph.JGraph.VERSION)
    orig(org.jgraph.JGraph.VERSION.toString)
    orig(org.jgraph.JGraph.IS_MAC)
    orig(org.jgraph.JGraph.uiClassID)
    orig(org.jgraph.JGraph.uiClassID.toString)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
    orig(org.jgraph.JGraph.GRAPH_MODEL_PROPERTY)
    orig(org.jgraph.JGraph.GRAPH_MODEL_PROPERTY.toString)
    orig(org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY)
    orig(org.jgraph.JGraph.GRAPH_LAYOUT_CACHE_PROPERTY.toString)
    orig(org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY)
    orig(org.jgraph.JGraph.MARQUEE_HANDLER_PROPERTY.toString)
    orig(org.jgraph.JGraph.EDITABLE_PROPERTY)
    orig(org.jgraph.JGraph.EDITABLE_PROPERTY.toString)
    orig(org.jgraph.JGraph.SELECTIONENABLED_PROPERTY)
    orig(org.jgraph.JGraph.SELECTIONENABLED_PROPERTY.toString)
    orig(org.jgraph.JGraph.SCALE_PROPERTY)
    orig(org.jgraph.JGraph.SCALE_PROPERTY.toString)
    orig(org.jgraph.JGraph.ANTIALIASED_PROPERTY)
    orig(org.jgraph.JGraph.ANTIALIASED_PROPERTY.toString)
    orig(org.jgraph.JGraph.GRID_SIZE_PROPERTY)
    orig(org.jgraph.JGraph.GRID_SIZE_PROPERTY.toString)
    orig(org.jgraph.JGraph.GRID_VISIBLE_PROPERTY)
    orig(org.jgraph.JGraph.GRID_VISIBLE_PROPERTY.toString)
    orig(org.jgraph.JGraph.GRID_COLOR_PROPERTY)
    orig(org.jgraph.JGraph.GRID_COLOR_PROPERTY.toString)
    orig(org.jgraph.JGraph.HANDLE_COLOR_PROPERTY)
    orig(org.jgraph.JGraph.HANDLE_COLOR_PROPERTY.toString)
    orig(org.jgraph.JGraph.HANDLE_SIZE_PROPERTY)
    orig(org.jgraph.JGraph.HANDLE_SIZE_PROPERTY.toString)
    orig(org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY)
    orig(org.jgraph.JGraph.LOCKED_HANDLE_COLOR_PROPERTY.toString)
    orig(org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY)
    orig(org.jgraph.JGraph.PORTS_VISIBLE_PROPERTY.toString)
    orig(org.jgraph.JGraph.PORTS_SCALED_PROPERTY)
    orig(org.jgraph.JGraph.PORTS_SCALED_PROPERTY.toString)
    orig(org.jgraph.JGraph.SELECTION_MODEL_PROPERTY)
    orig(org.jgraph.JGraph.SELECTION_MODEL_PROPERTY.toString)
    orig(org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY)
    orig(org.jgraph.JGraph.INVOKES_STOP_CELL_EDITING_PROPERTY.toString)
    orig(org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE)
    orig(org.jgraph.JGraph.PROPERTY_BACKGROUNDIMAGE.toString)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..])
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..].getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..])
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].lastParent.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].cell.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].parent.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].childViews.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].allAttributes)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].attributes)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..].groupBounds.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.timer)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.lastPosition)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.outer)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.inner)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.hysteresis)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.canImport)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component)
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener.component.getClass().getName())
    orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..])
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..])-1
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..])
    size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..])-1
    orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..]))
    orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[..]))-1
    orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..]))
    orig(size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[..]))-1
End of diagnostics for newEnterExitRel(org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.CellEditorHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER, org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.CellEditorHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT)
===========================================================================
org.jgraph.JGraph:::CLASS
===========================================================================
org.jgraph.JGraph:::OBJECT
this.graphModel == this.graphLayoutCache.graphModel
this.graphModel.getClass().getName() == this.graphLayoutCache.graphModel.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() == this.graphLayoutCache.localAttributes.getClass().getName()
this has only one value
this.selectionRedirector == null
this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graphLayoutCache.autoSizeOnValueChange == false
this.graphLayoutCache.showsExistingConnections == true
this.graphLayoutCache.showsChangedConnections == true
this.graphLayoutCache.showsInvisibleEditedCells == false
this.graphLayoutCache.showsInsertedCells == true
this.graphLayoutCache.showsInsertedConnections == true
this.graphLayoutCache.hidesExistingConnections == true
this.graphLayoutCache.hidesDanglingConnections == false
this.graphLayoutCache.remembersCellViews == true
this.graphLayoutCache.selectsAllInsertedCells == false
this.graphLayoutCache.selectsLocalInsertedCells == false
this.graphLayoutCache.movesChildrenOnExpand == true
this.graphLayoutCache.movesParentsOnCollapse == true
this.graphLayoutCache.resizesParentsOnCollapse == false
this.graphLayoutCache.collapseXScale == 1.0
this.graphLayoutCache.collapseYScale == 1.0
this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
this.graphLayoutCache.listenerList has only one value
this.graphLayoutCache.listenerList != null
this.graphLayoutCache.graphModel has only one value
this.graphLayoutCache.graphModel != null
this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graphLayoutCache.mapping has only one value
this.graphLayoutCache.mapping != null
this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
this.graphLayoutCache.hiddenMapping has only one value
this.graphLayoutCache.hiddenMapping != null
this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
this.graphLayoutCache.factory has only one value
this.graphLayoutCache.factory != null
this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
this.graphLayoutCache.visibleSet has only one value
this.graphLayoutCache.visibleSet != null
this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
this.graphLayoutCache.roots != null
this.graphLayoutCache.roots[] elements != null
this.graphLayoutCache.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
this.graphLayoutCache.ports != null
this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
this.graphLayoutCache.ports[] elements != null
this.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.graphLayoutCache.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.graphLayoutCache.ports[].lastParent elements != null
this.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graphLayoutCache.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graphLayoutCache.ports[].cell elements != null
this.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
this.graphLayoutCache.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] }
this.graphLayoutCache.ports[].parent elements != null
this.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graphLayoutCache.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graphLayoutCache.ports[].childViews elements != null
this.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
this.graphLayoutCache.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] }
this.graphLayoutCache.ports[].allAttributes elements != null
this.graphLayoutCache.ports[].attributes elements != null
this.graphLayoutCache.ports[].groupBounds elements == null
this.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
this.graphLayoutCache.ports[].groupBounds.getClass().getName() one of { [], [null, null] }
this.graphLayoutCache.partial == false
this.graphLayoutCache.allAttributesLocal == false
this.graphLayoutCache.localAttributes has only one value
this.graphLayoutCache.localAttributes != null
this.selectionModel has only one value
this.selectionModel != null
this.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
this.marquee has only one value
this.marquee != null
this.marquee.previousCursor == null
this.marquee.marqueeBounds == null
this.marquee.startPoint == null
this.marquee.currentPoint == null
this.offscreen == null
this.offscreenBounds == null
this.offscreenOffset == null
this.offgraphics == null
this.offscreenDirty.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.wholeOffscreenDirty == false
this.wholeOffscreenDirtyProportion == 0.8
this.offscreenBuffer == 300
this.volatileOffscreen == false
this.lastBufferAllocated == true
this.backgroundImage == null
this.backgroundComponent == null
this.backgroundScaled == true
this.scale == 1.0
this.antiAliased == false
this.editable == true
this.groupsEditable == false
this.selectionEnabled == true
this.previewInvalidNullPorts == true
this.gridVisible == false
this.gridSize == 10.0
this.gridMode == 0
this.portsVisible == false
this.portsScaled == true
this.portsOnTop == true
this.moveBelowZero == false
this.moveBeyondGraphBounds == true
this.edgeLabelsMovable == true
this.autoResizeGraph == true
this.highlightColor has only one value
this.highlightColor != null
this.dragEnabled == false
this.dropEnabled == true
this.xorEnabled == true
this.editClickCount == 2
this.enabled == true
this.gridEnabled == false
this.handleSize == 3
this.tolerance == 4
this.minimumMove == 5
this.isMoveIntoGroups == false
this.isMoveOutOfGroups == false
this.disconnectOnMove == false
this.moveable == true
this.sizeable == true
this.bendable == true
this.connectable == true
this.disconnectable == true
size(this.graphLayoutCache.roots[]) one of { 0, 3 }
size(this.graphLayoutCache.roots[])-1 != 0
size(this.graphLayoutCache.ports[]) one of { 0, 2 }
size(this.graphLayoutCache.ports[])-1 != 0
this.graphModel.getClass().getName() != this.graphLayoutCache.mapping.getClass().getName()
this.graphModel.getClass().getName() != this.graphLayoutCache.hiddenMapping.getClass().getName()
this.graphModel.getClass().getName() != this.graphLayoutCache.factory.getClass().getName()
this.graphModel.getClass().getName() != this.graphLayoutCache.visibleSet.getClass().getName()
this.graphModel.getClass().getName() != this.graphLayoutCache.roots.getClass().getName()
this.graphModel.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphModel.getClass().getName() != this.selectionModel.getClass().getName()
this.graphModel.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.graphLayoutCache.mapping.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.graphLayoutCache.hiddenMapping.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.graphLayoutCache.factory.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.graphLayoutCache.visibleSet.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.graphLayoutCache.roots.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.graphModel.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.graphLayoutCache.hiddenMapping.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.graphLayoutCache.factory.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.graphLayoutCache.visibleSet.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.graphLayoutCache.roots.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != this.graphLayoutCache.factory.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != this.graphLayoutCache.visibleSet.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != this.graphLayoutCache.roots.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != this.graphLayoutCache.visibleSet.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != this.graphLayoutCache.roots.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != this.graphLayoutCache.roots.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != this.graphLayoutCache.ports.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != this.offscreenDirty.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != this.selectionModel.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != this.offscreenDirty.getClass().getName()
this.selectionModel.getClass().getName() != this.offscreenDirty.getClass().getName()
===========================================================================
org.jgraph.JGraph.JGraph(org.jgraph.graph.GraphModel):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.JGraph.JGraph(org.jgraph.graph.GraphModel):::EXIT
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.JGraph(org.jgraph.graph.GraphModel, org.jgraph.graph.GraphLayoutCache):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 == null
===========================================================================
org.jgraph.JGraph.JGraph(org.jgraph.graph.GraphModel, org.jgraph.graph.GraphLayoutCache):::EXIT
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.JGraph(org.jgraph.graph.GraphModel, org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.BasicMarqueeHandler):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 == null
arg2 has only one value
arg2.previousCursor == null
arg2.marqueeBounds == null
arg2.startPoint == null
arg2.currentPoint == null
===========================================================================
org.jgraph.JGraph.JGraph(org.jgraph.graph.GraphModel, org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.BasicMarqueeHandler):::EXIT
arg2.previousCursor == orig(arg2.previousCursor)
arg2.marqueeBounds == orig(arg2.marqueeBounds)
arg2.startPoint == orig(arg2.startPoint)
arg2.currentPoint == orig(arg2.currentPoint)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg2.previousCursor == null
arg2.marqueeBounds == null
arg2.startPoint == null
arg2.currentPoint == null
===========================================================================
org.jgraph.JGraph.addOffscreenDirty(java.awt.geom.Rectangle2D):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
arg0 has only one value
arg0.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
===========================================================================
org.jgraph.JGraph.addOffscreenDirty(java.awt.geom.Rectangle2D):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty has only one value
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
===========================================================================
org.jgraph.JGraph.clearOffscreen():::ENTER
this.graphModel has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.clearOffscreen():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.clearSelection():::ENTER
this.graphModel has only one value
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.clearSelection():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object):::ENTER
this.graphModel has only one value
this.graphModel != null
this.graphLayoutCache has only one value
this.graphLayoutCache != null
this.offscreenDirty == null
this.handleColor has only one value
this.handleColor != null
this.lockedHandleColor has only one value
this.lockedHandleColor != null
this.marqueeColor has only one value
this.marqueeColor != null
this.gridColor has only one value
this.gridColor != null
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
arg0 != null
this.graphModel.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != arg0.getClass().getName()
this.selectionModel.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object):::EXIT924
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
return != null
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object):::EXIT925
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
return == null
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
(this.graphLayoutCache.roots[] == [])  <==>  (return == null)
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[] == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].allAttributes == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].attributes == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].cell == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].cell.getClass().getName() == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].childViews == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].childViews.getClass().getName() == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].getClass().getName() == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].groupBounds == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].lastParent == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].lastParent.getClass().getName() == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].parent == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.ports[].parent.getClass().getName() == [])
(this.graphLayoutCache.roots[] == [])  <==>  (this.graphLayoutCache.roots[].getClass().getName() == [])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (return != null)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (size(this.graphLayoutCache.ports[]) == 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (size(this.graphLayoutCache.roots[]) == 3)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].groupBounds elements == null)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  <==>  (this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView])
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (return.getClass().getName() != orig(arg0.getClass().getName()))
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.factory.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.hiddenMapping.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.mapping.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class)
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.roots.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphLayoutCache.visibleSet.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.graphModel.getClass().getName() != return.getClass().getName())
(this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3)  ==>  (this.selectionModel.getClass().getName() != return.getClass().getName())
this.graphModel has only one value
this.graphModel != null
this.graphLayoutCache has only one value
this.graphLayoutCache != null
this.offscreenDirty == null
this.handleColor has only one value
this.handleColor != null
this.lockedHandleColor has only one value
this.lockedHandleColor != null
this.marqueeColor has only one value
this.marqueeColor != null
this.gridColor has only one value
this.gridColor != null
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
this.graphModel.getClass().getName() != return.getClass().getName()
this.graphModel.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.mapping.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.hiddenMapping.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.factory.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.roots.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.ports.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != orig(arg0.getClass().getName())
this.selectionModel.getClass().getName() != return.getClass().getName()
this.selectionModel.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object[]):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
arg0.getClass().getName() == java.lang.Object[].class
size(arg0[]) == 7
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object[]):::EXIT944
===========================================================================
org.jgraph.JGraph.getCellBounds(java.lang.Object[]):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
arg0[] == orig(arg0[])
this.graphModel has only one value
this.graphLayoutCache has only one value
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
===========================================================================
org.jgraph.JGraph.getClipRectangle(org.jgraph.event.GraphLayoutCacheEvent$GraphLayoutCacheChange):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
===========================================================================
org.jgraph.JGraph.getClipRectangle(org.jgraph.event.GraphLayoutCacheEvent$GraphLayoutCacheChange):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
return.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
===========================================================================
org.jgraph.JGraph.getGraphLayoutCache():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
===========================================================================
org.jgraph.JGraph.getGraphLayoutCache():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == return.graphModel.getClass().getName()
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == return.mapping.getClass().getName()
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == return.hiddenMapping.getClass().getName()
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == return.factory.getClass().getName()
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == return.visibleSet.getClass().getName()
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == return.roots.getClass().getName()
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == return.ports.getClass().getName()
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == return.visibleSet.getClass().getName()
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
return.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
return.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
return.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
return.visibleSet.getClass().getName() == return.localAttributes.getClass().getName()
return.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
return.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
return.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
return.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
return has only one value
return.autoSizeOnValueChange == false
return.showsExistingConnections == true
return.showsChangedConnections == true
return.showsInvisibleEditedCells == false
return.showsInsertedCells == true
return.showsInsertedConnections == true
return.hidesExistingConnections == true
return.hidesDanglingConnections == false
return.remembersCellViews == true
return.selectsAllInsertedCells == false
return.selectsLocalInsertedCells == false
return.movesChildrenOnExpand == true
return.movesParentsOnCollapse == true
return.resizesParentsOnCollapse == false
return.collapseXScale == 1.0
return.collapseYScale == 1.0
return.reconnectsEdgesToVisibleParent == false
return.listenerList has only one value
return.graphModel has only one value
return.mapping has only one value
return.mapping.getClass().getName() == java.util.Hashtable.class
return.hiddenMapping has only one value
return.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
return.factory has only one value
return.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
return.visibleSet has only one value
return.visibleSet.getClass().getName() == java.util.HashSet.class
return.roots has only one value
return.roots[] == []
return.roots[].getClass().getName() == []
return.roots.getClass().getName() == java.util.ArrayList.class
return.ports has only one value
return.ports.getClass().getName() == org.jgraph.graph.PortView[].class
return.ports[] == []
return.ports[].getClass().getName() == []
return.ports[].lastParent == []
return.ports[].lastParent.getClass().getName() == []
return.ports[].cell == []
return.ports[].cell.getClass().getName() == []
return.ports[].parent == []
return.ports[].parent.getClass().getName() == []
return.ports[].childViews == []
return.ports[].childViews.getClass().getName() == []
return.ports[].allAttributes == []
return.ports[].attributes == []
return.ports[].groupBounds == []
return.ports[].groupBounds.getClass().getName() == []
return.partial == false
return.allAttributesLocal == false
return.localAttributes has only one value
===========================================================================
org.jgraph.JGraph.getMarqueeHandler():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.getMarqueeHandler():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
return has only one value
return.previousCursor == null
return.marqueeBounds == null
return.startPoint == null
return.currentPoint == null
===========================================================================
org.jgraph.JGraph.getModel():::ENTER
this.graphModel has only one value
this.graphModel != null
this.graphLayoutCache has only one value
this.graphLayoutCache != null
this.offscreenDirty == null
===========================================================================
org.jgraph.JGraph.getModel():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == return
this.graphModel.getClass().getName() == return.getClass().getName()
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == return
this.graphLayoutCache.graphModel.getClass().getName() == return.getClass().getName()
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
return == orig(this.graphModel)
return == orig(this.graphLayoutCache.graphModel)
return.getClass().getName() == orig(this.graphModel.getClass().getName())
return.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache has only one value
this.graphLayoutCache != null
this.offscreenDirty == null
return has only one value
return != null
return.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graphLayoutCache.mapping.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != return.getClass().getName()
this.selectionModel.getClass().getName() != return.getClass().getName()
===========================================================================
org.jgraph.JGraph.getSelectionCells():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
===========================================================================
org.jgraph.JGraph.getSelectionCells():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
return.getClass().getName() == java.lang.Object[].class
return[] == []
===========================================================================
org.jgraph.JGraph.getSelectionModel():::ENTER
this.graphModel has only one value
===========================================================================
org.jgraph.JGraph.getSelectionModel():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == return
this.selectionModel.getClass().getName() == return.getClass().getName()
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
return == orig(this.selectionModel)
return.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.graphModel has only one value
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
this.graphModel.getClass().getName() != return.getClass().getName()
===========================================================================
org.jgraph.JGraph.getUI():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
===========================================================================
org.jgraph.JGraph.getUI():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI.class
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphModel.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != return.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != return.getClass().getName()
this.selectionModel.getClass().getName() != return.getClass().getName()
===========================================================================
org.jgraph.JGraph.graphDidChange():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
===========================================================================
org.jgraph.JGraph.graphDidChange():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
===========================================================================
org.jgraph.JGraph.isEditing():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
===========================================================================
org.jgraph.JGraph.isEditing():::EXIT2930
===========================================================================
org.jgraph.JGraph.isEditing():::EXIT2930;condition="not(return == true)"
===========================================================================
org.jgraph.JGraph.isEditing():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
return == false
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
===========================================================================
org.jgraph.JGraph.isEditing():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.JGraph.isSelectionEmpty():::ENTER
this.graphModel has only one value
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.isSelectionEmpty():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
return == true
===========================================================================
org.jgraph.JGraph.isSelectionEmpty():::EXIT;condition="return == true"
===========================================================================
org.jgraph.JGraph.setBackground(java.awt.Color):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
===========================================================================
org.jgraph.JGraph.setBackground(java.awt.Color):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setCloneable(boolean):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 == true
===========================================================================
org.jgraph.JGraph.setCloneable(boolean):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == true
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setGraphLayoutCache(org.jgraph.graph.GraphLayoutCache):::ENTER
this.graphModel == arg0.graphModel
this.graphModel has only one value
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
===========================================================================
org.jgraph.JGraph.setGraphLayoutCache(org.jgraph.graph.GraphLayoutCache):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == arg0.graphModel
this.graphModel == orig(this.graphModel)
this.graphModel == orig(arg0.graphModel)
this.graphLayoutCache == orig(arg0)
this.graphLayoutCache.autoSizeOnValueChange == arg0.autoSizeOnValueChange
this.graphLayoutCache.showsExistingConnections == arg0.showsExistingConnections
this.graphLayoutCache.showsChangedConnections == arg0.showsChangedConnections
this.graphLayoutCache.showsInvisibleEditedCells == arg0.showsInvisibleEditedCells
this.graphLayoutCache.showsInsertedCells == arg0.showsInsertedCells
this.graphLayoutCache.showsInsertedConnections == arg0.showsInsertedConnections
this.graphLayoutCache.hidesExistingConnections == arg0.hidesExistingConnections
this.graphLayoutCache.hidesDanglingConnections == arg0.hidesDanglingConnections
this.graphLayoutCache.remembersCellViews == arg0.remembersCellViews
this.graphLayoutCache.selectsAllInsertedCells == arg0.selectsAllInsertedCells
this.graphLayoutCache.selectsLocalInsertedCells == arg0.selectsLocalInsertedCells
this.graphLayoutCache.movesChildrenOnExpand == arg0.movesChildrenOnExpand
this.graphLayoutCache.movesParentsOnCollapse == arg0.movesParentsOnCollapse
this.graphLayoutCache.resizesParentsOnCollapse == arg0.resizesParentsOnCollapse
this.graphLayoutCache.collapseXScale == arg0.collapseXScale
this.graphLayoutCache.collapseYScale == arg0.collapseYScale
this.graphLayoutCache.reconnectsEdgesToVisibleParent == arg0.reconnectsEdgesToVisibleParent
this.graphLayoutCache.listenerList == arg0.listenerList
this.graphLayoutCache.mapping == arg0.mapping
this.graphLayoutCache.hiddenMapping == arg0.hiddenMapping
this.graphLayoutCache.factory == arg0.factory
this.graphLayoutCache.visibleSet == arg0.visibleSet
this.graphLayoutCache.roots == arg0.roots
this.graphLayoutCache.ports == arg0.ports
this.graphLayoutCache.partial == arg0.partial
this.graphLayoutCache.allAttributesLocal == arg0.allAttributesLocal
this.graphLayoutCache.localAttributes == arg0.localAttributes
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.mapping == orig(arg0.mapping)
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.factory == orig(arg0.factory)
arg0.visibleSet == orig(arg0.visibleSet)
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
===========================================================================
org.jgraph.JGraph.setGridColor(java.awt.Color):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
===========================================================================
org.jgraph.JGraph.setGridColor(java.awt.Color):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setHandleColor(java.awt.Color):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor has only one value
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
===========================================================================
org.jgraph.JGraph.setHandleColor(java.awt.Color):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor == null
this.marqueeColor has only one value
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setInvokesStopCellEditing(boolean):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == true
this.invokesStopCellEditing == false
arg0 == true
===========================================================================
org.jgraph.JGraph.setInvokesStopCellEditing(boolean):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == true
this.invokesStopCellEditing == true
===========================================================================
org.jgraph.JGraph.setJumpToDefaultPort(boolean):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == true
this.invokesStopCellEditing == true
arg0 == true
===========================================================================
org.jgraph.JGraph.setJumpToDefaultPort(boolean):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
===========================================================================
org.jgraph.JGraph.setLockedHandleColor(java.awt.Color):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor == null
this.marqueeColor has only one value
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
===========================================================================
org.jgraph.JGraph.setLockedHandleColor(java.awt.Color):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setMarqueeColor(java.awt.Color):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
===========================================================================
org.jgraph.JGraph.setMarqueeColor(java.awt.Color):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor has only one value
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setModel(org.jgraph.graph.GraphModel):::ENTER
this.graphModel == null
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.JGraph.setModel(org.jgraph.graph.GraphModel):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(arg0)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache == null
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setOpaque(boolean):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 == true
===========================================================================
org.jgraph.JGraph.setOpaque(boolean):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.setUI(org.jgraph.plaf.GraphUI):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
arg0 has only one value
arg0.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI.class
===========================================================================
org.jgraph.JGraph.setUI(org.jgraph.plaf.GraphUI):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.updateAutoSize(org.jgraph.graph.CellView):::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphModel.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.mapping.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.hiddenMapping.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.factory.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.visibleSet.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != arg0.getClass().getName()
this.graphLayoutCache.ports.getClass().getName() != arg0.getClass().getName()
this.selectionModel.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.JGraph.updateAutoSize(org.jgraph.graph.CellView):::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.selectionModel.getClass().getName() == orig(this.selectionModel.getClass().getName())
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.handleColor == orig(this.handleColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.marqueeColor == orig(this.marqueeColor)
this.gridColor == orig(this.gridColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == true
this.cloneable == true
this.invokesStopCellEditing == true
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
this.graphModel.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.mapping.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.hiddenMapping.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.factory.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.visibleSet.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.roots.getClass().getName() in this.graphLayoutCache.ports[].childViews.getClass().getName()
this.graphLayoutCache.roots.getClass().getName() != orig(arg0.getClass().getName())
this.graphLayoutCache.ports.getClass().getName() != orig(arg0.getClass().getName())
this.selectionModel.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.JGraph.updateUI():::ENTER
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor == null
this.lockedHandleColor == null
this.marqueeColor == null
this.gridColor == null
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.JGraph.updateUI():::EXIT
this.selectionRedirector == orig(this.selectionRedirector)
this.graphModel == orig(this.graphModel)
this.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.selectionModel == orig(this.selectionModel)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.offscreen == orig(this.offscreen)
this.offscreenBounds == orig(this.offscreenBounds)
this.offscreenOffset == orig(this.offscreenOffset)
this.offgraphics == orig(this.offgraphics)
this.offscreenDirty == orig(this.offscreenDirty)
this.wholeOffscreenDirty == orig(this.wholeOffscreenDirty)
this.wholeOffscreenDirtyProportion == orig(this.wholeOffscreenDirtyProportion)
this.offscreenBuffer == orig(this.offscreenBuffer)
this.volatileOffscreen == orig(this.volatileOffscreen)
this.lastBufferAllocated == orig(this.lastBufferAllocated)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundComponent == orig(this.backgroundComponent)
this.backgroundScaled == orig(this.backgroundScaled)
this.scale == orig(this.scale)
this.antiAliased == orig(this.antiAliased)
this.editable == orig(this.editable)
this.groupsEditable == orig(this.groupsEditable)
this.selectionEnabled == orig(this.selectionEnabled)
this.previewInvalidNullPorts == orig(this.previewInvalidNullPorts)
this.gridVisible == orig(this.gridVisible)
this.gridSize == orig(this.gridSize)
this.gridMode == orig(this.gridMode)
this.portsVisible == orig(this.portsVisible)
this.portsScaled == orig(this.portsScaled)
this.portsOnTop == orig(this.portsOnTop)
this.moveBelowZero == orig(this.moveBelowZero)
this.moveBeyondGraphBounds == orig(this.moveBeyondGraphBounds)
this.edgeLabelsMovable == orig(this.edgeLabelsMovable)
this.autoResizeGraph == orig(this.autoResizeGraph)
this.highlightColor == orig(this.highlightColor)
this.dragEnabled == orig(this.dragEnabled)
this.dropEnabled == orig(this.dropEnabled)
this.xorEnabled == orig(this.xorEnabled)
this.editClickCount == orig(this.editClickCount)
this.enabled == orig(this.enabled)
this.gridEnabled == orig(this.gridEnabled)
this.handleSize == orig(this.handleSize)
this.tolerance == orig(this.tolerance)
this.minimumMove == orig(this.minimumMove)
this.isJumpToDefaultPort == orig(this.isJumpToDefaultPort)
this.isMoveIntoGroups == orig(this.isMoveIntoGroups)
this.isMoveOutOfGroups == orig(this.isMoveOutOfGroups)
this.disconnectOnMove == orig(this.disconnectOnMove)
this.moveable == orig(this.moveable)
this.cloneable == orig(this.cloneable)
this.sizeable == orig(this.sizeable)
this.bendable == orig(this.bendable)
this.connectable == orig(this.connectable)
this.disconnectable == orig(this.disconnectable)
this.invokesStopCellEditing == orig(this.invokesStopCellEditing)
this.graphModel has only one value
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.offscreenDirty == null
this.handleColor has only one value
this.lockedHandleColor has only one value
this.marqueeColor has only one value
this.gridColor has only one value
this.isJumpToDefaultPort == false
this.cloneable == false
this.invokesStopCellEditing == false
===========================================================================
org.jgraph.event.GraphModelEvent:::OBJECT
this has only one value
this.change has only one value
this.change != null
this.change.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
===========================================================================
org.jgraph.event.GraphModelEvent.GraphModelEvent(java.lang.Object, org.jgraph.event.GraphModelEvent$GraphModelChange):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
===========================================================================
org.jgraph.event.GraphModelEvent.GraphModelEvent(java.lang.Object, org.jgraph.event.GraphModelEvent$GraphModelChange):::EXIT
===========================================================================
org.jgraph.event.GraphModelEvent.getChange():::ENTER
===========================================================================
org.jgraph.event.GraphModelEvent.getChange():::EXIT
this.change == orig(this.change)
this.change.getClass().getName() == orig(this.change.getClass().getName())
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
===========================================================================
org.jgraph.example.HelloWorld.createVertex(java.lang.String, double, double, double, double, java.awt.Color, boolean):::ENTER
arg0.toString one of { "Hello", "World" }
arg1 one of { 20.0, 140.0 }
arg2 one of { 20.0, 140.0 }
arg3 == 40.0
arg4 == 20.0
===========================================================================
org.jgraph.example.HelloWorld.createVertex(java.lang.String, double, double, double, double, java.awt.Color, boolean):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Hello", "World" }
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
===========================================================================
org.jgraph.graph.AbstractCellView:::OBJECT
this.parent.getClass().getName() == org.jgraph.graph.VertexView.class
this.childViews != null
this.childViews[] == []
this.childViews[].getClass().getName() == []
this.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.AbstractCellView.AbstractCellView(java.lang.Object):::ENTER
===========================================================================
org.jgraph.graph.AbstractCellView.AbstractCellView(java.lang.Object):::EXIT
this.parent == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.AbstractCellView.childUpdated():::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.childUpdated():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.createAttributeMap():::ENTER
this.cell == null
this.parent == null
this.allAttributes == null
this.attributes == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.createAttributeMap():::EXIT
this.cell == orig(this.cell)
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell == null
this.parent == null
this.allAttributes == null
this.attributes == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getAllAttributes():::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getAllAttributes():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
return != null
===========================================================================
org.jgraph.graph.AbstractCellView.getAttributes():::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getAttributes():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
return != null
===========================================================================
org.jgraph.graph.AbstractCellView.getBounds():::ENTER
this.cell != null
this.parent == null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getBounds():::EXIT325
===========================================================================
org.jgraph.graph.AbstractCellView.getBounds():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.parent == null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
return == null
===========================================================================
org.jgraph.graph.AbstractCellView.getCell():::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getCell():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
return != null
===========================================================================
org.jgraph.graph.AbstractCellView.getCellAttributes(org.jgraph.graph.GraphModel):::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
arg0 has only one value
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.graph.AbstractCellView.getCellAttributes(org.jgraph.graph.GraphModel):::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds.getClass().getName() == orig(this.groupBounds.getClass().getName())
this.cell != null
this.allAttributes != null
this.attributes != null
return != null
===========================================================================
org.jgraph.graph.AbstractCellView.getCenterPoint(org.jgraph.graph.CellView):::ENTER
arg0.getClass().getName() == org.jgraph.graph.VertexView.class
===========================================================================
org.jgraph.graph.AbstractCellView.getCenterPoint(org.jgraph.graph.CellView):::EXIT598
===========================================================================
org.jgraph.graph.AbstractCellView.getCenterPoint(org.jgraph.graph.CellView):::EXIT
return.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.AbstractCellView.getChildViews():::ENTER
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getChildViews():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds == null
return.getClass().getName() == org.jgraph.graph.CellView[].class
return[] == []
===========================================================================
org.jgraph.graph.AbstractCellView.getParentView():::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.getParentView():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
return.getClass().getName() == org.jgraph.graph.VertexView.class
===========================================================================
org.jgraph.graph.AbstractCellView.isLeaf():::ENTER
this.cell != null
this.parent == null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.AbstractCellView.isLeaf():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.cell != null
this.parent == null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
return == true
===========================================================================
org.jgraph.graph.AbstractCellView.isLeaf():::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.AbstractCellView.mergeAttributes():::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
===========================================================================
org.jgraph.graph.AbstractCellView.mergeAttributes():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds.getClass().getName() == orig(this.groupBounds.getClass().getName())
this.cell != null
this.allAttributes != null
this.attributes != null
===========================================================================
org.jgraph.graph.AbstractCellView.refresh(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellMapper, boolean):::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
arg0 has only one value
arg0 != null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.listenerList != null
arg0.graphModel has only one value
arg0.graphModel != null
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping != null
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping != null
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory != null
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet != null
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots != null
arg0.roots[] elements != null
arg0.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports != null
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes != null
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
arg1 has only one value
arg1 != null
arg1.getClass().getName() == org.jgraph.graph.GraphLayoutCache.class
size(arg0.roots[]) one of { 0, 3 }
size(arg0.roots[])-1 != 0
===========================================================================
org.jgraph.graph.AbstractCellView.refresh(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellMapper, boolean):::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.listenerList != null
arg0.graphModel has only one value
arg0.graphModel != null
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping != null
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping != null
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory != null
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet != null
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots != null
arg0.roots[] elements != null
arg0.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports != null
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes != null
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
size(arg0.roots[]) one of { 0, 3 }
size(arg0.roots[])-1 != 0
===========================================================================
org.jgraph.graph.AbstractCellView.removeFromParent():::ENTER
this.getClass().getName() == org.jgraph.graph.PortView.class
this.cell.getClass().getName() == org.jgraph.graph.DefaultPort.class
this.parent == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.AbstractCellView.removeFromParent():::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds.getClass().getName() == orig(this.groupBounds.getClass().getName())
this.cell.getClass().getName() == org.jgraph.graph.DefaultPort.class
this.parent == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.AbstractCellView.setCell(java.lang.Object):::ENTER
this.cell == null
this.parent == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.AbstractCellView.setCell(java.lang.Object):::EXIT
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds.getClass().getName() == orig(this.groupBounds.getClass().getName())
this.parent == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.AbstractCellView.update(org.jgraph.graph.GraphLayoutCache):::ENTER
this.cell != null
this.allAttributes != null
this.attributes != null
arg0 has only one value
arg0 != null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.listenerList != null
arg0.graphModel has only one value
arg0.graphModel != null
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping != null
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping != null
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory != null
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet != null
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots != null
arg0.roots[] elements != null
arg0.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports != null
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes != null
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
size(arg0.roots[]) one of { 0, 3 }
size(arg0.roots[])-1 != 0
===========================================================================
org.jgraph.graph.AbstractCellView.update(org.jgraph.graph.GraphLayoutCache):::EXIT
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
this.cell != null
this.allAttributes != null
this.attributes != null
this.groupBounds == null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.listenerList != null
arg0.graphModel has only one value
arg0.graphModel != null
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping != null
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping != null
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory != null
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet != null
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots != null
arg0.roots[] elements != null
arg0.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports != null
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes != null
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
size(arg0.roots[]) one of { 0, 3 }
size(arg0.roots[])-1 != 0
===========================================================================
org.jgraph.graph.AttributeMap$1:::OBJECT
this has only one value
===========================================================================
org.jgraph.graph.AttributeMap$1.(int):::ENTER
arg0 == 0
===========================================================================
org.jgraph.graph.AttributeMap$1.(int):::EXIT
===========================================================================
org.jgraph.graph.AttributeMap$SerializablePoint2D:::OBJECT
===========================================================================
org.jgraph.graph.AttributeMap$SerializablePoint2D.SerializablePoint2D(double, double):::ENTER
arg0 one of { 10.0, 20.0 }
arg1 one of { 10.0, 20.0 }
===========================================================================
org.jgraph.graph.AttributeMap$SerializablePoint2D.SerializablePoint2D(double, double):::EXIT
===========================================================================
org.jgraph.graph.AttributeMap$SerializableRectangle2D:::OBJECT
===========================================================================
org.jgraph.graph.AttributeMap$SerializableRectangle2D.SerializableRectangle2D(double, double, double, double):::ENTER
arg0 one of { 20.0, 140.0 }
arg1 one of { 20.0, 140.0 }
arg2 == 40.0
arg3 == 20.0
===========================================================================
org.jgraph.graph.AttributeMap$SerializableRectangle2D.SerializableRectangle2D(double, double, double, double):::EXIT
===========================================================================
org.jgraph.graph.AttributeMap:::CLASS
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
===========================================================================
org.jgraph.graph.AttributeMap:::OBJECT
===========================================================================
org.jgraph.graph.AttributeMap.AttributeMap():::EXIT
===========================================================================
org.jgraph.graph.AttributeMap.AttributeMap(int):::ENTER
arg0 == 0
===========================================================================
org.jgraph.graph.AttributeMap.AttributeMap(int):::EXIT
===========================================================================
org.jgraph.graph.AttributeMap.applyMap(java.util.Map):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.AttributeMap.applyMap(java.util.Map):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
===========================================================================
org.jgraph.graph.AttributeMap.applyValue(java.lang.Object, java.lang.Object):::ENTER
arg0.getClass().getName() == java.lang.String.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.jgraph.graph.AttributeMap.applyValue(java.lang.Object, java.lang.Object):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == orig(arg1.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.AttributeMap.clone():::ENTER
===========================================================================
org.jgraph.graph.AttributeMap.clone():::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return != null
return.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.AttributeMap.cloneEntries(org.jgraph.graph.AttributeMap):::ENTER
arg0 != null
===========================================================================
org.jgraph.graph.AttributeMap.cloneEntries(org.jgraph.graph.AttributeMap):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return != null
===========================================================================
org.jgraph.graph.AttributeMap.createPoint(double, double):::ENTER
arg0 one of { 10.0, 20.0 }
arg1 one of { 10.0, 20.0 }
===========================================================================
org.jgraph.graph.AttributeMap.createPoint(double, double):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == org.jgraph.graph.AttributeMap$SerializablePoint2D.class
===========================================================================
org.jgraph.graph.AttributeMap.createRect(double, double, double, double):::ENTER
arg0 one of { 20.0, 140.0 }
arg1 one of { 20.0, 140.0 }
arg2 == 40.0
arg3 == 20.0
===========================================================================
org.jgraph.graph.AttributeMap.createRect(double, double, double, double):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
===========================================================================
org.jgraph.graph.AttributeMap.createRect(java.awt.geom.Rectangle2D):::ENTER
arg0.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.AttributeMap.createRect(java.awt.geom.Rectangle2D):::EXIT187
===========================================================================
org.jgraph.graph.AttributeMap.createRect(java.awt.geom.Rectangle2D):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
===========================================================================
org.jgraph.graph.BasicMarqueeHandler:::OBJECT
this has only one value
this.previousCursor == null
this.marqueeBounds == null
this.startPoint == null
this.currentPoint == null
===========================================================================
org.jgraph.graph.BasicMarqueeHandler.BasicMarqueeHandler():::EXIT
===========================================================================
org.jgraph.graph.ConnectionSet$Connection:::OBJECT
this.edge has only one value
this.edge != null
this.edge.getClass().getName() == org.jgraph.graph.DefaultEdge.class
this.port != null
this.port.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.Connection(java.lang.Object, java.lang.Object, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.Connection(java.lang.Object, java.lang.Object, boolean):::EXIT
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.equals(java.lang.Object):::ENTER
this.port has only one value
this.isSource == false
arg0.getClass().getName() == org.jgraph.graph.ConnectionSet$Connection.class
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.equals(java.lang.Object):::EXIT313
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.equals(java.lang.Object):::EXIT313;condition="not(return == true)"
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.equals(java.lang.Object):::EXIT
this.edge == orig(this.edge)
this.edge.getClass().getName() == orig(this.edge.getClass().getName())
this.port == orig(this.port)
this.port.getClass().getName() == orig(this.port.getClass().getName())
this.isSource == orig(this.isSource)
this.port has only one value
this.isSource == false
return == false
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.equals(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.getEdge():::ENTER
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.getEdge():::EXIT
this.edge == orig(this.edge)
this.edge.getClass().getName() == orig(this.edge.getClass().getName())
this.port == orig(this.port)
this.port.getClass().getName() == orig(this.port.getClass().getName())
this.isSource == orig(this.isSource)
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.getPort():::ENTER
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.getPort():::EXIT
this.edge == orig(this.edge)
this.edge.getClass().getName() == orig(this.edge.getClass().getName())
this.port == orig(this.port)
this.port.getClass().getName() == orig(this.port.getClass().getName())
this.isSource == orig(this.isSource)
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.hashCode():::ENTER
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.hashCode():::EXIT
this.edge == orig(this.edge)
this.edge.getClass().getName() == orig(this.edge.getClass().getName())
this.port == orig(this.port)
this.port.getClass().getName() == orig(this.port.getClass().getName())
this.isSource == orig(this.isSource)
return == 1352532563
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.isSource():::ENTER
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.isSource():::EXIT
this.edge == orig(this.edge)
this.edge.getClass().getName() == orig(this.edge.getClass().getName())
this.port == orig(this.port)
this.port.getClass().getName() == orig(this.port.getClass().getName())
this.isSource == orig(this.isSource)
(this.isSource == false)  <==>  (return == false)
(this.isSource == false)  ==>  (orig(this) has only one value)
(this.isSource == true)  <==>  (return == true)
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.isSource():::EXIT;condition="return == true"
this.port has only one value
this.isSource == true
return == true
===========================================================================
org.jgraph.graph.ConnectionSet$Connection.isSource():::EXIT;condition="not(return == true)"
this.port has only one value
this.isSource == false
return == false
orig(this) has only one value
===========================================================================
org.jgraph.graph.ConnectionSet:::OBJECT
this.connections != null
this.connections.getClass().getName() == java.util.HashSet.class
this.edges != null
this.edges.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.graph.ConnectionSet.ConnectionSet():::EXIT
===========================================================================
org.jgraph.graph.ConnectionSet.connect(java.lang.Object, java.lang.Object, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.ConnectionSet.connect(java.lang.Object, java.lang.Object, boolean):::EXIT
this.connections == orig(this.connections)
this.connections.getClass().getName() == orig(this.connections.getClass().getName())
this.edges == orig(this.edges)
this.edges.getClass().getName() == orig(this.edges.getClass().getName())
===========================================================================
org.jgraph.graph.ConnectionSet.connections():::ENTER
this has only one value
this.connections has only one value
this.edges has only one value
===========================================================================
org.jgraph.graph.ConnectionSet.connections():::EXIT
this.connections == orig(this.connections)
this.connections.getClass().getName() == orig(this.connections.getClass().getName())
this.edges == orig(this.edges)
this.edges.getClass().getName() == orig(this.edges.getClass().getName())
this.connections has only one value
this.edges has only one value
return.getClass().getName() == java.util.HashMap$KeyIterator.class
===========================================================================
org.jgraph.graph.ConnectionSet.getChangedEdges():::ENTER
this has only one value
this.connections has only one value
this.edges has only one value
===========================================================================
org.jgraph.graph.ConnectionSet.getChangedEdges():::EXIT
this.connections == orig(this.connections)
this.connections.getClass().getName() == orig(this.connections.getClass().getName())
this.edges == orig(this.edges)
this.edges.getClass().getName() == orig(this.edges.getClass().getName())
this.connections has only one value
this.edges has only one value
return has only one value
return.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory:::OBJECT
this has only one value
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.DefaultCellViewFactory():::EXIT
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createEdgeView(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createEdgeView(java.lang.Object):::EXIT52
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createEdgeView(java.lang.Object):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.labelsEnabled
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.labelBorder
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.beginFill
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.endFill
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.focus
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.selected
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.preview
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.opaque
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.childrenSelected
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.labelTransformEnabled
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.isMoveBelowZero
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.endDeco
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.beginSize
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.endSize
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.lineStyle
org.jgraph.graph.EdgeView.renderer.beginDeco == size(return.childViews[])
org.jgraph.graph.EdgeView.renderer.lineWidth == org.jgraph.graph.EdgeView.renderer.dashOffset
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.fontColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.gradientColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.gridColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.lockedHandleColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.highlightColor
return.cell.getClass().getName() == orig(arg0.getClass().getName())
return has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
return.points == null
return.source == null
return.target == null
return.sourceParentView == null
return.targetParentView == null
return.labelPosition == null
return.extraLabelPositions == null
return.labelVector == null
return.beginShape == null
return.endShape == null
return.lineShape == null
return.sharedPath == null
return.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
return.cell has only one value
return.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
return.parent == null
return.childViews has only one value
return.childViews[] == []
return.childViews[].getClass().getName() == []
return.childViews.getClass().getName() == java.util.ArrayList.class
return.allAttributes has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
return.attributes has only one value
return.groupBounds has only one value
return.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createEdgeView(org.jgraph.graph.Edge):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createEdgeView(org.jgraph.graph.Edge):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.labelsEnabled
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.labelBorder
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.beginFill
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.endFill
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.focus
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.selected
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.preview
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.opaque
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.childrenSelected
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.labelTransformEnabled
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == org.jgraph.graph.EdgeView.renderer.isMoveBelowZero
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.endDeco
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.beginSize
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.endSize
org.jgraph.graph.EdgeView.renderer.beginDeco == org.jgraph.graph.EdgeView.renderer.lineStyle
org.jgraph.graph.EdgeView.renderer.beginDeco == size(return.childViews[])
org.jgraph.graph.EdgeView.renderer.lineWidth == org.jgraph.graph.EdgeView.renderer.dashOffset
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.fontColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.gradientColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.gridColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.lockedHandleColor
org.jgraph.graph.EdgeView.renderer.borderColor == org.jgraph.graph.EdgeView.renderer.highlightColor
return.cell.getClass().getName() == orig(arg0.getClass().getName())
return has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
return.points == null
return.source == null
return.target == null
return.sourceParentView == null
return.targetParentView == null
return.labelPosition == null
return.extraLabelPositions == null
return.labelVector == null
return.beginShape == null
return.endShape == null
return.lineShape == null
return.sharedPath == null
return.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
return.cell has only one value
return.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
return.parent == null
return.childViews has only one value
return.childViews[] == []
return.childViews[].getClass().getName() == []
return.childViews.getClass().getName() == java.util.ArrayList.class
return.allAttributes has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
return.attributes has only one value
return.groupBounds has only one value
return.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createPortView(java.lang.Object):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createPortView(java.lang.Object):::EXIT62
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createPortView(java.lang.Object):::EXIT
return.cell.getClass().getName() == orig(arg0.getClass().getName())
org.jgraph.graph.PortView.SIZE == 6
org.jgraph.graph.PortView.renderer has only one value
org.jgraph.graph.PortView.renderer.view == null
org.jgraph.graph.PortView.renderer.graphBackground has only one value
org.jgraph.graph.PortView.renderer.hasFocus == false
org.jgraph.graph.PortView.renderer.selected == false
org.jgraph.graph.PortView.renderer.preview == false
org.jgraph.graph.PortView.renderer.xorEnabled == false
org.jgraph.graph.PortView.allowPortMagic == true
return.lastParent == null
return.cell.getClass().getName() == org.jgraph.graph.DefaultPort.class
return.parent == null
return.childViews[] == []
return.childViews[].getClass().getName() == []
return.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
return.groupBounds has only one value
return.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createPortView(org.jgraph.graph.Port):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createPortView(org.jgraph.graph.Port):::EXIT
return.cell.getClass().getName() == orig(arg0.getClass().getName())
org.jgraph.graph.PortView.SIZE == 6
org.jgraph.graph.PortView.renderer has only one value
org.jgraph.graph.PortView.renderer.view == null
org.jgraph.graph.PortView.renderer.graphBackground has only one value
org.jgraph.graph.PortView.renderer.hasFocus == false
org.jgraph.graph.PortView.renderer.selected == false
org.jgraph.graph.PortView.renderer.preview == false
org.jgraph.graph.PortView.renderer.xorEnabled == false
org.jgraph.graph.PortView.allowPortMagic == true
return.lastParent == null
return.cell.getClass().getName() == org.jgraph.graph.DefaultPort.class
return.parent == null
return.childViews[] == []
return.childViews[].getClass().getName() == []
return.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
return.groupBounds has only one value
return.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createVertexView(java.lang.Object):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createVertexView(java.lang.Object):::EXIT
org.jgraph.graph.VertexView.renderer.hasFocus == org.jgraph.graph.VertexView.renderer.selected
org.jgraph.graph.VertexView.renderer.hasFocus == org.jgraph.graph.VertexView.renderer.preview
org.jgraph.graph.VertexView.renderer.hasFocus == org.jgraph.graph.VertexView.renderer.childrenSelected
org.jgraph.graph.VertexView.renderer.hasFocus == org.jgraph.graph.VertexView.renderer.isDoubleBuffered
org.jgraph.graph.VertexView.renderer.hasFocus == org.jgraph.graph.VertexView.renderer.labelEnabled
org.jgraph.graph.VertexView.renderer.bordercolor == org.jgraph.graph.VertexView.renderer.gradientColor
org.jgraph.graph.VertexView.renderer.borderWidth == size(return.childViews[])
org.jgraph.graph.VertexView.renderer.gridColor == org.jgraph.graph.VertexView.renderer.highlightColor
org.jgraph.graph.VertexView.renderer.gridColor == org.jgraph.graph.VertexView.renderer.lockedHandleColor
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == return.groupBounds.getClass().getName()
return.cell.getClass().getName() == orig(arg0.getClass().getName())
org.jgraph.graph.VertexView.renderer has only one value
org.jgraph.graph.VertexView.renderer.view == null
org.jgraph.graph.VertexView.renderer.hasFocus == false
org.jgraph.graph.VertexView.renderer.defaultForeground has only one value
org.jgraph.graph.VertexView.renderer.defaultBackground has only one value
org.jgraph.graph.VertexView.renderer.bordercolor == null
org.jgraph.graph.VertexView.renderer.borderWidth == 0
org.jgraph.graph.VertexView.renderer.gridColor has only one value
org.jgraph.graph.VertexView.defaultBounds has only one value
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
return.bounds == null
org.jgraph.graph.VertexView.defaultCursors has only one value
org.jgraph.graph.VertexView.defaultCursors[] == [6, 8, 7, 10, 11, 4, 9, 5]
org.jgraph.graph.VertexView.xCursors has only one value
org.jgraph.graph.VertexView.xCursors[] == [10, 0, 11, 10, 11, 10, 0, 11]
org.jgraph.graph.VertexView.xCursors[] elements one of { 0, 10, 11 }
org.jgraph.graph.VertexView.yCursors has only one value
org.jgraph.graph.VertexView.yCursors[] == [8, 8, 8, 0, 0, 9, 9, 9]
org.jgraph.graph.VertexView.yCursors[] elements one of { 0, 8, 9 }
return.cell.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
return.parent == null
return.childViews[] == []
return.childViews[].getClass().getName() == []
return.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
return.groupBounds has only one value
size(org.jgraph.graph.VertexView.defaultCursors[]) == 8
size(org.jgraph.graph.VertexView.xCursors[]) == 8
size(org.jgraph.graph.VertexView.yCursors[]) == 8
org.jgraph.graph.VertexView.defaultCursors[org.jgraph.graph.VertexView.renderer.borderWidth] == 6
org.jgraph.graph.VertexView.xCursors[org.jgraph.graph.VertexView.renderer.borderWidth] == 10
org.jgraph.graph.VertexView.yCursors[org.jgraph.graph.VertexView.renderer.borderWidth] == 8
org.jgraph.graph.VertexView.renderer.borderWidth in org.jgraph.graph.VertexView.xCursors[]
org.jgraph.graph.VertexView.renderer.borderWidth in org.jgraph.graph.VertexView.yCursors[]
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createView(org.jgraph.graph.GraphModel, java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.graph.DefaultCellViewFactory.createView(org.jgraph.graph.GraphModel, java.lang.Object):::EXIT
===========================================================================
org.jgraph.graph.DefaultEdge$DefaultRouting:::OBJECT
this has only one value
===========================================================================
org.jgraph.graph.DefaultEdge$DefaultRouting.DefaultRouting():::EXIT
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting:::OBJECT
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.LoopRouting():::EXIT
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.getEdgeStyle():::ENTER
this has only one value
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.getEdgeStyle():::EXIT
return == -1
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.getPreferredLineStyle(org.jgraph.graph.EdgeView):::ENTER
this has only one value
arg0 has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle one of { 0, 11 }
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg0.attributes has only one value
arg0.groupBounds == null
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.getPreferredLineStyle(org.jgraph.graph.EdgeView):::EXIT144
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.getPreferredLineStyle(org.jgraph.graph.EdgeView):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape == orig(arg0.endShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape == orig(arg0.lineShape)
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.sharedPath == orig(arg0.sharedPath)
arg0.cachedBounds == orig(arg0.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle one of { 0, 11 }
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg0.attributes has only one value
arg0.groupBounds == null
return == -1
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.route(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.EdgeView):::ENTER
this has only one value
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
arg1 has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg1.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
arg1.points.getClass().getName() == java.util.ArrayList.class
arg1.source.getClass().getName() == org.jgraph.graph.PortView.class
arg1.target.getClass().getName() == org.jgraph.graph.PortView.class
arg1.sourceParentView == null
arg1.targetParentView == null
arg1.labelPosition == null
arg1.extraLabelPositions == null
arg1.labelVector == null
arg1.beginShape == null
arg1.endShape == null
arg1.lineShape == null
arg1.sharedPath == null
arg1.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg1.cell has only one value
arg1.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.parent == null
arg1.childViews has only one value
arg1.childViews[] == []
arg1.childViews[].getClass().getName() == []
arg1.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg1.attributes has only one value
arg1.groupBounds == null
size(arg1.points[]) == 2
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.route(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.EdgeView):::EXIT106
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.route(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.EdgeView):::EXIT
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
arg1.points == orig(arg1.points)
arg1.points[] == orig(arg1.points[])
arg1.points.getClass().getName() == orig(arg1.points.getClass().getName())
arg1.source == orig(arg1.source)
arg1.source.getClass().getName() == orig(arg1.source.getClass().getName())
arg1.target == orig(arg1.target)
arg1.target.getClass().getName() == orig(arg1.target.getClass().getName())
arg1.sourceParentView == orig(arg1.sourceParentView)
arg1.targetParentView == orig(arg1.targetParentView)
arg1.labelPosition == orig(arg1.labelPosition)
arg1.extraLabelPositions == orig(arg1.extraLabelPositions)
arg1.labelVector == orig(arg1.labelVector)
arg1.beginShape == orig(arg1.beginShape)
arg1.endShape == orig(arg1.endShape)
arg1.lineShape == orig(arg1.lineShape)
arg1.sharedPath == orig(arg1.sharedPath)
arg1.cachedBounds == orig(arg1.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
arg1.cell == orig(arg1.cell)
arg1.cell.getClass().getName() == orig(arg1.cell.getClass().getName())
arg1.parent == orig(arg1.parent)
arg1.childViews == orig(arg1.childViews)
arg1.childViews[] == orig(arg1.childViews[])
arg1.childViews.getClass().getName() == orig(arg1.childViews.getClass().getName())
arg1.allAttributes == orig(arg1.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
arg1.attributes == orig(arg1.attributes)
arg1.groupBounds == orig(arg1.groupBounds)
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg1.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
arg1.points.getClass().getName() == java.util.ArrayList.class
arg1.source.getClass().getName() == org.jgraph.graph.PortView.class
arg1.target.getClass().getName() == org.jgraph.graph.PortView.class
arg1.sourceParentView == null
arg1.targetParentView == null
arg1.labelPosition == null
arg1.extraLabelPositions == null
arg1.labelVector == null
arg1.beginShape == null
arg1.endShape == null
arg1.lineShape == null
arg1.sharedPath == null
arg1.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg1.cell has only one value
arg1.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.parent == null
arg1.childViews has only one value
arg1.childViews[] == []
arg1.childViews[].getClass().getName() == []
arg1.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg1.attributes has only one value
arg1.groupBounds == null
return == null
size(arg1.points[]) == 2
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.routeEdge(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.EdgeView):::ENTER
this has only one value
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
arg1 has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg1.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
arg1.points.getClass().getName() == java.util.ArrayList.class
arg1.source.getClass().getName() == org.jgraph.graph.PortView.class
arg1.target.getClass().getName() == org.jgraph.graph.PortView.class
arg1.sourceParentView == null
arg1.targetParentView == null
arg1.labelPosition == null
arg1.extraLabelPositions == null
arg1.labelVector == null
arg1.beginShape == null
arg1.endShape == null
arg1.lineShape == null
arg1.sharedPath == null
arg1.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg1.cell has only one value
arg1.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.parent == null
arg1.childViews has only one value
arg1.childViews[] == []
arg1.childViews[].getClass().getName() == []
arg1.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg1.attributes has only one value
arg1.groupBounds == null
size(arg1.points[]) == 2
===========================================================================
org.jgraph.graph.DefaultEdge$LoopRouting.routeEdge(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.EdgeView):::EXIT
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
arg1.points == orig(arg1.points)
arg1.points[] == orig(arg1.points[])
arg1.points.getClass().getName() == orig(arg1.points.getClass().getName())
arg1.source == orig(arg1.source)
arg1.source.getClass().getName() == orig(arg1.source.getClass().getName())
arg1.target == orig(arg1.target)
arg1.target.getClass().getName() == orig(arg1.target.getClass().getName())
arg1.sourceParentView == orig(arg1.sourceParentView)
arg1.targetParentView == orig(arg1.targetParentView)
arg1.labelPosition == orig(arg1.labelPosition)
arg1.extraLabelPositions == orig(arg1.extraLabelPositions)
arg1.labelVector == orig(arg1.labelVector)
arg1.beginShape == orig(arg1.beginShape)
arg1.endShape == orig(arg1.endShape)
arg1.lineShape == orig(arg1.lineShape)
arg1.sharedPath == orig(arg1.sharedPath)
arg1.cachedBounds == orig(arg1.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
arg1.cell == orig(arg1.cell)
arg1.cell.getClass().getName() == orig(arg1.cell.getClass().getName())
arg1.parent == orig(arg1.parent)
arg1.childViews == orig(arg1.childViews)
arg1.childViews[] == orig(arg1.childViews[])
arg1.childViews.getClass().getName() == orig(arg1.childViews.getClass().getName())
arg1.allAttributes == orig(arg1.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
arg1.attributes == orig(arg1.attributes)
arg1.groupBounds == orig(arg1.groupBounds)
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg1.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
arg1.points.getClass().getName() == java.util.ArrayList.class
arg1.source.getClass().getName() == org.jgraph.graph.PortView.class
arg1.target.getClass().getName() == org.jgraph.graph.PortView.class
arg1.sourceParentView == null
arg1.targetParentView == null
arg1.labelPosition == null
arg1.extraLabelPositions == null
arg1.labelVector == null
arg1.beginShape == null
arg1.endShape == null
arg1.lineShape == null
arg1.sharedPath == null
arg1.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg1.cell has only one value
arg1.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.parent == null
arg1.childViews has only one value
arg1.childViews[] == []
arg1.childViews[].getClass().getName() == []
arg1.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg1.attributes has only one value
arg1.groupBounds == null
return == null
size(arg1.points[]) == 2
===========================================================================
org.jgraph.graph.DefaultEdge:::OBJECT
this has only one value
this.source.getClass().getName() == org.jgraph.graph.DefaultPort.class
this.target.getClass().getName() == org.jgraph.graph.DefaultPort.class
this.attributes has only one value
this.attributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
===========================================================================
org.jgraph.graph.DefaultEdge.DefaultEdge():::EXIT
this.source == null
this.target == null
===========================================================================
org.jgraph.graph.DefaultEdge.DefaultEdge(java.lang.Object):::ENTER
arg0 == null
===========================================================================
org.jgraph.graph.DefaultEdge.DefaultEdge(java.lang.Object):::EXIT
this.source == null
this.target == null
===========================================================================
org.jgraph.graph.DefaultEdge.DefaultEdge(java.lang.Object, org.jgraph.graph.AttributeMap):::ENTER
arg0 == null
arg1 == null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
===========================================================================
org.jgraph.graph.DefaultEdge.DefaultEdge(java.lang.Object, org.jgraph.graph.AttributeMap):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.source == null
this.target == null
===========================================================================
org.jgraph.graph.DefaultEdge.getSource():::ENTER
this.target has only one value
===========================================================================
org.jgraph.graph.DefaultEdge.getSource():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.target has only one value
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultEdge.getTarget():::ENTER
this.target has only one value
===========================================================================
org.jgraph.graph.DefaultEdge.getTarget():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.target has only one value
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultEdge.setSource(java.lang.Object):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultEdge.setSource(java.lang.Object):::EXIT
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
===========================================================================
org.jgraph.graph.DefaultEdge.setTarget(java.lang.Object):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultEdge.setTarget(java.lang.Object):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
===========================================================================
org.jgraph.graph.DefaultGraphCell:::OBJECT
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
===========================================================================
org.jgraph.graph.DefaultGraphCell.DefaultGraphCell(java.lang.Object):::ENTER
arg0.getClass().getName() == java.lang.String.class
===========================================================================
org.jgraph.graph.DefaultGraphCell.DefaultGraphCell(java.lang.Object):::EXIT
===========================================================================
org.jgraph.graph.DefaultGraphCell.DefaultGraphCell(java.lang.Object, org.jgraph.graph.AttributeMap):::ENTER
arg0.getClass().getName() == java.lang.String.class
arg1 == null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
===========================================================================
org.jgraph.graph.DefaultGraphCell.DefaultGraphCell(java.lang.Object, org.jgraph.graph.AttributeMap):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
===========================================================================
org.jgraph.graph.DefaultGraphCell.DefaultGraphCell(java.lang.Object, org.jgraph.graph.AttributeMap, javax.swing.tree.MutableTreeNode[]):::ENTER
arg0.getClass().getName() == java.lang.String.class
arg1 == null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
arg2 == null
===========================================================================
org.jgraph.graph.DefaultGraphCell.DefaultGraphCell(java.lang.Object, org.jgraph.graph.AttributeMap, javax.swing.tree.MutableTreeNode[]):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
===========================================================================
org.jgraph.graph.DefaultGraphCell.addPort():::ENTER
===========================================================================
org.jgraph.graph.DefaultGraphCell.addPort():::EXIT
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultGraphCell.addPort(java.awt.geom.Point2D):::ENTER
arg0 == null
===========================================================================
org.jgraph.graph.DefaultGraphCell.addPort(java.awt.geom.Point2D):::EXIT
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultGraphCell.addPort(java.awt.geom.Point2D, java.lang.Object):::ENTER
arg0 == null
arg1 == null
===========================================================================
org.jgraph.graph.DefaultGraphCell.addPort(java.awt.geom.Point2D, java.lang.Object):::EXIT
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultGraphCell.getAttributes():::ENTER
this.attributes != null
===========================================================================
org.jgraph.graph.DefaultGraphCell.getAttributes():::EXIT
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes != null
return != null
===========================================================================
org.jgraph.graph.DefaultGraphCell.setAttributes(org.jgraph.graph.AttributeMap):::ENTER
this.attributes == null
arg0 == null
===========================================================================
org.jgraph.graph.DefaultGraphCell.setAttributes(org.jgraph.graph.AttributeMap):::EXIT
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$1:::OBJECT
this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == null
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == false
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == 0
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == 0
org.jgraph.graph.DefaultGraphCellEditor.this.graph == null
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == null
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == null
org.jgraph.graph.DefaultGraphCellEditor.this.font == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$1.(org.jgraph.graph.DefaultGraphCellEditor, javax.swing.JTextField):::ENTER
org.jgraph.graph.DefaultGraphCellEditor.this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == null
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == false
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == 0
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == 0
org.jgraph.graph.DefaultGraphCellEditor.this.graph == null
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == null
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == null
org.jgraph.graph.DefaultGraphCellEditor.this.font == null
arg1 has only one value
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$1.(org.jgraph.graph.DefaultGraphCellEditor, javax.swing.JTextField):::EXIT
org.jgraph.graph.DefaultGraphCellEditor.this == orig(org.jgraph.graph.DefaultGraphCellEditor.this)
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.realEditor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer)
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent)
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == orig(org.jgraph.graph.DefaultGraphCellEditor.this.canEdit)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetX)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetY)
org.jgraph.graph.DefaultGraphCellEditor.this.graph == orig(org.jgraph.graph.DefaultGraphCellEditor.this.graph)
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == orig(org.jgraph.graph.DefaultGraphCellEditor.this.lastCell)
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon)
org.jgraph.graph.DefaultGraphCellEditor.this.font == orig(org.jgraph.graph.DefaultGraphCellEditor.this.font)
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField:::OBJECT
this has only one value
this.border.getClass().getName() == javax.swing.plaf.BorderUIResource$LineBorderUIResource.class
org.jgraph.graph.DefaultGraphCellEditor.this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == null
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == false
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == 0
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == 0
org.jgraph.graph.DefaultGraphCellEditor.this.graph == null
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == null
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == null
org.jgraph.graph.DefaultGraphCellEditor.this.font == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField.DefaultTextField(org.jgraph.graph.DefaultGraphCellEditor, javax.swing.border.Border):::ENTER
org.jgraph.graph.DefaultGraphCellEditor.this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == null
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == false
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == 0
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == 0
org.jgraph.graph.DefaultGraphCellEditor.this.graph == null
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == null
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == null
org.jgraph.graph.DefaultGraphCellEditor.this.font == null
arg1 has only one value
arg1.getClass().getName() == javax.swing.plaf.BorderUIResource$LineBorderUIResource.class
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField.DefaultTextField(org.jgraph.graph.DefaultGraphCellEditor, javax.swing.border.Border):::EXIT
org.jgraph.graph.DefaultGraphCellEditor.this == orig(org.jgraph.graph.DefaultGraphCellEditor.this)
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.realEditor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer)
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent)
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == orig(org.jgraph.graph.DefaultGraphCellEditor.this.canEdit)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetX)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetY)
org.jgraph.graph.DefaultGraphCellEditor.this.graph == orig(org.jgraph.graph.DefaultGraphCellEditor.this.graph)
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == orig(org.jgraph.graph.DefaultGraphCellEditor.this.lastCell)
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon)
org.jgraph.graph.DefaultGraphCellEditor.this.font == orig(org.jgraph.graph.DefaultGraphCellEditor.this.font)
this.border has only one value
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField.getBorder():::ENTER
this.border == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField.getBorder():::EXIT
this.border == orig(this.border)
org.jgraph.graph.DefaultGraphCellEditor.this == orig(org.jgraph.graph.DefaultGraphCellEditor.this)
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.realEditor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer)
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent)
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == orig(org.jgraph.graph.DefaultGraphCellEditor.this.canEdit)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetX)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetY)
org.jgraph.graph.DefaultGraphCellEditor.this.graph == orig(org.jgraph.graph.DefaultGraphCellEditor.this.graph)
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == orig(org.jgraph.graph.DefaultGraphCellEditor.this.lastCell)
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon)
org.jgraph.graph.DefaultGraphCellEditor.this.font == orig(org.jgraph.graph.DefaultGraphCellEditor.this.font)
this.border == null
return == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField.getFont():::ENTER
this.border == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$DefaultTextField.getFont():::EXIT
this.border == orig(this.border)
org.jgraph.graph.DefaultGraphCellEditor.this == orig(org.jgraph.graph.DefaultGraphCellEditor.this)
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.realEditor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer)
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent)
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == orig(org.jgraph.graph.DefaultGraphCellEditor.this.canEdit)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetX)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetY)
org.jgraph.graph.DefaultGraphCellEditor.this.graph == orig(org.jgraph.graph.DefaultGraphCellEditor.this.graph)
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == orig(org.jgraph.graph.DefaultGraphCellEditor.this.lastCell)
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon)
org.jgraph.graph.DefaultGraphCellEditor.this.font == orig(org.jgraph.graph.DefaultGraphCellEditor.this.font)
this.border == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$EditorContainer:::OBJECT
this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor.getClass().getName() == org.jgraph.graph.DefaultGraphCellEditor$1.class
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == null
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == false
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == 0
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == 0
org.jgraph.graph.DefaultGraphCellEditor.this.graph == null
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == null
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == null
org.jgraph.graph.DefaultGraphCellEditor.this.font == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$EditorContainer.EditorContainer(org.jgraph.graph.DefaultGraphCellEditor):::ENTER
org.jgraph.graph.DefaultGraphCellEditor.this has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor has only one value
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor.getClass().getName() == org.jgraph.graph.DefaultGraphCellEditor$1.class
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == null
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == false
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == 0
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == 0
org.jgraph.graph.DefaultGraphCellEditor.this.graph == null
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == null
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == null
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == null
org.jgraph.graph.DefaultGraphCellEditor.this.font == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor$EditorContainer.EditorContainer(org.jgraph.graph.DefaultGraphCellEditor):::EXIT
org.jgraph.graph.DefaultGraphCellEditor.this == orig(org.jgraph.graph.DefaultGraphCellEditor.this)
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.realEditor)
org.jgraph.graph.DefaultGraphCellEditor.this.realEditor.getClass().getName() == orig(org.jgraph.graph.DefaultGraphCellEditor.this.realEditor.getClass().getName())
org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingContainer)
org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingComponent)
org.jgraph.graph.DefaultGraphCellEditor.this.canEdit == orig(org.jgraph.graph.DefaultGraphCellEditor.this.canEdit)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetX == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetX)
org.jgraph.graph.DefaultGraphCellEditor.this.offsetY == orig(org.jgraph.graph.DefaultGraphCellEditor.this.offsetY)
org.jgraph.graph.DefaultGraphCellEditor.this.graph == orig(org.jgraph.graph.DefaultGraphCellEditor.this.graph)
org.jgraph.graph.DefaultGraphCellEditor.this.lastCell == orig(org.jgraph.graph.DefaultGraphCellEditor.this.lastCell)
org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor == orig(org.jgraph.graph.DefaultGraphCellEditor.this.borderSelectionColor)
org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon == orig(org.jgraph.graph.DefaultGraphCellEditor.this.editingIcon)
org.jgraph.graph.DefaultGraphCellEditor.this.font == orig(org.jgraph.graph.DefaultGraphCellEditor.this.font)
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor:::OBJECT
this has only one value
this.realEditor.getClass().getName() == org.jgraph.graph.DefaultGraphCellEditor$1.class
this.editingComponent == null
this.canEdit == false
this.offsetX == 0
this.offsetY == 0
this.graph == null
this.lastCell == null
this.borderSelectionColor == null
this.editingIcon == null
this.font == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.DefaultGraphCellEditor():::EXIT
this.realEditor has only one value
this.editingContainer has only one value
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.DefaultGraphCellEditor(org.jgraph.graph.GraphCellEditor):::ENTER
arg0 == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.DefaultGraphCellEditor(org.jgraph.graph.GraphCellEditor):::EXIT
this.realEditor has only one value
this.editingContainer has only one value
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.createContainer():::ENTER
this.realEditor has only one value
this.editingContainer == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.createContainer():::EXIT
this.realEditor == orig(this.realEditor)
this.realEditor.getClass().getName() == orig(this.realEditor.getClass().getName())
this.editingContainer == orig(this.editingContainer)
this.editingComponent == orig(this.editingComponent)
this.canEdit == orig(this.canEdit)
this.offsetX == orig(this.offsetX)
this.offsetY == orig(this.offsetY)
this.graph == orig(this.graph)
this.lastCell == orig(this.lastCell)
this.borderSelectionColor == orig(this.borderSelectionColor)
this.editingIcon == orig(this.editingIcon)
this.font == orig(this.font)
this.realEditor has only one value
this.editingContainer == null
return has only one value
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.createGraphCellEditor():::ENTER
this.realEditor == null
this.editingContainer == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.createGraphCellEditor():::EXIT
this.realEditor == orig(this.realEditor)
this.editingContainer == orig(this.editingContainer)
this.editingComponent == orig(this.editingComponent)
this.canEdit == orig(this.canEdit)
this.offsetX == orig(this.offsetX)
this.offsetY == orig(this.offsetY)
this.graph == orig(this.graph)
this.lastCell == orig(this.lastCell)
this.borderSelectionColor == orig(this.borderSelectionColor)
this.editingIcon == orig(this.editingIcon)
this.font == orig(this.font)
this.realEditor == null
this.editingContainer == null
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultGraphCellEditor$1.class
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.setBorderSelectionColor(java.awt.Color):::ENTER
this.realEditor has only one value
this.editingContainer has only one value
arg0 == null
===========================================================================
org.jgraph.graph.DefaultGraphCellEditor.setBorderSelectionColor(java.awt.Color):::EXIT
this.realEditor == orig(this.realEditor)
this.realEditor.getClass().getName() == orig(this.realEditor.getClass().getName())
this.editingContainer == orig(this.editingContainer)
this.editingComponent == orig(this.editingComponent)
this.canEdit == orig(this.canEdit)
this.offsetX == orig(this.offsetX)
this.offsetY == orig(this.offsetY)
this.graph == orig(this.graph)
this.lastCell == orig(this.lastCell)
this.borderSelectionColor == orig(this.borderSelectionColor)
this.editingIcon == orig(this.editingIcon)
this.font == orig(this.font)
this.realEditor has only one value
this.editingContainer has only one value
===========================================================================
org.jgraph.graph.DefaultGraphModel$EmptyIterator:::OBJECT
this has only one value
===========================================================================
org.jgraph.graph.DefaultGraphModel$EmptyIterator.EmptyIterator():::EXIT
===========================================================================
org.jgraph.graph.DefaultGraphModel$EmptyIterator.hasNext():::ENTER
===========================================================================
org.jgraph.graph.DefaultGraphModel$EmptyIterator.hasNext():::EXIT
return == false
===========================================================================
org.jgraph.graph.DefaultGraphModel$EmptyIterator.hasNext():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit:::OBJECT
this has only one value
this.insert != null
this.insert.getClass().getName() == java.lang.Object[].class
this.insert[] elements != null
this.insert[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge] }
this.changed.getClass().getName() == java.lang.Object[].class
this.changed[] contains no nulls and has only one value, of length 5
this.changed[] elements != null
this.changed[].getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge, org.jgraph.graph.DefaultGraphCell]
this.remove.getClass().getName() == java.lang.Object[].class
this.remove[] contains no nulls and has only one value, of length 7
this.remove[] elements != null
this.remove[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.context.getClass().getName() == java.lang.Object[].class
this.context[] == []
this.context[].getClass().getName() == []
this.inserted.getClass().getName() == java.lang.Object[].class
this.inserted[] contains no nulls and has only one value, of length 5
this.inserted[] elements != null
this.inserted[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.removed == null
this.attributes != null
this.attributes.getClass().getName() == java.util.Hashtable.class
this.previousAttributes.getClass().getName() == java.util.Hashtable.class
this.parentMap != null
this.parentMap.entries != null
this.parentMap.entries[] elements != null
this.parentMap.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
this.parentMap.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
this.parentMap.changedNodes != null
this.parentMap.changedNodes.getClass().getName() == java.util.HashSet.class
this.parentMap.childCount != null
this.parentMap.childCount.getClass().getName() == java.util.Hashtable.class
this.previousParentMap has only one value
this.previousParentMap != null
this.previousParentMap.entries has only one value
this.previousParentMap.entries != null
this.previousParentMap.entries[] contains no nulls and has only one value, of length 2
this.previousParentMap.entries[] elements != null
this.previousParentMap.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
this.previousParentMap.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
this.previousParentMap.changedNodes has only one value
this.previousParentMap.changedNodes != null
this.previousParentMap.changedNodes.getClass().getName() == java.util.HashSet.class
this.previousParentMap.childCount has only one value
this.previousParentMap.childCount != null
this.previousParentMap.childCount.getClass().getName() == java.util.Hashtable.class
this.dirtyRegion.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.connectionSet != null
this.connectionSet.connections != null
this.connectionSet.connections.getClass().getName() == java.util.HashSet.class
this.connectionSet.edges != null
this.connectionSet.edges.getClass().getName() == java.util.HashSet.class
this.previousConnectionSet has only one value
this.previousConnectionSet != null
this.previousConnectionSet.connections has only one value
this.previousConnectionSet.connections != null
this.previousConnectionSet.connections.getClass().getName() == java.util.HashSet.class
this.previousConnectionSet.edges has only one value
this.previousConnectionSet.edges != null
this.previousConnectionSet.edges.getClass().getName() == java.util.HashSet.class
this.cellViews has only one value
this.cellViews != null
this.cellViews.getClass().getName() == java.util.Hashtable.class
org.jgraph.graph.DefaultGraphModel.this has only one value
org.jgraph.graph.DefaultGraphModel.this.listenerList has only one value
org.jgraph.graph.DefaultGraphModel.this.listenerList != null
org.jgraph.graph.DefaultGraphModel.this.emptyIterator has only one value
org.jgraph.graph.DefaultGraphModel.this.emptyIterator != null
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == org.jgraph.graph.DefaultGraphModel$EmptyIterator.class
org.jgraph.graph.DefaultGraphModel.this.roots has only one value
org.jgraph.graph.DefaultGraphModel.this.roots != null
org.jgraph.graph.DefaultGraphModel.this.roots[] elements != null
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == false
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == true
org.jgraph.graph.DefaultGraphModel.this.attributes has only one value
org.jgraph.graph.DefaultGraphModel.this.attributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
org.jgraph.graph.DefaultGraphModel.this.updateLevel == 0
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == null
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == null
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == null
org.jgraph.graph.DefaultGraphModel.this.transEditCS == null
org.jgraph.graph.DefaultGraphModel.this.transEditPM == null
size(this.insert[]) one of { 0, 5 }
size(this.insert[])-1 != 0
size(this.changed[]) == 5
size(this.remove[]) == 7
size(this.inserted[]) == 5
size(this.parentMap.entries[]) == 2
size(this.previousParentMap.entries[]) == 2
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) one of { 0, 3 }
size(org.jgraph.graph.DefaultGraphModel.this.roots[])-1 != 0
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.GraphModelEdit(org.jgraph.graph.DefaultGraphModel, java.lang.Object[], java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap):::ENTER
org.jgraph.graph.DefaultGraphModel.this has only one value
org.jgraph.graph.DefaultGraphModel.this.listenerList has only one value
org.jgraph.graph.DefaultGraphModel.this.emptyIterator has only one value
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == org.jgraph.graph.DefaultGraphModel$EmptyIterator.class
org.jgraph.graph.DefaultGraphModel.this.roots has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == false
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == true
org.jgraph.graph.DefaultGraphModel.this.attributes has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.DefaultGraphModel.this.updateLevel == 0
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == null
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == null
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == null
org.jgraph.graph.DefaultGraphModel.this.transEditCS == null
org.jgraph.graph.DefaultGraphModel.this.transEditPM == null
arg1 has only one value
arg1.getClass().getName() == java.lang.Object[].class
arg1[] contains no nulls and has only one value, of length 5
arg2 == null
arg3 has only one value
arg3.getClass().getName() == java.util.Hashtable.class
arg4 has only one value
arg4.connections has only one value
arg4.connections.getClass().getName() == java.util.HashSet.class
arg4.edges has only one value
arg4.edges.getClass().getName() == java.util.HashSet.class
arg5 has only one value
arg5.entries has only one value
arg5.entries[] contains no nulls and has only one value, of length 2
arg5.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg5.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg5.changedNodes has only one value
arg5.changedNodes.getClass().getName() == java.util.HashSet.class
arg5.childCount has only one value
arg5.childCount.getClass().getName() == java.util.Hashtable.class
size(arg1[]) == 5
size(arg5.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.GraphModelEdit(org.jgraph.graph.DefaultGraphModel, java.lang.Object[], java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap):::EXIT
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
arg1[] == orig(arg1[])
arg4.connections == orig(arg4.connections)
arg4.connections.getClass().getName() == orig(arg4.connections.getClass().getName())
arg4.edges == orig(arg4.edges)
arg4.edges.getClass().getName() == orig(arg4.edges.getClass().getName())
arg5.entries == orig(arg5.entries)
arg5.entries[] == orig(arg5.entries[])
arg5.changedNodes == orig(arg5.changedNodes)
arg5.changedNodes.getClass().getName() == orig(arg5.changedNodes.getClass().getName())
arg5.childCount == orig(arg5.childCount)
arg5.childCount.getClass().getName() == orig(arg5.childCount.getClass().getName())
this.insert has only one value
this.insert[] contains no nulls and has only one value, of length 5
this.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.changed == null
this.remove == null
this.context == null
this.inserted == null
this.attributes has only one value
this.previousAttributes == null
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
arg1[] contains no nulls and has only one value, of length 5
arg4.connections has only one value
arg4.connections.getClass().getName() == java.util.HashSet.class
arg4.edges has only one value
arg4.edges.getClass().getName() == java.util.HashSet.class
arg5.entries has only one value
arg5.entries[] contains no nulls and has only one value, of length 2
arg5.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg5.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg5.changedNodes has only one value
arg5.changedNodes.getClass().getName() == java.util.HashSet.class
arg5.childCount has only one value
arg5.childCount.getClass().getName() == java.util.Hashtable.class
size(this.insert[]) == 5
size(arg5.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.execute():::ENTER
this.insert has only one value
this.insert[] contains no nulls and has only one value, of length 5
this.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.changed == null
this.remove == null
this.context == null
this.inserted == null
this.attributes has only one value
this.previousAttributes == null
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
size(this.insert[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.execute():::EXIT
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.removed == orig(this.removed)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
size(this.parentMap.entries[]) == orig(size(this.parentMap.entries[]))
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion has only one value
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.filterParents(java.util.Map, int):::ENTER
this.insert has only one value
this.insert[] contains no nulls and has only one value, of length 5
this.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.changed == null
this.remove == null
this.context == null
this.inserted == null
this.attributes has only one value
this.previousAttributes == null
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.util.Hashtable.class
arg1 == 0
size(this.insert[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.filterParents(java.util.Map, int):::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.remove == orig(this.remove)
this.context == orig(this.context)
this.inserted == orig(this.inserted)
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] contains no nulls and has only one value, of length 5
this.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.changed == null
this.remove == null
this.context == null
this.inserted == null
this.attributes has only one value
this.previousAttributes == null
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] == []
size(this.insert[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getChanged():::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getChanged():::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] contains no nulls and has only one value, of length 5
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
size(return[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getContext():::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getContext():::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] == []
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getDirtyRegion():::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getDirtyRegion():::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return == null
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getInserted():::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getInserted():::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] contains no nulls and has only one value, of length 5
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
size(return[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getRemoved():::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getRemoved():::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return == null
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getViews(org.jgraph.graph.GraphLayoutCache):::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.getViews(org.jgraph.graph.GraphLayoutCache):::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
return == null
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.handleEmptyGroups(java.lang.Object[]):::ENTER
this.insert has only one value
this.insert[] contains no nulls and has only one value, of length 5
this.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.changed == null
this.remove == null
this.context == null
this.inserted == null
this.attributes has only one value
this.previousAttributes == null
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] == []
size(this.insert[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.handleEmptyGroups(java.lang.Object[]):::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.remove == orig(this.remove)
this.context == orig(this.context)
this.inserted == orig(this.inserted)
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
arg0[] == orig(arg0[])
this.insert has only one value
this.insert[] contains no nulls and has only one value, of length 5
this.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
this.changed == null
this.remove == null
this.context == null
this.inserted == null
this.attributes has only one value
this.previousAttributes == null
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
arg0[] == []
size(this.insert[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.putViews(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellView[]):::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
arg1 == null
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.putViews(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellView[]):::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.dirtyRegion == orig(this.dirtyRegion)
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.setDirtyRegion(java.awt.geom.Rectangle2D):::ENTER
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion == null
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel$GraphModelEdit.setDirtyRegion(java.awt.geom.Rectangle2D):::EXIT
this.insert == orig(this.insert)
this.insert.getClass().getName() == orig(this.insert.getClass().getName())
this.insert[] == orig(this.insert[])
this.changed == orig(this.changed)
this.changed.getClass().getName() == orig(this.changed.getClass().getName())
this.changed[] == orig(this.changed[])
this.remove == orig(this.remove)
this.remove.getClass().getName() == orig(this.remove.getClass().getName())
this.remove[] == orig(this.remove[])
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
this.context[] == orig(this.context[])
this.inserted == orig(this.inserted)
this.inserted.getClass().getName() == orig(this.inserted.getClass().getName())
this.inserted[] == orig(this.inserted[])
this.removed == orig(this.removed)
this.attributes == orig(this.attributes)
this.attributes.getClass().getName() == orig(this.attributes.getClass().getName())
this.previousAttributes == orig(this.previousAttributes)
this.previousAttributes.getClass().getName() == orig(this.previousAttributes.getClass().getName())
this.parentMap == orig(this.parentMap)
this.parentMap.entries == orig(this.parentMap.entries)
this.parentMap.entries[] == orig(this.parentMap.entries[])
this.parentMap.changedNodes == orig(this.parentMap.changedNodes)
this.parentMap.changedNodes.getClass().getName() == orig(this.parentMap.changedNodes.getClass().getName())
this.parentMap.childCount == orig(this.parentMap.childCount)
this.parentMap.childCount.getClass().getName() == orig(this.parentMap.childCount.getClass().getName())
this.previousParentMap == orig(this.previousParentMap)
this.previousParentMap.entries == orig(this.previousParentMap.entries)
this.previousParentMap.entries[] == orig(this.previousParentMap.entries[])
this.previousParentMap.changedNodes == orig(this.previousParentMap.changedNodes)
this.previousParentMap.changedNodes.getClass().getName() == orig(this.previousParentMap.changedNodes.getClass().getName())
this.previousParentMap.childCount == orig(this.previousParentMap.childCount)
this.previousParentMap.childCount.getClass().getName() == orig(this.previousParentMap.childCount.getClass().getName())
this.connectionSet == orig(this.connectionSet)
this.connectionSet.connections == orig(this.connectionSet.connections)
this.connectionSet.connections.getClass().getName() == orig(this.connectionSet.connections.getClass().getName())
this.connectionSet.edges == orig(this.connectionSet.edges)
this.connectionSet.edges.getClass().getName() == orig(this.connectionSet.edges.getClass().getName())
this.previousConnectionSet == orig(this.previousConnectionSet)
this.previousConnectionSet.connections == orig(this.previousConnectionSet.connections)
this.previousConnectionSet.connections.getClass().getName() == orig(this.previousConnectionSet.connections.getClass().getName())
this.previousConnectionSet.edges == orig(this.previousConnectionSet.edges)
this.previousConnectionSet.edges.getClass().getName() == orig(this.previousConnectionSet.edges.getClass().getName())
this.cellViews == orig(this.cellViews)
this.cellViews.getClass().getName() == orig(this.cellViews.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this == orig(org.jgraph.graph.DefaultGraphModel.this)
org.jgraph.graph.DefaultGraphModel.this.listenerList == orig(org.jgraph.graph.DefaultGraphModel.this.listenerList)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator)
org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.roots == orig(org.jgraph.graph.DefaultGraphModel.this.roots)
org.jgraph.graph.DefaultGraphModel.this.roots[] == orig(org.jgraph.graph.DefaultGraphModel.this.roots[])
org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName() == orig(org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName())
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == orig(org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren)
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == orig(org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups)
org.jgraph.graph.DefaultGraphModel.this.attributes == orig(org.jgraph.graph.DefaultGraphModel.this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
org.jgraph.graph.DefaultGraphModel.this.updateLevel == orig(org.jgraph.graph.DefaultGraphModel.this.updateLevel)
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transAddedCells)
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == orig(org.jgraph.graph.DefaultGraphModel.this.transRemovedCells)
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == orig(org.jgraph.graph.DefaultGraphModel.this.transEditAttrs)
org.jgraph.graph.DefaultGraphModel.this.transEditCS == orig(org.jgraph.graph.DefaultGraphModel.this.transEditCS)
org.jgraph.graph.DefaultGraphModel.this.transEditPM == orig(org.jgraph.graph.DefaultGraphModel.this.transEditPM)
this.insert has only one value
this.insert[] == []
this.insert[].getClass().getName() == []
this.changed has only one value
this.remove has only one value
this.context has only one value
this.inserted has only one value
this.attributes has only one value
this.previousAttributes has only one value
this.parentMap has only one value
this.parentMap.entries has only one value
this.parentMap.entries[] contains no nulls and has only one value, of length 2
this.parentMap.changedNodes has only one value
this.parentMap.childCount has only one value
this.dirtyRegion has only one value
this.connectionSet has only one value
this.connectionSet.connections has only one value
this.connectionSet.edges has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] contains no nulls and has only one value, of length 3
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(org.jgraph.graph.DefaultGraphModel.this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel:::OBJECT
this has only one value
this.listenerList has only one value
this.listenerList != null
this.emptyIterator has only one value
this.emptyIterator != null
this.emptyIterator.getClass().getName() == org.jgraph.graph.DefaultGraphModel$EmptyIterator.class
this.roots has only one value
this.roots != null
this.roots[] elements != null
this.roots.getClass().getName() == java.util.ArrayList.class
this.asksAllowsChildren == false
this.removeEmptyGroups == true
this.attributes has only one value
this.attributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.updateLevel == 0
this.transAddedCells == null
this.transRemovedCells == null
this.transEditAttrs == null
this.transEditCS == null
this.transEditPM == null
this.emptyIterator.getClass().getName() != this.roots.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.DefaultGraphModel():::EXIT
this.roots[] == []
this.roots[].getClass().getName() == []
===========================================================================
org.jgraph.graph.DefaultGraphModel.DefaultGraphModel(java.util.List, org.jgraph.graph.AttributeMap):::ENTER
arg0 == null
arg1 == null
===========================================================================
org.jgraph.graph.DefaultGraphModel.DefaultGraphModel(java.util.List, org.jgraph.graph.AttributeMap):::EXIT
this.roots[] == []
this.roots[].getClass().getName() == []
===========================================================================
org.jgraph.graph.DefaultGraphModel.addGraphModelListener(org.jgraph.event.GraphModelListener):::ENTER
this.roots[] == []
this.roots[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.addGraphModelListener(org.jgraph.event.GraphModelListener):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[] == []
this.roots[].getClass().getName() == []
===========================================================================
org.jgraph.graph.DefaultGraphModel.connect(java.lang.Object, java.lang.Object, boolean, boolean):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(this.roots[]) == 3
arg0.getClass().getName() in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.connect(java.lang.Object, java.lang.Object, boolean, boolean):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(this.roots[]) == 3
orig(arg0.getClass().getName()) in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.createEdit(java.lang.Object[], java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap, javax.swing.undo.UndoableEdit[]):::ENTER
arg2.getClass().getName() == arg4.childCount.getClass().getName()
arg3.connections.getClass().getName() == arg3.edges.getClass().getName()
arg3.connections.getClass().getName() == arg4.changedNodes.getClass().getName()
this.roots[] == []
this.roots[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 5
arg1 == null
arg2 has only one value
arg2.getClass().getName() == java.util.Hashtable.class
arg3 has only one value
arg3.connections has only one value
arg3.connections.getClass().getName() == java.util.HashSet.class
arg3.edges has only one value
arg4 has only one value
arg4.entries has only one value
arg4.entries[] contains no nulls and has only one value, of length 2
arg4.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg4.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg4.changedNodes has only one value
arg4.childCount has only one value
arg5 == null
size(arg0[]) == 5
size(arg4.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel.createEdit(java.lang.Object[], java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap, javax.swing.undo.UndoableEdit[]):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == org.jgraph.graph.DefaultGraphModel.this.emptyIterator.getClass().getName()
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == org.jgraph.graph.DefaultGraphModel.this.roots.getClass().getName()
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
arg0[] == orig(arg0[])
arg3.connections == orig(arg3.connections)
arg3.connections.getClass().getName() == arg3.edges.getClass().getName()
arg3.connections.getClass().getName() == arg4.changedNodes.getClass().getName()
arg3.connections.getClass().getName() == return.parentMap.changedNodes.getClass().getName()
arg3.connections.getClass().getName() == return.previousParentMap.changedNodes.getClass().getName()
arg3.connections.getClass().getName() == return.connectionSet.connections.getClass().getName()
arg3.connections.getClass().getName() == return.connectionSet.edges.getClass().getName()
arg3.connections.getClass().getName() == return.previousConnectionSet.connections.getClass().getName()
arg3.connections.getClass().getName() == return.previousConnectionSet.edges.getClass().getName()
arg3.connections.getClass().getName() == orig(arg3.connections.getClass().getName())
arg3.connections.getClass().getName() == orig(arg3.edges.getClass().getName())
arg3.connections.getClass().getName() == orig(arg4.changedNodes.getClass().getName())
arg3.edges == orig(arg3.edges)
arg4.entries == orig(arg4.entries)
arg4.entries[] == orig(arg4.entries[])
arg4.changedNodes == orig(arg4.changedNodes)
arg4.childCount == orig(arg4.childCount)
arg4.childCount.getClass().getName() == return.attributes.getClass().getName()
arg4.childCount.getClass().getName() == return.parentMap.childCount.getClass().getName()
arg4.childCount.getClass().getName() == return.previousParentMap.childCount.getClass().getName()
arg4.childCount.getClass().getName() == return.cellViews.getClass().getName()
arg4.childCount.getClass().getName() == orig(arg2.getClass().getName())
arg4.childCount.getClass().getName() == orig(arg4.childCount.getClass().getName())
return.insert.getClass().getName() == orig(arg0.getClass().getName())
this.roots[] == []
this.roots[].getClass().getName() == []
arg0[] contains no nulls and has only one value, of length 5
arg3.connections has only one value
arg3.connections.getClass().getName() == java.util.HashSet.class
arg3.edges has only one value
arg4.entries has only one value
arg4.entries[] contains no nulls and has only one value, of length 2
arg4.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg4.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg4.changedNodes has only one value
arg4.childCount has only one value
arg4.childCount.getClass().getName() == java.util.Hashtable.class
return has only one value
return.insert has only one value
return.insert.getClass().getName() == java.lang.Object[].class
return.insert[] contains no nulls and has only one value, of length 5
return.insert[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultEdge]
return.changed == null
return.remove == null
return.context == null
return.inserted == null
return.removed == null
return.attributes has only one value
return.previousAttributes == null
return.parentMap has only one value
return.parentMap.entries has only one value
return.parentMap.entries[] contains no nulls and has only one value, of length 2
return.parentMap.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
return.parentMap.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
return.parentMap.changedNodes has only one value
return.parentMap.childCount has only one value
return.previousParentMap has only one value
return.previousParentMap.entries has only one value
return.previousParentMap.entries[] contains no nulls and has only one value, of length 2
return.previousParentMap.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
return.previousParentMap.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
return.previousParentMap.changedNodes has only one value
return.previousParentMap.childCount has only one value
return.dirtyRegion == null
return.connectionSet has only one value
return.connectionSet.connections has only one value
return.connectionSet.edges has only one value
return.previousConnectionSet has only one value
return.previousConnectionSet.connections has only one value
return.previousConnectionSet.edges has only one value
return.cellViews has only one value
org.jgraph.graph.DefaultGraphModel.this has only one value
org.jgraph.graph.DefaultGraphModel.this.listenerList has only one value
org.jgraph.graph.DefaultGraphModel.this.emptyIterator has only one value
org.jgraph.graph.DefaultGraphModel.this.roots has only one value
org.jgraph.graph.DefaultGraphModel.this.roots[] == []
org.jgraph.graph.DefaultGraphModel.this.roots[].getClass().getName() == []
org.jgraph.graph.DefaultGraphModel.this.asksAllowsChildren == false
org.jgraph.graph.DefaultGraphModel.this.removeEmptyGroups == true
org.jgraph.graph.DefaultGraphModel.this.attributes has only one value
org.jgraph.graph.DefaultGraphModel.this.updateLevel == 0
org.jgraph.graph.DefaultGraphModel.this.transAddedCells == null
org.jgraph.graph.DefaultGraphModel.this.transRemovedCells == null
org.jgraph.graph.DefaultGraphModel.this.transEditAttrs == null
org.jgraph.graph.DefaultGraphModel.this.transEditCS == null
org.jgraph.graph.DefaultGraphModel.this.transEditPM == null
size(arg4.entries[]) == 2
size(return.insert[]) == 5
size(return.parentMap.entries[]) == 2
size(return.previousParentMap.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel.edges(java.lang.Object):::ENTER
this.roots[] == []
this.roots[].getClass().getName() == []
===========================================================================
org.jgraph.graph.DefaultGraphModel.edges(java.lang.Object):::EXIT298
return.getClass().getName() == java.util.HashMap$KeyIterator.class
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.edges(java.lang.Object):::EXIT299
this.emptyIterator.getClass().getName() == return.getClass().getName()
return.getClass().getName() == orig(this.emptyIterator.getClass().getName())
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultGraphModel$EmptyIterator.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.edges(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
(return.getClass().getName() == java.util.HashMap$KeyIterator.class)  ==>  (orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultPort.class)
(return.getClass().getName() == org.jgraph.graph.DefaultGraphModel$EmptyIterator.class)  <==>  (this.emptyIterator.getClass().getName() == return.getClass().getName())
(return.getClass().getName() == org.jgraph.graph.DefaultGraphModel$EmptyIterator.class)  ==>  (return has only one value)
this.roots[] == []
this.roots[].getClass().getName() == []
===========================================================================
org.jgraph.graph.DefaultGraphModel.fireGraphChanged(java.lang.Object, org.jgraph.event.GraphModelEvent$GraphModelChange):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.fireGraphChanged(java.lang.Object, org.jgraph.event.GraphModelEvent$GraphModelChange):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.getAll(org.jgraph.graph.GraphModel):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getAll(org.jgraph.graph.GraphModel):::EXIT
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] contains no nulls and has only one value, of length 5
size(return[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel.getAttributes(java.lang.Object):::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
arg0 != null
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getAttributes(java.lang.Object):::EXIT208
===========================================================================
org.jgraph.graph.DefaultGraphModel.getAttributes(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return != null
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
this.roots.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.getChild(java.lang.Object, int):::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
arg1 == 0
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getChild(java.lang.Object, int):::EXIT457
===========================================================================
org.jgraph.graph.DefaultGraphModel.getChild(java.lang.Object, int):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return != null
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != return.getClass().getName()
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
this.roots.getClass().getName() != return.getClass().getName()
this.roots.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.getChildCount(java.lang.Object):::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
arg0 != null
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getChildCount(java.lang.Object):::EXIT472
===========================================================================
org.jgraph.graph.DefaultGraphModel.getChildCount(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return one of { 0, 1 }
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
this.roots.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.getDescendants(org.jgraph.graph.GraphModel, java.lang.Object[]):::ENTER
arg0 has only one value
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1[] elements != null
size(arg1[]) one of { 0, 3, 5 }
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getDescendants(org.jgraph.graph.GraphModel, java.lang.Object[]):::EXIT1922
return != null
orig(arg1) != null
===========================================================================
org.jgraph.graph.DefaultGraphModel.getDescendants(org.jgraph.graph.GraphModel, java.lang.Object[]):::EXIT1924
return == null
orig(arg1) == null
===========================================================================
org.jgraph.graph.DefaultGraphModel.getDescendants(org.jgraph.graph.GraphModel, java.lang.Object[]):::EXIT
arg1[] == orig(arg1[])
(return != null)  ==>  (orig(arg0.getClass().getName()) != orig(arg1.getClass().getName()))
(return != null)  ==>  (orig(size(arg1[])) one of { 0, 3, 5 })
(return != null)  ==>  (return.getClass().getName() != orig(arg0.getClass().getName()))
(return != null)  ==>  (return.getClass().getName() != orig(arg1.getClass().getName()))
(return != null)  ==>  (return.getClass().getName() == java.util.LinkedList.class)
(return != null)  ==>  (size(return[]) one of { 0, 5, 7 })
(return == null)  <==>  (orig(arg1) == null)
arg1[] elements != null
return[] elements != null
return.getClass().getName() == java.util.LinkedList.class
size(return[]) one of { 0, 5, 7 }
return.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.getEdges(org.jgraph.graph.GraphModel, java.lang.Object[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 has only one value
arg1.getClass().getName() == java.lang.Object[].class
arg1[] contains no nulls and has only one value, of length 5
size(arg1[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel.getEdges(org.jgraph.graph.GraphModel, java.lang.Object[]):::EXIT
arg1[] == orig(arg1[])
arg1[] contains no nulls and has only one value, of length 5
return has only one value
return.getClass().getName() == java.util.LinkedHashSet.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getParent(java.lang.Object):::ENTER
arg0 != null
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getParent(java.lang.Object):::EXIT423
===========================================================================
org.jgraph.graph.DefaultGraphModel.getParent(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
return.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
this.emptyIterator.getClass().getName() != return.getClass().getName()
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() in this.roots[].getClass().getName()
this.roots.getClass().getName() != return.getClass().getName()
this.roots.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.getRoots():::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
size(this.roots[]) one of { 0, 3 }
===========================================================================
org.jgraph.graph.DefaultGraphModel.getRoots():::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == return
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == return.getClass().getName()
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
return == orig(this.roots)
return.getClass().getName() == orig(this.roots.getClass().getName())
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return has only one value
return[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return.getClass().getName() == java.util.ArrayList.class
size(this.roots[]) one of { 0, 3 }
size(return[]) one of { 0, 3 }
===========================================================================
org.jgraph.graph.DefaultGraphModel.getRoots(org.jgraph.graph.GraphModel):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getRoots(org.jgraph.graph.GraphModel):::EXIT
return.getClass().getName() == java.lang.Object[].class
size(return[]) one of { 0, 3 }
===========================================================================
org.jgraph.graph.DefaultGraphModel.getSource(java.lang.Object):::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
size(this.roots[]) one of { 0, 3 }
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getSource(java.lang.Object):::EXIT247
orig(arg0) has only one value
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getSource(java.lang.Object):::EXIT248
this.roots[] == []
this.roots[].getClass().getName() == []
return == null
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getSource(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class)  ==>  (orig(arg0) has only one value)
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class)  ==>  (return.getClass().getName() == org.jgraph.graph.DefaultPort.class)
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class)  ==>  (size(this.roots[]) one of { 0, 3 })
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class)  ==>  (this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] })
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class)  ==>  (return == null)
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class)  ==>  (this.roots[] == [])
(orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class)  ==>  (this.roots[].getClass().getName() == [])
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(this.roots[]) one of { 0, 3 }
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
this.roots.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.getTarget(java.lang.Object):::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
size(this.roots[]) one of { 0, 3 }
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.getTarget(java.lang.Object):::EXIT259
return has only one value
orig(arg0) has only one value
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getTarget(java.lang.Object):::EXIT260
this.roots[] == []
this.roots[].getClass().getName() == []
return == null
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.getTarget(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
(return == null)  <==>  (orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class)
(return == null)  ==>  (this.roots[] == [])
(return == null)  ==>  (this.roots[].getClass().getName() == [])
(return has only one value)  <==>  (orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class)
(return has only one value)  ==>  (orig(arg0) has only one value)
(return has only one value)  ==>  (return.getClass().getName() != orig(arg0.getClass().getName()))
(return has only one value)  ==>  (return.getClass().getName() == org.jgraph.graph.DefaultPort.class)
(return has only one value)  ==>  (size(this.roots[]) one of { 0, 3 })
(return has only one value)  ==>  (this.emptyIterator.getClass().getName() != return.getClass().getName())
(return has only one value)  ==>  (this.roots.getClass().getName() != return.getClass().getName())
(return has only one value)  ==>  (this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] })
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(this.roots[]) one of { 0, 3 }
this.emptyIterator.getClass().getName() != return.getClass().getName()
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
this.roots.getClass().getName() != return.getClass().getName()
this.roots.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleAttributes(java.util.Map):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.getClass().getName() == java.util.Hashtable.class
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleAttributes(java.util.Map):::EXIT943
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleAttributes(java.util.Map):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
return.getClass().getName() == orig(arg0.getClass().getName())
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return has only one value
return.getClass().getName() == java.util.Hashtable.class
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleConnection(org.jgraph.graph.ConnectionSet$Connection, boolean):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0.edge has only one value
arg0.edge.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.port.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(this.roots[]) == 3
arg0.edge.getClass().getName() in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleConnection(org.jgraph.graph.ConnectionSet$Connection, boolean):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
arg0.edge == orig(arg0.edge)
arg0.edge.getClass().getName() == orig(arg0.edge.getClass().getName())
arg0.port == orig(arg0.port)
arg0.port.getClass().getName() == orig(arg0.port.getClass().getName())
arg0.isSource == orig(arg0.isSource)
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0.edge has only one value
arg0.edge.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.port.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(this.roots[]) == 3
arg0.edge.getClass().getName() in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleConnectionSet(org.jgraph.graph.ConnectionSet):::ENTER
arg0.connections.getClass().getName() == arg0.edges.getClass().getName()
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.connections has only one value
arg0.connections.getClass().getName() == java.util.HashSet.class
arg0.edges has only one value
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleConnectionSet(org.jgraph.graph.ConnectionSet):::EXIT999
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleConnectionSet(org.jgraph.graph.ConnectionSet):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
arg0.connections == orig(arg0.connections)
arg0.connections.getClass().getName() == arg0.edges.getClass().getName()
arg0.connections.getClass().getName() == return.connections.getClass().getName()
arg0.connections.getClass().getName() == return.edges.getClass().getName()
arg0.connections.getClass().getName() == orig(arg0.connections.getClass().getName())
arg0.connections.getClass().getName() == orig(arg0.edges.getClass().getName())
arg0.edges == orig(arg0.edges)
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0.connections has only one value
arg0.connections.getClass().getName() == java.util.HashSet.class
arg0.edges has only one value
return has only one value
return.connections has only one value
return.edges has only one value
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleInsert(java.lang.Object[]):::ENTER
this.roots[] == []
this.roots[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 5
size(arg0[]) == 5
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleInsert(java.lang.Object[]):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
arg0[] == orig(arg0[])
return.getClass().getName() == orig(arg0.getClass().getName())
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0[] contains no nulls and has only one value, of length 5
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] contains no nulls and has only one value, of length 7
size(this.roots[]) == 3
size(return[]) == 7
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleParentMap(org.jgraph.graph.ParentMap):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 has only one value
arg0.entries has only one value
arg0.entries[] contains no nulls and has only one value, of length 2
arg0.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg0.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg0.changedNodes has only one value
arg0.changedNodes.getClass().getName() == java.util.HashSet.class
arg0.childCount has only one value
arg0.childCount.getClass().getName() == java.util.Hashtable.class
size(this.roots[]) == 3
size(arg0.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleParentMap(org.jgraph.graph.ParentMap):::EXIT885
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleParentMap(org.jgraph.graph.ParentMap):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
arg0.entries == orig(arg0.entries)
arg0.entries[] == orig(arg0.entries[])
arg0.changedNodes == orig(arg0.changedNodes)
arg0.changedNodes.getClass().getName() == return.changedNodes.getClass().getName()
arg0.changedNodes.getClass().getName() == orig(arg0.changedNodes.getClass().getName())
arg0.childCount == orig(arg0.childCount)
arg0.childCount.getClass().getName() == return.childCount.getClass().getName()
arg0.childCount.getClass().getName() == orig(arg0.childCount.getClass().getName())
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0.entries has only one value
arg0.entries[] contains no nulls and has only one value, of length 2
arg0.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg0.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg0.changedNodes has only one value
arg0.changedNodes.getClass().getName() == java.util.HashSet.class
arg0.childCount has only one value
arg0.childCount.getClass().getName() == java.util.Hashtable.class
return has only one value
return.entries has only one value
return.entries[] contains no nulls and has only one value, of length 2
return.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
return.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
return.changedNodes has only one value
return.childCount has only one value
size(this.roots[]) == 3
size(arg0.entries[]) == 2
size(return.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleRemove(java.lang.Object[]):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0 == null
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.handleRemove(java.lang.Object[]):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] == []
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.DefaultGraphModel.insert(java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap, javax.swing.undo.UndoableEdit[]):::ENTER
arg1.getClass().getName() == arg3.childCount.getClass().getName()
arg2.connections.getClass().getName() == arg2.edges.getClass().getName()
arg2.connections.getClass().getName() == arg3.changedNodes.getClass().getName()
this.roots[] == []
this.roots[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 5
arg1 has only one value
arg1.getClass().getName() == java.util.Hashtable.class
arg2 has only one value
arg2.connections has only one value
arg2.connections.getClass().getName() == java.util.HashSet.class
arg2.edges has only one value
arg3 has only one value
arg3.entries has only one value
arg3.entries[] contains no nulls and has only one value, of length 2
arg3.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg3.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg3.changedNodes has only one value
arg3.childCount has only one value
arg4 == null
size(arg0[]) == 5
size(arg3.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel.insert(java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap, javax.swing.undo.UndoableEdit[]):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
arg0[] == orig(arg0[])
arg2.connections == orig(arg2.connections)
arg2.connections.getClass().getName() == arg2.edges.getClass().getName()
arg2.connections.getClass().getName() == arg3.changedNodes.getClass().getName()
arg2.connections.getClass().getName() == orig(arg2.connections.getClass().getName())
arg2.connections.getClass().getName() == orig(arg2.edges.getClass().getName())
arg2.connections.getClass().getName() == orig(arg3.changedNodes.getClass().getName())
arg2.edges == orig(arg2.edges)
arg3.entries == orig(arg3.entries)
arg3.entries[] == orig(arg3.entries[])
arg3.changedNodes == orig(arg3.changedNodes)
arg3.childCount == orig(arg3.childCount)
arg3.childCount.getClass().getName() == orig(arg1.getClass().getName())
arg3.childCount.getClass().getName() == orig(arg3.childCount.getClass().getName())
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
arg0[] contains no nulls and has only one value, of length 5
arg2.connections has only one value
arg2.connections.getClass().getName() == java.util.HashSet.class
arg2.edges has only one value
arg3.entries has only one value
arg3.entries[] contains no nulls and has only one value, of length 2
arg3.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg3.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg3.changedNodes has only one value
arg3.childCount has only one value
arg3.childCount.getClass().getName() == java.util.Hashtable.class
size(this.roots[]) == 3
size(arg3.entries[]) == 2
===========================================================================
org.jgraph.graph.DefaultGraphModel.isEdge(java.lang.Object):::ENTER
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(this.roots[]) == 3
arg0.getClass().getName() in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.isEdge(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
(return == false)  <==>  (orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class)
(return == true)  <==>  (orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class)
(return == true)  ==>  (orig(arg0) has only one value)
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
size(this.roots[]) == 3
orig(arg0.getClass().getName()) in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.isEdge(java.lang.Object):::EXIT;condition="return == true"
return == true
orig(arg0) has only one value
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.isEdge(java.lang.Object):::EXIT;condition="not(return == true)"
return == false
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultGraphCell.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.isPort(java.lang.Object):::ENTER
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
arg0 != null
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != arg0.getClass().getName()
this.roots.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphModel.isPort(java.lang.Object):::EXIT
this.listenerList == orig(this.listenerList)
this.emptyIterator == orig(this.emptyIterator)
this.emptyIterator.getClass().getName() == orig(this.emptyIterator.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.asksAllowsChildren == orig(this.asksAllowsChildren)
this.removeEmptyGroups == orig(this.removeEmptyGroups)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.updateLevel == orig(this.updateLevel)
this.transAddedCells == orig(this.transAddedCells)
this.transRemovedCells == orig(this.transRemovedCells)
this.transEditAttrs == orig(this.transEditAttrs)
this.transEditCS == orig(this.transEditCS)
this.transEditPM == orig(this.transEditPM)
(return == false)  ==>  (orig(arg0.getClass().getName()) in this.roots[].getClass().getName())
(return == false)  ==>  (size(this.roots[]) == 3)
(return == false)  ==>  (this.roots[] contains no nulls and has only one value, of length 3)
(return == false)  ==>  (this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge])
(return == true)  ==>  (orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultPort.class)
(return == true)  ==>  (size(this.roots[]) one of { 0, 3 })
(return == true)  ==>  (this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] })
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge] }
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
this.emptyIterator.getClass().getName() != orig(arg0.getClass().getName())
this.roots.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.jgraph.graph.DefaultGraphModel.isPort(java.lang.Object):::EXIT;condition="return == true"
return == true
orig(arg0.getClass().getName()) == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.DefaultGraphModel.isPort(java.lang.Object):::EXIT;condition="not(return == true)"
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultGraphCell, org.jgraph.graph.DefaultEdge]
return == false
size(this.roots[]) == 3
orig(arg0.getClass().getName()) in this.roots[].getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel:::CLASS
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY has only one value
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY != null
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString == "selectionMode"
org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED has only one value
org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED != null
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel:::OBJECT
this.graph.graphModel.getClass().getName() == this.graph.graphLayoutCache.graphModel.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() == this.cellStates.getClass().getName()
this.graph.graphLayoutCache.visibleSet.getClass().getName() == this.graph.graphLayoutCache.localAttributes.getClass().getName()
this has only one value
this.graph has only one value
this.graph != null
this.graph.selectionRedirector == null
this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graph.graphLayoutCache.autoSizeOnValueChange == false
this.graph.graphLayoutCache.showsExistingConnections == true
this.graph.graphLayoutCache.showsChangedConnections == true
this.graph.graphLayoutCache.showsInvisibleEditedCells == false
this.graph.graphLayoutCache.showsInsertedCells == true
this.graph.graphLayoutCache.showsInsertedConnections == true
this.graph.graphLayoutCache.hidesExistingConnections == true
this.graph.graphLayoutCache.hidesDanglingConnections == false
this.graph.graphLayoutCache.remembersCellViews == true
this.graph.graphLayoutCache.selectsAllInsertedCells == false
this.graph.graphLayoutCache.selectsLocalInsertedCells == false
this.graph.graphLayoutCache.movesChildrenOnExpand == true
this.graph.graphLayoutCache.movesParentsOnCollapse == true
this.graph.graphLayoutCache.resizesParentsOnCollapse == false
this.graph.graphLayoutCache.collapseXScale == 1.0
this.graph.graphLayoutCache.collapseYScale == 1.0
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == false
this.graph.graphLayoutCache.listenerList has only one value
this.graph.graphLayoutCache.graphModel has only one value
this.graph.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graph.graphLayoutCache.mapping has only one value
this.graph.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
this.graph.graphLayoutCache.hiddenMapping has only one value
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
this.graph.graphLayoutCache.factory has only one value
this.graph.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
this.graph.graphLayoutCache.visibleSet has only one value
this.graph.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
this.graph.graphLayoutCache.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
this.graph.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
this.graph.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
this.graph.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.graph.graphLayoutCache.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graph.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
this.graph.graphLayoutCache.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] }
this.graph.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graph.graphLayoutCache.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] }
this.graph.graphLayoutCache.ports[].groupBounds elements == null
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() one of { [], [null, null] }
this.graph.graphLayoutCache.partial == false
this.graph.graphLayoutCache.allAttributesLocal == false
this.graph.graphLayoutCache.localAttributes has only one value
this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
this.graph.marquee.previousCursor == null
this.graph.marquee.marqueeBounds == null
this.graph.marquee.startPoint == null
this.graph.marquee.currentPoint == null
this.graph.offscreen == null
this.graph.offscreenBounds == null
this.graph.offscreenOffset == null
this.graph.offgraphics == null
this.graph.offscreenDirty.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.graph.wholeOffscreenDirty == false
this.graph.wholeOffscreenDirtyProportion == 0.8
this.graph.offscreenBuffer == 300
this.graph.volatileOffscreen == false
this.graph.lastBufferAllocated == true
this.graph.backgroundImage == null
this.graph.backgroundComponent == null
this.graph.backgroundScaled == true
this.graph.scale == 1.0
this.graph.antiAliased == false
this.graph.editable == true
this.graph.groupsEditable == false
this.graph.selectionEnabled == true
this.graph.previewInvalidNullPorts == true
this.graph.gridVisible == false
this.graph.gridSize == 10.0
this.graph.gridMode == 0
this.graph.portsVisible == false
this.graph.portsScaled == true
this.graph.portsOnTop == true
this.graph.moveBelowZero == false
this.graph.moveBeyondGraphBounds == true
this.graph.edgeLabelsMovable == true
this.graph.autoResizeGraph == true
this.graph.highlightColor has only one value
this.graph.highlightColor != null
this.graph.dragEnabled == false
this.graph.dropEnabled == true
this.graph.xorEnabled == true
this.graph.editClickCount == 2
this.graph.enabled == true
this.graph.gridEnabled == false
this.graph.handleSize == 3
this.graph.tolerance == 4
this.graph.minimumMove == 5
this.graph.isMoveIntoGroups == false
this.graph.isMoveOutOfGroups == false
this.graph.disconnectOnMove == false
this.graph.moveable == true
this.graph.sizeable == true
this.graph.bendable == true
this.graph.connectable == true
this.graph.disconnectable == true
this.changeSupport == null
this.listenerList has only one value
this.listenerList != null
this.selectionMode == 0
this.childrenSelectable == true
this.cellStates has only one value
this.cellStates != null
this.cellStates.getClass().getName() == java.util.Hashtable.class
this.selection has only one value
this.selection != null
this.selection.getClass().getName() == java.util.LinkedHashSet.class
size(this.graph.graphLayoutCache.roots[]) one of { 0, 3 }
size(this.graph.graphLayoutCache.ports[]) one of { 0, 2 }
this.graph.graphModel.getClass().getName() != this.graph.graphLayoutCache.mapping.getClass().getName()
this.graph.graphModel.getClass().getName() != this.graph.graphLayoutCache.hiddenMapping.getClass().getName()
this.graph.graphModel.getClass().getName() != this.graph.graphLayoutCache.factory.getClass().getName()
this.graph.graphModel.getClass().getName() != this.graph.graphLayoutCache.visibleSet.getClass().getName()
this.graph.graphModel.getClass().getName() != this.graph.graphLayoutCache.roots.getClass().getName()
this.graph.graphModel.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphModel.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphModel.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphModel.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.graphLayoutCache.mapping.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.graphLayoutCache.hiddenMapping.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.graphLayoutCache.factory.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.graphLayoutCache.visibleSet.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.graphLayoutCache.roots.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphLayoutCache.graphModel.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.graph.graphLayoutCache.hiddenMapping.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.graph.graphLayoutCache.factory.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.graph.graphLayoutCache.visibleSet.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.graph.graphLayoutCache.roots.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.mapping.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.graph.graphLayoutCache.factory.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.graph.graphLayoutCache.visibleSet.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.graph.graphLayoutCache.roots.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.factory.getClass().getName() != this.graph.graphLayoutCache.visibleSet.getClass().getName()
this.graph.graphLayoutCache.factory.getClass().getName() != this.graph.graphLayoutCache.roots.getClass().getName()
this.graph.graphLayoutCache.factory.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphLayoutCache.factory.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.factory.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphLayoutCache.factory.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.visibleSet.getClass().getName() != this.graph.graphLayoutCache.roots.getClass().getName()
this.graph.graphLayoutCache.visibleSet.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphLayoutCache.visibleSet.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.visibleSet.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphLayoutCache.visibleSet.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.roots.getClass().getName() != this.graph.graphLayoutCache.ports.getClass().getName()
this.graph.graphLayoutCache.roots.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.roots.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphLayoutCache.roots.getClass().getName() != this.selection.getClass().getName()
this.graph.graphLayoutCache.ports.getClass().getName() != this.graph.selectionModel.getClass().getName()
this.graph.graphLayoutCache.ports.getClass().getName() != this.cellStates.getClass().getName()
this.graph.graphLayoutCache.ports.getClass().getName() != this.selection.getClass().getName()
this.graph.selectionModel.getClass().getName() != this.cellStates.getClass().getName()
this.graph.selectionModel.getClass().getName() != this.selection.getClass().getName()
this.cellStates.getClass().getName() != this.selection.getClass().getName()
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.DefaultGraphSelectionModel(org.jgraph.JGraph):::ENTER
arg0 has only one value
arg0.selectionRedirector == null
arg0.graphModel == null
arg0.graphLayoutCache == null
arg0.selectionModel == null
arg0.marquee == null
arg0.offscreen == null
arg0.offscreenBounds == null
arg0.offscreenOffset == null
arg0.offgraphics == null
arg0.offscreenDirty == null
arg0.wholeOffscreenDirty == false
arg0.wholeOffscreenDirtyProportion == 0.8
arg0.offscreenBuffer == 300
arg0.volatileOffscreen == false
arg0.lastBufferAllocated == true
arg0.backgroundImage == null
arg0.backgroundComponent == null
arg0.backgroundScaled == true
arg0.scale == 1.0
arg0.antiAliased == false
arg0.editable == true
arg0.groupsEditable == false
arg0.selectionEnabled == true
arg0.previewInvalidNullPorts == true
arg0.gridVisible == false
arg0.gridSize == 10.0
arg0.gridMode == 0
arg0.portsVisible == false
arg0.portsScaled == true
arg0.portsOnTop == true
arg0.moveBelowZero == false
arg0.moveBeyondGraphBounds == true
arg0.edgeLabelsMovable == true
arg0.autoResizeGraph == true
arg0.highlightColor has only one value
arg0.handleColor == null
arg0.lockedHandleColor == null
arg0.marqueeColor == null
arg0.gridColor == null
arg0.dragEnabled == false
arg0.dropEnabled == true
arg0.xorEnabled == true
arg0.editClickCount == 2
arg0.enabled == true
arg0.gridEnabled == false
arg0.handleSize == 3
arg0.tolerance == 4
arg0.minimumMove == 5
arg0.isJumpToDefaultPort == false
arg0.isMoveIntoGroups == false
arg0.isMoveOutOfGroups == false
arg0.disconnectOnMove == false
arg0.moveable == true
arg0.cloneable == false
arg0.sizeable == true
arg0.bendable == true
arg0.connectable == true
arg0.disconnectable == true
arg0.invokesStopCellEditing == false
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.DefaultGraphSelectionModel(org.jgraph.JGraph):::EXIT
this.graph == orig(arg0)
this.graph.wholeOffscreenDirty == arg0.wholeOffscreenDirty
this.graph.wholeOffscreenDirtyProportion == arg0.wholeOffscreenDirtyProportion
this.graph.offscreenBuffer == arg0.offscreenBuffer
this.graph.volatileOffscreen == arg0.volatileOffscreen
this.graph.lastBufferAllocated == arg0.lastBufferAllocated
this.graph.backgroundScaled == arg0.backgroundScaled
this.graph.scale == arg0.scale
this.graph.antiAliased == arg0.antiAliased
this.graph.editable == arg0.editable
this.graph.groupsEditable == arg0.groupsEditable
this.graph.selectionEnabled == arg0.selectionEnabled
this.graph.previewInvalidNullPorts == arg0.previewInvalidNullPorts
this.graph.gridVisible == arg0.gridVisible
this.graph.gridSize == arg0.gridSize
this.graph.gridMode == arg0.gridMode
this.graph.portsVisible == arg0.portsVisible
this.graph.portsScaled == arg0.portsScaled
this.graph.portsOnTop == arg0.portsOnTop
this.graph.moveBelowZero == arg0.moveBelowZero
this.graph.moveBeyondGraphBounds == arg0.moveBeyondGraphBounds
this.graph.edgeLabelsMovable == arg0.edgeLabelsMovable
this.graph.autoResizeGraph == arg0.autoResizeGraph
this.graph.highlightColor == arg0.highlightColor
this.graph.dragEnabled == arg0.dragEnabled
this.graph.dropEnabled == arg0.dropEnabled
this.graph.xorEnabled == arg0.xorEnabled
this.graph.editClickCount == arg0.editClickCount
this.graph.enabled == arg0.enabled
this.graph.gridEnabled == arg0.gridEnabled
this.graph.handleSize == arg0.handleSize
this.graph.tolerance == arg0.tolerance
this.graph.minimumMove == arg0.minimumMove
this.graph.isJumpToDefaultPort == arg0.isJumpToDefaultPort
this.graph.isMoveIntoGroups == arg0.isMoveIntoGroups
this.graph.isMoveOutOfGroups == arg0.isMoveOutOfGroups
this.graph.disconnectOnMove == arg0.disconnectOnMove
this.graph.moveable == arg0.moveable
this.graph.cloneable == arg0.cloneable
this.graph.sizeable == arg0.sizeable
this.graph.bendable == arg0.bendable
this.graph.connectable == arg0.connectable
this.graph.disconnectable == arg0.disconnectable
arg0.selectionRedirector == orig(arg0.selectionRedirector)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphLayoutCache == orig(arg0.graphLayoutCache)
arg0.selectionModel == orig(arg0.selectionModel)
arg0.marquee == orig(arg0.marquee)
arg0.offscreen == orig(arg0.offscreen)
arg0.offscreenBounds == orig(arg0.offscreenBounds)
arg0.offscreenOffset == orig(arg0.offscreenOffset)
arg0.offgraphics == orig(arg0.offgraphics)
arg0.offscreenDirty == orig(arg0.offscreenDirty)
arg0.wholeOffscreenDirty == orig(arg0.wholeOffscreenDirty)
arg0.wholeOffscreenDirtyProportion == orig(arg0.wholeOffscreenDirtyProportion)
arg0.offscreenBuffer == orig(arg0.offscreenBuffer)
arg0.volatileOffscreen == orig(arg0.volatileOffscreen)
arg0.lastBufferAllocated == orig(arg0.lastBufferAllocated)
arg0.backgroundImage == orig(arg0.backgroundImage)
arg0.backgroundComponent == orig(arg0.backgroundComponent)
arg0.backgroundScaled == orig(arg0.backgroundScaled)
arg0.scale == orig(arg0.scale)
arg0.antiAliased == orig(arg0.antiAliased)
arg0.editable == orig(arg0.editable)
arg0.groupsEditable == orig(arg0.groupsEditable)
arg0.selectionEnabled == orig(arg0.selectionEnabled)
arg0.previewInvalidNullPorts == orig(arg0.previewInvalidNullPorts)
arg0.gridVisible == orig(arg0.gridVisible)
arg0.gridSize == orig(arg0.gridSize)
arg0.gridMode == orig(arg0.gridMode)
arg0.portsVisible == orig(arg0.portsVisible)
arg0.portsScaled == orig(arg0.portsScaled)
arg0.portsOnTop == orig(arg0.portsOnTop)
arg0.moveBelowZero == orig(arg0.moveBelowZero)
arg0.moveBeyondGraphBounds == orig(arg0.moveBeyondGraphBounds)
arg0.edgeLabelsMovable == orig(arg0.edgeLabelsMovable)
arg0.autoResizeGraph == orig(arg0.autoResizeGraph)
arg0.highlightColor == orig(arg0.highlightColor)
arg0.handleColor == orig(arg0.handleColor)
arg0.lockedHandleColor == orig(arg0.lockedHandleColor)
arg0.marqueeColor == orig(arg0.marqueeColor)
arg0.gridColor == orig(arg0.gridColor)
arg0.dragEnabled == orig(arg0.dragEnabled)
arg0.dropEnabled == orig(arg0.dropEnabled)
arg0.xorEnabled == orig(arg0.xorEnabled)
arg0.editClickCount == orig(arg0.editClickCount)
arg0.enabled == orig(arg0.enabled)
arg0.gridEnabled == orig(arg0.gridEnabled)
arg0.handleSize == orig(arg0.handleSize)
arg0.tolerance == orig(arg0.tolerance)
arg0.minimumMove == orig(arg0.minimumMove)
arg0.isJumpToDefaultPort == orig(arg0.isJumpToDefaultPort)
arg0.isMoveIntoGroups == orig(arg0.isMoveIntoGroups)
arg0.isMoveOutOfGroups == orig(arg0.isMoveOutOfGroups)
arg0.disconnectOnMove == orig(arg0.disconnectOnMove)
arg0.moveable == orig(arg0.moveable)
arg0.cloneable == orig(arg0.cloneable)
arg0.sizeable == orig(arg0.sizeable)
arg0.bendable == orig(arg0.bendable)
arg0.connectable == orig(arg0.connectable)
arg0.disconnectable == orig(arg0.disconnectable)
arg0.invokesStopCellEditing == orig(arg0.invokesStopCellEditing)
this.graph.graphModel == null
this.graph.graphLayoutCache == null
this.graph.selectionModel == null
this.graph.marquee == null
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.invokesStopCellEditing == false
arg0.selectionRedirector == null
arg0.graphModel == null
arg0.graphLayoutCache == null
arg0.selectionModel == null
arg0.marquee == null
arg0.offscreen == null
arg0.offscreenBounds == null
arg0.offscreenOffset == null
arg0.offgraphics == null
arg0.offscreenDirty == null
arg0.wholeOffscreenDirty == false
arg0.wholeOffscreenDirtyProportion == 0.8
arg0.offscreenBuffer == 300
arg0.volatileOffscreen == false
arg0.lastBufferAllocated == true
arg0.backgroundImage == null
arg0.backgroundComponent == null
arg0.backgroundScaled == true
arg0.scale == 1.0
arg0.antiAliased == false
arg0.editable == true
arg0.groupsEditable == false
arg0.selectionEnabled == true
arg0.previewInvalidNullPorts == true
arg0.gridVisible == false
arg0.gridSize == 10.0
arg0.gridMode == 0
arg0.portsVisible == false
arg0.portsScaled == true
arg0.portsOnTop == true
arg0.moveBelowZero == false
arg0.moveBeyondGraphBounds == true
arg0.edgeLabelsMovable == true
arg0.autoResizeGraph == true
arg0.highlightColor has only one value
arg0.handleColor == null
arg0.lockedHandleColor == null
arg0.marqueeColor == null
arg0.gridColor == null
arg0.dragEnabled == false
arg0.dropEnabled == true
arg0.xorEnabled == true
arg0.editClickCount == 2
arg0.enabled == true
arg0.gridEnabled == false
arg0.handleSize == 3
arg0.tolerance == 4
arg0.minimumMove == 5
arg0.isJumpToDefaultPort == false
arg0.isMoveIntoGroups == false
arg0.isMoveOutOfGroups == false
arg0.disconnectOnMove == false
arg0.moveable == true
arg0.cloneable == false
arg0.sizeable == true
arg0.bendable == true
arg0.connectable == true
arg0.disconnectable == true
arg0.invokesStopCellEditing == false
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.addGraphSelectionListener(org.jgraph.event.GraphSelectionListener):::ENTER
this.graph.graphModel has only one value
this.graph.graphLayoutCache has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.selectionModel has only one value
this.graph.marquee has only one value
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
arg0 has only one value
arg0.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.addGraphSelectionListener(org.jgraph.event.GraphSelectionListener):::EXIT
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY)
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString)
org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED == orig(org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.changeSupport == orig(this.changeSupport)
this.listenerList == orig(this.listenerList)
this.selectionMode == orig(this.selectionMode)
this.childrenSelectable == orig(this.childrenSelectable)
this.cellStates == orig(this.cellStates)
this.cellStates.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.cellStates.getClass().getName() == orig(this.cellStates.getClass().getName())
this.selection == orig(this.selection)
this.selection.getClass().getName() == orig(this.selection.getClass().getName())
this.graph.graphModel has only one value
this.graph.graphLayoutCache has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.selectionModel has only one value
this.graph.marquee has only one value
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.clearSelection():::ENTER
this.graph.graphModel has only one value
this.graph.graphLayoutCache == null
this.graph.selectionModel has only one value
this.graph.marquee has only one value
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.clearSelection():::EXIT
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY)
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString)
org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED == orig(org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.changeSupport == orig(this.changeSupport)
this.listenerList == orig(this.listenerList)
this.selectionMode == orig(this.selectionMode)
this.childrenSelectable == orig(this.childrenSelectable)
this.cellStates == orig(this.cellStates)
this.cellStates.getClass().getName() == orig(this.cellStates.getClass().getName())
this.selection == orig(this.selection)
this.selection.getClass().getName() == orig(this.selection.getClass().getName())
this.graph.graphModel has only one value
this.graph.graphLayoutCache == null
this.graph.selectionModel has only one value
this.graph.marquee has only one value
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.getSelectionCells():::ENTER
this.graph.graphModel has only one value
this.graph.graphLayoutCache has only one value
this.graph.selectionModel has only one value
this.graph.marquee has only one value
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.getSelectionCells():::EXIT307
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.getSelectionCells():::EXIT
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY)
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString)
org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED == orig(org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.changeSupport == orig(this.changeSupport)
this.listenerList == orig(this.listenerList)
this.selectionMode == orig(this.selectionMode)
this.childrenSelectable == orig(this.childrenSelectable)
this.cellStates == orig(this.cellStates)
this.cellStates.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.cellStates.getClass().getName() == orig(this.cellStates.getClass().getName())
this.selection == orig(this.selection)
this.selection.getClass().getName() == orig(this.selection.getClass().getName())
this.graph.graphModel has only one value
this.graph.graphLayoutCache has only one value
this.graph.selectionModel has only one value
this.graph.marquee has only one value
return.getClass().getName() == java.lang.Object[].class
return[] == []
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.isSelectionEmpty():::ENTER
this.graph.graphModel has only one value
this.graph.graphLayoutCache == null
this.graph.selectionModel has only one value
this.graph.marquee has only one value
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.isSelectionEmpty():::EXIT
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY)
org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString == orig(org.jgraph.graph.DefaultGraphSelectionModel.SELECTION_MODE_PROPERTY.toString)
org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED == orig(org.jgraph.graph.DefaultGraphSelectionModel.UNSELECTED)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.changeSupport == orig(this.changeSupport)
this.listenerList == orig(this.listenerList)
this.selectionMode == orig(this.selectionMode)
this.childrenSelectable == orig(this.childrenSelectable)
this.cellStates == orig(this.cellStates)
this.cellStates.getClass().getName() == orig(this.cellStates.getClass().getName())
this.selection == orig(this.selection)
this.selection.getClass().getName() == orig(this.selection.getClass().getName())
this.graph.graphModel has only one value
this.graph.graphLayoutCache == null
this.graph.selectionModel has only one value
this.graph.marquee has only one value
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
return == true
===========================================================================
org.jgraph.graph.DefaultGraphSelectionModel.isSelectionEmpty():::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.DefaultPort:::OBJECT
this.edges != null
this.anchor == null
this.attributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
===========================================================================
org.jgraph.graph.DefaultPort.DefaultPort(java.lang.Object):::ENTER
arg0 == null
===========================================================================
org.jgraph.graph.DefaultPort.DefaultPort(java.lang.Object):::EXIT
===========================================================================
org.jgraph.graph.DefaultPort.DefaultPort(java.lang.Object, org.jgraph.graph.Port):::ENTER
arg0 == null
arg1 == null
===========================================================================
org.jgraph.graph.DefaultPort.DefaultPort(java.lang.Object, org.jgraph.graph.Port):::EXIT
===========================================================================
org.jgraph.graph.DefaultPort.addEdge(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultPort.addEdge(java.lang.Object):::EXIT
this.edges == orig(this.edges)
this.anchor == orig(this.anchor)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return == true
===========================================================================
org.jgraph.graph.DefaultPort.addEdge(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.DefaultPort.edges():::ENTER
===========================================================================
org.jgraph.graph.DefaultPort.edges():::EXIT
this.edges == orig(this.edges)
this.anchor == orig(this.anchor)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return.getClass().getName() == java.util.HashMap$KeyIterator.class
===========================================================================
org.jgraph.graph.DefaultPort.removeEdge(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.DefaultPort.removeEdge(java.lang.Object):::EXIT
this.edges == orig(this.edges)
this.anchor == orig(this.anchor)
this.attributes == orig(this.attributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
return == false
===========================================================================
org.jgraph.graph.DefaultPort.removeEdge(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.DefaultRealEditor:::OBJECT
this has only one value
===========================================================================
org.jgraph.graph.DefaultRealEditor.DefaultRealEditor(javax.swing.JTextField):::ENTER
arg0 has only one value
===========================================================================
org.jgraph.graph.DefaultRealEditor.DefaultRealEditor(javax.swing.JTextField):::EXIT
===========================================================================
org.jgraph.graph.EdgeRenderer:::CLASS
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics != null
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
===========================================================================
org.jgraph.graph.EdgeRenderer:::OBJECT
this has only one value
this.extraLabelFont == null
this.metrics.getClass().getName() == sun.font.FontDesignMetrics.class
this.graph == null
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeView.renderer != null
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == sun.font.FontDesignMetrics.class
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco one of { 0, 1 }
org.jgraph.graph.EdgeView.renderer.beginSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.endSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.lineStyle one of { 0, 11 }
org.jgraph.graph.EdgeView.renderer.lineWidth one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultForeground != null
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground != null
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
this.view.points has only one value
this.view.points != null
this.view.points[] contains no nulls and has only one value, of length 2
this.view.points[] elements != null
this.view.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.view.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.view.points.getClass().getName() == java.util.ArrayList.class
this.view.source has only one value
this.view.source != null
this.view.source.getClass().getName() == org.jgraph.graph.PortView.class
this.view.target has only one value
this.view.target != null
this.view.target.getClass().getName() == org.jgraph.graph.PortView.class
this.view.sourceParentView == null
this.view.targetParentView == null
this.view.labelPosition == null
this.view.extraLabelPositions == null
this.view.labelVector == null
this.view.beginShape == null
this.view.endShape.getClass().getName() == java.awt.Polygon.class
this.view.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
this.view.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
this.view.cell has only one value
this.view.cell != null
this.view.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
this.view.parent == null
this.view.childViews has only one value
this.view.childViews != null
this.view.childViews[] == []
this.view.childViews[].getClass().getName() == []
this.view.childViews.getClass().getName() == java.util.ArrayList.class
this.view.allAttributes has only one value
this.view.allAttributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.view.attributes has only one value
this.view.attributes != null
this.view.groupBounds == null
this.beginDeco == 0
this.endDeco one of { 0, 1 }
this.beginSize one of { 0, 10 }
this.endSize one of { 0, 10 }
this.lineStyle one of { 0, 11 }
this.lineWidth one of { 0.0, 1.0 }
this.labelBorder == false
this.beginFill == false
this.focus == false
this.selected == false
this.preview == false
this.opaque == false
this.childrenSelected == false
this.labelTransformEnabled == false
this.isMoveBelowZero == false
this.borderColor == null
this.lineDash == null
this.dashOffset one of { 0.0, 1.0 }
this.gradientColor == null
this.gridColor == null
this.lockedHandleColor == null
this.highlightColor == null
this.bezier == null
this.spline == null
size(this.view.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.EdgeRenderer():::EXIT
this.simpleExtraLabels == true
this.metrics == null
this.view == null
this.endDeco == 0
this.beginSize == 0
this.endSize == 0
this.lineStyle == 0
this.lineWidth == 0.0
this.labelsEnabled == false
this.endFill == false
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor == null
this.dashOffset == 0.0
===========================================================================
org.jgraph.graph.EdgeRenderer.createLineEnd(int, int, java.awt.geom.Point2D, java.awt.geom.Point2D):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 == 10
arg1 == 1
arg2 has only one value
arg2.getClass().getName() == java.awt.geom.Point2D$Double.class
arg3 has only one value
arg3.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.EdgeRenderer.createLineEnd(int, int, java.awt.geom.Point2D, java.awt.geom.Point2D):::EXIT953
===========================================================================
org.jgraph.graph.EdgeRenderer.createLineEnd(int, int, java.awt.geom.Point2D, java.awt.geom.Point2D):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.lineShape == orig(this.view.lineShape)
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
return has only one value
return.getClass().getName() == java.awt.Polygon.class
===========================================================================
org.jgraph.graph.EdgeRenderer.createShape():::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath == null
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.createShape():::EXIT904
===========================================================================
org.jgraph.graph.EdgeRenderer.createShape():::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
return has only one value
return.getClass().getName() == java.awt.geom.GeneralPath.class
===========================================================================
org.jgraph.graph.EdgeRenderer.firePropertyChange(java.lang.String, boolean, boolean):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.dashOffset == 1.0
arg0 has only one value
arg0.toString == "opaque"
arg1 == false
arg2 == false
===========================================================================
org.jgraph.graph.EdgeRenderer.firePropertyChange(java.lang.String, boolean, boolean):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg0.toString == orig(arg0.toString)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.dashOffset == 1.0
arg0.toString == "opaque"
===========================================================================
org.jgraph.graph.EdgeRenderer.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
this.metrics == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg0.toString == orig(arg0.toString)
this.metrics == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.getBounds(org.jgraph.graph.CellView):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.endDeco == 0
this.beginSize == 0
this.endSize == 0
this.lineStyle == 0
this.lineWidth == 0.0
this.labelsEnabled == false
this.endFill == false
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor == null
this.dashOffset == 0.0
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.EdgeView.class
===========================================================================
org.jgraph.graph.EdgeRenderer.getBounds(org.jgraph.graph.CellView):::EXIT300
===========================================================================
org.jgraph.graph.EdgeRenderer.getBounds(org.jgraph.graph.CellView):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.graph == orig(this.graph)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.beginDeco == orig(this.beginDeco)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.lineDash == orig(this.lineDash)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
return has only one value
return.getClass().getName() == java.awt.Rectangle.class
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelBounds(java.awt.geom.Point2D, java.awt.Dimension, java.lang.String):::ENTER
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 == null
arg1 has only one value
arg2 has only one value
arg2.toString == ""
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelBounds(java.awt.geom.Point2D, java.awt.Dimension, java.lang.String):::EXIT457
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelBounds(java.awt.geom.Point2D, java.awt.Dimension, java.lang.String):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.metrics.getClass().getName() == orig(this.metrics.getClass().getName())
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName())
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg2.toString == orig(arg2.toString)
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg2.toString == ""
return == null
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelBounds(org.jgraph.JGraph, org.jgraph.graph.EdgeView):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 == null
arg1 has only one value
arg1.points has only one value
arg1.points[] contains no nulls and has only one value, of length 2
arg1.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg1.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg1.points.getClass().getName() == java.util.ArrayList.class
arg1.source has only one value
arg1.source.getClass().getName() == org.jgraph.graph.PortView.class
arg1.target has only one value
arg1.target.getClass().getName() == org.jgraph.graph.PortView.class
arg1.sourceParentView == null
arg1.targetParentView == null
arg1.labelPosition == null
arg1.extraLabelPositions == null
arg1.labelVector == null
arg1.beginShape == null
arg1.endShape has only one value
arg1.endShape.getClass().getName() == java.awt.Polygon.class
arg1.lineShape has only one value
arg1.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg1.sharedPath has only one value
arg1.cachedBounds == null
arg1.cell has only one value
arg1.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.parent == null
arg1.childViews has only one value
arg1.childViews[] == []
arg1.childViews[].getClass().getName() == []
arg1.childViews.getClass().getName() == java.util.ArrayList.class
arg1.allAttributes has only one value
arg1.attributes has only one value
arg1.groupBounds == null
size(arg1.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelBounds(org.jgraph.JGraph, org.jgraph.graph.EdgeView):::EXIT390
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelBounds(org.jgraph.JGraph, org.jgraph.graph.EdgeView):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg1.points == orig(arg1.points)
arg1.points[] == orig(arg1.points[])
arg1.points.getClass().getName() == orig(arg1.points.getClass().getName())
arg1.source == orig(arg1.source)
arg1.source.getClass().getName() == orig(arg1.source.getClass().getName())
arg1.target == orig(arg1.target)
arg1.target.getClass().getName() == orig(arg1.target.getClass().getName())
arg1.sourceParentView == orig(arg1.sourceParentView)
arg1.targetParentView == orig(arg1.targetParentView)
arg1.labelPosition == orig(arg1.labelPosition)
arg1.extraLabelPositions == orig(arg1.extraLabelPositions)
arg1.labelVector == orig(arg1.labelVector)
arg1.beginShape == orig(arg1.beginShape)
arg1.endShape == orig(arg1.endShape)
arg1.endShape.getClass().getName() == orig(arg1.endShape.getClass().getName())
arg1.lineShape == orig(arg1.lineShape)
arg1.lineShape.getClass().getName() == orig(arg1.lineShape.getClass().getName())
arg1.sharedPath == orig(arg1.sharedPath)
arg1.cachedBounds == orig(arg1.cachedBounds)
arg1.cell == orig(arg1.cell)
arg1.cell.getClass().getName() == orig(arg1.cell.getClass().getName())
arg1.parent == orig(arg1.parent)
arg1.childViews == orig(arg1.childViews)
arg1.childViews[] == orig(arg1.childViews[])
arg1.childViews.getClass().getName() == orig(arg1.childViews.getClass().getName())
arg1.allAttributes == orig(arg1.allAttributes)
arg1.attributes == orig(arg1.attributes)
arg1.groupBounds == orig(arg1.groupBounds)
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg1.points has only one value
arg1.points[] contains no nulls and has only one value, of length 2
arg1.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg1.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg1.points.getClass().getName() == java.util.ArrayList.class
arg1.source has only one value
arg1.source.getClass().getName() == org.jgraph.graph.PortView.class
arg1.target has only one value
arg1.target.getClass().getName() == org.jgraph.graph.PortView.class
arg1.sourceParentView == null
arg1.targetParentView == null
arg1.labelPosition == null
arg1.extraLabelPositions == null
arg1.labelVector == null
arg1.beginShape == null
arg1.endShape has only one value
arg1.endShape.getClass().getName() == java.awt.Polygon.class
arg1.lineShape has only one value
arg1.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg1.sharedPath has only one value
arg1.cachedBounds == null
arg1.cell has only one value
arg1.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg1.parent == null
arg1.childViews has only one value
arg1.childViews[] == []
arg1.childViews[].getClass().getName() == []
arg1.childViews.getClass().getName() == java.util.ArrayList.class
arg1.allAttributes has only one value
arg1.attributes has only one value
arg1.groupBounds == null
return == null
size(arg1.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelPosition(java.awt.geom.Point2D):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 == null
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelPosition(java.awt.geom.Point2D):::EXIT511
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelPosition(java.awt.geom.Point2D):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
return == null
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelPosition(org.jgraph.graph.EdgeView):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 has only one value
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape has only one value
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape has only one value
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.sharedPath has only one value
arg0.cachedBounds == null
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelPosition(org.jgraph.graph.EdgeView):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape == orig(arg0.endShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape == orig(arg0.lineShape)
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.sharedPath == orig(arg0.sharedPath)
arg0.cachedBounds == orig(arg0.cachedBounds)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape has only one value
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape has only one value
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.sharedPath has only one value
arg0.cachedBounds == null
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
return == null
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelSize(org.jgraph.graph.EdgeView, java.lang.String):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 has only one value
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape has only one value
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape has only one value
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.sharedPath has only one value
arg0.cachedBounds == null
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
arg1 has only one value
arg1.toString == ""
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelSize(org.jgraph.graph.EdgeView, java.lang.String):::EXIT540
===========================================================================
org.jgraph.graph.EdgeRenderer.getLabelSize(org.jgraph.graph.EdgeView, java.lang.String):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape == orig(arg0.endShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape == orig(arg0.lineShape)
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.sharedPath == orig(arg0.sharedPath)
arg0.cachedBounds == orig(arg0.cachedBounds)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
arg1.toString == orig(arg1.toString)
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape has only one value
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape has only one value
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.sharedPath has only one value
arg0.cachedBounds == null
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
arg1.toString == ""
return has only one value
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getPaintBounds(org.jgraph.graph.EdgeView):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
this.defaultForeground has only one value
this.defaultBackground has only one value
arg0 has only one value
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.getPaintBounds(org.jgraph.graph.EdgeView):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.lineDash == orig(this.lineDash)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.cachedBounds == orig(arg0.cachedBounds)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape has only one value
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape has only one value
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.sharedPath has only one value
arg0.cachedBounds == null
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
return.getClass().getName() == java.awt.Rectangle.class
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeRenderer.installAttributes(org.jgraph.graph.CellView):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
this.defaultForeground has only one value
this.defaultBackground has only one value
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.EdgeView.class
===========================================================================
org.jgraph.graph.EdgeRenderer.installAttributes(org.jgraph.graph.CellView):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.lineDash == orig(this.lineDash)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.isFillable(int):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.defaultForeground has only one value
this.defaultBackground has only one value
arg0 == 1
===========================================================================
org.jgraph.graph.EdgeRenderer.isFillable(int):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.defaultForeground has only one value
this.defaultBackground has only one value
return == true
===========================================================================
org.jgraph.graph.EdgeRenderer.isFillable(int):::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransform(java.lang.String):::ENTER
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0 has only one value
arg0.toString == ""
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransform(java.lang.String):::EXIT318
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransform(java.lang.String):::EXIT318;condition="not(return == true)"
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransform(java.lang.String):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.metrics.getClass().getName() == orig(this.metrics.getClass().getName())
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName())
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
arg0.toString == orig(arg0.toString)
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
arg0.toString == ""
return == false
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransform(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransformEnabled():::ENTER
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransformEnabled():::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.metrics.getClass().getName() == orig(this.metrics.getClass().getName())
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName())
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics has only one value
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape has only one value
this.view.lineShape has only one value
this.view.sharedPath has only one value
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
return == false
===========================================================================
org.jgraph.graph.EdgeRenderer.isLabelTransformEnabled():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.EdgeRenderer.repaint(long, int, int, int, int):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath == null
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == false
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor == null
this.dashOffset == 1.0
arg0 == 0
arg1 == 0
arg2 == 0
arg3 == 0
arg4 == 0
===========================================================================
org.jgraph.graph.EdgeRenderer.repaint(long, int, int, int, int):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.lineShape == orig(this.view.lineShape)
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath == null
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == false
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor == null
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.revalidate():::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath == null
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == false
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor == null
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.revalidate():::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.lineShape == orig(this.view.lineShape)
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.view.endShape == null
this.view.lineShape == null
this.view.sharedPath == null
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == false
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor == null
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.setGradientColor(java.awt.Color):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.dashOffset == 1.0
arg0 == null
===========================================================================
org.jgraph.graph.EdgeRenderer.setGradientColor(java.awt.Color):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.endDeco == orig(this.endDeco)
this.beginSize == orig(this.beginSize)
this.endSize == orig(this.endSize)
this.lineStyle == orig(this.lineStyle)
this.lineWidth == orig(this.lineWidth)
this.labelsEnabled == orig(this.labelsEnabled)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.endFill == orig(this.endFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.fontColor == orig(this.fontColor)
this.lineDash == orig(this.lineDash)
this.dashOffset == orig(this.dashOffset)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeRenderer.setView(org.jgraph.graph.CellView):::ENTER
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
this.defaultForeground has only one value
this.defaultBackground has only one value
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.EdgeView.class
===========================================================================
org.jgraph.graph.EdgeRenderer.setView(org.jgraph.graph.CellView):::EXIT
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
this.simpleExtraLabels == orig(this.simpleExtraLabels)
this.extraLabelFont == orig(this.extraLabelFont)
this.metrics == orig(this.metrics)
this.graph == orig(this.graph)
this.view == orig(this.view)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.view.points == orig(this.view.points)
this.view.points[] == orig(this.view.points[])
this.view.points.getClass().getName() == orig(this.view.points.getClass().getName())
this.view.source == orig(this.view.source)
this.view.source.getClass().getName() == orig(this.view.source.getClass().getName())
this.view.target == orig(this.view.target)
this.view.target.getClass().getName() == orig(this.view.target.getClass().getName())
this.view.sourceParentView == orig(this.view.sourceParentView)
this.view.targetParentView == orig(this.view.targetParentView)
this.view.labelPosition == orig(this.view.labelPosition)
this.view.extraLabelPositions == orig(this.view.extraLabelPositions)
this.view.labelVector == orig(this.view.labelVector)
this.view.beginShape == orig(this.view.beginShape)
this.view.endShape == orig(this.view.endShape)
this.view.endShape.getClass().getName() == orig(this.view.endShape.getClass().getName())
this.view.lineShape == orig(this.view.lineShape)
this.view.lineShape.getClass().getName() == orig(this.view.lineShape.getClass().getName())
this.view.sharedPath == orig(this.view.sharedPath)
this.view.cachedBounds == orig(this.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
this.view.cell == orig(this.view.cell)
this.view.cell.getClass().getName() == orig(this.view.cell.getClass().getName())
this.view.parent == orig(this.view.parent)
this.view.childViews == orig(this.view.childViews)
this.view.childViews[] == orig(this.view.childViews[])
this.view.childViews.getClass().getName() == orig(this.view.childViews.getClass().getName())
this.view.allAttributes == orig(this.view.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.view.attributes == orig(this.view.attributes)
this.view.groupBounds == orig(this.view.groupBounds)
this.beginDeco == orig(this.beginDeco)
this.labelBorder == orig(this.labelBorder)
this.beginFill == orig(this.beginFill)
this.focus == orig(this.focus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.opaque == orig(this.opaque)
this.childrenSelected == orig(this.childrenSelected)
this.labelTransformEnabled == orig(this.labelTransformEnabled)
this.isMoveBelowZero == orig(this.isMoveBelowZero)
this.borderColor == orig(this.borderColor)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.lineDash == orig(this.lineDash)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.highlightColor == orig(this.highlightColor)
this.bezier == orig(this.bezier)
this.spline == orig(this.spline)
this.simpleExtraLabels == true
this.metrics == null
this.view has only one value
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.endDeco == 1
this.beginSize == 10
this.endSize == 10
this.lineStyle == 11
this.lineWidth == 1.0
this.labelsEnabled == true
this.endFill == true
this.defaultForeground has only one value
this.defaultBackground has only one value
this.fontColor has only one value
this.dashOffset == 1.0
===========================================================================
org.jgraph.graph.EdgeView:::CLASS
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeView.renderer != null
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics != null
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == sun.font.FontDesignMetrics.class
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view.points has only one value
org.jgraph.graph.EdgeView.renderer.view.points != null
org.jgraph.graph.EdgeView.renderer.view.points[] contains no nulls and has only one value, of length 2
org.jgraph.graph.EdgeView.renderer.view.points[] elements != null
org.jgraph.graph.EdgeView.renderer.view.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
org.jgraph.graph.EdgeView.renderer.view.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.EdgeView.renderer.view.source has only one value
org.jgraph.graph.EdgeView.renderer.view.source != null
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == org.jgraph.graph.PortView.class
org.jgraph.graph.EdgeView.renderer.view.target has only one value
org.jgraph.graph.EdgeView.renderer.view.target != null
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == org.jgraph.graph.PortView.class
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == null
org.jgraph.graph.EdgeView.renderer.view.targetParentView == null
org.jgraph.graph.EdgeView.renderer.view.labelPosition == null
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == null
org.jgraph.graph.EdgeView.renderer.view.labelVector == null
org.jgraph.graph.EdgeView.renderer.view.beginShape == null
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == java.awt.Polygon.class
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
org.jgraph.graph.EdgeView.renderer.view.cachedBounds.getClass().getName() == java.awt.Rectangle.class
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
org.jgraph.graph.EdgeView.renderer.view.cell has only one value
org.jgraph.graph.EdgeView.renderer.view.cell != null
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
org.jgraph.graph.EdgeView.renderer.view.parent == null
org.jgraph.graph.EdgeView.renderer.view.childViews has only one value
org.jgraph.graph.EdgeView.renderer.view.childViews != null
org.jgraph.graph.EdgeView.renderer.view.childViews[] == []
org.jgraph.graph.EdgeView.renderer.view.childViews[].getClass().getName() == []
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.EdgeView.renderer.view.allAttributes has only one value
org.jgraph.graph.EdgeView.renderer.view.allAttributes != null
org.jgraph.graph.EdgeView.renderer.view.attributes has only one value
org.jgraph.graph.EdgeView.renderer.view.attributes != null
org.jgraph.graph.EdgeView.renderer.view.groupBounds == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco one of { 0, 1 }
org.jgraph.graph.EdgeView.renderer.beginSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.endSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.lineStyle one of { 0, 11 }
org.jgraph.graph.EdgeView.renderer.lineWidth one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultForeground != null
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground != null
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
size(org.jgraph.graph.EdgeView.renderer.view.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeView:::OBJECT
this has only one value
this.points[] elements != null
this.points.getClass().getName() == java.util.ArrayList.class
this.source.getClass().getName() == org.jgraph.graph.PortView.class
this.target.getClass().getName() == org.jgraph.graph.PortView.class
this.sourceParentView == null
this.targetParentView == null
this.labelPosition == null
this.extraLabelPositions == null
this.labelVector == null
this.beginShape == null
this.endShape.getClass().getName() == java.awt.Polygon.class
this.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
this.cachedBounds.getClass().getName() == java.awt.Rectangle.class
this.cell has only one value
this.cell != null
this.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
this.parent == null
this.childViews has only one value
this.childViews != null
this.childViews[] == []
this.childViews[].getClass().getName() == []
this.childViews.getClass().getName() == java.util.ArrayList.class
this.allAttributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.attributes has only one value
this.attributes != null
this.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
size(this.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeView.EdgeView(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultEdge.class
===========================================================================
org.jgraph.graph.EdgeView.EdgeView(java.lang.Object):::EXIT
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points == null
this.source == null
this.target == null
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.EdgeView.checkDefaultLabelPosition():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.checkDefaultLabelPosition():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getBounds():::ENTER
org.jgraph.graph.EdgeView.renderer.view.endShape has only one value
org.jgraph.graph.EdgeView.renderer.view.lineShape has only one value
org.jgraph.graph.EdgeView.renderer.view.sharedPath has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds has only one value
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getBounds():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName())
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[].getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points[].getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds.getClass().getName())
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews[].getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[].getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.cachedBounds.getClass().getName() == orig(this.cachedBounds.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics has only one value
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.endShape has only one value
org.jgraph.graph.EdgeView.renderer.view.lineShape has only one value
org.jgraph.graph.EdgeView.renderer.view.sharedPath has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds has only one value
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape has only one value
this.lineShape has only one value
this.sharedPath has only one value
this.cachedBounds has only one value
this.allAttributes has only one value
this.groupBounds == null
return has only one value
return.getClass().getName() == java.awt.Rectangle.class
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[]) (elementwise)
org.jgraph.graph.EdgeView.renderer.view.points[].getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points[].getClass().getName()) (elementwise)
org.jgraph.graph.EdgeView.renderer.view.childViews[] is the reverse of orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
===========================================================================
org.jgraph.graph.EdgeView.getEdgeRenderer():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.endShape == null
org.jgraph.graph.EdgeView.renderer.view.lineShape == null
org.jgraph.graph.EdgeView.renderer.view.sharedPath == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getEdgeRenderer():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.endShape == null
org.jgraph.graph.EdgeView.renderer.view.lineShape == null
org.jgraph.graph.EdgeView.renderer.view.sharedPath == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return has only one value
return.simpleExtraLabels == true
return.extraLabelFont == null
return.metrics == null
return.graph == null
return.view.points has only one value
return.view.points[] contains no nulls and has only one value, of length 2
return.view.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
return.view.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
return.view.points.getClass().getName() == java.util.ArrayList.class
return.view.source has only one value
return.view.source.getClass().getName() == org.jgraph.graph.PortView.class
return.view.target has only one value
return.view.target.getClass().getName() == org.jgraph.graph.PortView.class
return.view.sourceParentView == null
return.view.targetParentView == null
return.view.labelPosition == null
return.view.extraLabelPositions == null
return.view.labelVector == null
return.view.beginShape == null
return.view.endShape == null
return.view.lineShape == null
return.view.sharedPath == null
return.view.cachedBounds == null
return.view.cell has only one value
return.view.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
return.view.parent == null
return.view.childViews has only one value
return.view.childViews[] == []
return.view.childViews[].getClass().getName() == []
return.view.childViews.getClass().getName() == java.util.ArrayList.class
return.view.allAttributes has only one value
return.view.attributes has only one value
return.view.groupBounds == null
return.beginDeco == 0
return.endDeco one of { 0, 1 }
return.beginSize one of { 0, 10 }
return.endSize one of { 0, 10 }
return.lineStyle one of { 0, 11 }
return.lineWidth one of { 0.0, 1.0 }
return.labelBorder == false
return.beginFill == false
return.focus == false
return.selected == false
return.preview == false
return.opaque == false
return.childrenSelected == false
return.labelTransformEnabled == false
return.isMoveBelowZero == false
return.borderColor == null
return.defaultForeground has only one value
return.defaultBackground has only one value
return.lineDash == null
return.dashOffset one of { 0.0, 1.0 }
return.gradientColor == null
return.gridColor == null
return.lockedHandleColor == null
return.highlightColor == null
return.bezier == null
return.spline == null
size(return.view.points[]) == 2
===========================================================================
org.jgraph.graph.EdgeView.getLabelPosition():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.endShape has only one value
org.jgraph.graph.EdgeView.renderer.view.lineShape has only one value
org.jgraph.graph.EdgeView.renderer.view.sharedPath has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape has only one value
this.lineShape has only one value
this.sharedPath has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getLabelPosition():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.endShape has only one value
org.jgraph.graph.EdgeView.renderer.view.lineShape has only one value
org.jgraph.graph.EdgeView.renderer.view.sharedPath has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape has only one value
this.lineShape has only one value
this.sharedPath has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return == null
===========================================================================
org.jgraph.graph.EdgeView.getNearestPoint(boolean):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getNearestPoint(boolean):::EXIT458
===========================================================================
org.jgraph.graph.EdgeView.getNearestPoint(boolean):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.EdgeView.getPoint(int):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
arg0 one of { 0, 1 }
===========================================================================
org.jgraph.graph.EdgeView.getPoint(int):::EXIT420
===========================================================================
org.jgraph.graph.EdgeView.getPoint(int):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.EdgeView.getPointCount():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getPointCount():::EXIT399
===========================================================================
org.jgraph.graph.EdgeView.getPointCount():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return == 2
===========================================================================
org.jgraph.graph.EdgeView.getPointLocation(int):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
arg0 one of { 0, 1 }
===========================================================================
org.jgraph.graph.EdgeView.getPointLocation(int):::EXIT476
===========================================================================
org.jgraph.graph.EdgeView.getPointLocation(int):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.EdgeView.getRenderer():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.endShape == null
org.jgraph.graph.EdgeView.renderer.view.lineShape == null
org.jgraph.graph.EdgeView.renderer.view.sharedPath == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getRenderer():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.endShape == null
org.jgraph.graph.EdgeView.renderer.view.lineShape == null
org.jgraph.graph.EdgeView.renderer.view.sharedPath == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return has only one value
return.getClass().getName() == org.jgraph.graph.EdgeRenderer.class
===========================================================================
org.jgraph.graph.EdgeView.getShape():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getShape():::EXIT225
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
===========================================================================
org.jgraph.graph.EdgeView.getShape():::EXIT227
orig(org.jgraph.graph.EdgeView.renderer.view.endShape) == null
orig(org.jgraph.graph.EdgeView.renderer.view.lineShape) == null
orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath) == null
orig(this.endShape) == null
orig(this.lineShape) == null
orig(this.sharedPath) == null
===========================================================================
org.jgraph.graph.EdgeView.getShape():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) == null)  <==>  (orig(org.jgraph.graph.EdgeView.renderer.view.lineShape) == null)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) == null)  <==>  (orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath) == null)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) == null)  <==>  (orig(this.endShape) == null)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) == null)  <==>  (orig(this.lineShape) == null)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) == null)  <==>  (orig(this.sharedPath) == null)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  <==>  (orig(org.jgraph.graph.EdgeView.renderer.view.lineShape) has only one value)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  <==>  (orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath) has only one value)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  <==>  (orig(this.endShape) has only one value)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  <==>  (orig(this.lineShape) has only one value)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  <==>  (orig(this.sharedPath) has only one value)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName()))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName()))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName()) == java.awt.Polygon.class)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName()) == java.awt.geom.GeneralPath.class)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (orig(this.endShape.getClass().getName()) == java.awt.Polygon.class)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (orig(this.lineShape.getClass().getName()) == java.awt.geom.GeneralPath.class)
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (this.endShape == orig(this.endShape))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (this.endShape.getClass().getName() == orig(this.endShape.getClass().getName()))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (this.lineShape == orig(this.lineShape))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName()))
(orig(org.jgraph.graph.EdgeView.renderer.view.endShape) has only one value)  ==>  (this.sharedPath == orig(this.sharedPath))
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.view.endShape has only one value
org.jgraph.graph.EdgeView.renderer.view.lineShape has only one value
org.jgraph.graph.EdgeView.renderer.view.sharedPath has only one value
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
this.points has only one value
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape has only one value
this.lineShape has only one value
this.sharedPath has only one value
this.cachedBounds == null
this.allAttributes has only one value
this.groupBounds == null
return has only one value
return.getClass().getName() == java.awt.geom.GeneralPath.class
===========================================================================
org.jgraph.graph.EdgeView.getSource():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points != null
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getSource():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points != null
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.cachedBounds == null
this.groupBounds == null
return.getClass().getName() == org.jgraph.graph.PortView.class
===========================================================================
org.jgraph.graph.EdgeView.getTarget():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.getTarget():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.source has only one value
this.target has only one value
this.cachedBounds == null
this.groupBounds == null
return has only one value
return.getClass().getName() == org.jgraph.graph.PortView.class
===========================================================================
org.jgraph.graph.EdgeView.invalidate():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points != null
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.invalidate():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points != null
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.isLoop():::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.isLoop():::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.view.points == orig(org.jgraph.graph.EdgeView.renderer.view.points)
org.jgraph.graph.EdgeView.renderer.view.points[] == orig(org.jgraph.graph.EdgeView.renderer.view.points[])
org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.points.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.source == orig(org.jgraph.graph.EdgeView.renderer.view.source)
org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.source.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.target == orig(org.jgraph.graph.EdgeView.renderer.view.target)
org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.target.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sourceParentView == orig(org.jgraph.graph.EdgeView.renderer.view.sourceParentView)
org.jgraph.graph.EdgeView.renderer.view.targetParentView == orig(org.jgraph.graph.EdgeView.renderer.view.targetParentView)
org.jgraph.graph.EdgeView.renderer.view.labelPosition == orig(org.jgraph.graph.EdgeView.renderer.view.labelPosition)
org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions == orig(org.jgraph.graph.EdgeView.renderer.view.extraLabelPositions)
org.jgraph.graph.EdgeView.renderer.view.labelVector == orig(org.jgraph.graph.EdgeView.renderer.view.labelVector)
org.jgraph.graph.EdgeView.renderer.view.beginShape == orig(org.jgraph.graph.EdgeView.renderer.view.beginShape)
org.jgraph.graph.EdgeView.renderer.view.endShape == orig(org.jgraph.graph.EdgeView.renderer.view.endShape)
org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.endShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.lineShape == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape)
org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.lineShape.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.sharedPath == orig(org.jgraph.graph.EdgeView.renderer.view.sharedPath)
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == orig(org.jgraph.graph.EdgeView.renderer.view.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.view.cell == orig(org.jgraph.graph.EdgeView.renderer.view.cell)
org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.cell.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.parent == orig(org.jgraph.graph.EdgeView.renderer.view.parent)
org.jgraph.graph.EdgeView.renderer.view.childViews == orig(org.jgraph.graph.EdgeView.renderer.view.childViews)
org.jgraph.graph.EdgeView.renderer.view.childViews[] == orig(org.jgraph.graph.EdgeView.renderer.view.childViews[])
org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.view.childViews.getClass().getName())
org.jgraph.graph.EdgeView.renderer.view.allAttributes == orig(org.jgraph.graph.EdgeView.renderer.view.allAttributes)
org.jgraph.graph.EdgeView.renderer.view.attributes == orig(org.jgraph.graph.EdgeView.renderer.view.attributes)
org.jgraph.graph.EdgeView.renderer.view.groupBounds == orig(org.jgraph.graph.EdgeView.renderer.view.groupBounds)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points[] == orig(this.points[])
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.endShape.getClass().getName() == orig(this.endShape.getClass().getName())
this.lineShape == orig(this.lineShape)
this.lineShape.getClass().getName() == orig(this.lineShape.getClass().getName())
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view.cachedBounds == null
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.cachedBounds == null
this.groupBounds == null
return == false
===========================================================================
org.jgraph.graph.EdgeView.isLoop():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.EdgeView.refresh(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellMapper, boolean):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.GraphLayoutCache.class
arg2 == true
===========================================================================
org.jgraph.graph.EdgeView.refresh(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellMapper, boolean):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points[].getClass().getName() == orig(this.points[].getClass().getName())
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
this.points[] == orig(this.points[]) (elementwise)
this.points[].getClass().getName() == orig(this.points[].getClass().getName()) (elementwise)
===========================================================================
org.jgraph.graph.EdgeView.setSource(org.jgraph.graph.CellView):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.PortView.class
===========================================================================
org.jgraph.graph.EdgeView.setSource(org.jgraph.graph.CellView):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
size(this.points[]) == orig(size(this.points[]))
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[].getClass().getName() one of { [org.jgraph.graph.PortView, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.source has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.setTarget(org.jgraph.graph.CellView):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[].getClass().getName() one of { [org.jgraph.graph.PortView, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.source has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.PortView.class
===========================================================================
org.jgraph.graph.EdgeView.setTarget(org.jgraph.graph.CellView):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points == orig(this.points)
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
size(this.points[]) == orig(size(this.points[]))
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.source has only one value
this.target has only one value
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
===========================================================================
org.jgraph.graph.EdgeView.update(org.jgraph.graph.GraphLayoutCache):::ENTER
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[] contains no nulls and has only one value, of length 2
this.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.graph.EdgeView.update(org.jgraph.graph.GraphLayoutCache):::EXIT
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
this.points[].getClass().getName() == orig(this.points[].getClass().getName())
this.points.getClass().getName() == orig(this.points.getClass().getName())
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.target == orig(this.target)
this.target.getClass().getName() == orig(this.target.getClass().getName())
this.sourceParentView == orig(this.sourceParentView)
this.targetParentView == orig(this.targetParentView)
this.labelPosition == orig(this.labelPosition)
this.extraLabelPositions == orig(this.extraLabelPositions)
this.labelVector == orig(this.labelVector)
this.beginShape == orig(this.beginShape)
this.endShape == orig(this.endShape)
this.lineShape == orig(this.lineShape)
this.sharedPath == orig(this.sharedPath)
this.cachedBounds == orig(this.cachedBounds)
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.view == null
org.jgraph.graph.EdgeView.renderer.endDeco == 0
org.jgraph.graph.EdgeView.renderer.beginSize == 0
org.jgraph.graph.EdgeView.renderer.endSize == 0
org.jgraph.graph.EdgeView.renderer.lineStyle == 0
org.jgraph.graph.EdgeView.renderer.lineWidth == 0.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == false
org.jgraph.graph.EdgeView.renderer.endFill == false
org.jgraph.graph.EdgeView.renderer.fontColor == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 0.0
this.points[].getClass().getName() one of { [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.endShape == null
this.lineShape == null
this.sharedPath == null
this.cachedBounds == null
this.groupBounds == null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
this.points[] == orig(this.points[]) (elementwise)
this.points[].getClass().getName() == orig(this.points[].getClass().getName()) (elementwise)
===========================================================================
org.jgraph.graph.GraphConstants:::CLASS
org.jgraph.graph.GraphConstants.DEFAULTFONT has only one value
org.jgraph.graph.GraphConstants.DEFAULTFONT != null
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == 10
org.jgraph.graph.GraphConstants.DEFAULTINSET == 0
org.jgraph.graph.GraphConstants.dash has only one value
org.jgraph.graph.GraphConstants.dash != null
org.jgraph.graph.GraphConstants.dash[] == [5.0, 5.0]
org.jgraph.graph.GraphConstants.dash[] elements == 5.0
org.jgraph.graph.GraphConstants.SELECTION_STROKE has only one value
org.jgraph.graph.GraphConstants.SELECTION_STROKE != null
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT has only one value
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT != null
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == org.jgraph.graph.DefaultEdge$LoopRouting.class
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE has only one value
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE != null
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == org.jgraph.graph.DefaultEdge$DefaultRouting.class
org.jgraph.graph.GraphConstants.SIZEABLEAXIS has only one value
org.jgraph.graph.GraphConstants.SIZEABLEAXIS != null
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == "sizeableAxis"
org.jgraph.graph.GraphConstants.MOVEABLEAXIS has only one value
org.jgraph.graph.GraphConstants.MOVEABLEAXIS != null
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == "moveableAxis"
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES has only one value
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES != null
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == "replaceAttributes"
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES has only one value
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES != null
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == "removeAttributes"
org.jgraph.graph.GraphConstants.REMOVEALL has only one value
org.jgraph.graph.GraphConstants.REMOVEALL != null
org.jgraph.graph.GraphConstants.REMOVEALL.toString == "removeAll"
org.jgraph.graph.GraphConstants.ICON has only one value
org.jgraph.graph.GraphConstants.ICON != null
org.jgraph.graph.GraphConstants.ICON.toString == "icon"
org.jgraph.graph.GraphConstants.FONT has only one value
org.jgraph.graph.GraphConstants.FONT != null
org.jgraph.graph.GraphConstants.FONT.toString == "font"
org.jgraph.graph.GraphConstants.OPAQUE has only one value
org.jgraph.graph.GraphConstants.OPAQUE != null
org.jgraph.graph.GraphConstants.OPAQUE.toString == "opaque"
org.jgraph.graph.GraphConstants.GROUPOPAQUE has only one value
org.jgraph.graph.GraphConstants.GROUPOPAQUE != null
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == "groupOpaque"
org.jgraph.graph.GraphConstants.BORDER has only one value
org.jgraph.graph.GraphConstants.BORDER != null
org.jgraph.graph.GraphConstants.BORDER.toString == "border"
org.jgraph.graph.GraphConstants.LINECOLOR has only one value
org.jgraph.graph.GraphConstants.LINECOLOR != null
org.jgraph.graph.GraphConstants.LINECOLOR.toString == "linecolor"
org.jgraph.graph.GraphConstants.BORDERCOLOR has only one value
org.jgraph.graph.GraphConstants.BORDERCOLOR != null
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == "bordercolor"
org.jgraph.graph.GraphConstants.LINEWIDTH has only one value
org.jgraph.graph.GraphConstants.LINEWIDTH != null
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == "linewidth"
org.jgraph.graph.GraphConstants.FOREGROUND has only one value
org.jgraph.graph.GraphConstants.FOREGROUND != null
org.jgraph.graph.GraphConstants.FOREGROUND.toString == "foregroundColor"
org.jgraph.graph.GraphConstants.BACKGROUND has only one value
org.jgraph.graph.GraphConstants.BACKGROUND != null
org.jgraph.graph.GraphConstants.BACKGROUND.toString == "backgroundColor"
org.jgraph.graph.GraphConstants.GRADIENTCOLOR has only one value
org.jgraph.graph.GraphConstants.GRADIENTCOLOR != null
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == "gradientColor"
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT has only one value
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT != null
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == "verticalAlignment"
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT has only one value
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT != null
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == "horizontalAlignment"
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION has only one value
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION != null
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == "verticalTextPosition"
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION has only one value
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION != null
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == "horizontalTextPosition"
org.jgraph.graph.GraphConstants.DASHPATTERN has only one value
org.jgraph.graph.GraphConstants.DASHPATTERN != null
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == "dashPattern"
org.jgraph.graph.GraphConstants.DASHOFFSET has only one value
org.jgraph.graph.GraphConstants.DASHOFFSET != null
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == "dashOffset"
org.jgraph.graph.GraphConstants.LINESTYLE has only one value
org.jgraph.graph.GraphConstants.LINESTYLE != null
org.jgraph.graph.GraphConstants.LINESTYLE.toString == "lineStyle"
org.jgraph.graph.GraphConstants.LINEBEGIN has only one value
org.jgraph.graph.GraphConstants.LINEBEGIN != null
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == "lineBegin"
org.jgraph.graph.GraphConstants.LINEEND has only one value
org.jgraph.graph.GraphConstants.LINEEND != null
org.jgraph.graph.GraphConstants.LINEEND.toString == "lineEnd"
org.jgraph.graph.GraphConstants.BEGINSIZE has only one value
org.jgraph.graph.GraphConstants.BEGINSIZE != null
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == "beginSize"
org.jgraph.graph.GraphConstants.ENDSIZE has only one value
org.jgraph.graph.GraphConstants.ENDSIZE != null
org.jgraph.graph.GraphConstants.ENDSIZE.toString == "endSize"
org.jgraph.graph.GraphConstants.BEGINFILL has only one value
org.jgraph.graph.GraphConstants.BEGINFILL != null
org.jgraph.graph.GraphConstants.BEGINFILL.toString == "beginFill"
org.jgraph.graph.GraphConstants.ENDFILL has only one value
org.jgraph.graph.GraphConstants.ENDFILL != null
org.jgraph.graph.GraphConstants.ENDFILL.toString == "endFill"
org.jgraph.graph.GraphConstants.VALUE has only one value
org.jgraph.graph.GraphConstants.VALUE != null
org.jgraph.graph.GraphConstants.VALUE.toString == "value"
org.jgraph.graph.GraphConstants.EDITABLE has only one value
org.jgraph.graph.GraphConstants.EDITABLE != null
org.jgraph.graph.GraphConstants.EDITABLE.toString == "editable"
org.jgraph.graph.GraphConstants.MOVEABLE has only one value
org.jgraph.graph.GraphConstants.MOVEABLE != null
org.jgraph.graph.GraphConstants.MOVEABLE.toString == "moveable"
org.jgraph.graph.GraphConstants.SIZEABLE has only one value
org.jgraph.graph.GraphConstants.SIZEABLE != null
org.jgraph.graph.GraphConstants.SIZEABLE.toString == "sizeable"
org.jgraph.graph.GraphConstants.AUTOSIZE has only one value
org.jgraph.graph.GraphConstants.AUTOSIZE != null
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == "autosize"
org.jgraph.graph.GraphConstants.RESIZE has only one value
org.jgraph.graph.GraphConstants.RESIZE != null
org.jgraph.graph.GraphConstants.RESIZE.toString == "resize"
org.jgraph.graph.GraphConstants.INSET has only one value
org.jgraph.graph.GraphConstants.INSET != null
org.jgraph.graph.GraphConstants.INSET.toString == "inset"
org.jgraph.graph.GraphConstants.CONSTRAINED has only one value
org.jgraph.graph.GraphConstants.CONSTRAINED != null
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == "constrained"
org.jgraph.graph.GraphConstants.SELECTABLE has only one value
org.jgraph.graph.GraphConstants.SELECTABLE != null
org.jgraph.graph.GraphConstants.SELECTABLE.toString == "selectable"
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE has only one value
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE != null
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == "childrenSelectable"
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN has only one value
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN != null
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == "childrenSelectable"
org.jgraph.graph.GraphConstants.BENDABLE has only one value
org.jgraph.graph.GraphConstants.BENDABLE != null
org.jgraph.graph.GraphConstants.BENDABLE.toString == "bendable"
org.jgraph.graph.GraphConstants.CONNECTABLE has only one value
org.jgraph.graph.GraphConstants.CONNECTABLE != null
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == "connectable"
org.jgraph.graph.GraphConstants.DISCONNECTABLE has only one value
org.jgraph.graph.GraphConstants.DISCONNECTABLE != null
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == "disconnectable"
org.jgraph.graph.GraphConstants.BOUNDS has only one value
org.jgraph.graph.GraphConstants.BOUNDS != null
org.jgraph.graph.GraphConstants.BOUNDS.toString == "bounds"
org.jgraph.graph.GraphConstants.POINTS has only one value
org.jgraph.graph.GraphConstants.POINTS != null
org.jgraph.graph.GraphConstants.POINTS.toString == "points"
org.jgraph.graph.GraphConstants.ROUTING has only one value
org.jgraph.graph.GraphConstants.ROUTING != null
org.jgraph.graph.GraphConstants.ROUTING.toString == "routing"
org.jgraph.graph.GraphConstants.LABELPOSITION has only one value
org.jgraph.graph.GraphConstants.LABELPOSITION != null
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == "labelposition"
org.jgraph.graph.GraphConstants.EXTRALABELS has only one value
org.jgraph.graph.GraphConstants.EXTRALABELS != null
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == "extraLabels"
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS has only one value
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS != null
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == "extraLabelPositions"
org.jgraph.graph.GraphConstants.LABELALONGEDGE has only one value
org.jgraph.graph.GraphConstants.LABELALONGEDGE != null
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == "labelAlongEdge"
org.jgraph.graph.GraphConstants.ABSOLUTEX has only one value
org.jgraph.graph.GraphConstants.ABSOLUTEX != null
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == "absoluteX"
org.jgraph.graph.GraphConstants.ABSOLUTEY has only one value
org.jgraph.graph.GraphConstants.ABSOLUTEY != null
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == "absoluteY"
org.jgraph.graph.GraphConstants.OFFSET has only one value
org.jgraph.graph.GraphConstants.OFFSET != null
org.jgraph.graph.GraphConstants.OFFSET.toString == "offset"
org.jgraph.graph.GraphConstants.SIZE has only one value
org.jgraph.graph.GraphConstants.SIZE != null
org.jgraph.graph.GraphConstants.SIZE.toString == "size"
org.jgraph.graph.GraphConstants.LINK has only one value
org.jgraph.graph.GraphConstants.LINK != null
org.jgraph.graph.GraphConstants.LINK.toString == "link"
org.jgraph.graph.GraphConstants.LABELENABLED has only one value
org.jgraph.graph.GraphConstants.LABELENABLED != null
org.jgraph.graph.GraphConstants.LABELENABLED.toString == "labelEnabled"
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE has only one value
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE != null
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == "labelEnabled"
size(org.jgraph.graph.GraphConstants.dash[]) == 2
===========================================================================
org.jgraph.graph.GraphConstants.getBackground(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getBackground(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getBeginSize(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getBeginSize(java.util.Map):::EXIT1041
===========================================================================
org.jgraph.graph.GraphConstants.getBeginSize(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 10
===========================================================================
org.jgraph.graph.GraphConstants.getBorderColor(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getBorderColor(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getBounds(java.util.Map):::ENTER
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getBounds(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
===========================================================================
org.jgraph.graph.GraphConstants.getDashOffset(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getDashOffset(java.util.Map):::EXIT1007
===========================================================================
org.jgraph.graph.GraphConstants.getDashOffset(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 1.0
===========================================================================
org.jgraph.graph.GraphConstants.getDashPattern(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getDashPattern(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getEndSize(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getEndSize(java.util.Map):::EXIT1058
===========================================================================
org.jgraph.graph.GraphConstants.getEndSize(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 10
===========================================================================
org.jgraph.graph.GraphConstants.getExtraLabelPositions(java.util.Map):::ENTER
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getExtraLabelPositions(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getExtraLabels(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getExtraLabels(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getFont(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getFont(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return has only one value
===========================================================================
org.jgraph.graph.GraphConstants.getForeground(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getForeground(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getGradientColor(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getGradientColor(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getLabelPosition(java.util.Map):::ENTER
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getLabelPosition(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getLineBegin(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getLineBegin(java.util.Map):::EXIT1097
===========================================================================
org.jgraph.graph.GraphConstants.getLineBegin(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 0
===========================================================================
org.jgraph.graph.GraphConstants.getLineColor(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getLineColor(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getLineEnd(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getLineEnd(java.util.Map):::EXIT1135
===========================================================================
org.jgraph.graph.GraphConstants.getLineEnd(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 1
===========================================================================
org.jgraph.graph.GraphConstants.getLineStyle(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getLineStyle(java.util.Map):::EXIT1024
===========================================================================
org.jgraph.graph.GraphConstants.getLineStyle(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 11
===========================================================================
org.jgraph.graph.GraphConstants.getLineWidth(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getLineWidth(java.util.Map):::EXIT856
===========================================================================
org.jgraph.graph.GraphConstants.getLineWidth(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == 1.0
===========================================================================
org.jgraph.graph.GraphConstants.getOffset(java.util.Map):::ENTER
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getOffset(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getPoints(java.util.Map):::ENTER
arg0 != null
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getPoints(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return[] contains no nulls and has only one value, of length 2
return[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
return[].getClass().getName() elements == org.jgraph.graph.PortView.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) == 2
===========================================================================
org.jgraph.graph.GraphConstants.getRemoveAttributes(java.util.Map):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getRemoveAttributes(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == null
===========================================================================
org.jgraph.graph.GraphConstants.getRouting(java.util.Map):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.getRouting(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return has only one value
return.getClass().getName() == org.jgraph.graph.DefaultEdge$LoopRouting.class
===========================================================================
org.jgraph.graph.GraphConstants.isAutoSize(java.util.Map):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isAutoSize(java.util.Map):::EXIT1296
===========================================================================
org.jgraph.graph.GraphConstants.isAutoSize(java.util.Map):::EXIT1296;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isAutoSize(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == false
===========================================================================
org.jgraph.graph.GraphConstants.isAutoSize(java.util.Map):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isBeginFill(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isBeginFill(java.util.Map):::EXIT1545
===========================================================================
org.jgraph.graph.GraphConstants.isBeginFill(java.util.Map):::EXIT1545;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isBeginFill(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == false
===========================================================================
org.jgraph.graph.GraphConstants.isBeginFill(java.util.Map):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isEndFill(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isEndFill(java.util.Map):::EXIT1561
===========================================================================
org.jgraph.graph.GraphConstants.isEndFill(java.util.Map):::EXIT1561;condition="return == true"
===========================================================================
org.jgraph.graph.GraphConstants.isEndFill(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == true
===========================================================================
org.jgraph.graph.GraphConstants.isEndFill(java.util.Map):::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.GraphConstants.isLabelAlongEdge(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isLabelAlongEdge(java.util.Map):::EXIT1228
===========================================================================
org.jgraph.graph.GraphConstants.isLabelAlongEdge(java.util.Map):::EXIT1228;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isLabelAlongEdge(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == false
===========================================================================
org.jgraph.graph.GraphConstants.isLabelAlongEdge(java.util.Map):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isLabelEnabled(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isLabelEnabled(java.util.Map):::EXIT1683
===========================================================================
org.jgraph.graph.GraphConstants.isLabelEnabled(java.util.Map):::EXIT1683;condition="return == true"
===========================================================================
org.jgraph.graph.GraphConstants.isLabelEnabled(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == true
===========================================================================
org.jgraph.graph.GraphConstants.isLabelEnabled(java.util.Map):::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.GraphConstants.isOpaque(java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isOpaque(java.util.Map):::EXIT779
===========================================================================
org.jgraph.graph.GraphConstants.isOpaque(java.util.Map):::EXIT779;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isOpaque(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == false
===========================================================================
org.jgraph.graph.GraphConstants.isOpaque(java.util.Map):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isRemoveAll(java.util.Map):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isRemoveAll(java.util.Map):::EXIT1621
===========================================================================
org.jgraph.graph.GraphConstants.isRemoveAll(java.util.Map):::EXIT1621;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isRemoveAll(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == false
===========================================================================
org.jgraph.graph.GraphConstants.isRemoveAll(java.util.Map):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isResize(java.util.Map):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.isResize(java.util.Map):::EXIT1313
===========================================================================
org.jgraph.graph.GraphConstants.isResize(java.util.Map):::EXIT1313;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.isResize(java.util.Map):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
return == false
===========================================================================
org.jgraph.graph.GraphConstants.isResize(java.util.Map):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphConstants.setBorder(java.util.Map, javax.swing.border.Border):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1 has only one value
arg1.getClass().getName() == javax.swing.border.BevelBorder.class
===========================================================================
org.jgraph.graph.GraphConstants.setBorder(java.util.Map, javax.swing.border.Border):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setBorderColor(java.util.Map, java.awt.Color):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1 has only one value
===========================================================================
org.jgraph.graph.GraphConstants.setBorderColor(java.util.Map, java.awt.Color):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setBounds(java.util.Map, java.awt.geom.Rectangle2D):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
===========================================================================
org.jgraph.graph.GraphConstants.setBounds(java.util.Map, java.awt.geom.Rectangle2D):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setEndFill(java.util.Map, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1 == true
===========================================================================
org.jgraph.graph.GraphConstants.setEndFill(java.util.Map, boolean):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setGradientColor(java.util.Map, java.awt.Color):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1 has only one value
===========================================================================
org.jgraph.graph.GraphConstants.setGradientColor(java.util.Map, java.awt.Color):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setLineEnd(java.util.Map, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1 == 1
===========================================================================
org.jgraph.graph.GraphConstants.setLineEnd(java.util.Map, int):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setOpaque(java.util.Map, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1 == true
===========================================================================
org.jgraph.graph.GraphConstants.setOpaque(java.util.Map, boolean):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
===========================================================================
org.jgraph.graph.GraphConstants.setPoints(java.util.Map, java.util.List):::ENTER
arg0.getClass().getName() == org.jgraph.graph.AttributeMap.class
arg1[].getClass().getName() == [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D]
arg1[].getClass().getName() elements == org.jgraph.graph.AttributeMap.SerializablePoint2D.class
arg1.getClass().getName() == java.util.ArrayList.class
size(arg1[]) == 2
===========================================================================
org.jgraph.graph.GraphConstants.setPoints(java.util.Map, java.util.List):::EXIT
org.jgraph.graph.GraphConstants.DEFAULTFONT == orig(org.jgraph.graph.GraphConstants.DEFAULTFONT)
org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE == orig(org.jgraph.graph.GraphConstants.DEFAULTDECORATIONSIZE)
org.jgraph.graph.GraphConstants.DEFAULTINSET == orig(org.jgraph.graph.GraphConstants.DEFAULTINSET)
org.jgraph.graph.GraphConstants.dash == orig(org.jgraph.graph.GraphConstants.dash)
org.jgraph.graph.GraphConstants.dash[] == orig(org.jgraph.graph.GraphConstants.dash[])
org.jgraph.graph.GraphConstants.SELECTION_STROKE == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE)
org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.SELECTION_STROKE.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT)
org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_DEFAULT.getClass().getName())
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE)
org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName() == orig(org.jgraph.graph.GraphConstants.ROUTING_SIMPLE.getClass().getName())
org.jgraph.graph.GraphConstants.SIZEABLEAXIS == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS)
org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS)
org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLEAXIS.toString)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES)
org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REPLACEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES)
org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString == orig(org.jgraph.graph.GraphConstants.REMOVEATTRIBUTES.toString)
org.jgraph.graph.GraphConstants.REMOVEALL == orig(org.jgraph.graph.GraphConstants.REMOVEALL)
org.jgraph.graph.GraphConstants.REMOVEALL.toString == orig(org.jgraph.graph.GraphConstants.REMOVEALL.toString)
org.jgraph.graph.GraphConstants.ICON == orig(org.jgraph.graph.GraphConstants.ICON)
org.jgraph.graph.GraphConstants.ICON.toString == orig(org.jgraph.graph.GraphConstants.ICON.toString)
org.jgraph.graph.GraphConstants.FONT == orig(org.jgraph.graph.GraphConstants.FONT)
org.jgraph.graph.GraphConstants.FONT.toString == orig(org.jgraph.graph.GraphConstants.FONT.toString)
org.jgraph.graph.GraphConstants.OPAQUE == orig(org.jgraph.graph.GraphConstants.OPAQUE)
org.jgraph.graph.GraphConstants.OPAQUE.toString == orig(org.jgraph.graph.GraphConstants.OPAQUE.toString)
org.jgraph.graph.GraphConstants.GROUPOPAQUE == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE)
org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString == orig(org.jgraph.graph.GraphConstants.GROUPOPAQUE.toString)
org.jgraph.graph.GraphConstants.BORDER == orig(org.jgraph.graph.GraphConstants.BORDER)
org.jgraph.graph.GraphConstants.BORDER.toString == orig(org.jgraph.graph.GraphConstants.BORDER.toString)
org.jgraph.graph.GraphConstants.LINECOLOR == orig(org.jgraph.graph.GraphConstants.LINECOLOR)
org.jgraph.graph.GraphConstants.LINECOLOR.toString == orig(org.jgraph.graph.GraphConstants.LINECOLOR.toString)
org.jgraph.graph.GraphConstants.BORDERCOLOR == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR)
org.jgraph.graph.GraphConstants.BORDERCOLOR.toString == orig(org.jgraph.graph.GraphConstants.BORDERCOLOR.toString)
org.jgraph.graph.GraphConstants.LINEWIDTH == orig(org.jgraph.graph.GraphConstants.LINEWIDTH)
org.jgraph.graph.GraphConstants.LINEWIDTH.toString == orig(org.jgraph.graph.GraphConstants.LINEWIDTH.toString)
org.jgraph.graph.GraphConstants.FOREGROUND == orig(org.jgraph.graph.GraphConstants.FOREGROUND)
org.jgraph.graph.GraphConstants.FOREGROUND.toString == orig(org.jgraph.graph.GraphConstants.FOREGROUND.toString)
org.jgraph.graph.GraphConstants.BACKGROUND == orig(org.jgraph.graph.GraphConstants.BACKGROUND)
org.jgraph.graph.GraphConstants.BACKGROUND.toString == orig(org.jgraph.graph.GraphConstants.BACKGROUND.toString)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR)
org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString == orig(org.jgraph.graph.GraphConstants.GRADIENTCOLOR.toString)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT)
org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_ALIGNMENT.toString)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.VERTICAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION)
org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString == orig(org.jgraph.graph.GraphConstants.HORIZONTAL_TEXT_POSITION.toString)
org.jgraph.graph.GraphConstants.DASHPATTERN == orig(org.jgraph.graph.GraphConstants.DASHPATTERN)
org.jgraph.graph.GraphConstants.DASHPATTERN.toString == orig(org.jgraph.graph.GraphConstants.DASHPATTERN.toString)
org.jgraph.graph.GraphConstants.DASHOFFSET == orig(org.jgraph.graph.GraphConstants.DASHOFFSET)
org.jgraph.graph.GraphConstants.DASHOFFSET.toString == orig(org.jgraph.graph.GraphConstants.DASHOFFSET.toString)
org.jgraph.graph.GraphConstants.LINESTYLE == orig(org.jgraph.graph.GraphConstants.LINESTYLE)
org.jgraph.graph.GraphConstants.LINESTYLE.toString == orig(org.jgraph.graph.GraphConstants.LINESTYLE.toString)
org.jgraph.graph.GraphConstants.LINEBEGIN == orig(org.jgraph.graph.GraphConstants.LINEBEGIN)
org.jgraph.graph.GraphConstants.LINEBEGIN.toString == orig(org.jgraph.graph.GraphConstants.LINEBEGIN.toString)
org.jgraph.graph.GraphConstants.LINEEND == orig(org.jgraph.graph.GraphConstants.LINEEND)
org.jgraph.graph.GraphConstants.LINEEND.toString == orig(org.jgraph.graph.GraphConstants.LINEEND.toString)
org.jgraph.graph.GraphConstants.BEGINSIZE == orig(org.jgraph.graph.GraphConstants.BEGINSIZE)
org.jgraph.graph.GraphConstants.BEGINSIZE.toString == orig(org.jgraph.graph.GraphConstants.BEGINSIZE.toString)
org.jgraph.graph.GraphConstants.ENDSIZE == orig(org.jgraph.graph.GraphConstants.ENDSIZE)
org.jgraph.graph.GraphConstants.ENDSIZE.toString == orig(org.jgraph.graph.GraphConstants.ENDSIZE.toString)
org.jgraph.graph.GraphConstants.BEGINFILL == orig(org.jgraph.graph.GraphConstants.BEGINFILL)
org.jgraph.graph.GraphConstants.BEGINFILL.toString == orig(org.jgraph.graph.GraphConstants.BEGINFILL.toString)
org.jgraph.graph.GraphConstants.ENDFILL == orig(org.jgraph.graph.GraphConstants.ENDFILL)
org.jgraph.graph.GraphConstants.ENDFILL.toString == orig(org.jgraph.graph.GraphConstants.ENDFILL.toString)
org.jgraph.graph.GraphConstants.VALUE == orig(org.jgraph.graph.GraphConstants.VALUE)
org.jgraph.graph.GraphConstants.VALUE.toString == orig(org.jgraph.graph.GraphConstants.VALUE.toString)
org.jgraph.graph.GraphConstants.EDITABLE == orig(org.jgraph.graph.GraphConstants.EDITABLE)
org.jgraph.graph.GraphConstants.EDITABLE.toString == orig(org.jgraph.graph.GraphConstants.EDITABLE.toString)
org.jgraph.graph.GraphConstants.MOVEABLE == orig(org.jgraph.graph.GraphConstants.MOVEABLE)
org.jgraph.graph.GraphConstants.MOVEABLE.toString == orig(org.jgraph.graph.GraphConstants.MOVEABLE.toString)
org.jgraph.graph.GraphConstants.SIZEABLE == orig(org.jgraph.graph.GraphConstants.SIZEABLE)
org.jgraph.graph.GraphConstants.SIZEABLE.toString == orig(org.jgraph.graph.GraphConstants.SIZEABLE.toString)
org.jgraph.graph.GraphConstants.AUTOSIZE == orig(org.jgraph.graph.GraphConstants.AUTOSIZE)
org.jgraph.graph.GraphConstants.AUTOSIZE.toString == orig(org.jgraph.graph.GraphConstants.AUTOSIZE.toString)
org.jgraph.graph.GraphConstants.RESIZE == orig(org.jgraph.graph.GraphConstants.RESIZE)
org.jgraph.graph.GraphConstants.RESIZE.toString == orig(org.jgraph.graph.GraphConstants.RESIZE.toString)
org.jgraph.graph.GraphConstants.INSET == orig(org.jgraph.graph.GraphConstants.INSET)
org.jgraph.graph.GraphConstants.INSET.toString == orig(org.jgraph.graph.GraphConstants.INSET.toString)
org.jgraph.graph.GraphConstants.CONSTRAINED == orig(org.jgraph.graph.GraphConstants.CONSTRAINED)
org.jgraph.graph.GraphConstants.CONSTRAINED.toString == orig(org.jgraph.graph.GraphConstants.CONSTRAINED.toString)
org.jgraph.graph.GraphConstants.SELECTABLE == orig(org.jgraph.graph.GraphConstants.SELECTABLE)
org.jgraph.graph.GraphConstants.SELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.SELECTABLE.toString)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE)
org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CHILDRENSELECTABLE.toString)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN)
org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString == orig(org.jgraph.graph.GraphConstants.MOVEHIDDENCHILDREN.toString)
org.jgraph.graph.GraphConstants.BENDABLE == orig(org.jgraph.graph.GraphConstants.BENDABLE)
org.jgraph.graph.GraphConstants.BENDABLE.toString == orig(org.jgraph.graph.GraphConstants.BENDABLE.toString)
org.jgraph.graph.GraphConstants.CONNECTABLE == orig(org.jgraph.graph.GraphConstants.CONNECTABLE)
org.jgraph.graph.GraphConstants.CONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.CONNECTABLE.toString)
org.jgraph.graph.GraphConstants.DISCONNECTABLE == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE)
org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString == orig(org.jgraph.graph.GraphConstants.DISCONNECTABLE.toString)
org.jgraph.graph.GraphConstants.BOUNDS == orig(org.jgraph.graph.GraphConstants.BOUNDS)
org.jgraph.graph.GraphConstants.BOUNDS.toString == orig(org.jgraph.graph.GraphConstants.BOUNDS.toString)
org.jgraph.graph.GraphConstants.POINTS == orig(org.jgraph.graph.GraphConstants.POINTS)
org.jgraph.graph.GraphConstants.POINTS.toString == orig(org.jgraph.graph.GraphConstants.POINTS.toString)
org.jgraph.graph.GraphConstants.ROUTING == orig(org.jgraph.graph.GraphConstants.ROUTING)
org.jgraph.graph.GraphConstants.ROUTING.toString == orig(org.jgraph.graph.GraphConstants.ROUTING.toString)
org.jgraph.graph.GraphConstants.LABELPOSITION == orig(org.jgraph.graph.GraphConstants.LABELPOSITION)
org.jgraph.graph.GraphConstants.LABELPOSITION.toString == orig(org.jgraph.graph.GraphConstants.LABELPOSITION.toString)
org.jgraph.graph.GraphConstants.EXTRALABELS == orig(org.jgraph.graph.GraphConstants.EXTRALABELS)
org.jgraph.graph.GraphConstants.EXTRALABELS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELS.toString)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS)
org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString == orig(org.jgraph.graph.GraphConstants.EXTRALABELPOSITIONS.toString)
org.jgraph.graph.GraphConstants.LABELALONGEDGE == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE)
org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString == orig(org.jgraph.graph.GraphConstants.LABELALONGEDGE.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEX == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX)
org.jgraph.graph.GraphConstants.ABSOLUTEX.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEX.toString)
org.jgraph.graph.GraphConstants.ABSOLUTEY == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY)
org.jgraph.graph.GraphConstants.ABSOLUTEY.toString == orig(org.jgraph.graph.GraphConstants.ABSOLUTEY.toString)
org.jgraph.graph.GraphConstants.OFFSET == orig(org.jgraph.graph.GraphConstants.OFFSET)
org.jgraph.graph.GraphConstants.OFFSET.toString == orig(org.jgraph.graph.GraphConstants.OFFSET.toString)
org.jgraph.graph.GraphConstants.SIZE == orig(org.jgraph.graph.GraphConstants.SIZE)
org.jgraph.graph.GraphConstants.SIZE.toString == orig(org.jgraph.graph.GraphConstants.SIZE.toString)
org.jgraph.graph.GraphConstants.LINK == orig(org.jgraph.graph.GraphConstants.LINK)
org.jgraph.graph.GraphConstants.LINK.toString == orig(org.jgraph.graph.GraphConstants.LINK.toString)
org.jgraph.graph.GraphConstants.LABELENABLED == orig(org.jgraph.graph.GraphConstants.LABELENABLED)
org.jgraph.graph.GraphConstants.LABELENABLED.toString == orig(org.jgraph.graph.GraphConstants.LABELENABLED.toString)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE)
org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString == orig(org.jgraph.graph.GraphConstants.EXACTSEGMENTRELATIVE.toString)
arg1[] == orig(arg1[])
arg1[].getClass().getName() == [org.jgraph.graph.AttributeMap.SerializablePoint2D, org.jgraph.graph.AttributeMap.SerializablePoint2D]
arg1[].getClass().getName() elements == org.jgraph.graph.AttributeMap.SerializablePoint2D.class
===========================================================================
org.jgraph.graph.GraphLayoutCache$1:::OBJECT
org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName() == org.jgraph.graph.GraphLayoutCache.this.localAttributes.getClass().getName()
this.val$cellViews.getClass().getName() == org.jgraph.graph.CellView[].class
this.val$cellViews[] == []
this.val$cellViews[].getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this has only one value
org.jgraph.graph.GraphLayoutCache.this.autoSizeOnValueChange == false
org.jgraph.graph.GraphLayoutCache.this.showsExistingConnections == true
org.jgraph.graph.GraphLayoutCache.this.showsChangedConnections == true
org.jgraph.graph.GraphLayoutCache.this.showsInvisibleEditedCells == false
org.jgraph.graph.GraphLayoutCache.this.showsInsertedCells == true
org.jgraph.graph.GraphLayoutCache.this.showsInsertedConnections == true
org.jgraph.graph.GraphLayoutCache.this.hidesExistingConnections == true
org.jgraph.graph.GraphLayoutCache.this.hidesDanglingConnections == false
org.jgraph.graph.GraphLayoutCache.this.remembersCellViews == true
org.jgraph.graph.GraphLayoutCache.this.selectsAllInsertedCells == false
org.jgraph.graph.GraphLayoutCache.this.selectsLocalInsertedCells == false
org.jgraph.graph.GraphLayoutCache.this.movesChildrenOnExpand == true
org.jgraph.graph.GraphLayoutCache.this.movesParentsOnCollapse == true
org.jgraph.graph.GraphLayoutCache.this.resizesParentsOnCollapse == false
org.jgraph.graph.GraphLayoutCache.this.collapseXScale == 1.0
org.jgraph.graph.GraphLayoutCache.this.collapseYScale == 1.0
org.jgraph.graph.GraphLayoutCache.this.reconnectsEdgesToVisibleParent == false
org.jgraph.graph.GraphLayoutCache.this.listenerList has only one value
org.jgraph.graph.GraphLayoutCache.this.graphModel has only one value
org.jgraph.graph.GraphLayoutCache.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.graph.GraphLayoutCache.this.mapping has only one value
org.jgraph.graph.GraphLayoutCache.this.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.graph.GraphLayoutCache.this.hiddenMapping has only one value
org.jgraph.graph.GraphLayoutCache.this.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.graph.GraphLayoutCache.this.factory has only one value
org.jgraph.graph.GraphLayoutCache.this.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.graph.GraphLayoutCache.this.visibleSet has only one value
org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.graph.GraphLayoutCache.this.roots has only one value
org.jgraph.graph.GraphLayoutCache.this.roots[] == []
org.jgraph.graph.GraphLayoutCache.this.roots[].getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.GraphLayoutCache.this.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.graph.GraphLayoutCache.this.ports[] == []
org.jgraph.graph.GraphLayoutCache.this.ports[].getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].lastParent == []
org.jgraph.graph.GraphLayoutCache.this.ports[].lastParent.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].cell == []
org.jgraph.graph.GraphLayoutCache.this.ports[].cell.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].parent == []
org.jgraph.graph.GraphLayoutCache.this.ports[].parent.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].childViews == []
org.jgraph.graph.GraphLayoutCache.this.ports[].childViews.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].allAttributes == []
org.jgraph.graph.GraphLayoutCache.this.ports[].attributes == []
org.jgraph.graph.GraphLayoutCache.this.ports[].groupBounds == []
org.jgraph.graph.GraphLayoutCache.this.ports[].groupBounds.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.partial == false
org.jgraph.graph.GraphLayoutCache.this.allAttributesLocal == false
org.jgraph.graph.GraphLayoutCache.this.localAttributes has only one value
===========================================================================
org.jgraph.graph.GraphLayoutCache$1.(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellView[]):::ENTER
org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName() == org.jgraph.graph.GraphLayoutCache.this.localAttributes.getClass().getName()
org.jgraph.graph.GraphLayoutCache.this has only one value
org.jgraph.graph.GraphLayoutCache.this.autoSizeOnValueChange == false
org.jgraph.graph.GraphLayoutCache.this.showsExistingConnections == true
org.jgraph.graph.GraphLayoutCache.this.showsChangedConnections == true
org.jgraph.graph.GraphLayoutCache.this.showsInvisibleEditedCells == false
org.jgraph.graph.GraphLayoutCache.this.showsInsertedCells == true
org.jgraph.graph.GraphLayoutCache.this.showsInsertedConnections == true
org.jgraph.graph.GraphLayoutCache.this.hidesExistingConnections == true
org.jgraph.graph.GraphLayoutCache.this.hidesDanglingConnections == false
org.jgraph.graph.GraphLayoutCache.this.remembersCellViews == true
org.jgraph.graph.GraphLayoutCache.this.selectsAllInsertedCells == false
org.jgraph.graph.GraphLayoutCache.this.selectsLocalInsertedCells == false
org.jgraph.graph.GraphLayoutCache.this.movesChildrenOnExpand == true
org.jgraph.graph.GraphLayoutCache.this.movesParentsOnCollapse == true
org.jgraph.graph.GraphLayoutCache.this.resizesParentsOnCollapse == false
org.jgraph.graph.GraphLayoutCache.this.collapseXScale == 1.0
org.jgraph.graph.GraphLayoutCache.this.collapseYScale == 1.0
org.jgraph.graph.GraphLayoutCache.this.reconnectsEdgesToVisibleParent == false
org.jgraph.graph.GraphLayoutCache.this.listenerList has only one value
org.jgraph.graph.GraphLayoutCache.this.graphModel has only one value
org.jgraph.graph.GraphLayoutCache.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.graph.GraphLayoutCache.this.mapping has only one value
org.jgraph.graph.GraphLayoutCache.this.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.graph.GraphLayoutCache.this.hiddenMapping has only one value
org.jgraph.graph.GraphLayoutCache.this.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.graph.GraphLayoutCache.this.factory has only one value
org.jgraph.graph.GraphLayoutCache.this.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.graph.GraphLayoutCache.this.visibleSet has only one value
org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.graph.GraphLayoutCache.this.roots has only one value
org.jgraph.graph.GraphLayoutCache.this.roots[] == []
org.jgraph.graph.GraphLayoutCache.this.roots[].getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.graph.GraphLayoutCache.this.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.graph.GraphLayoutCache.this.ports[] == []
org.jgraph.graph.GraphLayoutCache.this.ports[].getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].lastParent == []
org.jgraph.graph.GraphLayoutCache.this.ports[].lastParent.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].cell == []
org.jgraph.graph.GraphLayoutCache.this.ports[].cell.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].parent == []
org.jgraph.graph.GraphLayoutCache.this.ports[].parent.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].childViews == []
org.jgraph.graph.GraphLayoutCache.this.ports[].childViews.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.ports[].allAttributes == []
org.jgraph.graph.GraphLayoutCache.this.ports[].attributes == []
org.jgraph.graph.GraphLayoutCache.this.ports[].groupBounds == []
org.jgraph.graph.GraphLayoutCache.this.ports[].groupBounds.getClass().getName() == []
org.jgraph.graph.GraphLayoutCache.this.partial == false
org.jgraph.graph.GraphLayoutCache.this.allAttributesLocal == false
org.jgraph.graph.GraphLayoutCache.this.localAttributes has only one value
arg1.getClass().getName() == org.jgraph.graph.CellView[].class
arg1[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache$1.(org.jgraph.graph.GraphLayoutCache, org.jgraph.graph.CellView[]):::EXIT
this.val$cellViews == orig(arg1)
this.val$cellViews.getClass().getName() == orig(arg1.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this == orig(org.jgraph.graph.GraphLayoutCache.this)
org.jgraph.graph.GraphLayoutCache.this.autoSizeOnValueChange == orig(org.jgraph.graph.GraphLayoutCache.this.autoSizeOnValueChange)
org.jgraph.graph.GraphLayoutCache.this.showsExistingConnections == orig(org.jgraph.graph.GraphLayoutCache.this.showsExistingConnections)
org.jgraph.graph.GraphLayoutCache.this.showsChangedConnections == orig(org.jgraph.graph.GraphLayoutCache.this.showsChangedConnections)
org.jgraph.graph.GraphLayoutCache.this.showsInvisibleEditedCells == orig(org.jgraph.graph.GraphLayoutCache.this.showsInvisibleEditedCells)
org.jgraph.graph.GraphLayoutCache.this.showsInsertedCells == orig(org.jgraph.graph.GraphLayoutCache.this.showsInsertedCells)
org.jgraph.graph.GraphLayoutCache.this.showsInsertedConnections == orig(org.jgraph.graph.GraphLayoutCache.this.showsInsertedConnections)
org.jgraph.graph.GraphLayoutCache.this.hidesExistingConnections == orig(org.jgraph.graph.GraphLayoutCache.this.hidesExistingConnections)
org.jgraph.graph.GraphLayoutCache.this.hidesDanglingConnections == orig(org.jgraph.graph.GraphLayoutCache.this.hidesDanglingConnections)
org.jgraph.graph.GraphLayoutCache.this.remembersCellViews == orig(org.jgraph.graph.GraphLayoutCache.this.remembersCellViews)
org.jgraph.graph.GraphLayoutCache.this.selectsAllInsertedCells == orig(org.jgraph.graph.GraphLayoutCache.this.selectsAllInsertedCells)
org.jgraph.graph.GraphLayoutCache.this.selectsLocalInsertedCells == orig(org.jgraph.graph.GraphLayoutCache.this.selectsLocalInsertedCells)
org.jgraph.graph.GraphLayoutCache.this.movesChildrenOnExpand == orig(org.jgraph.graph.GraphLayoutCache.this.movesChildrenOnExpand)
org.jgraph.graph.GraphLayoutCache.this.movesParentsOnCollapse == orig(org.jgraph.graph.GraphLayoutCache.this.movesParentsOnCollapse)
org.jgraph.graph.GraphLayoutCache.this.resizesParentsOnCollapse == orig(org.jgraph.graph.GraphLayoutCache.this.resizesParentsOnCollapse)
org.jgraph.graph.GraphLayoutCache.this.collapseXScale == orig(org.jgraph.graph.GraphLayoutCache.this.collapseXScale)
org.jgraph.graph.GraphLayoutCache.this.collapseYScale == orig(org.jgraph.graph.GraphLayoutCache.this.collapseYScale)
org.jgraph.graph.GraphLayoutCache.this.reconnectsEdgesToVisibleParent == orig(org.jgraph.graph.GraphLayoutCache.this.reconnectsEdgesToVisibleParent)
org.jgraph.graph.GraphLayoutCache.this.listenerList == orig(org.jgraph.graph.GraphLayoutCache.this.listenerList)
org.jgraph.graph.GraphLayoutCache.this.graphModel == orig(org.jgraph.graph.GraphLayoutCache.this.graphModel)
org.jgraph.graph.GraphLayoutCache.this.graphModel.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.graphModel.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.mapping == orig(org.jgraph.graph.GraphLayoutCache.this.mapping)
org.jgraph.graph.GraphLayoutCache.this.mapping.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.mapping.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.hiddenMapping == orig(org.jgraph.graph.GraphLayoutCache.this.hiddenMapping)
org.jgraph.graph.GraphLayoutCache.this.hiddenMapping.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.hiddenMapping.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.factory == orig(org.jgraph.graph.GraphLayoutCache.this.factory)
org.jgraph.graph.GraphLayoutCache.this.factory.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.factory.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.visibleSet == orig(org.jgraph.graph.GraphLayoutCache.this.visibleSet)
org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.visibleSet.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.localAttributes.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.roots == orig(org.jgraph.graph.GraphLayoutCache.this.roots)
org.jgraph.graph.GraphLayoutCache.this.roots[] == orig(org.jgraph.graph.GraphLayoutCache.this.roots[])
org.jgraph.graph.GraphLayoutCache.this.roots.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.roots.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.ports == orig(org.jgraph.graph.GraphLayoutCache.this.ports)
org.jgraph.graph.GraphLayoutCache.this.ports.getClass().getName() == orig(org.jgraph.graph.GraphLayoutCache.this.ports.getClass().getName())
org.jgraph.graph.GraphLayoutCache.this.ports[] == orig(org.jgraph.graph.GraphLayoutCache.this.ports[])
org.jgraph.graph.GraphLayoutCache.this.ports[].lastParent == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].lastParent)
org.jgraph.graph.GraphLayoutCache.this.ports[].cell == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].cell)
org.jgraph.graph.GraphLayoutCache.this.ports[].parent == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].parent)
org.jgraph.graph.GraphLayoutCache.this.ports[].childViews == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].childViews)
org.jgraph.graph.GraphLayoutCache.this.ports[].allAttributes == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].allAttributes)
org.jgraph.graph.GraphLayoutCache.this.ports[].attributes == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].attributes)
org.jgraph.graph.GraphLayoutCache.this.ports[].groupBounds == orig(org.jgraph.graph.GraphLayoutCache.this.ports[].groupBounds)
org.jgraph.graph.GraphLayoutCache.this.partial == orig(org.jgraph.graph.GraphLayoutCache.this.partial)
org.jgraph.graph.GraphLayoutCache.this.allAttributesLocal == orig(org.jgraph.graph.GraphLayoutCache.this.allAttributesLocal)
org.jgraph.graph.GraphLayoutCache.this.localAttributes == orig(org.jgraph.graph.GraphLayoutCache.this.localAttributes)
arg1[] == orig(arg1[])
arg1[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache:::OBJECT
this has only one value
this.autoSizeOnValueChange == false
this.showsExistingConnections == true
this.showsChangedConnections == true
this.showsInvisibleEditedCells == false
this.showsInsertedCells == true
this.showsInsertedConnections == true
this.hidesExistingConnections == true
this.hidesDanglingConnections == false
this.remembersCellViews == true
this.selectsAllInsertedCells == false
this.selectsLocalInsertedCells == false
this.movesChildrenOnExpand == true
this.movesParentsOnCollapse == true
this.resizesParentsOnCollapse == false
this.collapseXScale == 1.0
this.collapseYScale == 1.0
this.reconnectsEdgesToVisibleParent == false
this.listenerList has only one value
this.listenerList != null
this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.mapping has only one value
this.mapping != null
this.mapping.getClass().getName() == java.util.Hashtable.class
this.hiddenMapping has only one value
this.hiddenMapping != null
this.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
this.factory has only one value
this.factory != null
this.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
this.visibleSet has only one value
this.visibleSet != null
this.visibleSet.getClass().getName() == java.util.HashSet.class
this.roots != null
this.roots[] elements != null
this.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
this.roots.getClass().getName() == java.util.ArrayList.class
this.ports.getClass().getName() == org.jgraph.graph.PortView[].class
this.ports[] elements != null
this.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.ports[].lastParent elements != null
this.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.ports[].cell elements != null
this.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
this.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] }
this.ports[].parent elements != null
this.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.ports[].childViews elements != null
this.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
this.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] }
this.ports[].allAttributes elements != null
this.ports[].attributes elements != null
this.ports[].groupBounds elements == null
this.ports[].groupBounds.getClass().getName() elements == null
this.ports[].groupBounds.getClass().getName() one of { [], [null, null] }
this.partial == false
this.allAttributesLocal == false
this.localAttributes has only one value
this.localAttributes != null
this.localAttributes.getClass().getName() == java.util.HashSet.class
size(this.roots[]) one of { 0, 3 }
size(this.roots[])-1 != 0
size(this.ports[]) one of { 0, 2 }
size(this.ports[])-1 != 0
===========================================================================
org.jgraph.graph.GraphLayoutCache.GraphLayoutCache(org.jgraph.graph.GraphModel, org.jgraph.graph.CellViewFactory):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
===========================================================================
org.jgraph.graph.GraphLayoutCache.GraphLayoutCache(org.jgraph.graph.GraphModel, org.jgraph.graph.CellViewFactory):::EXIT
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.GraphLayoutCache(org.jgraph.graph.GraphModel, org.jgraph.graph.CellViewFactory, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg2 == false
===========================================================================
org.jgraph.graph.GraphLayoutCache.GraphLayoutCache(org.jgraph.graph.GraphModel, org.jgraph.graph.CellViewFactory, boolean):::EXIT
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.GraphLayoutCache(org.jgraph.graph.GraphModel, org.jgraph.graph.CellViewFactory, org.jgraph.graph.CellView[], org.jgraph.graph.CellView[], boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg2 == null
arg3 == null
arg4 == false
===========================================================================
org.jgraph.graph.GraphLayoutCache.GraphLayoutCache(org.jgraph.graph.GraphModel, org.jgraph.graph.CellViewFactory, org.jgraph.graph.CellView[], org.jgraph.graph.CellView[], boolean):::EXIT
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.addGraphLayoutCacheListener(org.jgraph.event.GraphLayoutCacheListener):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
===========================================================================
org.jgraph.graph.GraphLayoutCache.addGraphLayoutCacheListener(org.jgraph.event.GraphLayoutCacheListener):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.cellViewsChanged(org.jgraph.graph.CellView[]):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0.getClass().getName() == org.jgraph.graph.CellView[].class
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.cellViewsChanged(org.jgraph.graph.CellView[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.createLocalEdit(java.lang.Object[], java.util.Map, java.lang.Object[], java.lang.Object[]):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 5
arg1 has only one value
arg1.getClass().getName() == java.util.Hashtable.class
arg2 == null
arg3 == null
size(arg0[]) == 5
===========================================================================
org.jgraph.graph.GraphLayoutCache.createLocalEdit(java.lang.Object[], java.util.Map, java.lang.Object[], java.lang.Object[]):::EXIT2018
===========================================================================
org.jgraph.graph.GraphLayoutCache.createLocalEdit(java.lang.Object[], java.util.Map, java.lang.Object[], java.lang.Object[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0[] contains no nulls and has only one value, of length 5
return == null
===========================================================================
org.jgraph.graph.GraphLayoutCache.fireGraphLayoutCacheChanged(java.lang.Object, org.jgraph.event.GraphLayoutCacheEvent$GraphLayoutCacheChange):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.GraphLayoutCache.class
arg1.getClass().getName() == org.jgraph.graph.GraphLayoutCache$1.class
===========================================================================
org.jgraph.graph.GraphLayoutCache.fireGraphLayoutCacheChanged(java.lang.Object, org.jgraph.event.GraphLayoutCacheEvent$GraphLayoutCacheChange):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.getContext(org.jgraph.event.GraphModelEvent$GraphModelChange):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.GraphLayoutCache.getContext(org.jgraph.event.GraphModelEvent$GraphModelChange):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] == []
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object, boolean):::ENTER
this.graphModel has only one value
this.graphModel != null
this.ports != null
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object, boolean):::EXIT906
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return == null
orig(arg0) == null
orig(arg1) == true
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object, boolean):::EXIT921
orig(arg0) != null
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object, boolean):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
(orig(arg0) == null)  ==>  (orig(arg1) == true)
(orig(arg0) == null)  ==>  (return == null)
(orig(arg0) == null)  ==>  (this.ports has only one value)
(orig(arg0) == null)  ==>  (this.ports[] == [])
(orig(arg0) == null)  ==>  (this.ports[].allAttributes == [])
(orig(arg0) == null)  ==>  (this.ports[].attributes == [])
(orig(arg0) == null)  ==>  (this.ports[].cell == [])
(orig(arg0) == null)  ==>  (this.ports[].cell.getClass().getName() == [])
(orig(arg0) == null)  ==>  (this.ports[].childViews == [])
(orig(arg0) == null)  ==>  (this.ports[].childViews.getClass().getName() == [])
(orig(arg0) == null)  ==>  (this.ports[].getClass().getName() == [])
(orig(arg0) == null)  ==>  (this.ports[].groupBounds == [])
(orig(arg0) == null)  ==>  (this.ports[].groupBounds.getClass().getName() == [])
(orig(arg0) == null)  ==>  (this.ports[].lastParent == [])
(orig(arg0) == null)  ==>  (this.ports[].lastParent.getClass().getName() == [])
(orig(arg0) == null)  ==>  (this.ports[].parent == [])
(orig(arg0) == null)  ==>  (this.ports[].parent.getClass().getName() == [])
(orig(arg0) == null)  ==>  (this.roots has only one value)
(orig(arg0) == null)  ==>  (this.roots[] == [])
(orig(arg0) == null)  ==>  (this.roots[].getClass().getName() == [])
(this.ports[].groupBounds elements == null)  <==>  (orig(arg0) != null)
(this.ports[].groupBounds elements == null)  ==>  (size(this.ports[]) one of { 0, 2 })
(this.ports[].groupBounds elements == null)  ==>  (size(this.roots[]) one of { 0, 3 })
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class)
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] })
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class)
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] })
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class)
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] })
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].groupBounds.getClass().getName() elements == null)
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].groupBounds.getClass().getName() one of { [], [null, null] })
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class)
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] })
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class)
(this.ports[].groupBounds elements == null)  ==>  (this.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] })
(this.ports[].groupBounds elements == null)  ==>  (this.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] })
this.graphModel has only one value
this.graphModel != null
this.ports != null
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object[], boolean):::ENTER
this.graphModel has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0.getClass().getName() == java.lang.Object[].class
size(arg0[]) one of { 0, 5 }
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object[], boolean):::EXIT942
===========================================================================
org.jgraph.graph.GraphLayoutCache.getMapping(java.lang.Object[], boolean):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return.getClass().getName() == org.jgraph.graph.CellView[].class
size(return[]) one of { 0, 5 }
===========================================================================
org.jgraph.graph.GraphLayoutCache.getModel():::ENTER
this.graphModel has only one value
this.graphModel != null
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.getModel():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.graphModel != null
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return has only one value
return != null
return.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.graph.GraphLayoutCache.getRoots():::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.getRoots():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return.getClass().getName() == org.jgraph.graph.CellView[].class
return[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.getVisibleCells(java.lang.Object[]):::ENTER
this.graphModel has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.getVisibleCells(java.lang.Object[]):::EXIT585
===========================================================================
org.jgraph.graph.GraphLayoutCache.getVisibleCells(java.lang.Object[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
arg0[] == []
return.getClass().getName() == java.lang.Object[].class
return[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.graphChanged(org.jgraph.event.GraphModelEvent$GraphModelChange):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
===========================================================================
org.jgraph.graph.GraphLayoutCache.graphChanged(org.jgraph.event.GraphModelEvent$GraphModelChange):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] contains no nulls and has only one value, of length 2
this.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.ports[].lastParent contains no nulls and has only one value, of length 2
this.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].cell contains no nulls and has only one value, of length 2
this.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.ports[].parent contains no nulls and has only one value, of length 2
this.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].childViews contains no nulls and has only one value, of length 2
this.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.ports[].allAttributes contains no nulls and has only one value, of length 2
this.ports[].attributes contains no nulls and has only one value, of length 2
this.ports[].groupBounds contains only nulls and has only one value, of length 2
this.ports[].groupBounds.getClass().getName() == [null, null]
size(this.roots[]) == 3
size(this.ports[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.insert(java.lang.Object[]):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphCell[].class
arg0[] contains no nulls and has only one value, of length 3
size(arg0[]) == 3
===========================================================================
org.jgraph.graph.GraphLayoutCache.insert(java.lang.Object[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] contains no nulls and has only one value, of length 2
this.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.ports[].lastParent contains no nulls and has only one value, of length 2
this.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].cell contains no nulls and has only one value, of length 2
this.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.ports[].parent contains no nulls and has only one value, of length 2
this.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].childViews contains no nulls and has only one value, of length 2
this.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.ports[].allAttributes contains no nulls and has only one value, of length 2
this.ports[].attributes contains no nulls and has only one value, of length 2
this.ports[].groupBounds contains only nulls and has only one value, of length 2
this.ports[].groupBounds.getClass().getName() == [null, null]
arg0[] contains no nulls and has only one value, of length 3
size(this.roots[]) == 3
size(this.ports[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.insert(java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphCell[].class
arg0[] contains no nulls and has only one value, of length 3
arg1 has only one value
arg1.getClass().getName() == java.util.Hashtable.class
arg2 has only one value
arg2.connections has only one value
arg2.connections.getClass().getName() == java.util.HashSet.class
arg2.edges has only one value
arg2.edges.getClass().getName() == java.util.HashSet.class
arg3 has only one value
arg3.entries has only one value
arg3.entries[] == []
arg3.entries[].getClass().getName() == []
arg3.changedNodes has only one value
arg3.changedNodes.getClass().getName() == java.util.HashSet.class
arg3.childCount has only one value
arg3.childCount.getClass().getName() == java.util.Hashtable.class
size(arg0[]) == 3
===========================================================================
org.jgraph.graph.GraphLayoutCache.insert(java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg2.connections == orig(arg2.connections)
arg2.connections.getClass().getName() == orig(arg2.connections.getClass().getName())
arg2.edges == orig(arg2.edges)
arg2.edges.getClass().getName() == orig(arg2.edges.getClass().getName())
arg3.entries == orig(arg3.entries)
arg3.changedNodes == orig(arg3.changedNodes)
arg3.changedNodes.getClass().getName() == orig(arg3.changedNodes.getClass().getName())
arg3.childCount == orig(arg3.childCount)
arg3.childCount.getClass().getName() == orig(arg3.childCount.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] contains no nulls and has only one value, of length 2
this.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.ports[].lastParent contains no nulls and has only one value, of length 2
this.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].cell contains no nulls and has only one value, of length 2
this.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.ports[].parent contains no nulls and has only one value, of length 2
this.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].childViews contains no nulls and has only one value, of length 2
this.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.ports[].allAttributes contains no nulls and has only one value, of length 2
this.ports[].attributes contains no nulls and has only one value, of length 2
this.ports[].groupBounds contains only nulls and has only one value, of length 2
this.ports[].groupBounds.getClass().getName() == [null, null]
arg2.connections has only one value
arg2.connections.getClass().getName() == java.util.HashSet.class
arg2.edges has only one value
arg2.edges.getClass().getName() == java.util.HashSet.class
arg3.entries has only one value
arg3.entries[] contains no nulls and has only one value, of length 2
arg3.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg3.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg3.changedNodes has only one value
arg3.changedNodes.getClass().getName() == java.util.HashSet.class
arg3.childCount has only one value
arg3.childCount.getClass().getName() == java.util.Hashtable.class
size(this.roots[]) == 3
size(this.ports[]) == 2
size(arg3.entries[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.insert(java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap, javax.swing.undo.UndoableEdit[]):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 5
arg1 has only one value
arg1.getClass().getName() == java.util.Hashtable.class
arg2 has only one value
arg2.connections has only one value
arg2.connections.getClass().getName() == java.util.HashSet.class
arg2.edges has only one value
arg2.edges.getClass().getName() == java.util.HashSet.class
arg3 has only one value
arg3.entries has only one value
arg3.entries[] contains no nulls and has only one value, of length 2
arg3.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg3.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg3.changedNodes has only one value
arg3.changedNodes.getClass().getName() == java.util.HashSet.class
arg3.childCount has only one value
arg3.childCount.getClass().getName() == java.util.Hashtable.class
arg4 == null
size(arg0[]) == 5
size(arg3.entries[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.insert(java.lang.Object[], java.util.Map, org.jgraph.graph.ConnectionSet, org.jgraph.graph.ParentMap, javax.swing.undo.UndoableEdit[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
arg2.connections == orig(arg2.connections)
arg2.connections.getClass().getName() == orig(arg2.connections.getClass().getName())
arg2.edges == orig(arg2.edges)
arg2.edges.getClass().getName() == orig(arg2.edges.getClass().getName())
arg3.entries == orig(arg3.entries)
arg3.entries[] == orig(arg3.entries[])
arg3.changedNodes == orig(arg3.changedNodes)
arg3.changedNodes.getClass().getName() == orig(arg3.changedNodes.getClass().getName())
arg3.childCount == orig(arg3.childCount)
arg3.childCount.getClass().getName() == orig(arg3.childCount.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] contains no nulls and has only one value, of length 2
this.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.ports[].lastParent contains no nulls and has only one value, of length 2
this.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].cell contains no nulls and has only one value, of length 2
this.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.ports[].parent contains no nulls and has only one value, of length 2
this.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].childViews contains no nulls and has only one value, of length 2
this.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.ports[].allAttributes contains no nulls and has only one value, of length 2
this.ports[].attributes contains no nulls and has only one value, of length 2
this.ports[].groupBounds contains only nulls and has only one value, of length 2
this.ports[].groupBounds.getClass().getName() == [null, null]
arg0[] contains no nulls and has only one value, of length 5
arg2.connections has only one value
arg2.connections.getClass().getName() == java.util.HashSet.class
arg2.edges has only one value
arg2.edges.getClass().getName() == java.util.HashSet.class
arg3.entries has only one value
arg3.entries[] contains no nulls and has only one value, of length 2
arg3.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
arg3.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
arg3.changedNodes has only one value
arg3.changedNodes.getClass().getName() == java.util.HashSet.class
arg3.childCount has only one value
arg3.childCount.getClass().getName() == java.util.Hashtable.class
size(this.roots[]) == 3
size(this.ports[]) == 2
size(arg3.entries[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.insertViews(org.jgraph.graph.CellView[]):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports == null
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.CellView[].class
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.insertViews(org.jgraph.graph.CellView[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports == null
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.isAllAttributesLocal():::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.isAllAttributesLocal():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return == false
===========================================================================
org.jgraph.graph.GraphLayoutCache.isAllAttributesLocal():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphLayoutCache.isPartial():::ENTER
this.graphModel has only one value
===========================================================================
org.jgraph.graph.GraphLayoutCache.isPartial():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
return == false
===========================================================================
org.jgraph.graph.GraphLayoutCache.isPartial():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphLayoutCache.isSelectsAllInsertedCells():::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] contains no nulls and has only one value, of length 2
this.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.ports[].lastParent contains no nulls and has only one value, of length 2
this.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].cell contains no nulls and has only one value, of length 2
this.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.ports[].parent contains no nulls and has only one value, of length 2
this.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].childViews contains no nulls and has only one value, of length 2
this.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.ports[].allAttributes contains no nulls and has only one value, of length 2
this.ports[].attributes contains no nulls and has only one value, of length 2
this.ports[].groupBounds contains only nulls and has only one value, of length 2
this.ports[].groupBounds.getClass().getName() == [null, null]
size(this.roots[]) == 3
size(this.ports[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.isSelectsAllInsertedCells():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] contains no nulls and has only one value, of length 2
this.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.ports[].lastParent contains no nulls and has only one value, of length 2
this.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].cell contains no nulls and has only one value, of length 2
this.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.ports[].parent contains no nulls and has only one value, of length 2
this.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.ports[].childViews contains no nulls and has only one value, of length 2
this.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.ports[].allAttributes contains no nulls and has only one value, of length 2
this.ports[].attributes contains no nulls and has only one value, of length 2
this.ports[].groupBounds contains only nulls and has only one value, of length 2
this.ports[].groupBounds.getClass().getName() == [null, null]
return == false
size(this.roots[]) == 3
size(this.ports[]) == 2
===========================================================================
org.jgraph.graph.GraphLayoutCache.isSelectsAllInsertedCells():::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.GraphLayoutCache.isVisible(java.lang.Object):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.isVisible(java.lang.Object):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return == true
===========================================================================
org.jgraph.graph.GraphLayoutCache.isVisible(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.jgraph.graph.GraphLayoutCache.putMapping(java.lang.Object, org.jgraph.graph.CellView):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.putMapping(java.lang.Object, org.jgraph.graph.CellView):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.refresh(org.jgraph.graph.CellView[], boolean):::ENTER
this.graphModel has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0.getClass().getName() == org.jgraph.graph.CellView[].class
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.refresh(org.jgraph.graph.CellView[], boolean):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
arg0[] == orig(arg0[])
this.graphModel has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0[] == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.reloadRoots():::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.reloadRoots():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] contains no nulls and has only one value, of length 3
this.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
size(this.roots[]) == 3
===========================================================================
org.jgraph.graph.GraphLayoutCache.removeCells(java.lang.Object[]):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
arg0 == null
===========================================================================
org.jgraph.graph.GraphLayoutCache.removeCells(java.lang.Object[]):::EXIT879
===========================================================================
org.jgraph.graph.GraphLayoutCache.removeCells(java.lang.Object[]):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
return == null
===========================================================================
org.jgraph.graph.GraphLayoutCache.setModel(org.jgraph.graph.GraphModel):::ENTER
this.graphModel == null
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports == null
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.graph.GraphLayoutCache.setModel(org.jgraph.graph.GraphModel):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.update():::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.update():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].getClass().getName() == orig(this.ports[].getClass().getName())
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].lastParent.getClass().getName() == orig(this.ports[].lastParent.getClass().getName())
this.ports[].cell == orig(this.ports[].cell)
this.ports[].cell.getClass().getName() == orig(this.ports[].cell.getClass().getName())
this.ports[].parent == orig(this.ports[].parent)
this.ports[].parent.getClass().getName() == orig(this.ports[].parent.getClass().getName())
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].childViews.getClass().getName() == orig(this.ports[].childViews.getClass().getName())
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.ports[].groupBounds.getClass().getName() == orig(this.ports[].groupBounds.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
this.ports[] is the reverse of orig(this.ports[])
this.ports[].lastParent is the reverse of orig(this.ports[].lastParent)
this.ports[].cell is the reverse of orig(this.ports[].cell)
this.ports[].parent is the reverse of orig(this.ports[].parent)
this.ports[].childViews is the reverse of orig(this.ports[].childViews)
this.ports[].allAttributes is the reverse of orig(this.ports[].allAttributes)
this.ports[].attributes is the reverse of orig(this.ports[].attributes)
this.ports[].groupBounds is the reverse of orig(this.ports[].groupBounds)
===========================================================================
org.jgraph.graph.GraphLayoutCache.update(org.jgraph.graph.CellView):::ENTER
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.update(org.jgraph.graph.CellView):::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports == orig(this.ports)
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.ports[] == orig(this.ports[])
this.ports[].lastParent == orig(this.ports[].lastParent)
this.ports[].cell == orig(this.ports[].cell)
this.ports[].parent == orig(this.ports[].parent)
this.ports[].childViews == orig(this.ports[].childViews)
this.ports[].allAttributes == orig(this.ports[].allAttributes)
this.ports[].attributes == orig(this.ports[].attributes)
this.ports[].groupBounds == orig(this.ports[].groupBounds)
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
this.roots has only one value
this.roots[] == []
this.roots[].getClass().getName() == []
this.ports has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.updatePorts():::ENTER
this.graphModel has only one value
this.ports[] == []
this.ports[].getClass().getName() == []
this.ports[].lastParent == []
this.ports[].lastParent.getClass().getName() == []
this.ports[].cell == []
this.ports[].cell.getClass().getName() == []
this.ports[].parent == []
this.ports[].parent.getClass().getName() == []
this.ports[].childViews == []
this.ports[].childViews.getClass().getName() == []
this.ports[].allAttributes == []
this.ports[].attributes == []
this.ports[].groupBounds == []
this.ports[].groupBounds.getClass().getName() == []
===========================================================================
org.jgraph.graph.GraphLayoutCache.updatePorts():::EXIT
this.autoSizeOnValueChange == orig(this.autoSizeOnValueChange)
this.showsExistingConnections == orig(this.showsExistingConnections)
this.showsChangedConnections == orig(this.showsChangedConnections)
this.showsInvisibleEditedCells == orig(this.showsInvisibleEditedCells)
this.showsInsertedCells == orig(this.showsInsertedCells)
this.showsInsertedConnections == orig(this.showsInsertedConnections)
this.hidesExistingConnections == orig(this.hidesExistingConnections)
this.hidesDanglingConnections == orig(this.hidesDanglingConnections)
this.remembersCellViews == orig(this.remembersCellViews)
this.selectsAllInsertedCells == orig(this.selectsAllInsertedCells)
this.selectsLocalInsertedCells == orig(this.selectsLocalInsertedCells)
this.movesChildrenOnExpand == orig(this.movesChildrenOnExpand)
this.movesParentsOnCollapse == orig(this.movesParentsOnCollapse)
this.resizesParentsOnCollapse == orig(this.resizesParentsOnCollapse)
this.collapseXScale == orig(this.collapseXScale)
this.collapseYScale == orig(this.collapseYScale)
this.reconnectsEdgesToVisibleParent == orig(this.reconnectsEdgesToVisibleParent)
this.listenerList == orig(this.listenerList)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.mapping == orig(this.mapping)
this.mapping.getClass().getName() == orig(this.mapping.getClass().getName())
this.hiddenMapping == orig(this.hiddenMapping)
this.hiddenMapping.getClass().getName() == orig(this.hiddenMapping.getClass().getName())
this.factory == orig(this.factory)
this.factory.getClass().getName() == orig(this.factory.getClass().getName())
this.visibleSet == orig(this.visibleSet)
this.visibleSet.getClass().getName() == orig(this.visibleSet.getClass().getName())
this.roots == orig(this.roots)
this.roots[] == orig(this.roots[])
this.roots.getClass().getName() == orig(this.roots.getClass().getName())
this.ports.getClass().getName() == orig(this.ports.getClass().getName())
this.partial == orig(this.partial)
this.allAttributesLocal == orig(this.allAttributesLocal)
this.localAttributes == orig(this.localAttributes)
this.localAttributes.getClass().getName() == orig(this.localAttributes.getClass().getName())
this.graphModel has only one value
===========================================================================
org.jgraph.graph.GraphTransferHandler:::OBJECT
this has only one value
this.alwaysReceiveAsCopyAction == false
this.out == null
this.in == null
this.inCount == 0
===========================================================================
org.jgraph.graph.GraphTransferHandler.GraphTransferHandler():::EXIT
===========================================================================
org.jgraph.graph.ParentMap$Entry:::OBJECT
this.child != null
this.child.getClass().getName() == org.jgraph.graph.DefaultPort.class
this.parent != null
this.parent.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
org.jgraph.graph.ParentMap.this.entries != null
org.jgraph.graph.ParentMap.this.entries[] elements != null
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
org.jgraph.graph.ParentMap.this.changedNodes != null
org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName() == java.util.HashSet.class
org.jgraph.graph.ParentMap.this.childCount != null
org.jgraph.graph.ParentMap.this.childCount.getClass().getName() == java.util.Hashtable.class
size(org.jgraph.graph.ParentMap.this.entries[]) one of { 0, 1, 2 }
===========================================================================
org.jgraph.graph.ParentMap$Entry.Entry(org.jgraph.graph.ParentMap, java.lang.Object, java.lang.Object):::ENTER
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() one of { [], [org.jgraph.graph.ParentMap.Entry] }
org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName() == java.util.HashSet.class
org.jgraph.graph.ParentMap.this.childCount.getClass().getName() == java.util.Hashtable.class
arg1.getClass().getName() == org.jgraph.graph.DefaultPort.class
arg2.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
size(org.jgraph.graph.ParentMap.this.entries[]) one of { 0, 1 }
===========================================================================
org.jgraph.graph.ParentMap$Entry.Entry(org.jgraph.graph.ParentMap, java.lang.Object, java.lang.Object):::EXIT
org.jgraph.graph.ParentMap.this == orig(org.jgraph.graph.ParentMap.this)
org.jgraph.graph.ParentMap.this.entries == orig(org.jgraph.graph.ParentMap.this.entries)
org.jgraph.graph.ParentMap.this.entries[] == orig(org.jgraph.graph.ParentMap.this.entries[])
org.jgraph.graph.ParentMap.this.changedNodes == orig(org.jgraph.graph.ParentMap.this.changedNodes)
org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName() == orig(org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName())
org.jgraph.graph.ParentMap.this.childCount == orig(org.jgraph.graph.ParentMap.this.childCount)
org.jgraph.graph.ParentMap.this.childCount.getClass().getName() == orig(org.jgraph.graph.ParentMap.this.childCount.getClass().getName())
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() one of { [], [org.jgraph.graph.ParentMap.Entry] }
size(org.jgraph.graph.ParentMap.this.entries[]) one of { 0, 1 }
===========================================================================
org.jgraph.graph.ParentMap$Entry.getChild():::ENTER
org.jgraph.graph.ParentMap.this has only one value
org.jgraph.graph.ParentMap.this.entries has only one value
org.jgraph.graph.ParentMap.this.entries[] contains no nulls and has only one value, of length 2
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
org.jgraph.graph.ParentMap.this.changedNodes has only one value
org.jgraph.graph.ParentMap.this.childCount has only one value
size(org.jgraph.graph.ParentMap.this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap$Entry.getChild():::EXIT
this.child == orig(this.child)
this.child.getClass().getName() == orig(this.child.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
org.jgraph.graph.ParentMap.this == orig(org.jgraph.graph.ParentMap.this)
org.jgraph.graph.ParentMap.this.entries == orig(org.jgraph.graph.ParentMap.this.entries)
org.jgraph.graph.ParentMap.this.entries[] == orig(org.jgraph.graph.ParentMap.this.entries[])
org.jgraph.graph.ParentMap.this.changedNodes == orig(org.jgraph.graph.ParentMap.this.changedNodes)
org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName() == orig(org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName())
org.jgraph.graph.ParentMap.this.childCount == orig(org.jgraph.graph.ParentMap.this.childCount)
org.jgraph.graph.ParentMap.this.childCount.getClass().getName() == orig(org.jgraph.graph.ParentMap.this.childCount.getClass().getName())
org.jgraph.graph.ParentMap.this has only one value
org.jgraph.graph.ParentMap.this.entries has only one value
org.jgraph.graph.ParentMap.this.entries[] contains no nulls and has only one value, of length 2
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
org.jgraph.graph.ParentMap.this.changedNodes has only one value
org.jgraph.graph.ParentMap.this.childCount has only one value
return.getClass().getName() == org.jgraph.graph.DefaultPort.class
size(org.jgraph.graph.ParentMap.this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap$Entry.getParent():::ENTER
org.jgraph.graph.ParentMap.this has only one value
org.jgraph.graph.ParentMap.this.entries has only one value
org.jgraph.graph.ParentMap.this.entries[] contains no nulls and has only one value, of length 2
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
org.jgraph.graph.ParentMap.this.changedNodes has only one value
org.jgraph.graph.ParentMap.this.childCount has only one value
size(org.jgraph.graph.ParentMap.this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap$Entry.getParent():::EXIT
this.child == orig(this.child)
this.child.getClass().getName() == orig(this.child.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
org.jgraph.graph.ParentMap.this == orig(org.jgraph.graph.ParentMap.this)
org.jgraph.graph.ParentMap.this.entries == orig(org.jgraph.graph.ParentMap.this.entries)
org.jgraph.graph.ParentMap.this.entries[] == orig(org.jgraph.graph.ParentMap.this.entries[])
org.jgraph.graph.ParentMap.this.changedNodes == orig(org.jgraph.graph.ParentMap.this.changedNodes)
org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName() == orig(org.jgraph.graph.ParentMap.this.changedNodes.getClass().getName())
org.jgraph.graph.ParentMap.this.childCount == orig(org.jgraph.graph.ParentMap.this.childCount)
org.jgraph.graph.ParentMap.this.childCount.getClass().getName() == orig(org.jgraph.graph.ParentMap.this.childCount.getClass().getName())
org.jgraph.graph.ParentMap.this has only one value
org.jgraph.graph.ParentMap.this.entries has only one value
org.jgraph.graph.ParentMap.this.entries[] contains no nulls and has only one value, of length 2
org.jgraph.graph.ParentMap.this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
org.jgraph.graph.ParentMap.this.changedNodes has only one value
org.jgraph.graph.ParentMap.this.childCount has only one value
return.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
size(org.jgraph.graph.ParentMap.this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap:::OBJECT
this.entries != null
this.entries[] elements != null
this.entries[].getClass().getName() elements == org.jgraph.graph.ParentMap.Entry.class
this.changedNodes != null
this.changedNodes.getClass().getName() == java.util.HashSet.class
this.childCount != null
this.childCount.getClass().getName() == java.util.Hashtable.class
size(this.entries[]) one of { 0, 1, 2 }
===========================================================================
org.jgraph.graph.ParentMap.ParentMap():::EXIT
this.entries[] == []
this.entries[].getClass().getName() == []
===========================================================================
org.jgraph.graph.ParentMap.addEntry(java.lang.Object, java.lang.Object):::ENTER
this.entries[].getClass().getName() one of { [], [org.jgraph.graph.ParentMap.Entry] }
arg0.getClass().getName() == org.jgraph.graph.DefaultPort.class
arg1.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
size(this.entries[]) one of { 0, 1 }
===========================================================================
org.jgraph.graph.ParentMap.addEntry(java.lang.Object, java.lang.Object):::EXIT
this.entries == orig(this.entries)
this.changedNodes == orig(this.changedNodes)
this.changedNodes.getClass().getName() == orig(this.changedNodes.getClass().getName())
this.childCount == orig(this.childCount)
this.childCount.getClass().getName() == orig(this.childCount.getClass().getName())
size(this.entries[])-1 == orig(size(this.entries[]))
this.entries[].getClass().getName() one of { [org.jgraph.graph.ParentMap.Entry], [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry] }
size(this.entries[]) one of { 1, 2 }
===========================================================================
org.jgraph.graph.ParentMap.entries():::ENTER
this has only one value
this.entries has only one value
this.entries[] contains no nulls and has only one value, of length 2
this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
this.changedNodes has only one value
this.childCount has only one value
size(this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap.entries():::EXIT
this.entries == orig(this.entries)
this.entries[] == orig(this.entries[])
this.changedNodes == orig(this.changedNodes)
this.changedNodes.getClass().getName() == orig(this.changedNodes.getClass().getName())
this.childCount == orig(this.childCount)
this.childCount.getClass().getName() == orig(this.childCount.getClass().getName())
this.entries has only one value
this.entries[] contains no nulls and has only one value, of length 2
this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
this.changedNodes has only one value
this.childCount has only one value
return.getClass().getName() == java.util.ArrayList$Itr.class
size(this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap.getChangedNodes():::ENTER
this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
size(this.entries[]) == 2
===========================================================================
org.jgraph.graph.ParentMap.getChangedNodes():::EXIT
this.entries == orig(this.entries)
this.entries[] == orig(this.entries[])
this.changedNodes == orig(this.changedNodes)
this.changedNodes.getClass().getName() == orig(this.changedNodes.getClass().getName())
this.childCount == orig(this.childCount)
this.childCount.getClass().getName() == orig(this.childCount.getClass().getName())
this.entries[].getClass().getName() == [org.jgraph.graph.ParentMap.Entry, org.jgraph.graph.ParentMap.Entry]
return.getClass().getName() == java.util.HashSet.class
size(this.entries[]) == 2
===========================================================================
org.jgraph.graph.PortRenderer:::OBJECT
this has only one value
this.view == null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
this.hasFocus == false
this.selected == false
this.preview == false
this.xorEnabled == false
===========================================================================
org.jgraph.graph.PortRenderer.PortRenderer():::EXIT
this.graphBackground has only one value
===========================================================================
org.jgraph.graph.PortRenderer.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
arg0.toString one of { "background", "foreground", "locale" }
arg1 == null
===========================================================================
org.jgraph.graph.PortRenderer.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.graphBackground == orig(this.graphBackground)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.xorEnabled == orig(this.xorEnabled)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "background", "foreground", "locale" }
===========================================================================
org.jgraph.graph.PortRenderer.repaint(long, int, int, int, int):::ENTER
this.graphBackground has only one value
arg0 == 0
arg1 == 0
arg2 == 0
arg3 == 0
arg4 == 0
===========================================================================
org.jgraph.graph.PortRenderer.repaint(long, int, int, int, int):::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.graphBackground == orig(this.graphBackground)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.xorEnabled == orig(this.xorEnabled)
this.graphBackground has only one value
===========================================================================
org.jgraph.graph.PortView:::CLASS
org.jgraph.graph.PortView.SIZE == 6
org.jgraph.graph.PortView.renderer has only one value
org.jgraph.graph.PortView.renderer != null
org.jgraph.graph.PortView.renderer.view == null
org.jgraph.graph.PortView.allowPortMagic == true
org.jgraph.graph.PortView.renderer.graphBackground has only one value
org.jgraph.graph.PortView.renderer.graphBackground != null
org.jgraph.graph.PortView.renderer.hasFocus == false
org.jgraph.graph.PortView.renderer.selected == false
org.jgraph.graph.PortView.renderer.preview == false
org.jgraph.graph.PortView.renderer.xorEnabled == false
===========================================================================
org.jgraph.graph.PortView:::OBJECT
this.lastParent.getClass().getName() == org.jgraph.graph.VertexView.class
this.cell != null
this.cell.getClass().getName() == org.jgraph.graph.DefaultPort.class
this.parent.getClass().getName() == org.jgraph.graph.VertexView.class
this.childViews != null
this.childViews[] == []
this.childViews[].getClass().getName() == []
this.childViews.getClass().getName() == java.util.ArrayList.class
this.allAttributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.attributes != null
this.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.PortView.PortView(java.lang.Object):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultPort.class
===========================================================================
org.jgraph.graph.PortView.PortView(java.lang.Object):::EXIT
this.lastParent == null
this.parent == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.PortView.getBounds():::ENTER
this.groupBounds == null
===========================================================================
org.jgraph.graph.PortView.getBounds():::EXIT
org.jgraph.graph.PortView.SIZE == orig(org.jgraph.graph.PortView.SIZE)
org.jgraph.graph.PortView.renderer == orig(org.jgraph.graph.PortView.renderer)
org.jgraph.graph.PortView.renderer.view == orig(org.jgraph.graph.PortView.renderer.view)
org.jgraph.graph.PortView.allowPortMagic == orig(org.jgraph.graph.PortView.allowPortMagic)
org.jgraph.graph.PortView.renderer.graphBackground == orig(org.jgraph.graph.PortView.renderer.graphBackground)
org.jgraph.graph.PortView.renderer.hasFocus == orig(org.jgraph.graph.PortView.renderer.hasFocus)
org.jgraph.graph.PortView.renderer.selected == orig(org.jgraph.graph.PortView.renderer.selected)
org.jgraph.graph.PortView.renderer.preview == orig(org.jgraph.graph.PortView.renderer.preview)
org.jgraph.graph.PortView.renderer.xorEnabled == orig(org.jgraph.graph.PortView.renderer.xorEnabled)
this.lastParent == orig(this.lastParent)
this.lastParent.getClass().getName() == orig(this.lastParent.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds == null
return.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.PortView.getLocation():::ENTER
this.groupBounds == null
===========================================================================
org.jgraph.graph.PortView.getLocation():::EXIT
org.jgraph.graph.PortView.SIZE == orig(org.jgraph.graph.PortView.SIZE)
org.jgraph.graph.PortView.renderer == orig(org.jgraph.graph.PortView.renderer)
org.jgraph.graph.PortView.renderer.view == orig(org.jgraph.graph.PortView.renderer.view)
org.jgraph.graph.PortView.allowPortMagic == orig(org.jgraph.graph.PortView.allowPortMagic)
org.jgraph.graph.PortView.renderer.graphBackground == orig(org.jgraph.graph.PortView.renderer.graphBackground)
org.jgraph.graph.PortView.renderer.hasFocus == orig(org.jgraph.graph.PortView.renderer.hasFocus)
org.jgraph.graph.PortView.renderer.selected == orig(org.jgraph.graph.PortView.renderer.selected)
org.jgraph.graph.PortView.renderer.preview == orig(org.jgraph.graph.PortView.renderer.preview)
org.jgraph.graph.PortView.renderer.xorEnabled == orig(org.jgraph.graph.PortView.renderer.xorEnabled)
this.lastParent == orig(this.lastParent)
this.lastParent.getClass().getName() == orig(this.lastParent.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.PortView.getLocation(org.jgraph.graph.EdgeView, java.awt.geom.Point2D):::ENTER
this.groupBounds == null
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == sun.font.FontDesignMetrics.class
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco one of { 0, 1 }
org.jgraph.graph.EdgeView.renderer.beginSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.endSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.lineStyle one of { 0, 11 }
org.jgraph.graph.EdgeView.renderer.lineWidth one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
arg1.getClass().getName() == java.awt.geom.Point2D$Double.class
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.PortView.getLocation(org.jgraph.graph.EdgeView, java.awt.geom.Point2D):::EXIT188
===========================================================================
org.jgraph.graph.PortView.getLocation(org.jgraph.graph.EdgeView, java.awt.geom.Point2D):::EXIT
org.jgraph.graph.PortView.SIZE == orig(org.jgraph.graph.PortView.SIZE)
org.jgraph.graph.PortView.renderer == orig(org.jgraph.graph.PortView.renderer)
org.jgraph.graph.PortView.renderer.view == orig(org.jgraph.graph.PortView.renderer.view)
org.jgraph.graph.PortView.allowPortMagic == orig(org.jgraph.graph.PortView.allowPortMagic)
org.jgraph.graph.PortView.renderer.graphBackground == orig(org.jgraph.graph.PortView.renderer.graphBackground)
org.jgraph.graph.PortView.renderer.hasFocus == orig(org.jgraph.graph.PortView.renderer.hasFocus)
org.jgraph.graph.PortView.renderer.selected == orig(org.jgraph.graph.PortView.renderer.selected)
org.jgraph.graph.PortView.renderer.preview == orig(org.jgraph.graph.PortView.renderer.preview)
org.jgraph.graph.PortView.renderer.xorEnabled == orig(org.jgraph.graph.PortView.renderer.xorEnabled)
this.lastParent == orig(this.lastParent)
this.lastParent.getClass().getName() == orig(this.lastParent.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == orig(org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName())
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape == orig(arg0.endShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape == orig(arg0.lineShape)
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.sharedPath == orig(arg0.sharedPath)
arg0.cachedBounds == orig(arg0.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
this.groupBounds == null
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics.getClass().getName() == sun.font.FontDesignMetrics.class
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco one of { 0, 1 }
org.jgraph.graph.EdgeView.renderer.beginSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.endSize one of { 0, 10 }
org.jgraph.graph.EdgeView.renderer.lineStyle one of { 0, 11 }
org.jgraph.graph.EdgeView.renderer.lineWidth one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset one of { 0.0, 1.0 }
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.PortView.getParentView():::ENTER
this.parent != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.PortView.getParentView():::EXIT
org.jgraph.graph.PortView.SIZE == orig(org.jgraph.graph.PortView.SIZE)
org.jgraph.graph.PortView.renderer == orig(org.jgraph.graph.PortView.renderer)
org.jgraph.graph.PortView.renderer.view == orig(org.jgraph.graph.PortView.renderer.view)
org.jgraph.graph.PortView.allowPortMagic == orig(org.jgraph.graph.PortView.allowPortMagic)
org.jgraph.graph.PortView.renderer.graphBackground == orig(org.jgraph.graph.PortView.renderer.graphBackground)
org.jgraph.graph.PortView.renderer.hasFocus == orig(org.jgraph.graph.PortView.renderer.hasFocus)
org.jgraph.graph.PortView.renderer.selected == orig(org.jgraph.graph.PortView.renderer.selected)
org.jgraph.graph.PortView.renderer.preview == orig(org.jgraph.graph.PortView.renderer.preview)
org.jgraph.graph.PortView.renderer.xorEnabled == orig(org.jgraph.graph.PortView.renderer.xorEnabled)
this.lastParent.getClass().getName() == orig(this.lastParent.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.lastParent != null
this.parent != null
this.groupBounds == null
return != null
return.getClass().getName() == org.jgraph.graph.VertexView.class
===========================================================================
org.jgraph.graph.PortView.getPortSize():::ENTER
this.lastParent != null
this.parent != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.PortView.getPortSize():::EXIT
org.jgraph.graph.PortView.SIZE == orig(org.jgraph.graph.PortView.SIZE)
org.jgraph.graph.PortView.renderer == orig(org.jgraph.graph.PortView.renderer)
org.jgraph.graph.PortView.renderer.view == orig(org.jgraph.graph.PortView.renderer.view)
org.jgraph.graph.PortView.allowPortMagic == orig(org.jgraph.graph.PortView.allowPortMagic)
org.jgraph.graph.PortView.renderer.graphBackground == orig(org.jgraph.graph.PortView.renderer.graphBackground)
org.jgraph.graph.PortView.renderer.hasFocus == orig(org.jgraph.graph.PortView.renderer.hasFocus)
org.jgraph.graph.PortView.renderer.selected == orig(org.jgraph.graph.PortView.renderer.selected)
org.jgraph.graph.PortView.renderer.preview == orig(org.jgraph.graph.PortView.renderer.preview)
org.jgraph.graph.PortView.renderer.xorEnabled == orig(org.jgraph.graph.PortView.renderer.xorEnabled)
this.lastParent == orig(this.lastParent)
this.lastParent.getClass().getName() == orig(this.lastParent.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.lastParent != null
this.parent != null
this.groupBounds == null
return == 6
===========================================================================
org.jgraph.graph.PortView.shouldInvokePortMagic(org.jgraph.graph.EdgeView):::ENTER
this.groupBounds == null
arg0 has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.PortView.shouldInvokePortMagic(org.jgraph.graph.EdgeView):::EXIT
org.jgraph.graph.PortView.SIZE == orig(org.jgraph.graph.PortView.SIZE)
org.jgraph.graph.PortView.renderer == orig(org.jgraph.graph.PortView.renderer)
org.jgraph.graph.PortView.renderer.view == orig(org.jgraph.graph.PortView.renderer.view)
org.jgraph.graph.PortView.allowPortMagic == orig(org.jgraph.graph.PortView.allowPortMagic)
org.jgraph.graph.PortView.renderer.graphBackground == orig(org.jgraph.graph.PortView.renderer.graphBackground)
org.jgraph.graph.PortView.renderer.hasFocus == orig(org.jgraph.graph.PortView.renderer.hasFocus)
org.jgraph.graph.PortView.renderer.selected == orig(org.jgraph.graph.PortView.renderer.selected)
org.jgraph.graph.PortView.renderer.preview == orig(org.jgraph.graph.PortView.renderer.preview)
org.jgraph.graph.PortView.renderer.xorEnabled == orig(org.jgraph.graph.PortView.renderer.xorEnabled)
this.lastParent == orig(this.lastParent)
this.lastParent.getClass().getName() == orig(this.lastParent.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape == orig(arg0.endShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape == orig(arg0.lineShape)
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.sharedPath == orig(arg0.sharedPath)
arg0.cachedBounds == orig(arg0.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
this.groupBounds == null
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
return == false
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.PortView.shouldInvokePortMagic(org.jgraph.graph.EdgeView):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.graph.VertexRenderer:::OBJECT
this has only one value
this.view == null
org.jgraph.graph.VertexView.renderer has only one value
org.jgraph.graph.VertexView.renderer.view == null
org.jgraph.graph.VertexView.renderer.hasFocus == false
org.jgraph.graph.VertexView.renderer.selected == false
org.jgraph.graph.VertexView.renderer.preview == false
org.jgraph.graph.VertexView.renderer.childrenSelected == false
org.jgraph.graph.VertexView.renderer.defaultForeground has only one value
org.jgraph.graph.VertexView.renderer.defaultBackground has only one value
org.jgraph.graph.VertexView.renderer.bordercolor == null
org.jgraph.graph.VertexView.renderer.borderWidth == 0
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == false
org.jgraph.graph.VertexView.renderer.labelEnabled == false
org.jgraph.graph.VertexView.renderer.gradientColor == null
org.jgraph.graph.VertexView.renderer.gridColor has only one value
org.jgraph.graph.VertexView.renderer.highlightColor has only one value
org.jgraph.graph.VertexView.renderer.lockedHandleColor has only one value
org.jgraph.graph.VertexView.defaultBounds has only one value
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jgraph.graph.VertexView.defaultCursors has only one value
org.jgraph.graph.VertexView.defaultCursors[] == [6, 8, 7, 10, 11, 4, 9, 5]
org.jgraph.graph.VertexView.xCursors has only one value
org.jgraph.graph.VertexView.xCursors[] == [10, 0, 11, 10, 11, 10, 0, 11]
org.jgraph.graph.VertexView.xCursors[] elements one of { 0, 10, 11 }
org.jgraph.graph.VertexView.yCursors has only one value
org.jgraph.graph.VertexView.yCursors[] == [8, 8, 8, 0, 0, 9, 9, 9]
org.jgraph.graph.VertexView.yCursors[] elements one of { 0, 8, 9 }
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.hasFocus == false
this.selected == false
this.preview == false
this.childrenSelected == false
this.bordercolor == null
this.borderWidth == 0
this.isDoubleBuffered == false
this.labelEnabled == false
this.gradientColor == null
size(org.jgraph.graph.VertexView.defaultCursors[]) == 8
size(org.jgraph.graph.VertexView.xCursors[]) == 8
size(org.jgraph.graph.VertexView.yCursors[]) == 8
===========================================================================
org.jgraph.graph.VertexRenderer.VertexRenderer():::EXIT
this.defaultForeground has only one value
this.defaultBackground has only one value
this.gridColor has only one value
this.highlightColor has only one value
this.lockedHandleColor has only one value
===========================================================================
org.jgraph.graph.VertexRenderer.firePropertyChange(java.lang.String, boolean, boolean):::ENTER
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
arg0.toString one of { "inheritsPopupMenu", "opaque" }
arg1 == false
===========================================================================
org.jgraph.graph.VertexRenderer.firePropertyChange(java.lang.String, boolean, boolean):::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.childrenSelected == orig(this.childrenSelected)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.bordercolor == orig(this.bordercolor)
this.borderWidth == orig(this.borderWidth)
this.isDoubleBuffered == orig(this.isDoubleBuffered)
this.labelEnabled == orig(this.labelEnabled)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
arg0.toString == orig(arg0.toString)
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
arg0.toString one of { "inheritsPopupMenu", "opaque" }
===========================================================================
org.jgraph.graph.VertexRenderer.firePropertyChange(java.lang.String, int, int):::ENTER
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
arg0 has only one value
arg0.toString == "displayedMnemonicIndex"
arg1 == -1
arg2 == -1
===========================================================================
org.jgraph.graph.VertexRenderer.firePropertyChange(java.lang.String, int, int):::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.childrenSelected == orig(this.childrenSelected)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.bordercolor == orig(this.bordercolor)
this.borderWidth == orig(this.borderWidth)
this.isDoubleBuffered == orig(this.isDoubleBuffered)
this.labelEnabled == orig(this.labelEnabled)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
arg0.toString == orig(arg0.toString)
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
arg0.toString == "displayedMnemonicIndex"
===========================================================================
org.jgraph.graph.VertexRenderer.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
arg1.getClass().getName() == java.lang.String.class
===========================================================================
org.jgraph.graph.VertexRenderer.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.childrenSelected == orig(this.childrenSelected)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.bordercolor == orig(this.bordercolor)
this.borderWidth == orig(this.borderWidth)
this.isDoubleBuffered == orig(this.isDoubleBuffered)
this.labelEnabled == orig(this.labelEnabled)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
arg0.toString == orig(arg0.toString)
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
===========================================================================
org.jgraph.graph.VertexRenderer.getPerimeterPoint(org.jgraph.graph.VertexView, java.awt.geom.Point2D, java.awt.geom.Point2D):::ENTER
this.defaultForeground has only one value
this.defaultBackground has only one value
this.gridColor has only one value
this.highlightColor has only one value
this.lockedHandleColor has only one value
arg0.bounds.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
arg0.parent == null
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.groupBounds == null
arg1 == null
arg2.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.VertexRenderer.getPerimeterPoint(org.jgraph.graph.VertexView, java.awt.geom.Point2D, java.awt.geom.Point2D):::EXIT
this.view == orig(this.view)
org.jgraph.graph.VertexView.renderer == orig(org.jgraph.graph.VertexView.renderer)
org.jgraph.graph.VertexView.renderer.view == orig(org.jgraph.graph.VertexView.renderer.view)
org.jgraph.graph.VertexView.renderer.hasFocus == orig(org.jgraph.graph.VertexView.renderer.hasFocus)
org.jgraph.graph.VertexView.renderer.selected == orig(org.jgraph.graph.VertexView.renderer.selected)
org.jgraph.graph.VertexView.renderer.preview == orig(org.jgraph.graph.VertexView.renderer.preview)
org.jgraph.graph.VertexView.renderer.childrenSelected == orig(org.jgraph.graph.VertexView.renderer.childrenSelected)
org.jgraph.graph.VertexView.renderer.defaultForeground == orig(org.jgraph.graph.VertexView.renderer.defaultForeground)
org.jgraph.graph.VertexView.renderer.defaultBackground == orig(org.jgraph.graph.VertexView.renderer.defaultBackground)
org.jgraph.graph.VertexView.renderer.bordercolor == orig(org.jgraph.graph.VertexView.renderer.bordercolor)
org.jgraph.graph.VertexView.renderer.borderWidth == orig(org.jgraph.graph.VertexView.renderer.borderWidth)
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == orig(org.jgraph.graph.VertexView.renderer.isDoubleBuffered)
org.jgraph.graph.VertexView.renderer.labelEnabled == orig(org.jgraph.graph.VertexView.renderer.labelEnabled)
org.jgraph.graph.VertexView.renderer.gradientColor == orig(org.jgraph.graph.VertexView.renderer.gradientColor)
org.jgraph.graph.VertexView.renderer.gridColor == orig(org.jgraph.graph.VertexView.renderer.gridColor)
org.jgraph.graph.VertexView.renderer.highlightColor == orig(org.jgraph.graph.VertexView.renderer.highlightColor)
org.jgraph.graph.VertexView.renderer.lockedHandleColor == orig(org.jgraph.graph.VertexView.renderer.lockedHandleColor)
org.jgraph.graph.VertexView.defaultBounds == orig(org.jgraph.graph.VertexView.defaultBounds)
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == orig(org.jgraph.graph.VertexView.defaultBounds.getClass().getName())
org.jgraph.graph.VertexView.defaultCursors == orig(org.jgraph.graph.VertexView.defaultCursors)
org.jgraph.graph.VertexView.defaultCursors[] == orig(org.jgraph.graph.VertexView.defaultCursors[])
org.jgraph.graph.VertexView.xCursors == orig(org.jgraph.graph.VertexView.xCursors)
org.jgraph.graph.VertexView.xCursors[] == orig(org.jgraph.graph.VertexView.xCursors[])
org.jgraph.graph.VertexView.yCursors == orig(org.jgraph.graph.VertexView.yCursors)
org.jgraph.graph.VertexView.yCursors[] == orig(org.jgraph.graph.VertexView.yCursors[])
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.childrenSelected == orig(this.childrenSelected)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.bordercolor == orig(this.bordercolor)
this.borderWidth == orig(this.borderWidth)
this.isDoubleBuffered == orig(this.isDoubleBuffered)
this.labelEnabled == orig(this.labelEnabled)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
arg0.bounds == orig(arg0.bounds)
arg0.bounds.getClass().getName() == orig(arg0.bounds.getClass().getName())
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
this.defaultForeground has only one value
this.defaultBackground has only one value
this.gridColor has only one value
this.highlightColor has only one value
this.lockedHandleColor has only one value
arg0.bounds.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
arg0.parent == null
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
===========================================================================
org.jgraph.graph.VertexRenderer.repaint(long, int, int, int, int):::ENTER
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
arg0 == 0
arg1 == 0
arg2 == 0
arg3 == 0
arg4 == 0
===========================================================================
org.jgraph.graph.VertexRenderer.repaint(long, int, int, int, int):::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.childrenSelected == orig(this.childrenSelected)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.bordercolor == orig(this.bordercolor)
this.borderWidth == orig(this.borderWidth)
this.isDoubleBuffered == orig(this.isDoubleBuffered)
this.labelEnabled == orig(this.labelEnabled)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
===========================================================================
org.jgraph.graph.VertexRenderer.revalidate():::ENTER
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
===========================================================================
org.jgraph.graph.VertexRenderer.revalidate():::EXIT
this.view == orig(this.view)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.hasFocus == orig(this.hasFocus)
this.selected == orig(this.selected)
this.preview == orig(this.preview)
this.childrenSelected == orig(this.childrenSelected)
this.defaultForeground == orig(this.defaultForeground)
this.defaultBackground == orig(this.defaultBackground)
this.bordercolor == orig(this.bordercolor)
this.borderWidth == orig(this.borderWidth)
this.isDoubleBuffered == orig(this.isDoubleBuffered)
this.labelEnabled == orig(this.labelEnabled)
this.gradientColor == orig(this.gradientColor)
this.gridColor == orig(this.gridColor)
this.highlightColor == orig(this.highlightColor)
this.lockedHandleColor == orig(this.lockedHandleColor)
this.defaultForeground == null
this.defaultBackground == null
this.gridColor == null
this.highlightColor == null
this.lockedHandleColor == null
===========================================================================
org.jgraph.graph.VertexView:::CLASS
org.jgraph.graph.VertexView.renderer has only one value
org.jgraph.graph.VertexView.renderer != null
org.jgraph.graph.VertexView.renderer.view == null
org.jgraph.graph.VertexView.defaultBounds has only one value
org.jgraph.graph.VertexView.defaultBounds != null
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jgraph.graph.VertexView.defaultCursors has only one value
org.jgraph.graph.VertexView.defaultCursors != null
org.jgraph.graph.VertexView.defaultCursors[] == [6, 8, 7, 10, 11, 4, 9, 5]
org.jgraph.graph.VertexView.xCursors has only one value
org.jgraph.graph.VertexView.xCursors != null
org.jgraph.graph.VertexView.xCursors[] == [10, 0, 11, 10, 11, 10, 0, 11]
org.jgraph.graph.VertexView.xCursors[] elements one of { 0, 10, 11 }
org.jgraph.graph.VertexView.yCursors has only one value
org.jgraph.graph.VertexView.yCursors != null
org.jgraph.graph.VertexView.yCursors[] == [8, 8, 8, 0, 0, 9, 9, 9]
org.jgraph.graph.VertexView.yCursors[] elements one of { 0, 8, 9 }
org.jgraph.graph.VertexView.renderer.hasFocus == false
org.jgraph.graph.VertexView.renderer.selected == false
org.jgraph.graph.VertexView.renderer.preview == false
org.jgraph.graph.VertexView.renderer.childrenSelected == false
org.jgraph.graph.VertexView.renderer.defaultForeground has only one value
org.jgraph.graph.VertexView.renderer.defaultForeground != null
org.jgraph.graph.VertexView.renderer.defaultBackground has only one value
org.jgraph.graph.VertexView.renderer.defaultBackground != null
org.jgraph.graph.VertexView.renderer.bordercolor == null
org.jgraph.graph.VertexView.renderer.borderWidth == 0
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == false
org.jgraph.graph.VertexView.renderer.labelEnabled == false
org.jgraph.graph.VertexView.renderer.gradientColor == null
org.jgraph.graph.VertexView.renderer.gridColor has only one value
org.jgraph.graph.VertexView.renderer.gridColor != null
org.jgraph.graph.VertexView.renderer.highlightColor has only one value
org.jgraph.graph.VertexView.renderer.highlightColor != null
org.jgraph.graph.VertexView.renderer.lockedHandleColor has only one value
org.jgraph.graph.VertexView.renderer.lockedHandleColor != null
size(org.jgraph.graph.VertexView.defaultCursors[]) == 8
size(org.jgraph.graph.VertexView.xCursors[]) == 8
size(org.jgraph.graph.VertexView.yCursors[]) == 8
===========================================================================
org.jgraph.graph.VertexView:::OBJECT
this.bounds.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
this.cell != null
this.cell.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
this.parent == null
this.childViews != null
this.childViews[] == []
this.childViews[].getClass().getName() == []
this.childViews.getClass().getName() == java.util.ArrayList.class
this.allAttributes != null
org.jgraph.graph.AttributeMap.emptyAttributeMap has only one value
org.jgraph.graph.AttributeMap.emptyAttributeMap != null
this.attributes != null
this.groupBounds.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jgraph.graph.VertexView.VertexView(java.lang.Object):::ENTER
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphCell.class
===========================================================================
org.jgraph.graph.VertexView.VertexView(java.lang.Object):::EXIT
this.bounds == null
this.groupBounds has only one value
===========================================================================
org.jgraph.graph.VertexView.getBounds():::ENTER
this.bounds != null
this.groupBounds == null
===========================================================================
org.jgraph.graph.VertexView.getBounds():::EXIT
org.jgraph.graph.VertexView.renderer == orig(org.jgraph.graph.VertexView.renderer)
org.jgraph.graph.VertexView.renderer.view == orig(org.jgraph.graph.VertexView.renderer.view)
org.jgraph.graph.VertexView.defaultBounds == orig(org.jgraph.graph.VertexView.defaultBounds)
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == orig(org.jgraph.graph.VertexView.defaultBounds.getClass().getName())
org.jgraph.graph.VertexView.defaultCursors == orig(org.jgraph.graph.VertexView.defaultCursors)
org.jgraph.graph.VertexView.defaultCursors[] == orig(org.jgraph.graph.VertexView.defaultCursors[])
org.jgraph.graph.VertexView.xCursors == orig(org.jgraph.graph.VertexView.xCursors)
org.jgraph.graph.VertexView.xCursors[] == orig(org.jgraph.graph.VertexView.xCursors[])
org.jgraph.graph.VertexView.yCursors == orig(org.jgraph.graph.VertexView.yCursors)
org.jgraph.graph.VertexView.yCursors[] == orig(org.jgraph.graph.VertexView.yCursors[])
org.jgraph.graph.VertexView.renderer.hasFocus == orig(org.jgraph.graph.VertexView.renderer.hasFocus)
org.jgraph.graph.VertexView.renderer.selected == orig(org.jgraph.graph.VertexView.renderer.selected)
org.jgraph.graph.VertexView.renderer.preview == orig(org.jgraph.graph.VertexView.renderer.preview)
org.jgraph.graph.VertexView.renderer.childrenSelected == orig(org.jgraph.graph.VertexView.renderer.childrenSelected)
org.jgraph.graph.VertexView.renderer.defaultForeground == orig(org.jgraph.graph.VertexView.renderer.defaultForeground)
org.jgraph.graph.VertexView.renderer.defaultBackground == orig(org.jgraph.graph.VertexView.renderer.defaultBackground)
org.jgraph.graph.VertexView.renderer.bordercolor == orig(org.jgraph.graph.VertexView.renderer.bordercolor)
org.jgraph.graph.VertexView.renderer.borderWidth == orig(org.jgraph.graph.VertexView.renderer.borderWidth)
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == orig(org.jgraph.graph.VertexView.renderer.isDoubleBuffered)
org.jgraph.graph.VertexView.renderer.labelEnabled == orig(org.jgraph.graph.VertexView.renderer.labelEnabled)
org.jgraph.graph.VertexView.renderer.gradientColor == orig(org.jgraph.graph.VertexView.renderer.gradientColor)
org.jgraph.graph.VertexView.renderer.gridColor == orig(org.jgraph.graph.VertexView.renderer.gridColor)
org.jgraph.graph.VertexView.renderer.highlightColor == orig(org.jgraph.graph.VertexView.renderer.highlightColor)
org.jgraph.graph.VertexView.renderer.lockedHandleColor == orig(org.jgraph.graph.VertexView.renderer.lockedHandleColor)
this.bounds == orig(this.bounds)
this.bounds.getClass().getName() == orig(this.bounds.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.bounds != null
this.groupBounds == null
return != null
return.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
===========================================================================
org.jgraph.graph.VertexView.getPerimeterPoint(org.jgraph.graph.EdgeView, java.awt.geom.Point2D, java.awt.geom.Point2D):::ENTER
this.groupBounds == null
arg0 has only one value
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
arg1 == null
arg2.getClass().getName() == java.awt.geom.Point2D$Double.class
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.VertexView.getPerimeterPoint(org.jgraph.graph.EdgeView, java.awt.geom.Point2D, java.awt.geom.Point2D):::EXIT156
===========================================================================
org.jgraph.graph.VertexView.getPerimeterPoint(org.jgraph.graph.EdgeView, java.awt.geom.Point2D, java.awt.geom.Point2D):::EXIT
org.jgraph.graph.VertexView.renderer == orig(org.jgraph.graph.VertexView.renderer)
org.jgraph.graph.VertexView.renderer.view == orig(org.jgraph.graph.VertexView.renderer.view)
org.jgraph.graph.VertexView.defaultBounds == orig(org.jgraph.graph.VertexView.defaultBounds)
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == orig(org.jgraph.graph.VertexView.defaultBounds.getClass().getName())
org.jgraph.graph.VertexView.defaultCursors == orig(org.jgraph.graph.VertexView.defaultCursors)
org.jgraph.graph.VertexView.defaultCursors[] == orig(org.jgraph.graph.VertexView.defaultCursors[])
org.jgraph.graph.VertexView.xCursors == orig(org.jgraph.graph.VertexView.xCursors)
org.jgraph.graph.VertexView.xCursors[] == orig(org.jgraph.graph.VertexView.xCursors[])
org.jgraph.graph.VertexView.yCursors == orig(org.jgraph.graph.VertexView.yCursors)
org.jgraph.graph.VertexView.yCursors[] == orig(org.jgraph.graph.VertexView.yCursors[])
org.jgraph.graph.VertexView.renderer.hasFocus == orig(org.jgraph.graph.VertexView.renderer.hasFocus)
org.jgraph.graph.VertexView.renderer.selected == orig(org.jgraph.graph.VertexView.renderer.selected)
org.jgraph.graph.VertexView.renderer.preview == orig(org.jgraph.graph.VertexView.renderer.preview)
org.jgraph.graph.VertexView.renderer.childrenSelected == orig(org.jgraph.graph.VertexView.renderer.childrenSelected)
org.jgraph.graph.VertexView.renderer.defaultForeground == orig(org.jgraph.graph.VertexView.renderer.defaultForeground)
org.jgraph.graph.VertexView.renderer.defaultBackground == orig(org.jgraph.graph.VertexView.renderer.defaultBackground)
org.jgraph.graph.VertexView.renderer.bordercolor == orig(org.jgraph.graph.VertexView.renderer.bordercolor)
org.jgraph.graph.VertexView.renderer.borderWidth == orig(org.jgraph.graph.VertexView.renderer.borderWidth)
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == orig(org.jgraph.graph.VertexView.renderer.isDoubleBuffered)
org.jgraph.graph.VertexView.renderer.labelEnabled == orig(org.jgraph.graph.VertexView.renderer.labelEnabled)
org.jgraph.graph.VertexView.renderer.gradientColor == orig(org.jgraph.graph.VertexView.renderer.gradientColor)
org.jgraph.graph.VertexView.renderer.gridColor == orig(org.jgraph.graph.VertexView.renderer.gridColor)
org.jgraph.graph.VertexView.renderer.highlightColor == orig(org.jgraph.graph.VertexView.renderer.highlightColor)
org.jgraph.graph.VertexView.renderer.lockedHandleColor == orig(org.jgraph.graph.VertexView.renderer.lockedHandleColor)
this.bounds == orig(this.bounds)
this.bounds.getClass().getName() == orig(this.bounds.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
org.jgraph.graph.EdgeView.renderer == orig(org.jgraph.graph.EdgeView.renderer)
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == orig(org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT)
org.jgraph.graph.EdgeRenderer.fontGraphics == orig(org.jgraph.graph.EdgeRenderer.fontGraphics)
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == orig(org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName())
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == orig(org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER)
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == orig(org.jgraph.graph.EdgeView.renderer.simpleExtraLabels)
org.jgraph.graph.EdgeView.renderer.extraLabelFont == orig(org.jgraph.graph.EdgeView.renderer.extraLabelFont)
org.jgraph.graph.EdgeView.renderer.metrics == orig(org.jgraph.graph.EdgeView.renderer.metrics)
org.jgraph.graph.EdgeView.renderer.graph == orig(org.jgraph.graph.EdgeView.renderer.graph)
org.jgraph.graph.EdgeView.renderer.view == orig(org.jgraph.graph.EdgeView.renderer.view)
org.jgraph.graph.EdgeView.renderer.beginDeco == orig(org.jgraph.graph.EdgeView.renderer.beginDeco)
org.jgraph.graph.EdgeView.renderer.endDeco == orig(org.jgraph.graph.EdgeView.renderer.endDeco)
org.jgraph.graph.EdgeView.renderer.beginSize == orig(org.jgraph.graph.EdgeView.renderer.beginSize)
org.jgraph.graph.EdgeView.renderer.endSize == orig(org.jgraph.graph.EdgeView.renderer.endSize)
org.jgraph.graph.EdgeView.renderer.lineStyle == orig(org.jgraph.graph.EdgeView.renderer.lineStyle)
org.jgraph.graph.EdgeView.renderer.lineWidth == orig(org.jgraph.graph.EdgeView.renderer.lineWidth)
org.jgraph.graph.EdgeView.renderer.labelsEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelsEnabled)
org.jgraph.graph.EdgeView.renderer.labelBorder == orig(org.jgraph.graph.EdgeView.renderer.labelBorder)
org.jgraph.graph.EdgeView.renderer.beginFill == orig(org.jgraph.graph.EdgeView.renderer.beginFill)
org.jgraph.graph.EdgeView.renderer.endFill == orig(org.jgraph.graph.EdgeView.renderer.endFill)
org.jgraph.graph.EdgeView.renderer.focus == orig(org.jgraph.graph.EdgeView.renderer.focus)
org.jgraph.graph.EdgeView.renderer.selected == orig(org.jgraph.graph.EdgeView.renderer.selected)
org.jgraph.graph.EdgeView.renderer.preview == orig(org.jgraph.graph.EdgeView.renderer.preview)
org.jgraph.graph.EdgeView.renderer.opaque == orig(org.jgraph.graph.EdgeView.renderer.opaque)
org.jgraph.graph.EdgeView.renderer.childrenSelected == orig(org.jgraph.graph.EdgeView.renderer.childrenSelected)
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == orig(org.jgraph.graph.EdgeView.renderer.labelTransformEnabled)
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == orig(org.jgraph.graph.EdgeView.renderer.isMoveBelowZero)
org.jgraph.graph.EdgeView.renderer.borderColor == orig(org.jgraph.graph.EdgeView.renderer.borderColor)
org.jgraph.graph.EdgeView.renderer.defaultForeground == orig(org.jgraph.graph.EdgeView.renderer.defaultForeground)
org.jgraph.graph.EdgeView.renderer.defaultBackground == orig(org.jgraph.graph.EdgeView.renderer.defaultBackground)
org.jgraph.graph.EdgeView.renderer.fontColor == orig(org.jgraph.graph.EdgeView.renderer.fontColor)
org.jgraph.graph.EdgeView.renderer.lineDash == orig(org.jgraph.graph.EdgeView.renderer.lineDash)
org.jgraph.graph.EdgeView.renderer.dashOffset == orig(org.jgraph.graph.EdgeView.renderer.dashOffset)
org.jgraph.graph.EdgeView.renderer.gradientColor == orig(org.jgraph.graph.EdgeView.renderer.gradientColor)
org.jgraph.graph.EdgeView.renderer.gridColor == orig(org.jgraph.graph.EdgeView.renderer.gridColor)
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == orig(org.jgraph.graph.EdgeView.renderer.lockedHandleColor)
org.jgraph.graph.EdgeView.renderer.highlightColor == orig(org.jgraph.graph.EdgeView.renderer.highlightColor)
org.jgraph.graph.EdgeView.renderer.bezier == orig(org.jgraph.graph.EdgeView.renderer.bezier)
org.jgraph.graph.EdgeView.renderer.spline == orig(org.jgraph.graph.EdgeView.renderer.spline)
arg0.points == orig(arg0.points)
arg0.points[] == orig(arg0.points[])
arg0.points.getClass().getName() == orig(arg0.points.getClass().getName())
arg0.source == orig(arg0.source)
arg0.source.getClass().getName() == orig(arg0.source.getClass().getName())
arg0.target == orig(arg0.target)
arg0.target.getClass().getName() == orig(arg0.target.getClass().getName())
arg0.sourceParentView == orig(arg0.sourceParentView)
arg0.targetParentView == orig(arg0.targetParentView)
arg0.labelPosition == orig(arg0.labelPosition)
arg0.extraLabelPositions == orig(arg0.extraLabelPositions)
arg0.labelVector == orig(arg0.labelVector)
arg0.beginShape == orig(arg0.beginShape)
arg0.endShape == orig(arg0.endShape)
arg0.endShape.getClass().getName() == orig(arg0.endShape.getClass().getName())
arg0.lineShape == orig(arg0.lineShape)
arg0.lineShape.getClass().getName() == orig(arg0.lineShape.getClass().getName())
arg0.sharedPath == orig(arg0.sharedPath)
arg0.cachedBounds == orig(arg0.cachedBounds)
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == orig(org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE)
arg0.cell == orig(arg0.cell)
arg0.cell.getClass().getName() == orig(arg0.cell.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.childViews == orig(arg0.childViews)
arg0.childViews[] == orig(arg0.childViews[])
arg0.childViews.getClass().getName() == orig(arg0.childViews.getClass().getName())
arg0.allAttributes == orig(arg0.allAttributes)
arg0.attributes == orig(arg0.attributes)
arg0.groupBounds == orig(arg0.groupBounds)
this.groupBounds == null
org.jgraph.graph.EdgeView.renderer has only one value
org.jgraph.graph.EdgeRenderer.HIT_LABEL_EXACT == false
org.jgraph.graph.EdgeRenderer.fontGraphics has only one value
org.jgraph.graph.EdgeRenderer.fontGraphics.getClass().getName() == sun.java2d.SunGraphics2D.class
org.jgraph.graph.EdgeRenderer.LABELWIDTHBUFFER == 1.1
org.jgraph.graph.EdgeView.renderer.simpleExtraLabels == true
org.jgraph.graph.EdgeView.renderer.extraLabelFont == null
org.jgraph.graph.EdgeView.renderer.metrics == null
org.jgraph.graph.EdgeView.renderer.graph == null
org.jgraph.graph.EdgeView.renderer.view has only one value
org.jgraph.graph.EdgeView.renderer.beginDeco == 0
org.jgraph.graph.EdgeView.renderer.endDeco == 1
org.jgraph.graph.EdgeView.renderer.beginSize == 10
org.jgraph.graph.EdgeView.renderer.endSize == 10
org.jgraph.graph.EdgeView.renderer.lineStyle == 11
org.jgraph.graph.EdgeView.renderer.lineWidth == 1.0
org.jgraph.graph.EdgeView.renderer.labelsEnabled == true
org.jgraph.graph.EdgeView.renderer.labelBorder == false
org.jgraph.graph.EdgeView.renderer.beginFill == false
org.jgraph.graph.EdgeView.renderer.endFill == true
org.jgraph.graph.EdgeView.renderer.focus == false
org.jgraph.graph.EdgeView.renderer.selected == false
org.jgraph.graph.EdgeView.renderer.preview == false
org.jgraph.graph.EdgeView.renderer.opaque == false
org.jgraph.graph.EdgeView.renderer.childrenSelected == false
org.jgraph.graph.EdgeView.renderer.labelTransformEnabled == false
org.jgraph.graph.EdgeView.renderer.isMoveBelowZero == false
org.jgraph.graph.EdgeView.renderer.borderColor == null
org.jgraph.graph.EdgeView.renderer.defaultForeground has only one value
org.jgraph.graph.EdgeView.renderer.defaultBackground has only one value
org.jgraph.graph.EdgeView.renderer.fontColor has only one value
org.jgraph.graph.EdgeView.renderer.lineDash == null
org.jgraph.graph.EdgeView.renderer.dashOffset == 1.0
org.jgraph.graph.EdgeView.renderer.gradientColor == null
org.jgraph.graph.EdgeView.renderer.gridColor == null
org.jgraph.graph.EdgeView.renderer.lockedHandleColor == null
org.jgraph.graph.EdgeView.renderer.highlightColor == null
org.jgraph.graph.EdgeView.renderer.bezier == null
org.jgraph.graph.EdgeView.renderer.spline == null
arg0.points has only one value
arg0.points[] contains no nulls and has only one value, of length 2
arg0.points[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.points[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.points.getClass().getName() == java.util.ArrayList.class
arg0.source has only one value
arg0.source.getClass().getName() == org.jgraph.graph.PortView.class
arg0.target has only one value
arg0.target.getClass().getName() == org.jgraph.graph.PortView.class
arg0.sourceParentView == null
arg0.targetParentView == null
arg0.labelPosition == null
arg0.extraLabelPositions == null
arg0.labelVector == null
arg0.beginShape == null
arg0.endShape.getClass().getName() == java.awt.Polygon.class
arg0.lineShape.getClass().getName() == java.awt.geom.GeneralPath.class
arg0.cachedBounds == null
org.jgraph.graph.EdgeView.LEGACY_DISCONNECTABLE == true
arg0.cell has only one value
arg0.cell.getClass().getName() == org.jgraph.graph.DefaultEdge.class
arg0.parent == null
arg0.childViews has only one value
arg0.childViews[] == []
arg0.childViews[].getClass().getName() == []
arg0.childViews.getClass().getName() == java.util.ArrayList.class
arg0.allAttributes has only one value
arg0.attributes has only one value
arg0.groupBounds == null
return.getClass().getName() == java.awt.geom.Point2D$Double.class
size(arg0.points[]) == 2
===========================================================================
org.jgraph.graph.VertexView.getRenderer():::ENTER
this.groupBounds == null
===========================================================================
org.jgraph.graph.VertexView.getRenderer():::EXIT
org.jgraph.graph.VertexView.renderer == orig(org.jgraph.graph.VertexView.renderer)
org.jgraph.graph.VertexView.renderer.view == orig(org.jgraph.graph.VertexView.renderer.view)
org.jgraph.graph.VertexView.defaultBounds == orig(org.jgraph.graph.VertexView.defaultBounds)
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == orig(org.jgraph.graph.VertexView.defaultBounds.getClass().getName())
org.jgraph.graph.VertexView.defaultCursors == orig(org.jgraph.graph.VertexView.defaultCursors)
org.jgraph.graph.VertexView.defaultCursors[] == orig(org.jgraph.graph.VertexView.defaultCursors[])
org.jgraph.graph.VertexView.xCursors == orig(org.jgraph.graph.VertexView.xCursors)
org.jgraph.graph.VertexView.xCursors[] == orig(org.jgraph.graph.VertexView.xCursors[])
org.jgraph.graph.VertexView.yCursors == orig(org.jgraph.graph.VertexView.yCursors)
org.jgraph.graph.VertexView.yCursors[] == orig(org.jgraph.graph.VertexView.yCursors[])
org.jgraph.graph.VertexView.renderer.hasFocus == orig(org.jgraph.graph.VertexView.renderer.hasFocus)
org.jgraph.graph.VertexView.renderer.selected == orig(org.jgraph.graph.VertexView.renderer.selected)
org.jgraph.graph.VertexView.renderer.preview == orig(org.jgraph.graph.VertexView.renderer.preview)
org.jgraph.graph.VertexView.renderer.childrenSelected == orig(org.jgraph.graph.VertexView.renderer.childrenSelected)
org.jgraph.graph.VertexView.renderer.defaultForeground == orig(org.jgraph.graph.VertexView.renderer.defaultForeground)
org.jgraph.graph.VertexView.renderer.defaultBackground == orig(org.jgraph.graph.VertexView.renderer.defaultBackground)
org.jgraph.graph.VertexView.renderer.bordercolor == orig(org.jgraph.graph.VertexView.renderer.bordercolor)
org.jgraph.graph.VertexView.renderer.borderWidth == orig(org.jgraph.graph.VertexView.renderer.borderWidth)
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == orig(org.jgraph.graph.VertexView.renderer.isDoubleBuffered)
org.jgraph.graph.VertexView.renderer.labelEnabled == orig(org.jgraph.graph.VertexView.renderer.labelEnabled)
org.jgraph.graph.VertexView.renderer.gradientColor == orig(org.jgraph.graph.VertexView.renderer.gradientColor)
org.jgraph.graph.VertexView.renderer.gridColor == orig(org.jgraph.graph.VertexView.renderer.gridColor)
org.jgraph.graph.VertexView.renderer.highlightColor == orig(org.jgraph.graph.VertexView.renderer.highlightColor)
org.jgraph.graph.VertexView.renderer.lockedHandleColor == orig(org.jgraph.graph.VertexView.renderer.lockedHandleColor)
this.bounds == orig(this.bounds)
this.bounds.getClass().getName() == orig(this.bounds.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
this.groupBounds == orig(this.groupBounds)
this.groupBounds == null
return has only one value
return.getClass().getName() == org.jgraph.graph.VertexRenderer.class
===========================================================================
org.jgraph.graph.VertexView.update(org.jgraph.graph.GraphLayoutCache):::ENTER
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.graph.VertexView.update(org.jgraph.graph.GraphLayoutCache):::EXIT
org.jgraph.graph.VertexView.renderer == orig(org.jgraph.graph.VertexView.renderer)
org.jgraph.graph.VertexView.renderer.view == orig(org.jgraph.graph.VertexView.renderer.view)
org.jgraph.graph.VertexView.defaultBounds == orig(org.jgraph.graph.VertexView.defaultBounds)
org.jgraph.graph.VertexView.defaultBounds.getClass().getName() == orig(org.jgraph.graph.VertexView.defaultBounds.getClass().getName())
org.jgraph.graph.VertexView.defaultCursors == orig(org.jgraph.graph.VertexView.defaultCursors)
org.jgraph.graph.VertexView.defaultCursors[] == orig(org.jgraph.graph.VertexView.defaultCursors[])
org.jgraph.graph.VertexView.xCursors == orig(org.jgraph.graph.VertexView.xCursors)
org.jgraph.graph.VertexView.xCursors[] == orig(org.jgraph.graph.VertexView.xCursors[])
org.jgraph.graph.VertexView.yCursors == orig(org.jgraph.graph.VertexView.yCursors)
org.jgraph.graph.VertexView.yCursors[] == orig(org.jgraph.graph.VertexView.yCursors[])
org.jgraph.graph.VertexView.renderer.hasFocus == orig(org.jgraph.graph.VertexView.renderer.hasFocus)
org.jgraph.graph.VertexView.renderer.selected == orig(org.jgraph.graph.VertexView.renderer.selected)
org.jgraph.graph.VertexView.renderer.preview == orig(org.jgraph.graph.VertexView.renderer.preview)
org.jgraph.graph.VertexView.renderer.childrenSelected == orig(org.jgraph.graph.VertexView.renderer.childrenSelected)
org.jgraph.graph.VertexView.renderer.defaultForeground == orig(org.jgraph.graph.VertexView.renderer.defaultForeground)
org.jgraph.graph.VertexView.renderer.defaultBackground == orig(org.jgraph.graph.VertexView.renderer.defaultBackground)
org.jgraph.graph.VertexView.renderer.bordercolor == orig(org.jgraph.graph.VertexView.renderer.bordercolor)
org.jgraph.graph.VertexView.renderer.borderWidth == orig(org.jgraph.graph.VertexView.renderer.borderWidth)
org.jgraph.graph.VertexView.renderer.isDoubleBuffered == orig(org.jgraph.graph.VertexView.renderer.isDoubleBuffered)
org.jgraph.graph.VertexView.renderer.labelEnabled == orig(org.jgraph.graph.VertexView.renderer.labelEnabled)
org.jgraph.graph.VertexView.renderer.gradientColor == orig(org.jgraph.graph.VertexView.renderer.gradientColor)
org.jgraph.graph.VertexView.renderer.gridColor == orig(org.jgraph.graph.VertexView.renderer.gridColor)
org.jgraph.graph.VertexView.renderer.highlightColor == orig(org.jgraph.graph.VertexView.renderer.highlightColor)
org.jgraph.graph.VertexView.renderer.lockedHandleColor == orig(org.jgraph.graph.VertexView.renderer.lockedHandleColor)
this.bounds.getClass().getName() == orig(this.bounds.getClass().getName())
this.cell == orig(this.cell)
this.cell.getClass().getName() == orig(this.cell.getClass().getName())
this.parent == orig(this.parent)
this.childViews == orig(this.childViews)
this.childViews[] == orig(this.childViews[])
this.childViews.getClass().getName() == orig(this.childViews.getClass().getName())
this.allAttributes == orig(this.allAttributes)
org.jgraph.graph.AttributeMap.emptyAttributeMap == orig(org.jgraph.graph.AttributeMap.emptyAttributeMap)
this.attributes == orig(this.attributes)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
this.groupBounds == null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.plaf.GraphUI:::OBJECT
this has only one value
this.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI.class
===========================================================================
org.jgraph.plaf.GraphUI.GraphUI():::EXIT
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == null
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.CellEditorHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == null
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.CellEditorHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphCancelEditingAction:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphCancelEditingAction.GraphCancelEditingAction(org.jgraph.plaf.basic.BasicGraphUI, java.lang.String):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
arg1 has only one value
arg1.toString == "cancel"
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphCancelEditingAction.GraphCancelEditingAction(org.jgraph.plaf.basic.BasicGraphUI, java.lang.String):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
arg1.toString == orig(arg1.toString)
arg1.toString == "cancel"
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphEditAction:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphEditAction.GraphEditAction(org.jgraph.plaf.basic.BasicGraphUI, java.lang.String):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
arg1 has only one value
arg1.toString == "startEditing"
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphEditAction.GraphEditAction(org.jgraph.plaf.basic.BasicGraphUI, java.lang.String):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
arg1.toString == orig(arg1.toString)
arg1.toString == "startEditing"
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphIncrementAction:::OBJECT
this.direction >= 1
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphIncrementAction.GraphIncrementAction(org.jgraph.plaf.basic.BasicGraphUI, int, java.lang.String):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
arg1 >= 1
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphIncrementAction.GraphIncrementAction(org.jgraph.plaf.basic.BasicGraphUI, int, java.lang.String):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
arg2.toString == orig(arg2.toString)
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.GraphLayoutCacheHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.GraphLayoutCacheHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds elements == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() one of { [], [null, null] }
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[]) one of { 0, 3 }
size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[]) one of { 0, 2 }
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.GraphModelHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.GraphModelHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.graphChanged(org.jgraph.event.GraphModelEvent):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
arg0 has only one value
arg0.change has only one value
arg0.change.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.graphChanged(org.jgraph.event.GraphModelEvent):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
arg0.change == orig(arg0.change)
arg0.change.getClass().getName() == orig(arg0.change.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
arg0.change has only one value
arg0.change.getClass().getName() == org.jgraph.graph.DefaultGraphModel$GraphModelEdit.class
size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[]) == 3
size(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[]) == 2
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphSelectAllAction:::OBJECT
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphSelectAllAction.GraphSelectAllAction(org.jgraph.plaf.basic.BasicGraphUI, java.lang.String, boolean):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
arg1.toString one of { "clearSelection", "selectAll" }
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphSelectAllAction.GraphSelectAllAction(org.jgraph.plaf.basic.BasicGraphUI, java.lang.String, boolean):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
arg1.toString == orig(arg1.toString)
arg1.toString one of { "clearSelection", "selectAll" }
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.GraphSelectionHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.GraphSelectionHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$KeyHandler:::OBJECT
this has only one value
this.repeatKeyAction == null
this.isKeyDown == false
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.KeyHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.KeyHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$MouseHandler:::OBJECT
this has only one value
this.cell == null
this.handler == null
this.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.MouseHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.MouseHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler:::OBJECT
this has only one value
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.PropertyChangeHandler(org.jgraph.plaf.basic.BasicGraphUI):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this has only one value
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == 0.8
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == 300
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == 10.0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == 0
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == 2
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == 3
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == 4
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == 5
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == true
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == true
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == 1.0
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == null
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == true
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.handle == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == null
org.jgraph.plaf.basic.BasicGraphUI.this.focus == null
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == null
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == null
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == false
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == 0
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == false
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.PropertyChangeHandler(org.jgraph.plaf.basic.BasicGraphUI):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == false
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == false
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == null
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == null
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.propertyChange(java.beans.PropertyChangeEvent):::ENTER
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.propertyChange(java.beans.PropertyChangeEvent):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.this == orig(org.jgraph.plaf.basic.BasicGraphUI.this)
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredMinSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionRedirector)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenOffset)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offgraphics)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirty)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.wholeOffscreenDirtyProportion)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.offscreenBuffer)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.volatileOffscreen)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lastBufferAllocated)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundImage)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.backgroundScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.scale)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.antiAliased)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.groupsEditable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.selectionEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.previewInvalidNullPorts)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridMode)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsVisible)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsScaled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.portsOnTop)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBelowZero)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveBeyondGraphBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.edgeLabelsMovable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.autoResizeGraph)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.highlightColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.lockedHandleColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.marqueeColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridColor)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dragEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.dropEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.xorEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.editClickCount)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.enabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.gridEnabled)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.handleSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.tolerance)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.minimumMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isJumpToDefaultPort)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveIntoGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.isMoveOutOfGroups)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectOnMove)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.moveable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.cloneable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.sizeable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.bendable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.connectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.disconnectable)
org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graph.invokesStopCellEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.autoSizeOnValueChange)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsChangedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInvisibleEditedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.showsInsertedConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesExistingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hidesDanglingConnections)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.remembersCellViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsAllInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.selectsLocalInsertedCells)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesChildrenOnExpand)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.movesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.resizesParentsOnCollapse)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseXScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.collapseYScale)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.reconnectsEdgesToVisibleParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.listenerList)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.mapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.hiddenMapping.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.factory.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.visibleSet.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.roots.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[] == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[])
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].lastParent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].cell)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].parent)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].childViews)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].allAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].attributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.ports[].groupBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.partial)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.allAttributesLocal)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCache.localAttributes.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditor)
org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing == orig(org.jgraph.plaf.basic.BasicGraphUI.this.stopEditingInCompleteEditing)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane == orig(org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane)
org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.preferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.validCachedPreferredSize)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.handle == orig(org.jgraph.plaf.basic.BasicGraphUI.this.handle)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.previousCursor)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.marqueeBounds)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.startPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint == orig(org.jgraph.plaf.basic.BasicGraphUI.this.marquee.currentPoint)
org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingComponent)
org.jgraph.plaf.basic.BasicGraphUI.this.focus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.focus)
org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus == orig(org.jgraph.plaf.basic.BasicGraphUI.this.lastFocus)
org.jgraph.plaf.basic.BasicGraphUI.this.editingCell == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editingCell)
org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize == orig(org.jgraph.plaf.basic.BasicGraphUI.this.editorHasDifferentSize)
org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation == orig(org.jgraph.plaf.basic.BasicGraphUI.this.insertionLocation)
org.jgraph.plaf.basic.BasicGraphUI.this.dropAction == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropAction)
org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView == orig(org.jgraph.plaf.basic.BasicGraphUI.this.snapSelectedView)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener)
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener)
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener)
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.keyListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.componentListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.componentListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener)
org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.cellEditorListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener)
org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName() == orig(org.jgraph.plaf.basic.BasicGraphUI.this.graphLayoutCacheListener.getClass().getName())
org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultTransferHandler)
org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener == orig(org.jgraph.plaf.basic.BasicGraphUI.this.defaultDropTargetListener)
org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget == orig(org.jgraph.plaf.basic.BasicGraphUI.this.dropTarget)
org.jgraph.plaf.basic.BasicGraphUI.this.rendererPane has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionModel has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.propertyChangeListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.mouseListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.keyListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphSelectionListener has only one value
org.jgraph.plaf.basic.BasicGraphUI.this.graphModelListener has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI:::CLASS
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == true
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == 18
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == 0.05
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == 20
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == 20
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI:::OBJECT
this has only one value
this.preferredMinSize == null
this.graph.selectionRedirector == null
this.graph.graphModel has only one value
this.graph.graphModel != null
this.graph.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graph.graphLayoutCache has only one value
this.graph.graphLayoutCache != null
this.graph.graphLayoutCache.autoSizeOnValueChange == false
this.graph.graphLayoutCache.showsExistingConnections == true
this.graph.graphLayoutCache.showsChangedConnections == true
this.graph.graphLayoutCache.showsInvisibleEditedCells == false
this.graph.graphLayoutCache.showsInsertedCells == true
this.graph.graphLayoutCache.showsInsertedConnections == true
this.graph.graphLayoutCache.hidesExistingConnections == true
this.graph.graphLayoutCache.hidesDanglingConnections == false
this.graph.graphLayoutCache.remembersCellViews == true
this.graph.graphLayoutCache.selectsAllInsertedCells == false
this.graph.graphLayoutCache.selectsLocalInsertedCells == false
this.graph.graphLayoutCache.movesChildrenOnExpand == true
this.graph.graphLayoutCache.movesParentsOnCollapse == true
this.graph.graphLayoutCache.resizesParentsOnCollapse == false
this.graph.graphLayoutCache.collapseXScale == 1.0
this.graph.graphLayoutCache.collapseYScale == 1.0
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == false
this.graph.graphLayoutCache.listenerList has only one value
this.graph.graphLayoutCache.listenerList != null
this.graph.graphLayoutCache.graphModel has only one value
this.graph.graphLayoutCache.graphModel != null
this.graph.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graph.graphLayoutCache.mapping has only one value
this.graph.graphLayoutCache.mapping != null
this.graph.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
this.graph.graphLayoutCache.hiddenMapping has only one value
this.graph.graphLayoutCache.hiddenMapping != null
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
this.graph.graphLayoutCache.factory has only one value
this.graph.graphLayoutCache.factory != null
this.graph.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
this.graph.graphLayoutCache.visibleSet has only one value
this.graph.graphLayoutCache.visibleSet != null
this.graph.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
this.graph.graphLayoutCache.roots != null
this.graph.graphLayoutCache.roots[] elements != null
this.graph.graphLayoutCache.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
this.graph.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
this.graph.graphLayoutCache.ports != null
this.graph.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
this.graph.graphLayoutCache.ports[] elements != null
this.graph.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.graph.graphLayoutCache.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.graph.graphLayoutCache.ports[].lastParent elements != null
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graph.graphLayoutCache.ports[].cell elements != null
this.graph.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
this.graph.graphLayoutCache.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] }
this.graph.graphLayoutCache.ports[].parent elements != null
this.graph.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graph.graphLayoutCache.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graph.graphLayoutCache.ports[].childViews elements != null
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] }
this.graph.graphLayoutCache.ports[].allAttributes elements != null
this.graph.graphLayoutCache.ports[].attributes elements != null
this.graph.graphLayoutCache.ports[].groupBounds elements == null
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() one of { [], [null, null] }
this.graph.graphLayoutCache.partial == false
this.graph.graphLayoutCache.allAttributesLocal == false
this.graph.graphLayoutCache.localAttributes has only one value
this.graph.graphLayoutCache.localAttributes != null
this.graph.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
this.graph.selectionModel has only one value
this.graph.selectionModel != null
this.graph.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
this.graph.marquee has only one value
this.graph.marquee != null
this.graph.marquee.previousCursor == null
this.graph.marquee.marqueeBounds == null
this.graph.marquee.startPoint == null
this.graph.marquee.currentPoint == null
this.graph.offscreen == null
this.graph.offscreenBounds == null
this.graph.offscreenOffset == null
this.graph.offgraphics == null
this.graph.offscreenDirty.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.graph.wholeOffscreenDirty == false
this.graph.wholeOffscreenDirtyProportion == 0.8
this.graph.offscreenBuffer == 300
this.graph.volatileOffscreen == false
this.graph.lastBufferAllocated == true
this.graph.backgroundImage == null
this.graph.backgroundComponent == null
this.graph.backgroundScaled == true
this.graph.scale == 1.0
this.graph.antiAliased == false
this.graph.editable == true
this.graph.groupsEditable == false
this.graph.selectionEnabled == true
this.graph.previewInvalidNullPorts == true
this.graph.gridVisible == false
this.graph.gridSize == 10.0
this.graph.gridMode == 0
this.graph.portsVisible == false
this.graph.portsScaled == true
this.graph.portsOnTop == true
this.graph.moveBelowZero == false
this.graph.moveBeyondGraphBounds == true
this.graph.edgeLabelsMovable == true
this.graph.autoResizeGraph == true
this.graph.highlightColor has only one value
this.graph.highlightColor != null
this.graph.dragEnabled == false
this.graph.dropEnabled == true
this.graph.xorEnabled == true
this.graph.editClickCount == 2
this.graph.enabled == true
this.graph.gridEnabled == false
this.graph.handleSize == 3
this.graph.tolerance == 4
this.graph.minimumMove == 5
this.graph.isMoveIntoGroups == false
this.graph.isMoveOutOfGroups == false
this.graph.disconnectOnMove == false
this.graph.moveable == true
this.graph.sizeable == true
this.graph.bendable == true
this.graph.connectable == true
this.graph.disconnectable == true
this.graphLayoutCache.autoSizeOnValueChange == false
this.graphLayoutCache.showsExistingConnections == true
this.graphLayoutCache.showsChangedConnections == true
this.graphLayoutCache.showsInvisibleEditedCells == false
this.graphLayoutCache.showsInsertedCells == true
this.graphLayoutCache.showsInsertedConnections == true
this.graphLayoutCache.hidesExistingConnections == true
this.graphLayoutCache.hidesDanglingConnections == false
this.graphLayoutCache.remembersCellViews == true
this.graphLayoutCache.selectsAllInsertedCells == false
this.graphLayoutCache.selectsLocalInsertedCells == false
this.graphLayoutCache.movesChildrenOnExpand == true
this.graphLayoutCache.movesParentsOnCollapse == true
this.graphLayoutCache.resizesParentsOnCollapse == false
this.graphLayoutCache.collapseXScale == 1.0
this.graphLayoutCache.collapseYScale == 1.0
this.graphLayoutCache.reconnectsEdgesToVisibleParent == false
this.graphLayoutCache.listenerList has only one value
this.graphLayoutCache.listenerList != null
this.graphLayoutCache.graphModel has only one value
this.graphLayoutCache.graphModel != null
this.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graphLayoutCache.mapping has only one value
this.graphLayoutCache.mapping != null
this.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
this.graphLayoutCache.hiddenMapping has only one value
this.graphLayoutCache.hiddenMapping != null
this.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
this.graphLayoutCache.factory has only one value
this.graphLayoutCache.factory != null
this.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
this.graphLayoutCache.visibleSet has only one value
this.graphLayoutCache.visibleSet != null
this.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
this.graphLayoutCache.roots != null
this.graphLayoutCache.roots[] elements != null
this.graphLayoutCache.roots[].getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView] }
this.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
this.graphLayoutCache.ports != null
this.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
this.graphLayoutCache.ports[] elements != null
this.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
this.graphLayoutCache.ports[].getClass().getName() one of { [], [org.jgraph.graph.PortView, org.jgraph.graph.PortView] }
this.graphLayoutCache.ports[].lastParent elements != null
this.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graphLayoutCache.ports[].lastParent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graphLayoutCache.ports[].cell elements != null
this.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
this.graphLayoutCache.ports[].cell.getClass().getName() one of { [], [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort] }
this.graphLayoutCache.ports[].parent elements != null
this.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
this.graphLayoutCache.ports[].parent.getClass().getName() one of { [], [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView] }
this.graphLayoutCache.ports[].childViews elements != null
this.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
this.graphLayoutCache.ports[].childViews.getClass().getName() one of { [], [java.util.ArrayList, java.util.ArrayList] }
this.graphLayoutCache.ports[].allAttributes elements != null
this.graphLayoutCache.ports[].attributes elements != null
this.graphLayoutCache.ports[].groupBounds elements == null
this.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
this.graphLayoutCache.ports[].groupBounds.getClass().getName() one of { [], [null, null] }
this.graphLayoutCache.partial == false
this.graphLayoutCache.allAttributesLocal == false
this.graphLayoutCache.localAttributes has only one value
this.graphLayoutCache.localAttributes != null
this.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
this.cellEditor == null
this.validCachedPreferredSize == false
this.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
this.graphSelectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
this.handle == null
this.marquee.previousCursor == null
this.marquee.marqueeBounds == null
this.marquee.startPoint == null
this.marquee.currentPoint == null
this.editingComponent == null
this.focus == null
this.lastFocus == null
this.editingCell == null
this.editorHasDifferentSize == false
this.insertionLocation == null
this.dropAction == 0
this.snapSelectedView == false
this.propertyChangeListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
this.mouseListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
this.keyListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
this.componentListener == null
this.cellEditorListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
this.graphSelectionListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
this.graphModelListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
this.graphLayoutCacheListener.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
this.defaultDropTargetListener == null
this.dropTarget == null
size(this.graph.graphLayoutCache.roots[]) one of { 0, 3 }
size(this.graph.graphLayoutCache.roots[])-1 != 0
size(this.graph.graphLayoutCache.ports[]) one of { 0, 2 }
size(this.graph.graphLayoutCache.ports[])-1 != 0
size(this.graphLayoutCache.roots[]) one of { 0, 3 }
size(this.graphLayoutCache.roots[])-1 != 0
size(this.graphLayoutCache.ports[]) one of { 0, 2 }
size(this.graphLayoutCache.ports[])-1 != 0
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.BasicGraphUI():::EXIT
this.graph == null
this.graphLayoutCache == null
this.stopEditingInCompleteEditing == false
this.rendererPane == null
this.preferredSize == null
this.graphModel == null
this.graphSelectionModel == null
this.marquee == null
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.cancelEditing(org.jgraph.JGraph):::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.preferredSize has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.cellEditorListener has only one value
arg0 has only one value
arg0.selectionRedirector == null
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache has only one value
arg0.graphLayoutCache.autoSizeOnValueChange == false
arg0.graphLayoutCache.showsExistingConnections == true
arg0.graphLayoutCache.showsChangedConnections == true
arg0.graphLayoutCache.showsInvisibleEditedCells == false
arg0.graphLayoutCache.showsInsertedCells == true
arg0.graphLayoutCache.showsInsertedConnections == true
arg0.graphLayoutCache.hidesExistingConnections == true
arg0.graphLayoutCache.hidesDanglingConnections == false
arg0.graphLayoutCache.remembersCellViews == true
arg0.graphLayoutCache.selectsAllInsertedCells == false
arg0.graphLayoutCache.selectsLocalInsertedCells == false
arg0.graphLayoutCache.movesChildrenOnExpand == true
arg0.graphLayoutCache.movesParentsOnCollapse == true
arg0.graphLayoutCache.resizesParentsOnCollapse == false
arg0.graphLayoutCache.collapseXScale == 1.0
arg0.graphLayoutCache.collapseYScale == 1.0
arg0.graphLayoutCache.reconnectsEdgesToVisibleParent == false
arg0.graphLayoutCache.listenerList has only one value
arg0.graphLayoutCache.graphModel has only one value
arg0.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache.mapping has only one value
arg0.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
arg0.graphLayoutCache.hiddenMapping has only one value
arg0.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.graphLayoutCache.factory has only one value
arg0.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.graphLayoutCache.visibleSet has only one value
arg0.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.graphLayoutCache.roots has only one value
arg0.graphLayoutCache.roots[] == []
arg0.graphLayoutCache.roots[].getClass().getName() == []
arg0.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
arg0.graphLayoutCache.ports has only one value
arg0.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.graphLayoutCache.ports[] == []
arg0.graphLayoutCache.ports[].getClass().getName() == []
arg0.graphLayoutCache.ports[].lastParent == []
arg0.graphLayoutCache.ports[].lastParent.getClass().getName() == []
arg0.graphLayoutCache.ports[].cell == []
arg0.graphLayoutCache.ports[].cell.getClass().getName() == []
arg0.graphLayoutCache.ports[].parent == []
arg0.graphLayoutCache.ports[].parent.getClass().getName() == []
arg0.graphLayoutCache.ports[].childViews == []
arg0.graphLayoutCache.ports[].childViews.getClass().getName() == []
arg0.graphLayoutCache.ports[].allAttributes == []
arg0.graphLayoutCache.ports[].attributes == []
arg0.graphLayoutCache.ports[].groupBounds == []
arg0.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
arg0.graphLayoutCache.partial == false
arg0.graphLayoutCache.allAttributesLocal == false
arg0.graphLayoutCache.localAttributes has only one value
arg0.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
arg0.selectionModel has only one value
arg0.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
arg0.marquee has only one value
arg0.marquee.previousCursor == null
arg0.marquee.marqueeBounds == null
arg0.marquee.startPoint == null
arg0.marquee.currentPoint == null
arg0.offscreen == null
arg0.offscreenBounds == null
arg0.offscreenOffset == null
arg0.offgraphics == null
arg0.offscreenDirty == null
arg0.wholeOffscreenDirty == false
arg0.wholeOffscreenDirtyProportion == 0.8
arg0.offscreenBuffer == 300
arg0.volatileOffscreen == false
arg0.lastBufferAllocated == true
arg0.backgroundImage == null
arg0.backgroundComponent == null
arg0.backgroundScaled == true
arg0.scale == 1.0
arg0.antiAliased == false
arg0.editable == true
arg0.groupsEditable == false
arg0.selectionEnabled == true
arg0.previewInvalidNullPorts == true
arg0.gridVisible == false
arg0.gridSize == 10.0
arg0.gridMode == 0
arg0.portsVisible == false
arg0.portsScaled == true
arg0.portsOnTop == true
arg0.moveBelowZero == false
arg0.moveBeyondGraphBounds == true
arg0.edgeLabelsMovable == true
arg0.autoResizeGraph == true
arg0.highlightColor has only one value
arg0.dragEnabled == false
arg0.dropEnabled == true
arg0.xorEnabled == true
arg0.editClickCount == 2
arg0.enabled == true
arg0.gridEnabled == false
arg0.handleSize == 3
arg0.tolerance == 4
arg0.minimumMove == 5
arg0.isJumpToDefaultPort == false
arg0.isMoveIntoGroups == false
arg0.isMoveOutOfGroups == false
arg0.disconnectOnMove == false
arg0.moveable == true
arg0.cloneable == false
arg0.sizeable == true
arg0.bendable == true
arg0.connectable == true
arg0.disconnectable == true
arg0.invokesStopCellEditing == false
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.cancelEditing(org.jgraph.JGraph):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
arg0.selectionRedirector == orig(arg0.selectionRedirector)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.graphLayoutCache == orig(arg0.graphLayoutCache)
arg0.graphLayoutCache.autoSizeOnValueChange == orig(arg0.graphLayoutCache.autoSizeOnValueChange)
arg0.graphLayoutCache.showsExistingConnections == orig(arg0.graphLayoutCache.showsExistingConnections)
arg0.graphLayoutCache.showsChangedConnections == orig(arg0.graphLayoutCache.showsChangedConnections)
arg0.graphLayoutCache.showsInvisibleEditedCells == orig(arg0.graphLayoutCache.showsInvisibleEditedCells)
arg0.graphLayoutCache.showsInsertedCells == orig(arg0.graphLayoutCache.showsInsertedCells)
arg0.graphLayoutCache.showsInsertedConnections == orig(arg0.graphLayoutCache.showsInsertedConnections)
arg0.graphLayoutCache.hidesExistingConnections == orig(arg0.graphLayoutCache.hidesExistingConnections)
arg0.graphLayoutCache.hidesDanglingConnections == orig(arg0.graphLayoutCache.hidesDanglingConnections)
arg0.graphLayoutCache.remembersCellViews == orig(arg0.graphLayoutCache.remembersCellViews)
arg0.graphLayoutCache.selectsAllInsertedCells == orig(arg0.graphLayoutCache.selectsAllInsertedCells)
arg0.graphLayoutCache.selectsLocalInsertedCells == orig(arg0.graphLayoutCache.selectsLocalInsertedCells)
arg0.graphLayoutCache.movesChildrenOnExpand == orig(arg0.graphLayoutCache.movesChildrenOnExpand)
arg0.graphLayoutCache.movesParentsOnCollapse == orig(arg0.graphLayoutCache.movesParentsOnCollapse)
arg0.graphLayoutCache.resizesParentsOnCollapse == orig(arg0.graphLayoutCache.resizesParentsOnCollapse)
arg0.graphLayoutCache.collapseXScale == orig(arg0.graphLayoutCache.collapseXScale)
arg0.graphLayoutCache.collapseYScale == orig(arg0.graphLayoutCache.collapseYScale)
arg0.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(arg0.graphLayoutCache.reconnectsEdgesToVisibleParent)
arg0.graphLayoutCache.listenerList == orig(arg0.graphLayoutCache.listenerList)
arg0.graphLayoutCache.graphModel == orig(arg0.graphLayoutCache.graphModel)
arg0.graphLayoutCache.graphModel.getClass().getName() == orig(arg0.graphLayoutCache.graphModel.getClass().getName())
arg0.graphLayoutCache.mapping == orig(arg0.graphLayoutCache.mapping)
arg0.graphLayoutCache.mapping.getClass().getName() == orig(arg0.graphLayoutCache.mapping.getClass().getName())
arg0.graphLayoutCache.hiddenMapping == orig(arg0.graphLayoutCache.hiddenMapping)
arg0.graphLayoutCache.hiddenMapping.getClass().getName() == orig(arg0.graphLayoutCache.hiddenMapping.getClass().getName())
arg0.graphLayoutCache.factory == orig(arg0.graphLayoutCache.factory)
arg0.graphLayoutCache.factory.getClass().getName() == orig(arg0.graphLayoutCache.factory.getClass().getName())
arg0.graphLayoutCache.visibleSet == orig(arg0.graphLayoutCache.visibleSet)
arg0.graphLayoutCache.visibleSet.getClass().getName() == orig(arg0.graphLayoutCache.visibleSet.getClass().getName())
arg0.graphLayoutCache.roots == orig(arg0.graphLayoutCache.roots)
arg0.graphLayoutCache.roots[] == orig(arg0.graphLayoutCache.roots[])
arg0.graphLayoutCache.roots.getClass().getName() == orig(arg0.graphLayoutCache.roots.getClass().getName())
arg0.graphLayoutCache.ports == orig(arg0.graphLayoutCache.ports)
arg0.graphLayoutCache.ports.getClass().getName() == orig(arg0.graphLayoutCache.ports.getClass().getName())
arg0.graphLayoutCache.ports[] == orig(arg0.graphLayoutCache.ports[])
arg0.graphLayoutCache.ports[].lastParent == orig(arg0.graphLayoutCache.ports[].lastParent)
arg0.graphLayoutCache.ports[].cell == orig(arg0.graphLayoutCache.ports[].cell)
arg0.graphLayoutCache.ports[].parent == orig(arg0.graphLayoutCache.ports[].parent)
arg0.graphLayoutCache.ports[].childViews == orig(arg0.graphLayoutCache.ports[].childViews)
arg0.graphLayoutCache.ports[].allAttributes == orig(arg0.graphLayoutCache.ports[].allAttributes)
arg0.graphLayoutCache.ports[].attributes == orig(arg0.graphLayoutCache.ports[].attributes)
arg0.graphLayoutCache.ports[].groupBounds == orig(arg0.graphLayoutCache.ports[].groupBounds)
arg0.graphLayoutCache.partial == orig(arg0.graphLayoutCache.partial)
arg0.graphLayoutCache.allAttributesLocal == orig(arg0.graphLayoutCache.allAttributesLocal)
arg0.graphLayoutCache.localAttributes == orig(arg0.graphLayoutCache.localAttributes)
arg0.graphLayoutCache.localAttributes.getClass().getName() == orig(arg0.graphLayoutCache.localAttributes.getClass().getName())
arg0.selectionModel == orig(arg0.selectionModel)
arg0.selectionModel.getClass().getName() == orig(arg0.selectionModel.getClass().getName())
arg0.marquee == orig(arg0.marquee)
arg0.marquee.previousCursor == orig(arg0.marquee.previousCursor)
arg0.marquee.marqueeBounds == orig(arg0.marquee.marqueeBounds)
arg0.marquee.startPoint == orig(arg0.marquee.startPoint)
arg0.marquee.currentPoint == orig(arg0.marquee.currentPoint)
arg0.offscreen == orig(arg0.offscreen)
arg0.offscreenBounds == orig(arg0.offscreenBounds)
arg0.offscreenOffset == orig(arg0.offscreenOffset)
arg0.offgraphics == orig(arg0.offgraphics)
arg0.offscreenDirty == orig(arg0.offscreenDirty)
arg0.wholeOffscreenDirty == orig(arg0.wholeOffscreenDirty)
arg0.wholeOffscreenDirtyProportion == orig(arg0.wholeOffscreenDirtyProportion)
arg0.offscreenBuffer == orig(arg0.offscreenBuffer)
arg0.volatileOffscreen == orig(arg0.volatileOffscreen)
arg0.lastBufferAllocated == orig(arg0.lastBufferAllocated)
arg0.backgroundImage == orig(arg0.backgroundImage)
arg0.backgroundComponent == orig(arg0.backgroundComponent)
arg0.backgroundScaled == orig(arg0.backgroundScaled)
arg0.scale == orig(arg0.scale)
arg0.antiAliased == orig(arg0.antiAliased)
arg0.editable == orig(arg0.editable)
arg0.groupsEditable == orig(arg0.groupsEditable)
arg0.selectionEnabled == orig(arg0.selectionEnabled)
arg0.previewInvalidNullPorts == orig(arg0.previewInvalidNullPorts)
arg0.gridVisible == orig(arg0.gridVisible)
arg0.gridSize == orig(arg0.gridSize)
arg0.gridMode == orig(arg0.gridMode)
arg0.portsVisible == orig(arg0.portsVisible)
arg0.portsScaled == orig(arg0.portsScaled)
arg0.portsOnTop == orig(arg0.portsOnTop)
arg0.moveBelowZero == orig(arg0.moveBelowZero)
arg0.moveBeyondGraphBounds == orig(arg0.moveBeyondGraphBounds)
arg0.edgeLabelsMovable == orig(arg0.edgeLabelsMovable)
arg0.autoResizeGraph == orig(arg0.autoResizeGraph)
arg0.highlightColor == orig(arg0.highlightColor)
arg0.handleColor == orig(arg0.handleColor)
arg0.lockedHandleColor == orig(arg0.lockedHandleColor)
arg0.marqueeColor == orig(arg0.marqueeColor)
arg0.gridColor == orig(arg0.gridColor)
arg0.dragEnabled == orig(arg0.dragEnabled)
arg0.dropEnabled == orig(arg0.dropEnabled)
arg0.xorEnabled == orig(arg0.xorEnabled)
arg0.editClickCount == orig(arg0.editClickCount)
arg0.enabled == orig(arg0.enabled)
arg0.gridEnabled == orig(arg0.gridEnabled)
arg0.handleSize == orig(arg0.handleSize)
arg0.tolerance == orig(arg0.tolerance)
arg0.minimumMove == orig(arg0.minimumMove)
arg0.isJumpToDefaultPort == orig(arg0.isJumpToDefaultPort)
arg0.isMoveIntoGroups == orig(arg0.isMoveIntoGroups)
arg0.isMoveOutOfGroups == orig(arg0.isMoveOutOfGroups)
arg0.disconnectOnMove == orig(arg0.disconnectOnMove)
arg0.moveable == orig(arg0.moveable)
arg0.cloneable == orig(arg0.cloneable)
arg0.sizeable == orig(arg0.sizeable)
arg0.bendable == orig(arg0.bendable)
arg0.connectable == orig(arg0.connectable)
arg0.disconnectable == orig(arg0.disconnectable)
arg0.invokesStopCellEditing == orig(arg0.invokesStopCellEditing)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.preferredSize has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.cellEditorListener has only one value
arg0.selectionRedirector == null
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache has only one value
arg0.graphLayoutCache.autoSizeOnValueChange == false
arg0.graphLayoutCache.showsExistingConnections == true
arg0.graphLayoutCache.showsChangedConnections == true
arg0.graphLayoutCache.showsInvisibleEditedCells == false
arg0.graphLayoutCache.showsInsertedCells == true
arg0.graphLayoutCache.showsInsertedConnections == true
arg0.graphLayoutCache.hidesExistingConnections == true
arg0.graphLayoutCache.hidesDanglingConnections == false
arg0.graphLayoutCache.remembersCellViews == true
arg0.graphLayoutCache.selectsAllInsertedCells == false
arg0.graphLayoutCache.selectsLocalInsertedCells == false
arg0.graphLayoutCache.movesChildrenOnExpand == true
arg0.graphLayoutCache.movesParentsOnCollapse == true
arg0.graphLayoutCache.resizesParentsOnCollapse == false
arg0.graphLayoutCache.collapseXScale == 1.0
arg0.graphLayoutCache.collapseYScale == 1.0
arg0.graphLayoutCache.reconnectsEdgesToVisibleParent == false
arg0.graphLayoutCache.listenerList has only one value
arg0.graphLayoutCache.graphModel has only one value
arg0.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache.mapping has only one value
arg0.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
arg0.graphLayoutCache.hiddenMapping has only one value
arg0.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.graphLayoutCache.factory has only one value
arg0.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.graphLayoutCache.visibleSet has only one value
arg0.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.graphLayoutCache.roots has only one value
arg0.graphLayoutCache.roots[] == []
arg0.graphLayoutCache.roots[].getClass().getName() == []
arg0.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
arg0.graphLayoutCache.ports has only one value
arg0.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.graphLayoutCache.ports[] == []
arg0.graphLayoutCache.ports[].getClass().getName() == []
arg0.graphLayoutCache.ports[].lastParent == []
arg0.graphLayoutCache.ports[].lastParent.getClass().getName() == []
arg0.graphLayoutCache.ports[].cell == []
arg0.graphLayoutCache.ports[].cell.getClass().getName() == []
arg0.graphLayoutCache.ports[].parent == []
arg0.graphLayoutCache.ports[].parent.getClass().getName() == []
arg0.graphLayoutCache.ports[].childViews == []
arg0.graphLayoutCache.ports[].childViews.getClass().getName() == []
arg0.graphLayoutCache.ports[].allAttributes == []
arg0.graphLayoutCache.ports[].attributes == []
arg0.graphLayoutCache.ports[].groupBounds == []
arg0.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
arg0.graphLayoutCache.partial == false
arg0.graphLayoutCache.allAttributesLocal == false
arg0.graphLayoutCache.localAttributes has only one value
arg0.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
arg0.selectionModel has only one value
arg0.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
arg0.marquee has only one value
arg0.marquee.previousCursor == null
arg0.marquee.marqueeBounds == null
arg0.marquee.startPoint == null
arg0.marquee.currentPoint == null
arg0.offscreen == null
arg0.offscreenBounds == null
arg0.offscreenOffset == null
arg0.offgraphics == null
arg0.offscreenDirty == null
arg0.wholeOffscreenDirty == false
arg0.wholeOffscreenDirtyProportion == 0.8
arg0.offscreenBuffer == 300
arg0.volatileOffscreen == false
arg0.lastBufferAllocated == true
arg0.backgroundImage == null
arg0.backgroundComponent == null
arg0.backgroundScaled == true
arg0.scale == 1.0
arg0.antiAliased == false
arg0.editable == true
arg0.groupsEditable == false
arg0.selectionEnabled == true
arg0.previewInvalidNullPorts == true
arg0.gridVisible == false
arg0.gridSize == 10.0
arg0.gridMode == 0
arg0.portsVisible == false
arg0.portsScaled == true
arg0.portsOnTop == true
arg0.moveBelowZero == false
arg0.moveBeyondGraphBounds == true
arg0.edgeLabelsMovable == true
arg0.autoResizeGraph == true
arg0.highlightColor has only one value
arg0.dragEnabled == false
arg0.dropEnabled == true
arg0.xorEnabled == true
arg0.editClickCount == 2
arg0.enabled == true
arg0.gridEnabled == false
arg0.handleSize == 3
arg0.tolerance == 4
arg0.minimumMove == 5
arg0.isJumpToDefaultPort == false
arg0.isMoveIntoGroups == false
arg0.isMoveOutOfGroups == false
arg0.disconnectOnMove == false
arg0.moveable == true
arg0.cloneable == false
arg0.sizeable == true
arg0.bendable == true
arg0.connectable == true
arg0.disconnectable == true
arg0.invokesStopCellEditing == false
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.completeUIInstall():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.completeUIInstall():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel has only one value
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createActionMap():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createActionMap():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createCellEditorListener():::ENTER
this.graph == null
this.graphLayoutCache == null
this.stopEditingInCompleteEditing == false
this.rendererPane == null
this.preferredSize == null
this.graphModel == null
this.graphSelectionModel == null
this.marquee == null
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener == null
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createCellEditorListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph == null
this.graphLayoutCache == null
this.stopEditingInCompleteEditing == false
this.rendererPane == null
this.preferredSize == null
this.graphModel == null
this.graphSelectionModel == null
this.marquee == null
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener == null
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$CellEditorHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createCellRendererPane():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createCellRendererPane():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createGraphLayoutCacheListener():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createGraphLayoutCacheListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler has only one value
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphLayoutCacheHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createGraphModelListener():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createGraphModelListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphModelHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createGraphSelectionListener():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createGraphSelectionListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$GraphSelectionHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createKeyListener():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createKeyListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$KeyHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createMouseListener():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createMouseListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$MouseHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createPropertyChangeListener():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createPropertyChangeListener():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
return has only one value
return.getClass().getName() == org.jgraph.plaf.basic.BasicGraphUI$PropertyChangeHandler.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createTransferHandler():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.createTransferHandler():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
return has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.getInputMap(int):::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
arg0 one of { 0, 1 }
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.getInputMap(int):::EXIT704
return has only one value
orig(arg0) == 1
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.getInputMap(int):::EXIT706
return has only one value
orig(arg0) == 0
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.getInputMap(int):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installComponents():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installComponents():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installDefaults():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installDefaults():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installKeyboardActions():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installKeyboardActions():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installListeners():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installListeners():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installUI(javax.swing.JComponent):::ENTER
this.graph == null
this.graphLayoutCache == null
this.stopEditingInCompleteEditing == false
this.rendererPane == null
this.preferredSize == null
this.graphModel == null
this.graphSelectionModel == null
this.marquee == null
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
arg0 has only one value
arg0.getClass().getName() == org.jgraph.JGraph.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.installUI(javax.swing.JComponent):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.cellEditor == orig(this.cellEditor)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.handle == orig(this.handle)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel has only one value
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.isEditing(org.jgraph.JGraph):::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graph.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graph.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graph.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graph.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graph.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graph.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == true
this.graph.cloneable == true
this.graph.invokesStopCellEditing == true
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel has only one value
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
arg0 has only one value
arg0.selectionRedirector == null
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache has only one value
arg0.graphLayoutCache.autoSizeOnValueChange == false
arg0.graphLayoutCache.showsExistingConnections == true
arg0.graphLayoutCache.showsChangedConnections == true
arg0.graphLayoutCache.showsInvisibleEditedCells == false
arg0.graphLayoutCache.showsInsertedCells == true
arg0.graphLayoutCache.showsInsertedConnections == true
arg0.graphLayoutCache.hidesExistingConnections == true
arg0.graphLayoutCache.hidesDanglingConnections == false
arg0.graphLayoutCache.remembersCellViews == true
arg0.graphLayoutCache.selectsAllInsertedCells == false
arg0.graphLayoutCache.selectsLocalInsertedCells == false
arg0.graphLayoutCache.movesChildrenOnExpand == true
arg0.graphLayoutCache.movesParentsOnCollapse == true
arg0.graphLayoutCache.resizesParentsOnCollapse == false
arg0.graphLayoutCache.collapseXScale == 1.0
arg0.graphLayoutCache.collapseYScale == 1.0
arg0.graphLayoutCache.reconnectsEdgesToVisibleParent == false
arg0.graphLayoutCache.listenerList has only one value
arg0.graphLayoutCache.graphModel has only one value
arg0.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache.mapping has only one value
arg0.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
arg0.graphLayoutCache.hiddenMapping has only one value
arg0.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.graphLayoutCache.factory has only one value
arg0.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.graphLayoutCache.visibleSet has only one value
arg0.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.graphLayoutCache.roots has only one value
arg0.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
arg0.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
arg0.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
arg0.graphLayoutCache.ports has only one value
arg0.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
arg0.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
arg0.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
arg0.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
arg0.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
arg0.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
arg0.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
arg0.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
arg0.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].groupBounds elements == null
arg0.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
arg0.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
arg0.graphLayoutCache.partial == false
arg0.graphLayoutCache.allAttributesLocal == false
arg0.graphLayoutCache.localAttributes has only one value
arg0.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
arg0.selectionModel has only one value
arg0.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
arg0.marquee has only one value
arg0.marquee.previousCursor == null
arg0.marquee.marqueeBounds == null
arg0.marquee.startPoint == null
arg0.marquee.currentPoint == null
arg0.offscreen == null
arg0.offscreenBounds == null
arg0.offscreenOffset == null
arg0.offgraphics == null
arg0.offscreenDirty == null
arg0.wholeOffscreenDirty == false
arg0.wholeOffscreenDirtyProportion == 0.8
arg0.offscreenBuffer == 300
arg0.volatileOffscreen == false
arg0.lastBufferAllocated == true
arg0.backgroundImage == null
arg0.backgroundComponent == null
arg0.backgroundScaled == true
arg0.scale == 1.0
arg0.antiAliased == false
arg0.editable == true
arg0.groupsEditable == false
arg0.selectionEnabled == true
arg0.previewInvalidNullPorts == true
arg0.gridVisible == false
arg0.gridSize == 10.0
arg0.gridMode == 0
arg0.portsVisible == false
arg0.portsScaled == true
arg0.portsOnTop == true
arg0.moveBelowZero == false
arg0.moveBeyondGraphBounds == true
arg0.edgeLabelsMovable == true
arg0.autoResizeGraph == true
arg0.highlightColor has only one value
arg0.handleColor has only one value
arg0.lockedHandleColor has only one value
arg0.marqueeColor has only one value
arg0.gridColor has only one value
arg0.dragEnabled == false
arg0.dropEnabled == true
arg0.xorEnabled == true
arg0.editClickCount == 2
arg0.enabled == true
arg0.gridEnabled == false
arg0.handleSize == 3
arg0.tolerance == 4
arg0.minimumMove == 5
arg0.isJumpToDefaultPort == true
arg0.isMoveIntoGroups == false
arg0.isMoveOutOfGroups == false
arg0.disconnectOnMove == false
arg0.moveable == true
arg0.cloneable == true
arg0.sizeable == true
arg0.bendable == true
arg0.connectable == true
arg0.disconnectable == true
arg0.invokesStopCellEditing == true
size(this.graph.graphLayoutCache.roots[]) == 3
size(this.graph.graphLayoutCache.ports[]) == 2
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
size(arg0.graphLayoutCache.roots[]) == 3
size(arg0.graphLayoutCache.ports[]) == 2
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.isEditing(org.jgraph.JGraph):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.graphSelectionModel.getClass().getName() == orig(this.graphSelectionModel.getClass().getName())
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
arg0.selectionRedirector == orig(arg0.selectionRedirector)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.graphLayoutCache == orig(arg0.graphLayoutCache)
arg0.graphLayoutCache.autoSizeOnValueChange == orig(arg0.graphLayoutCache.autoSizeOnValueChange)
arg0.graphLayoutCache.showsExistingConnections == orig(arg0.graphLayoutCache.showsExistingConnections)
arg0.graphLayoutCache.showsChangedConnections == orig(arg0.graphLayoutCache.showsChangedConnections)
arg0.graphLayoutCache.showsInvisibleEditedCells == orig(arg0.graphLayoutCache.showsInvisibleEditedCells)
arg0.graphLayoutCache.showsInsertedCells == orig(arg0.graphLayoutCache.showsInsertedCells)
arg0.graphLayoutCache.showsInsertedConnections == orig(arg0.graphLayoutCache.showsInsertedConnections)
arg0.graphLayoutCache.hidesExistingConnections == orig(arg0.graphLayoutCache.hidesExistingConnections)
arg0.graphLayoutCache.hidesDanglingConnections == orig(arg0.graphLayoutCache.hidesDanglingConnections)
arg0.graphLayoutCache.remembersCellViews == orig(arg0.graphLayoutCache.remembersCellViews)
arg0.graphLayoutCache.selectsAllInsertedCells == orig(arg0.graphLayoutCache.selectsAllInsertedCells)
arg0.graphLayoutCache.selectsLocalInsertedCells == orig(arg0.graphLayoutCache.selectsLocalInsertedCells)
arg0.graphLayoutCache.movesChildrenOnExpand == orig(arg0.graphLayoutCache.movesChildrenOnExpand)
arg0.graphLayoutCache.movesParentsOnCollapse == orig(arg0.graphLayoutCache.movesParentsOnCollapse)
arg0.graphLayoutCache.resizesParentsOnCollapse == orig(arg0.graphLayoutCache.resizesParentsOnCollapse)
arg0.graphLayoutCache.collapseXScale == orig(arg0.graphLayoutCache.collapseXScale)
arg0.graphLayoutCache.collapseYScale == orig(arg0.graphLayoutCache.collapseYScale)
arg0.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(arg0.graphLayoutCache.reconnectsEdgesToVisibleParent)
arg0.graphLayoutCache.listenerList == orig(arg0.graphLayoutCache.listenerList)
arg0.graphLayoutCache.graphModel == orig(arg0.graphLayoutCache.graphModel)
arg0.graphLayoutCache.graphModel.getClass().getName() == orig(arg0.graphLayoutCache.graphModel.getClass().getName())
arg0.graphLayoutCache.mapping == orig(arg0.graphLayoutCache.mapping)
arg0.graphLayoutCache.mapping.getClass().getName() == orig(arg0.graphLayoutCache.mapping.getClass().getName())
arg0.graphLayoutCache.hiddenMapping == orig(arg0.graphLayoutCache.hiddenMapping)
arg0.graphLayoutCache.hiddenMapping.getClass().getName() == orig(arg0.graphLayoutCache.hiddenMapping.getClass().getName())
arg0.graphLayoutCache.factory == orig(arg0.graphLayoutCache.factory)
arg0.graphLayoutCache.factory.getClass().getName() == orig(arg0.graphLayoutCache.factory.getClass().getName())
arg0.graphLayoutCache.visibleSet == orig(arg0.graphLayoutCache.visibleSet)
arg0.graphLayoutCache.visibleSet.getClass().getName() == orig(arg0.graphLayoutCache.visibleSet.getClass().getName())
arg0.graphLayoutCache.roots == orig(arg0.graphLayoutCache.roots)
arg0.graphLayoutCache.roots[] == orig(arg0.graphLayoutCache.roots[])
arg0.graphLayoutCache.roots.getClass().getName() == orig(arg0.graphLayoutCache.roots.getClass().getName())
arg0.graphLayoutCache.ports == orig(arg0.graphLayoutCache.ports)
arg0.graphLayoutCache.ports.getClass().getName() == orig(arg0.graphLayoutCache.ports.getClass().getName())
arg0.graphLayoutCache.ports[] == orig(arg0.graphLayoutCache.ports[])
arg0.graphLayoutCache.ports[].lastParent == orig(arg0.graphLayoutCache.ports[].lastParent)
arg0.graphLayoutCache.ports[].cell == orig(arg0.graphLayoutCache.ports[].cell)
arg0.graphLayoutCache.ports[].parent == orig(arg0.graphLayoutCache.ports[].parent)
arg0.graphLayoutCache.ports[].childViews == orig(arg0.graphLayoutCache.ports[].childViews)
arg0.graphLayoutCache.ports[].allAttributes == orig(arg0.graphLayoutCache.ports[].allAttributes)
arg0.graphLayoutCache.ports[].attributes == orig(arg0.graphLayoutCache.ports[].attributes)
arg0.graphLayoutCache.ports[].groupBounds == orig(arg0.graphLayoutCache.ports[].groupBounds)
arg0.graphLayoutCache.partial == orig(arg0.graphLayoutCache.partial)
arg0.graphLayoutCache.allAttributesLocal == orig(arg0.graphLayoutCache.allAttributesLocal)
arg0.graphLayoutCache.localAttributes == orig(arg0.graphLayoutCache.localAttributes)
arg0.graphLayoutCache.localAttributes.getClass().getName() == orig(arg0.graphLayoutCache.localAttributes.getClass().getName())
arg0.selectionModel == orig(arg0.selectionModel)
arg0.selectionModel.getClass().getName() == orig(arg0.selectionModel.getClass().getName())
arg0.marquee == orig(arg0.marquee)
arg0.marquee.previousCursor == orig(arg0.marquee.previousCursor)
arg0.marquee.marqueeBounds == orig(arg0.marquee.marqueeBounds)
arg0.marquee.startPoint == orig(arg0.marquee.startPoint)
arg0.marquee.currentPoint == orig(arg0.marquee.currentPoint)
arg0.offscreen == orig(arg0.offscreen)
arg0.offscreenBounds == orig(arg0.offscreenBounds)
arg0.offscreenOffset == orig(arg0.offscreenOffset)
arg0.offgraphics == orig(arg0.offgraphics)
arg0.offscreenDirty == orig(arg0.offscreenDirty)
arg0.wholeOffscreenDirty == orig(arg0.wholeOffscreenDirty)
arg0.wholeOffscreenDirtyProportion == orig(arg0.wholeOffscreenDirtyProportion)
arg0.offscreenBuffer == orig(arg0.offscreenBuffer)
arg0.volatileOffscreen == orig(arg0.volatileOffscreen)
arg0.lastBufferAllocated == orig(arg0.lastBufferAllocated)
arg0.backgroundImage == orig(arg0.backgroundImage)
arg0.backgroundComponent == orig(arg0.backgroundComponent)
arg0.backgroundScaled == orig(arg0.backgroundScaled)
arg0.scale == orig(arg0.scale)
arg0.antiAliased == orig(arg0.antiAliased)
arg0.editable == orig(arg0.editable)
arg0.groupsEditable == orig(arg0.groupsEditable)
arg0.selectionEnabled == orig(arg0.selectionEnabled)
arg0.previewInvalidNullPorts == orig(arg0.previewInvalidNullPorts)
arg0.gridVisible == orig(arg0.gridVisible)
arg0.gridSize == orig(arg0.gridSize)
arg0.gridMode == orig(arg0.gridMode)
arg0.portsVisible == orig(arg0.portsVisible)
arg0.portsScaled == orig(arg0.portsScaled)
arg0.portsOnTop == orig(arg0.portsOnTop)
arg0.moveBelowZero == orig(arg0.moveBelowZero)
arg0.moveBeyondGraphBounds == orig(arg0.moveBeyondGraphBounds)
arg0.edgeLabelsMovable == orig(arg0.edgeLabelsMovable)
arg0.autoResizeGraph == orig(arg0.autoResizeGraph)
arg0.highlightColor == orig(arg0.highlightColor)
arg0.handleColor == orig(arg0.handleColor)
arg0.lockedHandleColor == orig(arg0.lockedHandleColor)
arg0.marqueeColor == orig(arg0.marqueeColor)
arg0.gridColor == orig(arg0.gridColor)
arg0.dragEnabled == orig(arg0.dragEnabled)
arg0.dropEnabled == orig(arg0.dropEnabled)
arg0.xorEnabled == orig(arg0.xorEnabled)
arg0.editClickCount == orig(arg0.editClickCount)
arg0.enabled == orig(arg0.enabled)
arg0.gridEnabled == orig(arg0.gridEnabled)
arg0.handleSize == orig(arg0.handleSize)
arg0.tolerance == orig(arg0.tolerance)
arg0.minimumMove == orig(arg0.minimumMove)
arg0.isJumpToDefaultPort == orig(arg0.isJumpToDefaultPort)
arg0.isMoveIntoGroups == orig(arg0.isMoveIntoGroups)
arg0.isMoveOutOfGroups == orig(arg0.isMoveOutOfGroups)
arg0.disconnectOnMove == orig(arg0.disconnectOnMove)
arg0.moveable == orig(arg0.moveable)
arg0.cloneable == orig(arg0.cloneable)
arg0.sizeable == orig(arg0.sizeable)
arg0.bendable == orig(arg0.bendable)
arg0.connectable == orig(arg0.connectable)
arg0.disconnectable == orig(arg0.disconnectable)
arg0.invokesStopCellEditing == orig(arg0.invokesStopCellEditing)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graph.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graph.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graph.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graph.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graph.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graph.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == true
this.graph.cloneable == true
this.graph.invokesStopCellEditing == true
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
this.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
this.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
this.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
this.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
this.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel has only one value
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
arg0.selectionRedirector == null
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache has only one value
arg0.graphLayoutCache.autoSizeOnValueChange == false
arg0.graphLayoutCache.showsExistingConnections == true
arg0.graphLayoutCache.showsChangedConnections == true
arg0.graphLayoutCache.showsInvisibleEditedCells == false
arg0.graphLayoutCache.showsInsertedCells == true
arg0.graphLayoutCache.showsInsertedConnections == true
arg0.graphLayoutCache.hidesExistingConnections == true
arg0.graphLayoutCache.hidesDanglingConnections == false
arg0.graphLayoutCache.remembersCellViews == true
arg0.graphLayoutCache.selectsAllInsertedCells == false
arg0.graphLayoutCache.selectsLocalInsertedCells == false
arg0.graphLayoutCache.movesChildrenOnExpand == true
arg0.graphLayoutCache.movesParentsOnCollapse == true
arg0.graphLayoutCache.resizesParentsOnCollapse == false
arg0.graphLayoutCache.collapseXScale == 1.0
arg0.graphLayoutCache.collapseYScale == 1.0
arg0.graphLayoutCache.reconnectsEdgesToVisibleParent == false
arg0.graphLayoutCache.listenerList has only one value
arg0.graphLayoutCache.graphModel has only one value
arg0.graphLayoutCache.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.graphLayoutCache.mapping has only one value
arg0.graphLayoutCache.mapping.getClass().getName() == java.util.Hashtable.class
arg0.graphLayoutCache.hiddenMapping has only one value
arg0.graphLayoutCache.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.graphLayoutCache.factory has only one value
arg0.graphLayoutCache.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.graphLayoutCache.visibleSet has only one value
arg0.graphLayoutCache.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.graphLayoutCache.roots has only one value
arg0.graphLayoutCache.roots[] contains no nulls and has only one value, of length 3
arg0.graphLayoutCache.roots[].getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView, org.jgraph.graph.EdgeView]
arg0.graphLayoutCache.roots.getClass().getName() == java.util.ArrayList.class
arg0.graphLayoutCache.ports has only one value
arg0.graphLayoutCache.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.graphLayoutCache.ports[] contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].getClass().getName() == [org.jgraph.graph.PortView, org.jgraph.graph.PortView]
arg0.graphLayoutCache.ports[].getClass().getName() elements == org.jgraph.graph.PortView.class
arg0.graphLayoutCache.ports[].lastParent contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].lastParent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
arg0.graphLayoutCache.ports[].lastParent.getClass().getName() elements == org.jgraph.graph.VertexView.class
arg0.graphLayoutCache.ports[].cell contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].cell.getClass().getName() == [org.jgraph.graph.DefaultPort, org.jgraph.graph.DefaultPort]
arg0.graphLayoutCache.ports[].cell.getClass().getName() elements == org.jgraph.graph.DefaultPort.class
arg0.graphLayoutCache.ports[].parent contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].parent.getClass().getName() == [org.jgraph.graph.VertexView, org.jgraph.graph.VertexView]
arg0.graphLayoutCache.ports[].parent.getClass().getName() elements == org.jgraph.graph.VertexView.class
arg0.graphLayoutCache.ports[].childViews contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].childViews.getClass().getName() == [java.util.ArrayList, java.util.ArrayList]
arg0.graphLayoutCache.ports[].childViews.getClass().getName() elements == java.util.ArrayList.class
arg0.graphLayoutCache.ports[].allAttributes contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].attributes contains no nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].groupBounds contains only nulls and has only one value, of length 2
arg0.graphLayoutCache.ports[].groupBounds elements == null
arg0.graphLayoutCache.ports[].groupBounds.getClass().getName() == [null, null]
arg0.graphLayoutCache.ports[].groupBounds.getClass().getName() elements == null
arg0.graphLayoutCache.partial == false
arg0.graphLayoutCache.allAttributesLocal == false
arg0.graphLayoutCache.localAttributes has only one value
arg0.graphLayoutCache.localAttributes.getClass().getName() == java.util.HashSet.class
arg0.selectionModel has only one value
arg0.selectionModel.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
arg0.marquee has only one value
arg0.marquee.previousCursor == null
arg0.marquee.marqueeBounds == null
arg0.marquee.startPoint == null
arg0.marquee.currentPoint == null
arg0.offscreen == null
arg0.offscreenBounds == null
arg0.offscreenOffset == null
arg0.offgraphics == null
arg0.offscreenDirty == null
arg0.wholeOffscreenDirty == false
arg0.wholeOffscreenDirtyProportion == 0.8
arg0.offscreenBuffer == 300
arg0.volatileOffscreen == false
arg0.lastBufferAllocated == true
arg0.backgroundImage == null
arg0.backgroundComponent == null
arg0.backgroundScaled == true
arg0.scale == 1.0
arg0.antiAliased == false
arg0.editable == true
arg0.groupsEditable == false
arg0.selectionEnabled == true
arg0.previewInvalidNullPorts == true
arg0.gridVisible == false
arg0.gridSize == 10.0
arg0.gridMode == 0
arg0.portsVisible == false
arg0.portsScaled == true
arg0.portsOnTop == true
arg0.moveBelowZero == false
arg0.moveBeyondGraphBounds == true
arg0.edgeLabelsMovable == true
arg0.autoResizeGraph == true
arg0.highlightColor has only one value
arg0.handleColor has only one value
arg0.lockedHandleColor has only one value
arg0.marqueeColor has only one value
arg0.gridColor has only one value
arg0.dragEnabled == false
arg0.dropEnabled == true
arg0.xorEnabled == true
arg0.editClickCount == 2
arg0.enabled == true
arg0.gridEnabled == false
arg0.handleSize == 3
arg0.tolerance == 4
arg0.minimumMove == 5
arg0.isJumpToDefaultPort == true
arg0.isMoveIntoGroups == false
arg0.isMoveOutOfGroups == false
arg0.disconnectOnMove == false
arg0.moveable == true
arg0.cloneable == true
arg0.sizeable == true
arg0.bendable == true
arg0.connectable == true
arg0.disconnectable == true
arg0.invokesStopCellEditing == true
return == false
size(this.graph.graphLayoutCache.roots[]) == 3
size(this.graph.graphLayoutCache.ports[]) == 2
size(this.graphLayoutCache.roots[]) == 3
size(this.graphLayoutCache.ports[]) == 2
size(arg0.graphLayoutCache.roots[]) == 3
size(arg0.graphLayoutCache.ports[]) == 2
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.isEditing(org.jgraph.JGraph):::EXIT;condition="not(return == true)"
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.prepareForUIInstall():::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache == null
this.stopEditingInCompleteEditing == false
this.rendererPane == null
this.preferredSize == null
this.graphModel == null
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.prepareForUIInstall():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.cellEditor == orig(this.cellEditor)
this.rendererPane == orig(this.rendererPane)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.setGraphLayoutCache(org.jgraph.graph.GraphLayoutCache):::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache == null
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel == null
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
arg0 has only one value
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.setGraphLayoutCache(org.jgraph.graph.GraphLayoutCache):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
arg0.autoSizeOnValueChange == orig(arg0.autoSizeOnValueChange)
arg0.showsExistingConnections == orig(arg0.showsExistingConnections)
arg0.showsChangedConnections == orig(arg0.showsChangedConnections)
arg0.showsInvisibleEditedCells == orig(arg0.showsInvisibleEditedCells)
arg0.showsInsertedCells == orig(arg0.showsInsertedCells)
arg0.showsInsertedConnections == orig(arg0.showsInsertedConnections)
arg0.hidesExistingConnections == orig(arg0.hidesExistingConnections)
arg0.hidesDanglingConnections == orig(arg0.hidesDanglingConnections)
arg0.remembersCellViews == orig(arg0.remembersCellViews)
arg0.selectsAllInsertedCells == orig(arg0.selectsAllInsertedCells)
arg0.selectsLocalInsertedCells == orig(arg0.selectsLocalInsertedCells)
arg0.movesChildrenOnExpand == orig(arg0.movesChildrenOnExpand)
arg0.movesParentsOnCollapse == orig(arg0.movesParentsOnCollapse)
arg0.resizesParentsOnCollapse == orig(arg0.resizesParentsOnCollapse)
arg0.collapseXScale == orig(arg0.collapseXScale)
arg0.collapseYScale == orig(arg0.collapseYScale)
arg0.reconnectsEdgesToVisibleParent == orig(arg0.reconnectsEdgesToVisibleParent)
arg0.listenerList == orig(arg0.listenerList)
arg0.graphModel == orig(arg0.graphModel)
arg0.graphModel.getClass().getName() == orig(arg0.graphModel.getClass().getName())
arg0.mapping == orig(arg0.mapping)
arg0.mapping.getClass().getName() == orig(arg0.mapping.getClass().getName())
arg0.hiddenMapping == orig(arg0.hiddenMapping)
arg0.hiddenMapping.getClass().getName() == orig(arg0.hiddenMapping.getClass().getName())
arg0.factory == orig(arg0.factory)
arg0.factory.getClass().getName() == orig(arg0.factory.getClass().getName())
arg0.visibleSet == orig(arg0.visibleSet)
arg0.visibleSet.getClass().getName() == orig(arg0.visibleSet.getClass().getName())
arg0.roots == orig(arg0.roots)
arg0.roots[] == orig(arg0.roots[])
arg0.roots.getClass().getName() == orig(arg0.roots.getClass().getName())
arg0.ports == orig(arg0.ports)
arg0.ports.getClass().getName() == orig(arg0.ports.getClass().getName())
arg0.ports[] == orig(arg0.ports[])
arg0.ports[].lastParent == orig(arg0.ports[].lastParent)
arg0.ports[].cell == orig(arg0.ports[].cell)
arg0.ports[].parent == orig(arg0.ports[].parent)
arg0.ports[].childViews == orig(arg0.ports[].childViews)
arg0.ports[].allAttributes == orig(arg0.ports[].allAttributes)
arg0.ports[].attributes == orig(arg0.ports[].attributes)
arg0.ports[].groupBounds == orig(arg0.ports[].groupBounds)
arg0.partial == orig(arg0.partial)
arg0.allAttributesLocal == orig(arg0.allAttributesLocal)
arg0.localAttributes == orig(arg0.localAttributes)
arg0.localAttributes.getClass().getName() == orig(arg0.localAttributes.getClass().getName())
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel == null
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
arg0.autoSizeOnValueChange == false
arg0.showsExistingConnections == true
arg0.showsChangedConnections == true
arg0.showsInvisibleEditedCells == false
arg0.showsInsertedCells == true
arg0.showsInsertedConnections == true
arg0.hidesExistingConnections == true
arg0.hidesDanglingConnections == false
arg0.remembersCellViews == true
arg0.selectsAllInsertedCells == false
arg0.selectsLocalInsertedCells == false
arg0.movesChildrenOnExpand == true
arg0.movesParentsOnCollapse == true
arg0.resizesParentsOnCollapse == false
arg0.collapseXScale == 1.0
arg0.collapseYScale == 1.0
arg0.reconnectsEdgesToVisibleParent == false
arg0.listenerList has only one value
arg0.graphModel has only one value
arg0.graphModel.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
arg0.mapping has only one value
arg0.mapping.getClass().getName() == java.util.Hashtable.class
arg0.hiddenMapping has only one value
arg0.hiddenMapping.getClass().getName() == java.util.WeakHashMap.class
arg0.factory has only one value
arg0.factory.getClass().getName() == org.jgraph.graph.DefaultCellViewFactory.class
arg0.visibleSet has only one value
arg0.visibleSet.getClass().getName() == java.util.HashSet.class
arg0.roots has only one value
arg0.roots[] == []
arg0.roots[].getClass().getName() == []
arg0.roots.getClass().getName() == java.util.ArrayList.class
arg0.ports has only one value
arg0.ports.getClass().getName() == org.jgraph.graph.PortView[].class
arg0.ports[] == []
arg0.ports[].getClass().getName() == []
arg0.ports[].lastParent == []
arg0.ports[].lastParent.getClass().getName() == []
arg0.ports[].cell == []
arg0.ports[].cell.getClass().getName() == []
arg0.ports[].parent == []
arg0.ports[].parent.getClass().getName() == []
arg0.ports[].childViews == []
arg0.ports[].childViews.getClass().getName() == []
arg0.ports[].allAttributes == []
arg0.ports[].attributes == []
arg0.ports[].groupBounds == []
arg0.ports[].groupBounds.getClass().getName() == []
arg0.partial == false
arg0.allAttributesLocal == false
arg0.localAttributes has only one value
arg0.localAttributes.getClass().getName() == java.util.HashSet.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.setModel(org.jgraph.graph.GraphModel):::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel == null
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphModel.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.setModel(org.jgraph.graph.GraphModel):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphSelectionModel == orig(this.graphSelectionModel)
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.mouseListener == orig(this.mouseListener)
this.keyListener == orig(this.keyListener)
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphModelListener == orig(this.graphModelListener)
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor == null
this.graph.lockedHandleColor == null
this.graph.marqueeColor == null
this.graph.gridColor == null
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane == null
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener == null
this.mouseListener == null
this.keyListener == null
this.cellEditorListener has only one value
this.graphSelectionListener == null
this.graphModelListener == null
this.graphLayoutCacheListener == null
this.defaultTransferHandler == null
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.setSelectionModel(org.jgraph.graph.GraphSelectionModel):::ENTER
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel == null
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
arg0 has only one value
arg0.getClass().getName() == org.jgraph.graph.DefaultGraphSelectionModel.class
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.setSelectionModel(org.jgraph.graph.GraphSelectionModel):::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graph.graphLayoutCache.roots has only one value
this.graph.graphLayoutCache.roots[] == []
this.graph.graphLayoutCache.roots[].getClass().getName() == []
this.graph.graphLayoutCache.ports has only one value
this.graph.graphLayoutCache.ports[] == []
this.graph.graphLayoutCache.ports[].getClass().getName() == []
this.graph.graphLayoutCache.ports[].lastParent == []
this.graph.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].cell == []
this.graph.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graph.graphLayoutCache.ports[].parent == []
this.graph.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graph.graphLayoutCache.ports[].childViews == []
this.graph.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graph.graphLayoutCache.ports[].allAttributes == []
this.graph.graphLayoutCache.ports[].attributes == []
this.graph.graphLayoutCache.ports[].groupBounds == []
this.graph.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.graph.offscreenDirty == null
this.graph.handleColor has only one value
this.graph.lockedHandleColor has only one value
this.graph.marqueeColor has only one value
this.graph.gridColor has only one value
this.graph.isJumpToDefaultPort == false
this.graph.cloneable == false
this.graph.invokesStopCellEditing == false
this.graphLayoutCache has only one value
this.graphLayoutCache.roots has only one value
this.graphLayoutCache.roots[] == []
this.graphLayoutCache.roots[].getClass().getName() == []
this.graphLayoutCache.ports has only one value
this.graphLayoutCache.ports[] == []
this.graphLayoutCache.ports[].getClass().getName() == []
this.graphLayoutCache.ports[].lastParent == []
this.graphLayoutCache.ports[].lastParent.getClass().getName() == []
this.graphLayoutCache.ports[].cell == []
this.graphLayoutCache.ports[].cell.getClass().getName() == []
this.graphLayoutCache.ports[].parent == []
this.graphLayoutCache.ports[].parent.getClass().getName() == []
this.graphLayoutCache.ports[].childViews == []
this.graphLayoutCache.ports[].childViews.getClass().getName() == []
this.graphLayoutCache.ports[].allAttributes == []
this.graphLayoutCache.ports[].attributes == []
this.graphLayoutCache.ports[].groupBounds == []
this.graphLayoutCache.ports[].groupBounds.getClass().getName() == []
this.stopEditingInCompleteEditing == true
this.rendererPane has only one value
this.preferredSize has only one value
this.graphModel has only one value
this.graphSelectionModel has only one value
this.marquee has only one value
this.propertyChangeListener has only one value
this.mouseListener has only one value
this.keyListener has only one value
this.cellEditorListener has only one value
this.graphSelectionListener has only one value
this.graphModelListener has only one value
this.graphLayoutCacheListener has only one value
this.defaultTransferHandler has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.updateHandle():::ENTER
this.graph has only one value
this.graphLayoutCache has only one value
this.stopEditingInCompleteEditing == true
this.preferredSize has only one value
this.marquee has only one value
this.cellEditorListener has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.updateHandle():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.offscreenDirty.getClass().getName() == orig(this.graph.offscreenDirty.getClass().getName())
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.graphSelectionModel.getClass().getName() == orig(this.graphSelectionModel.getClass().getName())
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graphLayoutCache has only one value
this.stopEditingInCompleteEditing == true
this.preferredSize has only one value
this.marquee has only one value
this.cellEditorListener has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.updateSize():::ENTER
this.graph has only one value
this.graphLayoutCache has only one value
this.stopEditingInCompleteEditing == true
this.preferredSize has only one value
this.marquee has only one value
this.cellEditorListener has only one value
===========================================================================
org.jgraph.plaf.basic.BasicGraphUI.updateSize():::EXIT
org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW == orig(org.jgraph.plaf.basic.BasicGraphUI.DNDPREVIEW)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLBORDER)
org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP == orig(org.jgraph.plaf.basic.BasicGraphUI.SCROLLSTEP)
org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCELLS)
org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXHANDLES)
org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS == orig(org.jgraph.plaf.basic.BasicGraphUI.MAXCLIPCELLS)
this.preferredMinSize == orig(this.preferredMinSize)
this.graph == orig(this.graph)
this.graph.selectionRedirector == orig(this.graph.selectionRedirector)
this.graph.graphModel == orig(this.graph.graphModel)
this.graph.graphModel.getClass().getName() == orig(this.graph.graphModel.getClass().getName())
this.graph.graphLayoutCache == orig(this.graph.graphLayoutCache)
this.graph.graphLayoutCache.autoSizeOnValueChange == orig(this.graph.graphLayoutCache.autoSizeOnValueChange)
this.graph.graphLayoutCache.showsExistingConnections == orig(this.graph.graphLayoutCache.showsExistingConnections)
this.graph.graphLayoutCache.showsChangedConnections == orig(this.graph.graphLayoutCache.showsChangedConnections)
this.graph.graphLayoutCache.showsInvisibleEditedCells == orig(this.graph.graphLayoutCache.showsInvisibleEditedCells)
this.graph.graphLayoutCache.showsInsertedCells == orig(this.graph.graphLayoutCache.showsInsertedCells)
this.graph.graphLayoutCache.showsInsertedConnections == orig(this.graph.graphLayoutCache.showsInsertedConnections)
this.graph.graphLayoutCache.hidesExistingConnections == orig(this.graph.graphLayoutCache.hidesExistingConnections)
this.graph.graphLayoutCache.hidesDanglingConnections == orig(this.graph.graphLayoutCache.hidesDanglingConnections)
this.graph.graphLayoutCache.remembersCellViews == orig(this.graph.graphLayoutCache.remembersCellViews)
this.graph.graphLayoutCache.selectsAllInsertedCells == orig(this.graph.graphLayoutCache.selectsAllInsertedCells)
this.graph.graphLayoutCache.selectsLocalInsertedCells == orig(this.graph.graphLayoutCache.selectsLocalInsertedCells)
this.graph.graphLayoutCache.movesChildrenOnExpand == orig(this.graph.graphLayoutCache.movesChildrenOnExpand)
this.graph.graphLayoutCache.movesParentsOnCollapse == orig(this.graph.graphLayoutCache.movesParentsOnCollapse)
this.graph.graphLayoutCache.resizesParentsOnCollapse == orig(this.graph.graphLayoutCache.resizesParentsOnCollapse)
this.graph.graphLayoutCache.collapseXScale == orig(this.graph.graphLayoutCache.collapseXScale)
this.graph.graphLayoutCache.collapseYScale == orig(this.graph.graphLayoutCache.collapseYScale)
this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graph.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graph.graphLayoutCache.listenerList == orig(this.graph.graphLayoutCache.listenerList)
this.graph.graphLayoutCache.graphModel == orig(this.graph.graphLayoutCache.graphModel)
this.graph.graphLayoutCache.graphModel.getClass().getName() == orig(this.graph.graphLayoutCache.graphModel.getClass().getName())
this.graph.graphLayoutCache.mapping == orig(this.graph.graphLayoutCache.mapping)
this.graph.graphLayoutCache.mapping.getClass().getName() == orig(this.graph.graphLayoutCache.mapping.getClass().getName())
this.graph.graphLayoutCache.hiddenMapping == orig(this.graph.graphLayoutCache.hiddenMapping)
this.graph.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graph.graphLayoutCache.hiddenMapping.getClass().getName())
this.graph.graphLayoutCache.factory == orig(this.graph.graphLayoutCache.factory)
this.graph.graphLayoutCache.factory.getClass().getName() == orig(this.graph.graphLayoutCache.factory.getClass().getName())
this.graph.graphLayoutCache.visibleSet == orig(this.graph.graphLayoutCache.visibleSet)
this.graph.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graph.graphLayoutCache.visibleSet.getClass().getName())
this.graph.graphLayoutCache.roots == orig(this.graph.graphLayoutCache.roots)
this.graph.graphLayoutCache.roots[] == orig(this.graph.graphLayoutCache.roots[])
this.graph.graphLayoutCache.roots.getClass().getName() == orig(this.graph.graphLayoutCache.roots.getClass().getName())
this.graph.graphLayoutCache.ports == orig(this.graph.graphLayoutCache.ports)
this.graph.graphLayoutCache.ports.getClass().getName() == orig(this.graph.graphLayoutCache.ports.getClass().getName())
this.graph.graphLayoutCache.ports[] == orig(this.graph.graphLayoutCache.ports[])
this.graph.graphLayoutCache.ports[].lastParent == orig(this.graph.graphLayoutCache.ports[].lastParent)
this.graph.graphLayoutCache.ports[].cell == orig(this.graph.graphLayoutCache.ports[].cell)
this.graph.graphLayoutCache.ports[].parent == orig(this.graph.graphLayoutCache.ports[].parent)
this.graph.graphLayoutCache.ports[].childViews == orig(this.graph.graphLayoutCache.ports[].childViews)
this.graph.graphLayoutCache.ports[].allAttributes == orig(this.graph.graphLayoutCache.ports[].allAttributes)
this.graph.graphLayoutCache.ports[].attributes == orig(this.graph.graphLayoutCache.ports[].attributes)
this.graph.graphLayoutCache.ports[].groupBounds == orig(this.graph.graphLayoutCache.ports[].groupBounds)
this.graph.graphLayoutCache.partial == orig(this.graph.graphLayoutCache.partial)
this.graph.graphLayoutCache.allAttributesLocal == orig(this.graph.graphLayoutCache.allAttributesLocal)
this.graph.graphLayoutCache.localAttributes == orig(this.graph.graphLayoutCache.localAttributes)
this.graph.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graph.graphLayoutCache.localAttributes.getClass().getName())
this.graph.selectionModel == orig(this.graph.selectionModel)
this.graph.selectionModel.getClass().getName() == orig(this.graph.selectionModel.getClass().getName())
this.graph.marquee == orig(this.graph.marquee)
this.graph.marquee.previousCursor == orig(this.graph.marquee.previousCursor)
this.graph.marquee.marqueeBounds == orig(this.graph.marquee.marqueeBounds)
this.graph.marquee.startPoint == orig(this.graph.marquee.startPoint)
this.graph.marquee.currentPoint == orig(this.graph.marquee.currentPoint)
this.graph.offscreen == orig(this.graph.offscreen)
this.graph.offscreenBounds == orig(this.graph.offscreenBounds)
this.graph.offscreenOffset == orig(this.graph.offscreenOffset)
this.graph.offgraphics == orig(this.graph.offgraphics)
this.graph.offscreenDirty == orig(this.graph.offscreenDirty)
this.graph.offscreenDirty.getClass().getName() == orig(this.graph.offscreenDirty.getClass().getName())
this.graph.wholeOffscreenDirty == orig(this.graph.wholeOffscreenDirty)
this.graph.wholeOffscreenDirtyProportion == orig(this.graph.wholeOffscreenDirtyProportion)
this.graph.offscreenBuffer == orig(this.graph.offscreenBuffer)
this.graph.volatileOffscreen == orig(this.graph.volatileOffscreen)
this.graph.lastBufferAllocated == orig(this.graph.lastBufferAllocated)
this.graph.backgroundImage == orig(this.graph.backgroundImage)
this.graph.backgroundComponent == orig(this.graph.backgroundComponent)
this.graph.backgroundScaled == orig(this.graph.backgroundScaled)
this.graph.scale == orig(this.graph.scale)
this.graph.antiAliased == orig(this.graph.antiAliased)
this.graph.editable == orig(this.graph.editable)
this.graph.groupsEditable == orig(this.graph.groupsEditable)
this.graph.selectionEnabled == orig(this.graph.selectionEnabled)
this.graph.previewInvalidNullPorts == orig(this.graph.previewInvalidNullPorts)
this.graph.gridVisible == orig(this.graph.gridVisible)
this.graph.gridSize == orig(this.graph.gridSize)
this.graph.gridMode == orig(this.graph.gridMode)
this.graph.portsVisible == orig(this.graph.portsVisible)
this.graph.portsScaled == orig(this.graph.portsScaled)
this.graph.portsOnTop == orig(this.graph.portsOnTop)
this.graph.moveBelowZero == orig(this.graph.moveBelowZero)
this.graph.moveBeyondGraphBounds == orig(this.graph.moveBeyondGraphBounds)
this.graph.edgeLabelsMovable == orig(this.graph.edgeLabelsMovable)
this.graph.autoResizeGraph == orig(this.graph.autoResizeGraph)
this.graph.highlightColor == orig(this.graph.highlightColor)
this.graph.handleColor == orig(this.graph.handleColor)
this.graph.lockedHandleColor == orig(this.graph.lockedHandleColor)
this.graph.marqueeColor == orig(this.graph.marqueeColor)
this.graph.gridColor == orig(this.graph.gridColor)
this.graph.dragEnabled == orig(this.graph.dragEnabled)
this.graph.dropEnabled == orig(this.graph.dropEnabled)
this.graph.xorEnabled == orig(this.graph.xorEnabled)
this.graph.editClickCount == orig(this.graph.editClickCount)
this.graph.enabled == orig(this.graph.enabled)
this.graph.gridEnabled == orig(this.graph.gridEnabled)
this.graph.handleSize == orig(this.graph.handleSize)
this.graph.tolerance == orig(this.graph.tolerance)
this.graph.minimumMove == orig(this.graph.minimumMove)
this.graph.isJumpToDefaultPort == orig(this.graph.isJumpToDefaultPort)
this.graph.isMoveIntoGroups == orig(this.graph.isMoveIntoGroups)
this.graph.isMoveOutOfGroups == orig(this.graph.isMoveOutOfGroups)
this.graph.disconnectOnMove == orig(this.graph.disconnectOnMove)
this.graph.moveable == orig(this.graph.moveable)
this.graph.cloneable == orig(this.graph.cloneable)
this.graph.sizeable == orig(this.graph.sizeable)
this.graph.bendable == orig(this.graph.bendable)
this.graph.connectable == orig(this.graph.connectable)
this.graph.disconnectable == orig(this.graph.disconnectable)
this.graph.invokesStopCellEditing == orig(this.graph.invokesStopCellEditing)
this.graphLayoutCache == orig(this.graphLayoutCache)
this.graphLayoutCache.autoSizeOnValueChange == orig(this.graphLayoutCache.autoSizeOnValueChange)
this.graphLayoutCache.showsExistingConnections == orig(this.graphLayoutCache.showsExistingConnections)
this.graphLayoutCache.showsChangedConnections == orig(this.graphLayoutCache.showsChangedConnections)
this.graphLayoutCache.showsInvisibleEditedCells == orig(this.graphLayoutCache.showsInvisibleEditedCells)
this.graphLayoutCache.showsInsertedCells == orig(this.graphLayoutCache.showsInsertedCells)
this.graphLayoutCache.showsInsertedConnections == orig(this.graphLayoutCache.showsInsertedConnections)
this.graphLayoutCache.hidesExistingConnections == orig(this.graphLayoutCache.hidesExistingConnections)
this.graphLayoutCache.hidesDanglingConnections == orig(this.graphLayoutCache.hidesDanglingConnections)
this.graphLayoutCache.remembersCellViews == orig(this.graphLayoutCache.remembersCellViews)
this.graphLayoutCache.selectsAllInsertedCells == orig(this.graphLayoutCache.selectsAllInsertedCells)
this.graphLayoutCache.selectsLocalInsertedCells == orig(this.graphLayoutCache.selectsLocalInsertedCells)
this.graphLayoutCache.movesChildrenOnExpand == orig(this.graphLayoutCache.movesChildrenOnExpand)
this.graphLayoutCache.movesParentsOnCollapse == orig(this.graphLayoutCache.movesParentsOnCollapse)
this.graphLayoutCache.resizesParentsOnCollapse == orig(this.graphLayoutCache.resizesParentsOnCollapse)
this.graphLayoutCache.collapseXScale == orig(this.graphLayoutCache.collapseXScale)
this.graphLayoutCache.collapseYScale == orig(this.graphLayoutCache.collapseYScale)
this.graphLayoutCache.reconnectsEdgesToVisibleParent == orig(this.graphLayoutCache.reconnectsEdgesToVisibleParent)
this.graphLayoutCache.listenerList == orig(this.graphLayoutCache.listenerList)
this.graphLayoutCache.graphModel == orig(this.graphLayoutCache.graphModel)
this.graphLayoutCache.graphModel.getClass().getName() == orig(this.graphLayoutCache.graphModel.getClass().getName())
this.graphLayoutCache.mapping == orig(this.graphLayoutCache.mapping)
this.graphLayoutCache.mapping.getClass().getName() == orig(this.graphLayoutCache.mapping.getClass().getName())
this.graphLayoutCache.hiddenMapping == orig(this.graphLayoutCache.hiddenMapping)
this.graphLayoutCache.hiddenMapping.getClass().getName() == orig(this.graphLayoutCache.hiddenMapping.getClass().getName())
this.graphLayoutCache.factory == orig(this.graphLayoutCache.factory)
this.graphLayoutCache.factory.getClass().getName() == orig(this.graphLayoutCache.factory.getClass().getName())
this.graphLayoutCache.visibleSet == orig(this.graphLayoutCache.visibleSet)
this.graphLayoutCache.visibleSet.getClass().getName() == orig(this.graphLayoutCache.visibleSet.getClass().getName())
this.graphLayoutCache.roots == orig(this.graphLayoutCache.roots)
this.graphLayoutCache.roots[] == orig(this.graphLayoutCache.roots[])
this.graphLayoutCache.roots.getClass().getName() == orig(this.graphLayoutCache.roots.getClass().getName())
this.graphLayoutCache.ports == orig(this.graphLayoutCache.ports)
this.graphLayoutCache.ports.getClass().getName() == orig(this.graphLayoutCache.ports.getClass().getName())
this.graphLayoutCache.ports[] == orig(this.graphLayoutCache.ports[])
this.graphLayoutCache.ports[].lastParent == orig(this.graphLayoutCache.ports[].lastParent)
this.graphLayoutCache.ports[].cell == orig(this.graphLayoutCache.ports[].cell)
this.graphLayoutCache.ports[].parent == orig(this.graphLayoutCache.ports[].parent)
this.graphLayoutCache.ports[].childViews == orig(this.graphLayoutCache.ports[].childViews)
this.graphLayoutCache.ports[].allAttributes == orig(this.graphLayoutCache.ports[].allAttributes)
this.graphLayoutCache.ports[].attributes == orig(this.graphLayoutCache.ports[].attributes)
this.graphLayoutCache.ports[].groupBounds == orig(this.graphLayoutCache.ports[].groupBounds)
this.graphLayoutCache.partial == orig(this.graphLayoutCache.partial)
this.graphLayoutCache.allAttributesLocal == orig(this.graphLayoutCache.allAttributesLocal)
this.graphLayoutCache.localAttributes == orig(this.graphLayoutCache.localAttributes)
this.graphLayoutCache.localAttributes.getClass().getName() == orig(this.graphLayoutCache.localAttributes.getClass().getName())
this.cellEditor == orig(this.cellEditor)
this.stopEditingInCompleteEditing == orig(this.stopEditingInCompleteEditing)
this.rendererPane == orig(this.rendererPane)
this.preferredSize == orig(this.preferredSize)
this.validCachedPreferredSize == orig(this.validCachedPreferredSize)
this.graphModel == orig(this.graphModel)
this.graphModel.getClass().getName() == orig(this.graphModel.getClass().getName())
this.graphSelectionModel == orig(this.graphSelectionModel)
this.graphSelectionModel.getClass().getName() == orig(this.graphSelectionModel.getClass().getName())
this.handle == orig(this.handle)
this.marquee == orig(this.marquee)
this.marquee.previousCursor == orig(this.marquee.previousCursor)
this.marquee.marqueeBounds == orig(this.marquee.marqueeBounds)
this.marquee.startPoint == orig(this.marquee.startPoint)
this.marquee.currentPoint == orig(this.marquee.currentPoint)
this.editingComponent == orig(this.editingComponent)
this.focus == orig(this.focus)
this.lastFocus == orig(this.lastFocus)
this.editingCell == orig(this.editingCell)
this.editorHasDifferentSize == orig(this.editorHasDifferentSize)
this.insertionLocation == orig(this.insertionLocation)
this.dropAction == orig(this.dropAction)
this.snapSelectedView == orig(this.snapSelectedView)
this.propertyChangeListener == orig(this.propertyChangeListener)
this.propertyChangeListener.getClass().getName() == orig(this.propertyChangeListener.getClass().getName())
this.mouseListener == orig(this.mouseListener)
this.mouseListener.getClass().getName() == orig(this.mouseListener.getClass().getName())
this.keyListener == orig(this.keyListener)
this.keyListener.getClass().getName() == orig(this.keyListener.getClass().getName())
this.componentListener == orig(this.componentListener)
this.cellEditorListener == orig(this.cellEditorListener)
this.cellEditorListener.getClass().getName() == orig(this.cellEditorListener.getClass().getName())
this.graphSelectionListener == orig(this.graphSelectionListener)
this.graphSelectionListener.getClass().getName() == orig(this.graphSelectionListener.getClass().getName())
this.graphModelListener == orig(this.graphModelListener)
this.graphModelListener.getClass().getName() == orig(this.graphModelListener.getClass().getName())
this.graphLayoutCacheListener == orig(this.graphLayoutCacheListener)
this.graphLayoutCacheListener.getClass().getName() == orig(this.graphLayoutCacheListener.getClass().getName())
this.defaultTransferHandler == orig(this.defaultTransferHandler)
this.defaultDropTargetListener == orig(this.defaultDropTargetListener)
this.dropTarget == orig(this.dropTarget)
this.graph has only one value
this.graphLayoutCache has only one value
this.stopEditingInCompleteEditing == true
this.preferredSize has only one value
this.marquee has only one value
this.cellEditorListener has only one value
===========================================================================
org.jgraph.util.RectUtils.union(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D):::ENTER
arg0 == null
arg1 has only one value
arg1.getClass().getName() == org.jgraph.graph.AttributeMap$SerializableRectangle2D.class
===========================================================================
org.jgraph.util.RectUtils.union(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D):::EXIT
return has only one value
return.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
Exiting Daikon.
