Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
by.epam.christmasgift.candy.Candy:::CLASS
by.epam.christmasgift.candy.Candy.logger has only one value
by.epam.christmasgift.candy.Candy.logger != null
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN != null
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Logger.class$org$apache$log4j$Logger != null
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name != null
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.OFF != null
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.FATAL != null
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.ERROR != null
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.WARN != null
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.INFO != null
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.DEBUG != null
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.TRACE != null
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.ALL != null
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
by.epam.christmasgift.candy.Candy.logger.parent has only one value
by.epam.christmasgift.candy.Candy.logger.parent != null
by.epam.christmasgift.candy.Candy.logger.parent.name has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name != null
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == "root"
by.epam.christmasgift.candy.Candy.logger.parent.level has only one value
by.epam.christmasgift.candy.Candy.logger.parent.level != null
by.epam.christmasgift.candy.Candy.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN != null
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.parent.repository has only one value
by.epam.christmasgift.candy.Candy.logger.parent.repository != null
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.parent.aai == null
by.epam.christmasgift.candy.Candy.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.apache.log4j.Category.class$org$apache$log4j$Category != null
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository != null
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
===========================================================================
by.epam.christmasgift.candy.Candy:::OBJECT
this.fat >= 0
this.carbohydrate >= 0
this.kiloCalories >= 0
this.weight >= 0
this.sugarContent >= 0
===========================================================================
by.epam.christmasgift.candy.Candy.Candy(int, int, int, int, int, int):::ENTER
arg0 one of { 10, 20, 30 }
arg1 one of { 15, 20, 40 }
arg2 one of { 10, 20, 30 }
arg4 one of { 34, 40, 50 }
arg5 one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.Candy(int, int, int, int, int, int):::EXIT
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getCarbohydrate():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getCarbohydrate():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
return one of { 10, 20, 30 }
===========================================================================
by.epam.christmasgift.candy.Candy.getFat():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getFat():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
return one of { 15, 20, 40 }
===========================================================================
by.epam.christmasgift.candy.Candy.getKiloCalories():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getKiloCalories():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getProtein():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getProtein():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
return one of { 10, 20, 30 }
===========================================================================
by.epam.christmasgift.candy.Candy.getSugarContent():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getSugarContent():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
return one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getWeight():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.getWeight():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
return one of { 34, 40, 50 }
===========================================================================
by.epam.christmasgift.candy.Candy.setCarbohydrate(int):::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 one of { 10, 20, 30 }
===========================================================================
by.epam.christmasgift.candy.Candy.setCarbohydrate(int):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.Candy.setFat(int):::ENTER
this.protein one of { 10, 20, 30 }
this.fat == 0
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 one of { 15, 20, 40 }
===========================================================================
by.epam.christmasgift.candy.Candy.setFat(int):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.Candy.setKiloCalories(int):::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.Candy.setKiloCalories(int):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.Candy.setProtein(int):::ENTER
this.protein == 0
this.fat == 0
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 one of { 10, 20, 30 }
===========================================================================
by.epam.christmasgift.candy.Candy.setProtein(int):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat == 0
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.Candy.setSugarContent(int):::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent == 0
arg0 one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.setSugarContent(int):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.setWeight(int):::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight == 0
this.sugarContent == 0
arg0 one of { 34, 40, 50 }
===========================================================================
by.epam.christmasgift.candy.Candy.setWeight(int):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.Candy.toString():::ENTER
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Candy.toString():::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein one of { 10, 20, 30 }
this.fat one of { 15, 20, 40 }
this.carbohydrate one of { 10, 20, 30 }
this.weight one of { 34, 40, 50 }
this.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.candy.Caramel$CaramelType:::OBJECT
===========================================================================
by.epam.christmasgift.candy.Caramel$CaramelType.CaramelType(java.lang.String, int):::ENTER
===========================================================================
by.epam.christmasgift.candy.Caramel$CaramelType.CaramelType(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
by.epam.christmasgift.candy.Caramel:::CLASS
by.epam.christmasgift.candy.Candy.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
by.epam.christmasgift.candy.Candy.logger.parent has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == "root"
by.epam.christmasgift.candy.Candy.logger.parent.level has only one value
by.epam.christmasgift.candy.Candy.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.parent.repository has only one value
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.parent.aai == null
by.epam.christmasgift.candy.Candy.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
===========================================================================
by.epam.christmasgift.candy.Caramel:::OBJECT
this has only one value
this.caramelType has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.FRUIT has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.CHOCOLATE has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.LIQUOR has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.BERRY has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Caramel$CaramelType[].class
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[] contains no nulls and has only one value, of length 4
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Caramel.CaramelType, by.epam.christmasgift.candy.Caramel.CaramelType, by.epam.christmasgift.candy.Caramel.CaramelType, by.epam.christmasgift.candy.Caramel.CaramelType]
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Caramel.CaramelType.class
this.protein == 20
this.fat == 40
this.carbohydrate == 30
this.kiloCalories == 70
this.weight == 34
this.sugarContent == 65
size(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[]) == 4
===========================================================================
by.epam.christmasgift.candy.Caramel.Caramel(int, int, int, int, int, int, by.epam.christmasgift.candy.Caramel$CaramelType):::ENTER
arg0 == 20
arg1 == 40
arg2 == 30
arg3 == 70
arg4 == 34
arg5 == 65
arg6 has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.FRUIT has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.CHOCOLATE has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.LIQUOR has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.BERRY has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES has only one value
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Caramel$CaramelType[].class
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[] contains no nulls and has only one value, of length 4
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Caramel.CaramelType, by.epam.christmasgift.candy.Caramel.CaramelType, by.epam.christmasgift.candy.Caramel.CaramelType, by.epam.christmasgift.candy.Caramel.CaramelType]
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Caramel.CaramelType.class
size(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[]) == 4
===========================================================================
by.epam.christmasgift.candy.Caramel.Caramel(int, int, int, int, int, int, by.epam.christmasgift.candy.Caramel$CaramelType):::EXIT
by.epam.christmasgift.candy.Caramel$CaramelType.FRUIT == orig(by.epam.christmasgift.candy.Caramel$CaramelType.FRUIT)
by.epam.christmasgift.candy.Caramel$CaramelType.CHOCOLATE == orig(by.epam.christmasgift.candy.Caramel$CaramelType.CHOCOLATE)
by.epam.christmasgift.candy.Caramel$CaramelType.LIQUOR == orig(by.epam.christmasgift.candy.Caramel$CaramelType.LIQUOR)
by.epam.christmasgift.candy.Caramel$CaramelType.BERRY == orig(by.epam.christmasgift.candy.Caramel$CaramelType.BERRY)
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES == orig(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES)
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[] == orig(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[])
===========================================================================
by.epam.christmasgift.candy.Caramel.toString():::ENTER
===========================================================================
by.epam.christmasgift.candy.Caramel.toString():::EXIT
this.caramelType == orig(this.caramelType)
by.epam.christmasgift.candy.Caramel$CaramelType.FRUIT == orig(by.epam.christmasgift.candy.Caramel$CaramelType.FRUIT)
by.epam.christmasgift.candy.Caramel$CaramelType.CHOCOLATE == orig(by.epam.christmasgift.candy.Caramel$CaramelType.CHOCOLATE)
by.epam.christmasgift.candy.Caramel$CaramelType.LIQUOR == orig(by.epam.christmasgift.candy.Caramel$CaramelType.LIQUOR)
by.epam.christmasgift.candy.Caramel$CaramelType.BERRY == orig(by.epam.christmasgift.candy.Caramel$CaramelType.BERRY)
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES == orig(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES)
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[] == orig(by.epam.christmasgift.candy.Caramel$CaramelType.$VALUES[])
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
return has only one value
return.toString == "Caramel {protein: 20 fat: 40 carbohydrate: 30 kiloCalories: 70 weight: 34 sugarContent: 65 caramelType: FRUIT }"
===========================================================================
by.epam.christmasgift.candy.Chocolate$ChocolateType:::OBJECT
===========================================================================
by.epam.christmasgift.candy.Chocolate$ChocolateType.ChocolateType(java.lang.String, int):::ENTER
arg0.toString one of { "DARK", "MILK", "WHITE" }
arg1 one of { 0, 1, 2 }
===========================================================================
by.epam.christmasgift.candy.Chocolate$ChocolateType.ChocolateType(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "DARK", "MILK", "WHITE" }
===========================================================================
by.epam.christmasgift.candy.Chocolate$StuffingType:::OBJECT
===========================================================================
by.epam.christmasgift.candy.Chocolate$StuffingType.StuffingType(java.lang.String, int):::ENTER
===========================================================================
by.epam.christmasgift.candy.Chocolate$StuffingType.StuffingType(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
by.epam.christmasgift.candy.Chocolate:::CLASS
by.epam.christmasgift.candy.Candy.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
by.epam.christmasgift.candy.Candy.logger.parent has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == "root"
by.epam.christmasgift.candy.Candy.logger.parent.level has only one value
by.epam.christmasgift.candy.Candy.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.parent.repository has only one value
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.parent.aai == null
by.epam.christmasgift.candy.Candy.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
===========================================================================
by.epam.christmasgift.candy.Chocolate:::OBJECT
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$ChocolateType[].class
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] contains no nulls and has only one value, of length 3
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType]
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.ChocolateType.class
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$StuffingType[].class
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] contains no nulls and has only one value, of length 6
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType]
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.StuffingType.class
this.protein one of { 10, 20 }
this.fat one of { 15, 20 }
this.carbohydrate == 20
this.kiloCalories one of { 20, 30 }
this.weight one of { 40, 50 }
this.sugarContent == 45
size(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[]) == 3
size(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[]) == 6
===========================================================================
by.epam.christmasgift.candy.Chocolate.Chocolate(int, int, int, int, int, int, by.epam.christmasgift.candy.Chocolate$ChocolateType, by.epam.christmasgift.candy.Chocolate$StuffingType):::ENTER
arg0 one of { 10, 20 }
arg1 one of { 15, 20 }
arg2 == 20
arg3 one of { 20, 30 }
arg4 one of { 40, 50 }
arg5 == 45
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$ChocolateType[].class
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] contains no nulls and has only one value, of length 3
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType]
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.ChocolateType.class
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$StuffingType[].class
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] contains no nulls and has only one value, of length 6
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType]
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.StuffingType.class
size(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[]) == 3
size(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[]) == 6
===========================================================================
by.epam.christmasgift.candy.Chocolate.Chocolate(int, int, int, int, int, int, by.epam.christmasgift.candy.Chocolate$ChocolateType, by.epam.christmasgift.candy.Chocolate$StuffingType):::EXIT
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
===========================================================================
by.epam.christmasgift.candy.Chocolate.toString():::ENTER
===========================================================================
by.epam.christmasgift.candy.Chocolate.toString():::EXIT
this.chocolateType == orig(this.chocolateType)
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
this.stuffingType == orig(this.stuffingType)
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
return.toString one of { "Chocolate { protein: 10 fat: 20 carbohydrate: 20 kiloCalories: 20 weight: 50 sugarContent: 45 chocolateType: WHITE stuffingType: SOUFFLE }", "Chocolate { protein: 20 fat: 15 carbohydrate: 20 kiloCalories: 30 weight: 40 sugarContent: 45 chocolateType: MILK stuffingType: JELLY }" }
===========================================================================
by.epam.christmasgift.candy.ChristmasGift:::CLASS
by.epam.christmasgift.candy.ChristmasGift.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == "by.epam.christmasgift.candy.ChristmasGift"
by.epam.christmasgift.candy.ChristmasGift.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.parent has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString == "root"
by.epam.christmasgift.candy.ChristmasGift.logger.parent.level has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle == null
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai == null
by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == null
by.epam.christmasgift.candy.ChristmasGift.logger.repository has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.ChristmasGift.logger.aai == null
by.epam.christmasgift.candy.ChristmasGift.logger.additive == true
===========================================================================
by.epam.christmasgift.candy.ChristmasGift:::OBJECT
this has only one value
this.gift has only one value
size(this.gift[]) one of { 0, 4 }
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.ChristmasGift():::EXIT
this.gift[] == []
this.gift[].getClass().getName() == []
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.addCandy(java.lang.Iterable):::ENTER
this.gift[] == []
this.gift[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == java.util.ArrayList.class
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.addCandy(java.lang.Iterable):::EXIT
by.epam.christmasgift.candy.ChristmasGift.logger == orig(by.epam.christmasgift.candy.ChristmasGift.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.ChristmasGift.logger.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name)
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.ChristmasGift.logger.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.level)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.additive)
this.gift == orig(this.gift)
this.gift[] contains no nulls and has only one value, of length 4
this.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel, by.epam.christmasgift.candy.Chocolate]
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.iterator():::ENTER
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository.getClass().getName() == by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName()
this.gift[].getClass().getName() one of { [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel], [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel, by.epam.christmasgift.candy.Chocolate] }
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.iterator():::EXIT
by.epam.christmasgift.candy.ChristmasGift.logger == orig(by.epam.christmasgift.candy.ChristmasGift.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.ChristmasGift.logger.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name)
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.ChristmasGift.logger.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.level)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository.getClass().getName() == by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName()
by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName())
by.epam.christmasgift.candy.ChristmasGift.logger.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.additive)
this.gift == orig(this.gift)
this.gift[] == orig(this.gift[])
this.gift[].getClass().getName() one of { [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel], [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel, by.epam.christmasgift.candy.Chocolate] }
return.getClass().getName() == java.util.ArrayList$Itr.class
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.sort(java.util.Comparator):::ENTER
this.gift[] contains no nulls and has only one value, of length 4
this.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel, by.epam.christmasgift.candy.Chocolate]
arg0 has only one value
arg0.getClass().getName() == by.epam.christmasgift.main.Main$1.class
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.sort(java.util.Comparator):::EXIT
by.epam.christmasgift.candy.ChristmasGift.logger == orig(by.epam.christmasgift.candy.ChristmasGift.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.ChristmasGift.logger.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name)
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.ChristmasGift.logger.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.level)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.additive)
this.gift == orig(this.gift)
size(this.gift[]) == orig(size(this.gift[]))
this.gift[] contains no nulls and has only one value, of length 4
this.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel]
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.toString():::ENTER
this.gift[] contains no nulls and has only one value, of length 4
this.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel]
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.ChristmasGift.toString():::EXIT
by.epam.christmasgift.candy.ChristmasGift.logger == orig(by.epam.christmasgift.candy.ChristmasGift.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.ChristmasGift.logger.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name)
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.ChristmasGift.logger.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.level)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName())
by.epam.christmasgift.candy.ChristmasGift.logger.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.additive)
this.gift == orig(this.gift)
this.gift[] == orig(this.gift[])
this.gift[] contains no nulls and has only one value, of length 4
this.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel]
return has only one value
return.toString == "ChristmasGift{ gift: [Chocolate { protein: 20 fat: 15 carbohydrate: 20 kiloCalories: 30 weight: 40 sugarContent: 45 chocolateType: MILK stuffingType: JELLY }, Chocolate { protein: 10 fat: 20 carbohydrate: 20 kiloCalories: 20 weight: 50 sugarContent: 45 chocolateType: WHITE stuffingType: SOUFFLE }, Lollipop { protein: 30 fat: 20 carbohydrate: 10 kiloCalories: 60 weight: 40 sugarContent: 60 flavor: Strawberry }, Caramel {protein: 20 fat: 40 carbohydrate: 30 kiloCalories: 70 weight: 34 sugarContent: 65 caramelType: FRUIT }] }"
size(this.gift[]) == 4
===========================================================================
by.epam.christmasgift.candy.Lollipop:::CLASS
by.epam.christmasgift.candy.Candy.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
by.epam.christmasgift.candy.Candy.logger.parent has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name has only one value
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == "root"
by.epam.christmasgift.candy.Candy.logger.parent.level has only one value
by.epam.christmasgift.candy.Candy.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.parent.repository has only one value
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.parent.aai == null
by.epam.christmasgift.candy.Candy.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
===========================================================================
by.epam.christmasgift.candy.Lollipop:::OBJECT
this has only one value
this.flavor has only one value
this.flavor.toString == "Strawberry"
this.protein == 30
this.fat == 20
this.carbohydrate == 10
this.kiloCalories == 60
this.weight == 40
this.sugarContent == 60
===========================================================================
by.epam.christmasgift.candy.Lollipop.Lollipop(int, int, int, int, int, int, java.lang.String):::ENTER
arg0 == 30
arg1 == 20
arg2 == 10
arg3 == 60
arg4 == 40
arg5 == 60
arg6 has only one value
arg6.toString == "Strawberry"
===========================================================================
by.epam.christmasgift.candy.Lollipop.Lollipop(int, int, int, int, int, int, java.lang.String):::EXIT
arg6.toString == orig(arg6.toString)
arg6.toString == "Strawberry"
===========================================================================
by.epam.christmasgift.candy.Lollipop.toString():::ENTER
===========================================================================
by.epam.christmasgift.candy.Lollipop.toString():::EXIT
this.flavor == orig(this.flavor)
this.flavor.toString == orig(this.flavor.toString)
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
by.epam.christmasgift.candy.Candy.logger.parent.name == orig(by.epam.christmasgift.candy.Candy.logger.parent.name)
by.epam.christmasgift.candy.Candy.logger.parent.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.parent.name.toString)
by.epam.christmasgift.candy.Candy.logger.parent.level == orig(by.epam.christmasgift.candy.Candy.logger.parent.level)
by.epam.christmasgift.candy.Candy.logger.parent.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.parent.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.parent.repository == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository)
by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.parent.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.parent.aai == orig(by.epam.christmasgift.candy.Candy.logger.parent.aai)
by.epam.christmasgift.candy.Candy.logger.parent.additive == orig(by.epam.christmasgift.candy.Candy.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
return has only one value
return.toString == "Lollipop { protein: 30 fat: 20 carbohydrate: 10 kiloCalories: 60 weight: 40 sugarContent: 60 flavor: Strawberry }"
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder:::OBJECT
this has only one value
this.getClass().getName() == by.epam.christmasgift.candy.builder.ChocolateBuilder.class
this.protein one of { 0, 20 }
this.fat one of { 0, 15 }
this.carbohydrate one of { 0, 20 }
this.kiloCalories one of { 0, 30 }
this.weight one of { 0, 40 }
this.sugarContent one of { 0, 45 }
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.CandyBuilder(int, int, int, int, int, int):::ENTER
arg0 == 20
arg1 == 15
arg2 == 20
arg3 == 30
arg4 == 40
arg5 == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.CandyBuilder(int, int, int, int, int, int):::EXIT
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getCarbohydrate():::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getCarbohydrate():::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
return == 20
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getFat():::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getFat():::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
return == 15
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getKiloCalories():::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getKiloCalories():::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
return == 30
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getProtein():::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getProtein():::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
return == 20
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getSugarContent():::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getSugarContent():::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
return == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getWeight():::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.getWeight():::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
return == 40
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setCarbohydrate(int):::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 == 20
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setCarbohydrate(int):::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setFat(int):::ENTER
this.protein == 20
this.fat == 0
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 == 15
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setFat(int):::EXIT
this.protein == orig(this.protein)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setKiloCalories(int):::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 == 30
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setKiloCalories(int):::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setProtein(int):::ENTER
this.protein == 0
this.fat == 0
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
arg0 == 20
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setProtein(int):::EXIT
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 0
this.carbohydrate == 0
this.kiloCalories == 0
this.weight == 0
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setSugarContent(int):::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 0
arg0 == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setSugarContent(int):::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setWeight(int):::ENTER
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 0
this.sugarContent == 0
arg0 == 40
===========================================================================
by.epam.christmasgift.candy.builder.CandyBuilder.setWeight(int):::EXIT
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.sugarContent == orig(this.sugarContent)
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 0
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder:::OBJECT
this has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK != null
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK != null
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE != null
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES != null
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$ChocolateType[].class
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] contains no nulls and has only one value, of length 3
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] elements != null
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType]
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.ChocolateType.class
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE != null
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE != null
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR != null
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE != null
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY != null
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE != null
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES != null
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$StuffingType[].class
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] contains no nulls and has only one value, of length 6
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] elements != null
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType]
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.StuffingType.class
this.protein == 20
this.fat == 15
this.carbohydrate == 20
this.kiloCalories == 30
this.weight == 40
this.sugarContent == 45
size(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[]) == 3
size(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[]) == 6
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.ChocolateBuilder(int, int, int, int, int, int, by.epam.christmasgift.candy.Chocolate$ChocolateType, by.epam.christmasgift.candy.Chocolate$StuffingType):::ENTER
arg0 == 20
arg1 == 15
arg2 == 20
arg3 == 30
arg4 == 40
arg5 == 45
arg6 has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$ChocolateType[].class
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] contains no nulls and has only one value, of length 3
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType, by.epam.christmasgift.candy.Chocolate.ChocolateType]
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.ChocolateType.class
arg7 has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES has only one value
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == by.epam.christmasgift.candy.Chocolate$StuffingType[].class
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] contains no nulls and has only one value, of length 6
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType, by.epam.christmasgift.candy.Chocolate.StuffingType]
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.StuffingType.class
size(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[]) == 3
size(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[]) == 6
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.ChocolateBuilder(int, int, int, int, int, int, by.epam.christmasgift.candy.Chocolate$ChocolateType, by.epam.christmasgift.candy.Chocolate$StuffingType):::EXIT
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
this.chocolateType has only one value
this.stuffingType has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.createCandy():::ENTER
this.chocolateType has only one value
this.stuffingType has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.createCandy():::EXIT
this.chocolateType == orig(this.chocolateType)
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
this.stuffingType == orig(this.stuffingType)
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.chocolateType has only one value
this.stuffingType has only one value
return has only one value
return.getClass().getName() == by.epam.christmasgift.candy.Chocolate.class
by.epam.christmasgift.candy.Candy.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
by.epam.christmasgift.candy.Candy.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.protein == 20
return.fat == 15
return.carbohydrate == 20
return.kiloCalories == 30
return.weight == 40
return.sugarContent == 45
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.getChocolateType():::ENTER
this.chocolateType has only one value
this.stuffingType has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.getChocolateType():::EXIT
this.chocolateType == orig(this.chocolateType)
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
this.stuffingType == orig(this.stuffingType)
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.chocolateType has only one value
this.stuffingType has only one value
return has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.getStuffingType():::ENTER
this.chocolateType has only one value
this.stuffingType has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.getStuffingType():::EXIT
this.chocolateType == orig(this.chocolateType)
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
this.stuffingType == orig(this.stuffingType)
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.chocolateType has only one value
this.stuffingType has only one value
return has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.setChocolateType(by.epam.christmasgift.candy.Chocolate$ChocolateType):::ENTER
this.chocolateType == null
this.stuffingType == null
arg0 has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.setChocolateType(by.epam.christmasgift.candy.Chocolate$ChocolateType):::EXIT
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
this.stuffingType == orig(this.stuffingType)
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.chocolateType has only one value
this.stuffingType == null
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.setStuffingType(by.epam.christmasgift.candy.Chocolate$StuffingType):::ENTER
this.chocolateType has only one value
===========================================================================
by.epam.christmasgift.candy.builder.ChocolateBuilder.setStuffingType(by.epam.christmasgift.candy.Chocolate$StuffingType):::EXIT
this.chocolateType == orig(this.chocolateType)
by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.DARK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.MILK)
by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.WHITE)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES)
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$ChocolateType.$VALUES[])
by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.PRALINE)
by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.FUDGE)
by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.LIQUOR)
by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.SOUFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.JELLY)
by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.WAFFLE)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES)
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName() == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES.getClass().getName())
by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[] == orig(by.epam.christmasgift.candy.Chocolate$StuffingType.$VALUES[])
this.protein == orig(this.protein)
this.fat == orig(this.fat)
this.carbohydrate == orig(this.carbohydrate)
this.kiloCalories == orig(this.kiloCalories)
this.weight == orig(this.weight)
this.sugarContent == orig(this.sugarContent)
this.chocolateType has only one value
===========================================================================
by.epam.christmasgift.logic.CandyParser:::CLASS
by.epam.christmasgift.logic.CandyParser.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.logic.CandyParser.logger.name has only one value
by.epam.christmasgift.logic.CandyParser.logger.name.toString == "by.epam.christmasgift.logic.CandyParser"
by.epam.christmasgift.logic.CandyParser.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
by.epam.christmasgift.logic.CandyParser.logger.parent has only one value
by.epam.christmasgift.logic.CandyParser.logger.parent.name has only one value
by.epam.christmasgift.logic.CandyParser.logger.parent.name.toString == "root"
by.epam.christmasgift.logic.CandyParser.logger.parent.level has only one value
by.epam.christmasgift.logic.CandyParser.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.logic.CandyParser.logger.parent.resourceBundle == null
by.epam.christmasgift.logic.CandyParser.logger.parent.repository has only one value
by.epam.christmasgift.logic.CandyParser.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.logic.CandyParser.logger.parent.aai == null
by.epam.christmasgift.logic.CandyParser.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
by.epam.christmasgift.logic.CandyParser.logger.resourceBundle == null
by.epam.christmasgift.logic.CandyParser.logger.repository has only one value
by.epam.christmasgift.logic.CandyParser.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.logic.CandyParser.logger.aai == null
by.epam.christmasgift.logic.CandyParser.logger.additive == true
===========================================================================
by.epam.christmasgift.logic.CandyParser:::OBJECT
this has only one value
===========================================================================
by.epam.christmasgift.logic.CandyParser.CandyParser():::EXIT
by.epam.christmasgift.logic.CandyParser.instance == null
===========================================================================
by.epam.christmasgift.logic.CandyParser.getInstance():::ENTER
by.epam.christmasgift.logic.CandyParser.instance == null
===========================================================================
by.epam.christmasgift.logic.CandyParser.getInstance():::EXIT
by.epam.christmasgift.logic.CandyParser.logger == orig(by.epam.christmasgift.logic.CandyParser.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.logic.CandyParser.logger.name == orig(by.epam.christmasgift.logic.CandyParser.logger.name)
by.epam.christmasgift.logic.CandyParser.logger.name.toString == orig(by.epam.christmasgift.logic.CandyParser.logger.name.toString)
by.epam.christmasgift.logic.CandyParser.logger.level == orig(by.epam.christmasgift.logic.CandyParser.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.logic.CandyParser.logger.parent == orig(by.epam.christmasgift.logic.CandyParser.logger.parent)
by.epam.christmasgift.logic.CandyParser.logger.parent.name == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.name)
by.epam.christmasgift.logic.CandyParser.logger.parent.name.toString == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.name.toString)
by.epam.christmasgift.logic.CandyParser.logger.parent.level == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.level)
by.epam.christmasgift.logic.CandyParser.logger.parent.parent == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.logic.CandyParser.logger.parent.resourceBundle == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.resourceBundle)
by.epam.christmasgift.logic.CandyParser.logger.parent.repository == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.repository)
by.epam.christmasgift.logic.CandyParser.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.repository.getClass().getName())
by.epam.christmasgift.logic.CandyParser.logger.parent.aai == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.aai)
by.epam.christmasgift.logic.CandyParser.logger.parent.additive == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.logic.CandyParser.logger.resourceBundle == orig(by.epam.christmasgift.logic.CandyParser.logger.resourceBundle)
by.epam.christmasgift.logic.CandyParser.logger.repository == orig(by.epam.christmasgift.logic.CandyParser.logger.repository)
by.epam.christmasgift.logic.CandyParser.logger.repository.getClass().getName() == orig(by.epam.christmasgift.logic.CandyParser.logger.repository.getClass().getName())
by.epam.christmasgift.logic.CandyParser.logger.aai == orig(by.epam.christmasgift.logic.CandyParser.logger.aai)
by.epam.christmasgift.logic.CandyParser.logger.additive == orig(by.epam.christmasgift.logic.CandyParser.logger.additive)
by.epam.christmasgift.logic.CandyParser.instance has only one value
return has only one value
===========================================================================
by.epam.christmasgift.logic.CandyParser.parse(java.io.File):::ENTER
by.epam.christmasgift.logic.CandyParser.instance has only one value
arg0 has only one value
===========================================================================
by.epam.christmasgift.logic.CandyParser.parse(java.io.File):::EXIT
by.epam.christmasgift.logic.CandyParser.logger == orig(by.epam.christmasgift.logic.CandyParser.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.logic.CandyParser.logger.name == orig(by.epam.christmasgift.logic.CandyParser.logger.name)
by.epam.christmasgift.logic.CandyParser.logger.name.toString == orig(by.epam.christmasgift.logic.CandyParser.logger.name.toString)
by.epam.christmasgift.logic.CandyParser.logger.level == orig(by.epam.christmasgift.logic.CandyParser.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.logic.CandyParser.logger.parent == orig(by.epam.christmasgift.logic.CandyParser.logger.parent)
by.epam.christmasgift.logic.CandyParser.logger.parent.name == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.name)
by.epam.christmasgift.logic.CandyParser.logger.parent.name.toString == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.name.toString)
by.epam.christmasgift.logic.CandyParser.logger.parent.level == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.level)
by.epam.christmasgift.logic.CandyParser.logger.parent.parent == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.logic.CandyParser.logger.parent.resourceBundle == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.resourceBundle)
by.epam.christmasgift.logic.CandyParser.logger.parent.repository == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.repository)
by.epam.christmasgift.logic.CandyParser.logger.parent.repository.getClass().getName() == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.repository.getClass().getName())
by.epam.christmasgift.logic.CandyParser.logger.parent.aai == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.aai)
by.epam.christmasgift.logic.CandyParser.logger.parent.additive == orig(by.epam.christmasgift.logic.CandyParser.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.logic.CandyParser.logger.resourceBundle == orig(by.epam.christmasgift.logic.CandyParser.logger.resourceBundle)
by.epam.christmasgift.logic.CandyParser.logger.repository == orig(by.epam.christmasgift.logic.CandyParser.logger.repository)
by.epam.christmasgift.logic.CandyParser.logger.repository.getClass().getName() == orig(by.epam.christmasgift.logic.CandyParser.logger.repository.getClass().getName())
by.epam.christmasgift.logic.CandyParser.logger.aai == orig(by.epam.christmasgift.logic.CandyParser.logger.aai)
by.epam.christmasgift.logic.CandyParser.logger.additive == orig(by.epam.christmasgift.logic.CandyParser.logger.additive)
by.epam.christmasgift.logic.CandyParser.instance == orig(by.epam.christmasgift.logic.CandyParser.instance)
by.epam.christmasgift.logic.CandyParser.instance has only one value
return has only one value
return.getClass().getName() == java.util.ArrayList.class
===========================================================================
by.epam.christmasgift.logic.GiftProcessor:::OBJECT
this has only one value
===========================================================================
by.epam.christmasgift.logic.GiftProcessor.GiftProcessor():::EXIT
===========================================================================
by.epam.christmasgift.logic.GiftProcessor.getCandyWithSugarContent(by.epam.christmasgift.candy.ChristmasGift, int, int):::ENTER
arg0 has only one value
by.epam.christmasgift.candy.ChristmasGift.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == "by.epam.christmasgift.candy.ChristmasGift"
by.epam.christmasgift.candy.ChristmasGift.logger.level == null
by.epam.christmasgift.candy.ChristmasGift.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == null
by.epam.christmasgift.candy.ChristmasGift.logger.repository has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.ChristmasGift.logger.aai == null
by.epam.christmasgift.candy.ChristmasGift.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.gift has only one value
arg0.gift[] contains no nulls and has only one value, of length 4
arg0.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel]
arg1 == 10
arg2 == 60
size(arg0.gift[]) == 4
===========================================================================
by.epam.christmasgift.logic.GiftProcessor.getCandyWithSugarContent(by.epam.christmasgift.candy.ChristmasGift, int, int):::EXIT
by.epam.christmasgift.candy.ChristmasGift.logger == orig(by.epam.christmasgift.candy.ChristmasGift.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.ChristmasGift.logger.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name)
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.level)
by.epam.christmasgift.candy.ChristmasGift.logger.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName())
by.epam.christmasgift.candy.ChristmasGift.logger.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
arg0.gift == orig(arg0.gift)
arg0.gift[] == orig(arg0.gift[])
by.epam.christmasgift.candy.ChristmasGift.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == "by.epam.christmasgift.candy.ChristmasGift"
by.epam.christmasgift.candy.ChristmasGift.logger.level == null
by.epam.christmasgift.candy.ChristmasGift.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == null
by.epam.christmasgift.candy.ChristmasGift.logger.repository has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.ChristmasGift.logger.aai == null
by.epam.christmasgift.candy.ChristmasGift.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.gift has only one value
arg0.gift[] contains no nulls and has only one value, of length 4
arg0.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel]
return has only one value
return[] contains no nulls and has only one value, of length 2
return[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Chocolate]
return[].getClass().getName() elements == by.epam.christmasgift.candy.Chocolate.class
size(arg0.gift[]) == 4
size(return[]) == 2
===========================================================================
by.epam.christmasgift.logic.GiftProcessor.getWeight(by.epam.christmasgift.candy.ChristmasGift):::ENTER
arg0 has only one value
by.epam.christmasgift.candy.ChristmasGift.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == "by.epam.christmasgift.candy.ChristmasGift"
by.epam.christmasgift.candy.ChristmasGift.logger.level == null
by.epam.christmasgift.candy.ChristmasGift.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == null
by.epam.christmasgift.candy.ChristmasGift.logger.repository has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.ChristmasGift.logger.aai == null
by.epam.christmasgift.candy.ChristmasGift.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.gift has only one value
arg0.gift[] contains no nulls and has only one value, of length 4
arg0.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel, by.epam.christmasgift.candy.Chocolate]
size(arg0.gift[]) == 4
===========================================================================
by.epam.christmasgift.logic.GiftProcessor.getWeight(by.epam.christmasgift.candy.ChristmasGift):::EXIT
by.epam.christmasgift.candy.ChristmasGift.logger == orig(by.epam.christmasgift.candy.ChristmasGift.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.ChristmasGift.logger.name == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name)
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == orig(by.epam.christmasgift.candy.ChristmasGift.logger.name.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.level == orig(by.epam.christmasgift.candy.ChristmasGift.logger.level)
by.epam.christmasgift.candy.ChristmasGift.logger.parent == orig(by.epam.christmasgift.candy.ChristmasGift.logger.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == orig(by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle)
by.epam.christmasgift.candy.ChristmasGift.logger.repository == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository)
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName())
by.epam.christmasgift.candy.ChristmasGift.logger.aai == orig(by.epam.christmasgift.candy.ChristmasGift.logger.aai)
by.epam.christmasgift.candy.ChristmasGift.logger.additive == orig(by.epam.christmasgift.candy.ChristmasGift.logger.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
arg0.gift == orig(arg0.gift)
arg0.gift[] == orig(arg0.gift[])
by.epam.christmasgift.candy.ChristmasGift.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.name.toString == "by.epam.christmasgift.candy.ChristmasGift"
by.epam.christmasgift.candy.ChristmasGift.logger.level == null
by.epam.christmasgift.candy.ChristmasGift.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.ChristmasGift.logger.resourceBundle == null
by.epam.christmasgift.candy.ChristmasGift.logger.repository has only one value
by.epam.christmasgift.candy.ChristmasGift.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.ChristmasGift.logger.aai == null
by.epam.christmasgift.candy.ChristmasGift.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.gift has only one value
arg0.gift[] contains no nulls and has only one value, of length 4
arg0.gift[].getClass().getName() == [by.epam.christmasgift.candy.Chocolate, by.epam.christmasgift.candy.Lollipop, by.epam.christmasgift.candy.Caramel, by.epam.christmasgift.candy.Chocolate]
return == 164
size(arg0.gift[]) == 4
===========================================================================
by.epam.christmasgift.main.Main$1:::OBJECT
this has only one value
===========================================================================
by.epam.christmasgift.main.Main$1.():::EXIT
===========================================================================
by.epam.christmasgift.main.Main$1.compare(by.epam.christmasgift.candy.Candy, by.epam.christmasgift.candy.Candy):::ENTER
by.epam.christmasgift.candy.Candy.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
by.epam.christmasgift.candy.Candy.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.protein one of { 20, 30 }
arg0.fat one of { 15, 20, 40 }
arg0.carbohydrate one of { 10, 20, 30 }
arg0.kiloCalories one of { 30, 60, 70 }
arg0.weight one of { 34, 40 }
arg0.sugarContent one of { 45, 60, 65 }
arg1.protein one of { 10, 20, 30 }
arg1.fat one of { 20, 40 }
arg1.carbohydrate one of { 10, 20, 30 }
arg1.kiloCalories one of { 20, 60, 70 }
arg1.weight one of { 34, 40, 50 }
arg1.sugarContent one of { 45, 60, 65 }
===========================================================================
by.epam.christmasgift.main.Main$1.compare(by.epam.christmasgift.candy.Candy, by.epam.christmasgift.candy.Candy):::EXIT
by.epam.christmasgift.candy.Candy.logger == orig(by.epam.christmasgift.candy.Candy.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.candy.Candy.logger.name == orig(by.epam.christmasgift.candy.Candy.logger.name)
by.epam.christmasgift.candy.Candy.logger.name.toString == orig(by.epam.christmasgift.candy.Candy.logger.name.toString)
by.epam.christmasgift.candy.Candy.logger.level == orig(by.epam.christmasgift.candy.Candy.logger.level)
by.epam.christmasgift.candy.Candy.logger.parent == orig(by.epam.christmasgift.candy.Candy.logger.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.candy.Candy.logger.resourceBundle == orig(by.epam.christmasgift.candy.Candy.logger.resourceBundle)
by.epam.christmasgift.candy.Candy.logger.repository == orig(by.epam.christmasgift.candy.Candy.logger.repository)
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == orig(by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName())
by.epam.christmasgift.candy.Candy.logger.aai == orig(by.epam.christmasgift.candy.Candy.logger.aai)
by.epam.christmasgift.candy.Candy.logger.additive == orig(by.epam.christmasgift.candy.Candy.logger.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
arg0.protein == orig(arg0.protein)
arg0.fat == orig(arg0.fat)
arg0.carbohydrate == orig(arg0.carbohydrate)
arg0.kiloCalories == orig(arg0.kiloCalories)
arg0.weight == orig(arg0.weight)
arg0.sugarContent == orig(arg0.sugarContent)
arg1.protein == orig(arg1.protein)
arg1.fat == orig(arg1.fat)
arg1.carbohydrate == orig(arg1.carbohydrate)
arg1.kiloCalories == orig(arg1.kiloCalories)
arg1.weight == orig(arg1.weight)
arg1.sugarContent == orig(arg1.sugarContent)
by.epam.christmasgift.candy.Candy.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.candy.Candy.logger.name has only one value
by.epam.christmasgift.candy.Candy.logger.name.toString == "by.epam.christmasgift.candy.Candy"
by.epam.christmasgift.candy.Candy.logger.level == null
by.epam.christmasgift.candy.Candy.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.candy.Candy.logger.resourceBundle == null
by.epam.christmasgift.candy.Candy.logger.repository has only one value
by.epam.christmasgift.candy.Candy.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.candy.Candy.logger.aai == null
by.epam.christmasgift.candy.Candy.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.protein one of { 20, 30 }
arg0.fat one of { 15, 20, 40 }
arg0.carbohydrate one of { 10, 20, 30 }
arg0.kiloCalories one of { 30, 60, 70 }
arg0.weight one of { 34, 40 }
arg0.sugarContent one of { 45, 60, 65 }
arg1.protein one of { 10, 20, 30 }
arg1.fat one of { 20, 40 }
arg1.carbohydrate one of { 10, 20, 30 }
arg1.kiloCalories one of { 20, 60, 70 }
arg1.weight one of { 34, 40, 50 }
arg1.sugarContent one of { 45, 60, 65 }
return one of { -1, 0, 1 }
===========================================================================
by.epam.christmasgift.main.Main:::CLASS
by.epam.christmasgift.main.Main.logger.parent.resourceBundle == by.epam.christmasgift.main.Main.logger.resourceBundle
by.epam.christmasgift.main.Main.logger.parent.repository == by.epam.christmasgift.main.Main.logger.repository
by.epam.christmasgift.main.Main.logger.parent.aai == by.epam.christmasgift.main.Main.logger.aai
by.epam.christmasgift.main.Main.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
by.epam.christmasgift.main.Main.logger.name has only one value
by.epam.christmasgift.main.Main.logger.name.toString == "by.epam.christmasgift.main.Main"
by.epam.christmasgift.main.Main.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
by.epam.christmasgift.main.Main.logger.parent has only one value
by.epam.christmasgift.main.Main.logger.parent.name has only one value
by.epam.christmasgift.main.Main.logger.parent.name.toString == "root"
by.epam.christmasgift.main.Main.logger.parent.level has only one value
by.epam.christmasgift.main.Main.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
by.epam.christmasgift.main.Main.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
by.epam.christmasgift.main.Main.logger.resourceBundle == null
by.epam.christmasgift.main.Main.logger.repository has only one value
by.epam.christmasgift.main.Main.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
by.epam.christmasgift.main.Main.logger.aai == null
by.epam.christmasgift.main.Main.logger.additive == true
===========================================================================
by.epam.christmasgift.main.Main.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
by.epam.christmasgift.main.Main.main(java.lang.String[]):::EXIT
by.epam.christmasgift.main.Main.logger == orig(by.epam.christmasgift.main.Main.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
by.epam.christmasgift.main.Main.logger.name == orig(by.epam.christmasgift.main.Main.logger.name)
by.epam.christmasgift.main.Main.logger.name.toString == orig(by.epam.christmasgift.main.Main.logger.name.toString)
by.epam.christmasgift.main.Main.logger.level == orig(by.epam.christmasgift.main.Main.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
by.epam.christmasgift.main.Main.logger.parent == orig(by.epam.christmasgift.main.Main.logger.parent)
by.epam.christmasgift.main.Main.logger.parent.name == orig(by.epam.christmasgift.main.Main.logger.parent.name)
by.epam.christmasgift.main.Main.logger.parent.name.toString == orig(by.epam.christmasgift.main.Main.logger.parent.name.toString)
by.epam.christmasgift.main.Main.logger.parent.level == orig(by.epam.christmasgift.main.Main.logger.parent.level)
by.epam.christmasgift.main.Main.logger.parent.parent == orig(by.epam.christmasgift.main.Main.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
by.epam.christmasgift.main.Main.logger.parent.additive == orig(by.epam.christmasgift.main.Main.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
by.epam.christmasgift.main.Main.logger.resourceBundle == orig(by.epam.christmasgift.main.Main.logger.parent.resourceBundle)
by.epam.christmasgift.main.Main.logger.resourceBundle == orig(by.epam.christmasgift.main.Main.logger.resourceBundle)
by.epam.christmasgift.main.Main.logger.repository == orig(by.epam.christmasgift.main.Main.logger.parent.repository)
by.epam.christmasgift.main.Main.logger.repository == orig(by.epam.christmasgift.main.Main.logger.repository)
by.epam.christmasgift.main.Main.logger.aai == orig(by.epam.christmasgift.main.Main.logger.parent.aai)
by.epam.christmasgift.main.Main.logger.aai == orig(by.epam.christmasgift.main.Main.logger.aai)
by.epam.christmasgift.main.Main.logger.additive == orig(by.epam.christmasgift.main.Main.logger.additive)
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
org.apache.log4j.Category:::OBJECT
this.name != null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.OFF != null
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.FATAL != null
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.ERROR != null
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.WARN != null
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.INFO != null
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.DEBUG != null
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.TRACE != null
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.ALL != null
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr != null
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr != null
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr != null
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr != null
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr != null
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr != null
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr != null
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr != null
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.level.level == 10000
this.level.levelStr has only one value
this.level.levelStr.toString == "DEBUG"
this.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr != null
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr != null
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr != null
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr != null
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr != null
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent.name has only one value
this.parent.name != null
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.level != null
this.parent.level.level == 10000
this.parent.level.levelStr has only one value
this.parent.level.levelStr != null
this.parent.level.levelStr.toString == "DEBUG"
this.parent.level.syslogEquivalent == 7
this.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN != null
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.apache.log4j.Category.class$org$apache$log4j$Category != null
this.parent.resourceBundle == null
this.parent.repository has only one value
this.parent.repository != null
this.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.parent.aai == null
this.parent.additive == true
this.resourceBundle == null
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.Category.Category(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.Category.Category(java.lang.String):::EXIT
name.toString == orig(name.toString)
this.level == null
this.parent == null
this.repository == null
===========================================================================
org.apache.log4j.Category.callAppenders(org.apache.log4j.spi.LoggingEvent):::ENTER
this.level == null
this.parent has only one value
this.repository has only one value
org.apache.log4j.spi.LoggingEvent.startTime == 1743926442081L
event.fqnOfCategoryClass has only one value
event.fqnOfCategoryClass.toString == "org.apache.log4j.Category"
event.logger.level == null
event.logger.parent has only one value
event.logger.resourceBundle == null
event.logger.repository has only one value
event.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
event.logger.aai == null
event.logger.additive == true
event.level has only one value
event.level.level == 20000
event.level.levelStr has only one value
event.level.levelStr.toString == "INFO"
event.level.syslogEquivalent == 6
event.ndc == null
event.mdcCopy == null
event.ndcLookupRequired == true
event.mdcCopyLookupRequired == true
event.message.getClass().getName() == java.lang.String.class
event.renderedMessage == null
event.threadName == null
event.throwableInfo == null
event.locationInfo == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY has only one value
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == java.lang.Integer[].class
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] elements == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() elements == null
org.apache.log4j.spi.LoggingEvent.TO_LEVEL has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == "toLevel"
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == java.lang.Class[].class
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] contains no nulls and has only one value, of length 1
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] elements has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() == [java.lang.Class]
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() elements == java.lang.Class.class
org.apache.log4j.spi.LoggingEvent.methodCache has only one value
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == null
size(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[]) == 1
size(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[]) == 1
===========================================================================
org.apache.log4j.Category.callAppenders(org.apache.log4j.spi.LoggingEvent):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
org.apache.log4j.spi.LoggingEvent.startTime == orig(org.apache.log4j.spi.LoggingEvent.startTime)
event.fqnOfCategoryClass == orig(event.fqnOfCategoryClass)
event.fqnOfCategoryClass.toString == orig(event.fqnOfCategoryClass.toString)
event.logger == orig(event.logger)
event.logger.name == orig(event.logger.name)
event.logger.name.toString == orig(event.logger.name.toString)
event.logger.level == orig(event.logger.level)
event.logger.parent == orig(event.logger.parent)
event.logger.resourceBundle == orig(event.logger.resourceBundle)
event.logger.repository == orig(event.logger.repository)
event.logger.repository.getClass().getName() == orig(event.logger.repository.getClass().getName())
event.logger.aai == orig(event.logger.aai)
event.logger.additive == orig(event.logger.additive)
event.categoryName == orig(event.categoryName)
event.categoryName.toString == orig(event.categoryName.toString)
event.level == orig(event.level)
event.level.level == orig(event.level.level)
event.level.levelStr == orig(event.level.levelStr)
event.level.levelStr.toString == orig(event.level.levelStr.toString)
event.level.syslogEquivalent == orig(event.level.syslogEquivalent)
event.ndc == orig(event.ndc)
event.mdcCopy == orig(event.mdcCopy)
event.ndcLookupRequired == orig(event.ndcLookupRequired)
event.mdcCopyLookupRequired == orig(event.mdcCopyLookupRequired)
event.message == orig(event.message)
event.message.getClass().getName() == orig(event.message.getClass().getName())
event.renderedMessage == orig(event.renderedMessage)
event.threadName == orig(event.threadName)
event.throwableInfo == orig(event.throwableInfo)
event.timeStamp == orig(event.timeStamp)
event.locationInfo == orig(event.locationInfo)
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY == orig(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY)
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == orig(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName())
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == orig(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[])
org.apache.log4j.spi.LoggingEvent.TO_LEVEL == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL)
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString)
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS)
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName())
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[])
org.apache.log4j.spi.LoggingEvent.methodCache == orig(org.apache.log4j.spi.LoggingEvent.methodCache)
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == orig(org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level)
this.level == null
this.parent has only one value
this.repository has only one value
org.apache.log4j.spi.LoggingEvent.startTime == 1743926442081L
event.fqnOfCategoryClass has only one value
event.fqnOfCategoryClass.toString == "org.apache.log4j.Category"
event.logger.level == null
event.logger.parent has only one value
event.logger.resourceBundle == null
event.logger.repository has only one value
event.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
event.logger.aai == null
event.logger.additive == true
event.level has only one value
event.level.level == 20000
event.level.levelStr has only one value
event.level.levelStr.toString == "INFO"
event.level.syslogEquivalent == 6
event.ndc == null
event.mdcCopy == null
event.ndcLookupRequired == true
event.mdcCopyLookupRequired == true
event.message.getClass().getName() == java.lang.String.class
event.renderedMessage == null
event.threadName == null
event.throwableInfo == null
event.locationInfo == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY has only one value
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == java.lang.Integer[].class
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] elements == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() elements == null
org.apache.log4j.spi.LoggingEvent.TO_LEVEL has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == "toLevel"
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == java.lang.Class[].class
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] contains no nulls and has only one value, of length 1
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] elements has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() == [java.lang.Class]
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() elements == java.lang.Class.class
org.apache.log4j.spi.LoggingEvent.methodCache has only one value
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == null
size(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[]) == 1
size(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[]) == 1
===========================================================================
org.apache.log4j.Category.class$(java.lang.String):::ENTER
x0 has only one value
x0.toString == "org.apache.log4j.Category"
===========================================================================
org.apache.log4j.Category.class$(java.lang.String):::EXIT
x0.toString == orig(x0.toString)
x0.toString == "org.apache.log4j.Category"
return has only one value
===========================================================================
org.apache.log4j.Category.forcedLog(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::ENTER
this.level == null
this.parent has only one value
this.repository has only one value
fqcn has only one value
fqcn.toString == "org.apache.log4j.Category"
level has only one value
level.level == 20000
level.levelStr has only one value
level.levelStr.toString == "INFO"
level.syslogEquivalent == 6
message.getClass().getName() == java.lang.String.class
t == null
===========================================================================
org.apache.log4j.Category.forcedLog(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
fqcn.toString == orig(fqcn.toString)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
this.level == null
this.parent has only one value
this.repository has only one value
fqcn.toString == "org.apache.log4j.Category"
level.level == 20000
level.levelStr has only one value
level.levelStr.toString == "INFO"
level.syslogEquivalent == 6
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::ENTER
this.level == null
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::EXIT441
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.level == null
this.parent has only one value
this.repository has only one value
return has only one value
return.level == 10000
return.levelStr has only one value
return.levelStr.toString == "DEBUG"
return.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Category.getName():::ENTER
this.level == null
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Category.getName():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.level == null
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Category.info(java.lang.Object):::ENTER
this.level == null
this.parent has only one value
this.repository has only one value
message.getClass().getName() == java.lang.String.class
===========================================================================
org.apache.log4j.Category.info(java.lang.Object):::EXIT664
===========================================================================
org.apache.log4j.Category.info(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.level == null
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Category.setHierarchy(org.apache.log4j.spi.LoggerRepository):::ENTER
this.parent == null
this.repository == null
repository has only one value
repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.Category.setHierarchy(org.apache.log4j.spi.LoggerRepository):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.level.level == orig(this.level.level)
this.level.levelStr == orig(this.level.levelStr)
this.level.levelStr.toString == orig(this.level.levelStr.toString)
this.level.syslogEquivalent == orig(this.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.resourceBundle == orig(this.resourceBundle)
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.parent == null
this.repository has only one value
===========================================================================
org.apache.log4j.CategoryKey:::CLASS
===========================================================================
org.apache.log4j.CategoryKey:::OBJECT
this.name != null
===========================================================================
org.apache.log4j.CategoryKey.CategoryKey(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.log4j.CategoryKey.CategoryKey(java.lang.String):::EXIT
this.name == orig(name)
name.toString == orig(name.toString)
===========================================================================
org.apache.log4j.CategoryKey.class$(java.lang.String):::ENTER
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == null
x0 has only one value
x0.toString == "org.apache.log4j.CategoryKey"
===========================================================================
org.apache.log4j.CategoryKey.class$(java.lang.String):::EXIT
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == orig(org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey)
x0.toString == orig(x0.toString)
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == null
x0.toString == "org.apache.log4j.CategoryKey"
return has only one value
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::ENTER
rArg.getClass().getName() == org.apache.log4j.CategoryKey.class
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT47
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT47;condition="return == true"
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hashCache == orig(this.hashCache)
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey has only one value
return == true
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.apache.log4j.CategoryKey.hashCode():::ENTER
===========================================================================
org.apache.log4j.CategoryKey.hashCode():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hashCache == orig(this.hashCache)
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == orig(org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey)
===========================================================================
org.apache.log4j.DefaultCategoryFactory:::OBJECT
===========================================================================
org.apache.log4j.DefaultCategoryFactory.DefaultCategoryFactory():::EXIT
===========================================================================
org.apache.log4j.DefaultCategoryFactory.makeNewLoggerInstance(java.lang.String):::ENTER
this has only one value
===========================================================================
org.apache.log4j.DefaultCategoryFactory.makeNewLoggerInstance(java.lang.String):::EXIT
name.toString == orig(name.toString)
return.name == orig(name)
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository == null
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy:::OBJECT
this.thresholdInt == this.threshold.level
org.apache.log4j.Level.FATAL.levelStr == org.apache.log4j.Priority.FATAL.levelStr
org.apache.log4j.Level.ERROR.levelStr == org.apache.log4j.Priority.ERROR.levelStr
org.apache.log4j.Level.WARN.levelStr == org.apache.log4j.Priority.WARN.levelStr
org.apache.log4j.Level.INFO.levelStr == org.apache.log4j.Priority.INFO.levelStr
org.apache.log4j.Level.DEBUG.levelStr == org.apache.log4j.Priority.DEBUG.levelStr
this has only one value
this.defaultFactory.getClass().getName() == org.apache.log4j.DefaultCategoryFactory.class
this.listeners has only one value
this.listeners != null
this.listeners[] == []
this.listeners[].getClass().getName() == []
this.ht has only one value
this.ht != null
this.root has only one value
this.root != null
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN != null
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Logger.class$org$apache$log4j$Logger != null
this.root.name has only one value
this.root.name != null
this.root.name.toString == "root"
this.root.level has only one value
this.root.level != null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.OFF != null
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.FATAL != null
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.ERROR != null
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.WARN != null
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.INFO != null
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.DEBUG != null
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.TRACE != null
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.ALL != null
org.apache.log4j.Level.class$org$apache$log4j$Level == null
this.root.level.level == 10000
this.root.level.levelStr has only one value
this.root.level.levelStr != null
this.root.level.levelStr.toString == "DEBUG"
this.root.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
this.root.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN != null
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.apache.log4j.Category.class$org$apache$log4j$Category != null
this.root.resourceBundle == null
this.root.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.root.aai == null
this.root.additive == true
this.rendererMap.map has only one value
this.rendererMap.map != null
org.apache.log4j.or.RendererMap.defaultRenderer has only one value
org.apache.log4j.or.RendererMap.defaultRenderer != null
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == org.apache.log4j.or.DefaultRenderer.class
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == null
this.thresholdInt one of { -2147483648, 0 }
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr != null
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr != null
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr != null
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr != null
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr != null
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr != null
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr != null
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr != null
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.threshold.level == -2147483648
this.threshold.levelStr has only one value
this.threshold.levelStr != null
this.threshold.levelStr.toString == "ALL"
this.threshold.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.emittedNoResourceBundleWarning == false
this.defaultFactory.getClass().getName() != this.root.repository.getClass().getName()
this.defaultFactory.getClass().getName() != org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName()
this.root.repository.getClass().getName() != org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName()
===========================================================================
org.apache.log4j.Hierarchy.Hierarchy(org.apache.log4j.Logger):::ENTER
root.level == org.apache.log4j.Level.DEBUG
root has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
root.name has only one value
root.name.toString == "root"
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
root.level.level == 10000
root.level.levelStr has only one value
root.level.levelStr.toString == "DEBUG"
root.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
root.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
root.resourceBundle == null
root.repository == null
root.aai == null
root.additive == true
===========================================================================
org.apache.log4j.Hierarchy.Hierarchy(org.apache.log4j.Logger):::EXIT
this.root == orig(root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == root.name
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == root.level
org.apache.log4j.Level.DEBUG == orig(root.level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == this.threshold
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == root.level.level
this.root.level.levelStr == root.level.levelStr
this.root.level.syslogEquivalent == root.level.syslogEquivalent
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.repository == root.repository
this.root.repository.getClass().getName() == root.repository.getClass().getName()
this.root.additive == root.additive
root.name == orig(root.name)
root.name.toString == orig(root.name.toString)
root.level.level == orig(root.level.level)
root.level.levelStr == orig(root.level.levelStr)
root.level.levelStr.toString == orig(root.level.levelStr.toString)
root.level.syslogEquivalent == orig(root.level.syslogEquivalent)
root.parent == orig(root.parent)
root.resourceBundle == orig(root.resourceBundle)
root.aai == orig(root.aai)
root.additive == orig(root.additive)
this.defaultFactory has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.emittedNoAppenderWarning == false
root.name has only one value
root.name.toString == "root"
root.level.level == 10000
root.level.levelStr has only one value
root.level.levelStr.toString == "DEBUG"
root.level.syslogEquivalent == 7
root.parent == null
root.resourceBundle == null
root.repository has only one value
root.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
root.aai == null
root.additive == true
===========================================================================
org.apache.log4j.Hierarchy.emitNoAppenderWarning(org.apache.log4j.Category):::ENTER
this.root.repository.getClass().getName() == cat.parent.repository.getClass().getName()
this.root.repository.getClass().getName() == cat.repository.getClass().getName()
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
cat.level == null
cat.parent has only one value
cat.parent.name has only one value
cat.parent.name.toString == "root"
cat.parent.level has only one value
cat.parent.parent == null
cat.parent.resourceBundle == null
cat.parent.repository has only one value
cat.parent.aai == null
cat.parent.additive == true
cat.resourceBundle == null
cat.repository has only one value
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Hierarchy.emitNoAppenderWarning(org.apache.log4j.Category):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == cat.repository.getClass().getName()
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.thresholdInt == orig(this.threshold.level)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
cat.name == orig(cat.name)
cat.name.toString == orig(cat.name.toString)
cat.level == orig(cat.level)
cat.parent == orig(cat.parent)
cat.parent.name == orig(cat.parent.name)
cat.parent.name.toString == orig(cat.parent.name.toString)
cat.parent.level == orig(cat.parent.level)
cat.parent.parent == orig(cat.parent.parent)
cat.parent.resourceBundle == orig(cat.parent.resourceBundle)
cat.parent.repository == orig(cat.parent.repository)
cat.parent.repository.getClass().getName() == cat.repository.getClass().getName()
cat.parent.aai == orig(cat.parent.aai)
cat.parent.additive == orig(cat.parent.additive)
cat.resourceBundle == orig(cat.resourceBundle)
cat.repository == orig(cat.repository)
cat.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
cat.repository.getClass().getName() == orig(cat.parent.repository.getClass().getName())
cat.repository.getClass().getName() == orig(cat.repository.getClass().getName())
cat.aai == orig(cat.aai)
cat.additive == orig(cat.additive)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
this.emittedNoAppenderWarning == true
cat.level == null
cat.parent has only one value
cat.parent.name has only one value
cat.parent.name.toString == "root"
cat.parent.level has only one value
cat.parent.parent == null
cat.parent.resourceBundle == null
cat.parent.repository has only one value
cat.parent.aai == null
cat.parent.additive == true
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
this.defaultFactory.getClass().getName() != cat.repository.getClass().getName()
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() != cat.repository.getClass().getName()
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String):::ENTER
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.ALL == this.threshold
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == return.parent.name
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == return.parent.level
org.apache.log4j.Level.DEBUG == orig(this.root.level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == this.threshold
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.ALL == orig(this.threshold)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == return.repository
this.root.repository.getClass().getName() == return.repository.getClass().getName()
this.root.aai == orig(this.root.aai)
this.root.additive == return.parent.additive
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.thresholdInt == orig(this.threshold.level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
name.toString == orig(name.toString)
return.name == orig(name)
return.parent.repository == return.repository
return.parent.repository.getClass().getName() == return.repository.getClass().getName()
return.repository == orig(this.root.repository)
return.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.defaultFactory has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
return.level == null
return.parent has only one value
return.parent.name.toString == "root"
return.parent.parent == null
return.parent.resourceBundle == null
return.parent.aai == null
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::ENTER
this.defaultFactory == factory
this.defaultFactory.getClass().getName() == factory.getClass().getName()
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.ALL == this.threshold
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::EXIT274
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory == orig(factory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.defaultFactory.getClass().getName() == orig(factory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == return.parent.name
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == return.parent.level
org.apache.log4j.Level.DEBUG == orig(this.root.level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == this.threshold
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.ALL == orig(this.threshold)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == return.repository
this.root.repository.getClass().getName() == return.repository.getClass().getName()
this.root.aai == orig(this.root.aai)
this.root.additive == return.parent.additive
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.thresholdInt == orig(this.threshold.level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
name.toString == orig(name.toString)
return.name == orig(name)
return.parent.repository == return.repository
return.parent.repository.getClass().getName() == return.repository.getClass().getName()
return.repository == orig(this.root.repository)
return.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.defaultFactory has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
return.level == null
return.parent has only one value
return.parent.name.toString == "root"
return.parent.parent == null
return.parent.resourceBundle == null
return.parent.aai == null
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::ENTER
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.ALL == this.threshold
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
level == 20000
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(this.root.level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == this.threshold
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.ALL == orig(this.threshold)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.thresholdInt == orig(this.threshold.level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
return == false
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.log4j.Hierarchy.setThreshold(org.apache.log4j.Level):::ENTER
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.ALL == l
this.defaultFactory == null
this.root.repository == null
this.rendererMap == null
this.thresholdInt == 0
this.threshold == null
this.emittedNoAppenderWarning == false
l.level == -2147483648
l.levelStr has only one value
l.levelStr.toString == "ALL"
l.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Hierarchy.setThreshold(org.apache.log4j.Level):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(this.root.level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == this.threshold
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.ALL == orig(l)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.thresholdInt == l.level
this.thresholdInt == orig(l.level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.levelStr == l.levelStr
this.threshold.syslogEquivalent == l.syslogEquivalent
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
l.levelStr == orig(l.levelStr)
l.levelStr.toString == orig(l.levelStr.toString)
l.syslogEquivalent == orig(l.syslogEquivalent)
this.defaultFactory == null
this.root.repository == null
this.rendererMap == null
this.thresholdInt == -2147483648
this.emittedNoAppenderWarning == false
l.levelStr has only one value
l.levelStr.toString == "ALL"
l.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Hierarchy.updateParents(org.apache.log4j.Logger):::ENTER
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.ALL == this.threshold
this.root.repository == cat.repository
this.root.repository.getClass().getName() == cat.repository.getClass().getName()
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
cat.level == null
cat.parent == null
cat.resourceBundle == null
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Hierarchy.updateParents(org.apache.log4j.Logger):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == cat.parent.name
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == cat.parent.level
org.apache.log4j.Level.DEBUG == orig(this.root.level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == this.threshold
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.ALL == orig(this.threshold)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == cat.repository
this.root.repository.getClass().getName() == cat.repository.getClass().getName()
this.root.aai == orig(this.root.aai)
this.root.additive == cat.parent.additive
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.thresholdInt == orig(this.threshold.level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
cat.name == orig(cat.name)
cat.name.toString == orig(cat.name.toString)
cat.level == orig(cat.level)
cat.parent.repository == cat.repository
cat.parent.repository.getClass().getName() == cat.repository.getClass().getName()
cat.resourceBundle == orig(cat.resourceBundle)
cat.repository == orig(this.root.repository)
cat.repository == orig(cat.repository)
cat.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
cat.repository.getClass().getName() == orig(cat.repository.getClass().getName())
cat.aai == orig(cat.aai)
cat.additive == orig(cat.additive)
this.defaultFactory has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
cat.level == null
cat.parent has only one value
cat.parent.name.toString == "root"
cat.parent.parent == null
cat.parent.resourceBundle == null
cat.parent.aai == null
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Level:::CLASS
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Level:::OBJECT
this.levelStr != null
this.syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Level.Level(int, java.lang.String, int):::ENTER
levelStr != null
syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Level.Level(int, java.lang.String, int):::EXIT
levelStr.toString == orig(levelStr.toString)
===========================================================================
org.apache.log4j.LogManager:::CLASS
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE has only one value
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == "log4j.properties"
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE has only one value
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == "log4j.xml"
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY has only one value
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == "log4j.configuration"
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY has only one value
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == "log4j.configuratorClass"
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY has only one value
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == "log4j.defaultInitOverride"
org.apache.log4j.LogManager.guard == null
org.apache.log4j.LogManager.repositorySelector has only one value
org.apache.log4j.LogManager.repositorySelector.getClass().getName() == org.apache.log4j.spi.DefaultRepositorySelector.class
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.String):::EXIT
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString)
org.apache.log4j.LogManager.guard == orig(org.apache.log4j.LogManager.guard)
org.apache.log4j.LogManager.repositorySelector == orig(org.apache.log4j.LogManager.repositorySelector)
org.apache.log4j.LogManager.repositorySelector.getClass().getName() == orig(org.apache.log4j.LogManager.repositorySelector.getClass().getName())
name.toString == orig(name.toString)
return.name == orig(name)
return.parent.repository == return.repository
return.parent.repository.getClass().getName() == return.repository.getClass().getName()
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
return.parent.resourceBundle == null
return.parent.aai == null
return.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.LogManager.getLoggerRepository():::ENTER
===========================================================================
org.apache.log4j.LogManager.getLoggerRepository():::EXIT
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString)
org.apache.log4j.LogManager.guard == orig(org.apache.log4j.LogManager.guard)
org.apache.log4j.LogManager.repositorySelector == orig(org.apache.log4j.LogManager.repositorySelector)
return has only one value
return.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.Logger:::CLASS
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN != null
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Logger.class$org$apache$log4j$Logger != null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
===========================================================================
org.apache.log4j.Logger:::OBJECT
this.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.resourceBundle == null
this.repository == null
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.Logger.Logger(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.Logger.Logger(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.log4j.Logger.class$(java.lang.String):::ENTER
x0 has only one value
x0.toString == "org.apache.log4j.Logger"
===========================================================================
org.apache.log4j.Logger.class$(java.lang.String):::EXIT
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
x0.toString == orig(x0.toString)
x0.toString == "org.apache.log4j.Logger"
return has only one value
===========================================================================
org.apache.log4j.Logger.getLogger(java.lang.Class):::ENTER
===========================================================================
org.apache.log4j.Logger.getLogger(java.lang.Class):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
return.name.toString one of { "by.epam.christmasgift.candy.Candy", "by.epam.christmasgift.candy.ChristmasGift", "by.epam.christmasgift.logic.CandyParser" }
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.parent.additive == true
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Logger.getLogger(java.lang.String):::ENTER
name has only one value
name.toString == "by.epam.christmasgift.main.Main"
===========================================================================
org.apache.log4j.Logger.getLogger(java.lang.String):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
name.toString == orig(name.toString)
name.toString == "by.epam.christmasgift.main.Main"
return has only one value
return.name has only one value
return.name.toString == "by.epam.christmasgift.main.Main"
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.parent.additive == true
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Priority:::CLASS
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr != null
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr != null
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr != null
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr != null
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr != null
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Priority:::OBJECT
this.levelStr != null
===========================================================================
org.apache.log4j.Priority.Priority(int, java.lang.String, int):::ENTER
levelStr != null
syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Priority.Priority(int, java.lang.String, int):::EXIT
levelStr.toString == orig(levelStr.toString)
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::ENTER
this has only one value
this.level == 20000
this.levelStr has only one value
this.levelStr.toString == "INFO"
this.syslogEquivalent == 6
r has only one value
r.level == 10000
r.levelStr has only one value
r.levelStr.toString == "DEBUG"
r.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::EXIT
this.level == orig(this.level)
this.levelStr == orig(this.levelStr)
this.levelStr.toString == orig(this.levelStr.toString)
this.syslogEquivalent == orig(this.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
r.level == orig(r.level)
r.levelStr == orig(r.levelStr)
r.levelStr.toString == orig(r.levelStr.toString)
r.syslogEquivalent == orig(r.syslogEquivalent)
this.level == 20000
this.levelStr has only one value
this.levelStr.toString == "INFO"
this.syslogEquivalent == 6
r.level == 10000
r.levelStr has only one value
r.levelStr.toString == "DEBUG"
r.syslogEquivalent == 7
return == true
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::EXIT;condition="return == true"
===========================================================================
org.apache.log4j.PropertyConfigurator:::CLASS
org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX.toString == "log4j.category."
org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX.toString == "log4j.logger."
org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX.toString == "log4j.factory"
org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX.toString == "log4j.additivity."
org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX.toString == "log4j.rootCategory"
org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX.toString == "log4j.rootLogger"
org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX.toString == "log4j.appender."
org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX.toString == "log4j.renderer."
org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX has only one value
org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX.toString == "log4j.threshold"
org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY has only one value
org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY.toString == "log4j.loggerFactory"
org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME has only one value
org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME.toString == "root"
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$spi$LoggerFactory == null
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Appender == null
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Layout == null
===========================================================================
org.apache.log4j.PropertyConfigurator:::OBJECT
this has only one value
this.registry has only one value
this.loggerFactory has only one value
this.loggerFactory.getClass().getName() == org.apache.log4j.DefaultCategoryFactory.class
===========================================================================
org.apache.log4j.PropertyConfigurator.PropertyConfigurator():::EXIT
===========================================================================
org.apache.log4j.PropertyConfigurator.configure(java.lang.String):::ENTER
configFilename has only one value
configFilename.toString == "log4j.properties"
===========================================================================
org.apache.log4j.PropertyConfigurator.configure(java.lang.String):::EXIT
org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX)
org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX)
org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX)
org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX)
org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX)
org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX)
org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX)
org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX)
org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX == orig(org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX)
org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY == orig(org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY)
org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY.toString == orig(org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY.toString)
org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME == orig(org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME)
org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME.toString == orig(org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME.toString)
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$spi$LoggerFactory == orig(org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$spi$LoggerFactory)
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Appender == orig(org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Appender)
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Layout == orig(org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Layout)
configFilename.toString == orig(configFilename.toString)
configFilename.toString == "log4j.properties"
===========================================================================
org.apache.log4j.PropertyConfigurator.doConfigure(java.lang.String, org.apache.log4j.spi.LoggerRepository):::ENTER
configFileName has only one value
configFileName.toString == "log4j.properties"
hierarchy has only one value
hierarchy.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.PropertyConfigurator.doConfigure(java.lang.String, org.apache.log4j.spi.LoggerRepository):::EXIT313
===========================================================================
org.apache.log4j.PropertyConfigurator.doConfigure(java.lang.String, org.apache.log4j.spi.LoggerRepository):::EXIT
this.registry == orig(this.registry)
this.loggerFactory == orig(this.loggerFactory)
this.loggerFactory.getClass().getName() == orig(this.loggerFactory.getClass().getName())
org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX)
org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.CATEGORY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX)
org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.LOGGER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX)
org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.FACTORY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX)
org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.ADDITIVITY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX == orig(org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX)
org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.ROOT_CATEGORY_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX)
org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.ROOT_LOGGER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX)
org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.APPENDER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX == orig(org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX)
org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.RENDERER_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX == orig(org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX)
org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX.toString == orig(org.apache.log4j.PropertyConfigurator.THRESHOLD_PREFIX.toString)
org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY == orig(org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY)
org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY.toString == orig(org.apache.log4j.PropertyConfigurator.LOGGER_FACTORY_KEY.toString)
org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME == orig(org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME)
org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME.toString == orig(org.apache.log4j.PropertyConfigurator.INTERNAL_ROOT_NAME.toString)
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$spi$LoggerFactory == orig(org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$spi$LoggerFactory)
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Appender == orig(org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Appender)
org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Layout == orig(org.apache.log4j.PropertyConfigurator.class$org$apache$log4j$Layout)
configFileName.toString == orig(configFileName.toString)
configFileName.toString == "log4j.properties"
===========================================================================
org.apache.log4j.ProvisionNode:::OBJECT
===========================================================================
org.apache.log4j.ProvisionNode.ProvisionNode(org.apache.log4j.Logger):::ENTER
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name.toString one of { "by.epam.christmasgift.candy.ChristmasGift", "by.epam.christmasgift.logic.CandyParser", "by.epam.christmasgift.main.Main" }
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.apache.log4j.ProvisionNode.ProvisionNode(org.apache.log4j.Logger):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
logger.name == orig(logger.name)
logger.name.toString == orig(logger.name.toString)
logger.level == orig(logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
logger.parent == orig(logger.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
logger.resourceBundle == orig(logger.resourceBundle)
logger.repository == orig(logger.repository)
logger.repository.getClass().getName() == orig(logger.repository.getClass().getName())
logger.aai == orig(logger.aai)
logger.additive == orig(logger.additive)
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name.toString one of { "by.epam.christmasgift.candy.ChristmasGift", "by.epam.christmasgift.logic.CandyParser", "by.epam.christmasgift.main.Main" }
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.apache.log4j.helpers.Loader.class$(java.lang.String):::ENTER
x0.toString one of { "java.lang.Thread", "org.apache.log4j.helpers.Loader" }
===========================================================================
org.apache.log4j.helpers.Loader.class$(java.lang.String):::EXIT
x0.toString == orig(x0.toString)
x0.toString one of { "java.lang.Thread", "org.apache.log4j.helpers.Loader" }
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::ENTER
resource.toString one of { "log4j.properties", "log4j.xml" }
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::EXIT124
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::EXIT
resource.toString == orig(resource.toString)
resource.toString one of { "log4j.properties", "log4j.xml" }
return == null
===========================================================================
org.apache.log4j.helpers.Loader.getTCL():::EXIT154
===========================================================================
org.apache.log4j.helpers.Loader.getTCL():::EXIT
return has only one value
return.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
org.apache.log4j.helpers.LogLog.debug(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.helpers.LogLog.debug(java.lang.String):::EXIT
msg.toString == orig(msg.toString)
===========================================================================
org.apache.log4j.helpers.LogLog.error(java.lang.String):::ENTER
msg has only one value
msg.toString == "Ignoring configuration file [log4j.properties]."
===========================================================================
org.apache.log4j.helpers.LogLog.error(java.lang.String):::EXIT129
===========================================================================
org.apache.log4j.helpers.LogLog.error(java.lang.String):::EXIT
msg.toString == orig(msg.toString)
msg.toString == "Ignoring configuration file [log4j.properties]."
===========================================================================
org.apache.log4j.helpers.LogLog.error(java.lang.String, java.lang.Throwable):::ENTER
msg has only one value
msg.toString == "Could not read configuration file [log4j.properties]."
t has only one value
===========================================================================
org.apache.log4j.helpers.LogLog.error(java.lang.String, java.lang.Throwable):::EXIT146
===========================================================================
org.apache.log4j.helpers.LogLog.error(java.lang.String, java.lang.Throwable):::EXIT
msg.toString == orig(msg.toString)
msg.toString == "Could not read configuration file [log4j.properties]."
===========================================================================
org.apache.log4j.helpers.LogLog.warn(java.lang.String):::ENTER
msg.toString one of { "No appenders could be found for logger (by.epam.christmasgift.candy.ChristmasGift).", "Please initialize the log4j system properly." }
===========================================================================
org.apache.log4j.helpers.LogLog.warn(java.lang.String):::EXIT171
===========================================================================
org.apache.log4j.helpers.LogLog.warn(java.lang.String):::EXIT
msg.toString == orig(msg.toString)
msg.toString one of { "No appenders could be found for logger (by.epam.christmasgift.candy.ChristmasGift).", "Please initialize the log4j system properly." }
===========================================================================
org.apache.log4j.helpers.OptionConverter:::CLASS
org.apache.log4j.helpers.OptionConverter.DELIM_START has only one value
org.apache.log4j.helpers.OptionConverter.DELIM_START != null
org.apache.log4j.helpers.OptionConverter.DELIM_START.toString == "${"
org.apache.log4j.helpers.OptionConverter.DELIM_STOP == 125
org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN == 2
org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN == 1
org.apache.log4j.helpers.OptionConverter.class$java$lang$String == null
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level == null
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator == null
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::ENTER
def == null
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::EXIT100
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::EXIT
org.apache.log4j.helpers.OptionConverter.DELIM_START == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START)
org.apache.log4j.helpers.OptionConverter.DELIM_START.toString == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START.toString)
org.apache.log4j.helpers.OptionConverter.DELIM_STOP == orig(org.apache.log4j.helpers.OptionConverter.DELIM_STOP)
org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN)
org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN == orig(org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN)
org.apache.log4j.helpers.OptionConverter.class$java$lang$String == orig(org.apache.log4j.helpers.OptionConverter.class$java$lang$String)
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level == orig(org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level)
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator == orig(org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator)
key.toString == orig(key.toString)
return.toString == "11.0.26"
===========================================================================
org.apache.log4j.or.DefaultRenderer:::OBJECT
this has only one value
===========================================================================
org.apache.log4j.or.DefaultRenderer.DefaultRenderer():::EXIT
===========================================================================
org.apache.log4j.or.RendererMap:::CLASS
org.apache.log4j.or.RendererMap.defaultRenderer has only one value
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == org.apache.log4j.or.DefaultRenderer.class
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == null
===========================================================================
org.apache.log4j.or.RendererMap:::OBJECT
this has only one value
this.map has only one value
===========================================================================
org.apache.log4j.or.RendererMap.RendererMap():::EXIT
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector:::OBJECT
this has only one value
this.repository has only one value
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(org.apache.log4j.spi.LoggerRepository):::ENTER
repository has only one value
repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(org.apache.log4j.spi.LoggerRepository):::EXIT
this.repository == orig(repository)
this.repository.getClass().getName() == orig(repository.getClass().getName())
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository():::ENTER
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository():::EXIT
this.repository == return
this.repository.getClass().getName() == return.getClass().getName()
return == orig(this.repository)
return.getClass().getName() == orig(this.repository.getClass().getName())
return has only one value
return.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.LoggingEvent:::CLASS
org.apache.log4j.spi.LoggingEvent.startTime == 1743926442081L
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY has only one value
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == java.lang.Integer[].class
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] elements == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() elements == null
org.apache.log4j.spi.LoggingEvent.TO_LEVEL has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == "toLevel"
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == java.lang.Class[].class
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] contains no nulls and has only one value, of length 1
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] elements has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() == [java.lang.Class]
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() elements == java.lang.Class.class
org.apache.log4j.spi.LoggingEvent.methodCache has only one value
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == null
size(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[]) == 1
size(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[]) == 1
===========================================================================
org.apache.log4j.spi.LoggingEvent:::OBJECT
this.fqnOfCategoryClass has only one value
this.fqnOfCategoryClass.toString == "org.apache.log4j.Category"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "root"
this.logger.parent.level has only one value
this.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
this.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.level has only one value
this.level.level == 20000
this.level.levelStr has only one value
this.level.levelStr.toString == "INFO"
this.level.syslogEquivalent == 6
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.ndc == null
this.mdcCopy == null
this.ndcLookupRequired == true
this.mdcCopyLookupRequired == true
this.message.getClass().getName() == java.lang.String.class
this.renderedMessage == null
this.threadName == null
this.throwableInfo == null
this.locationInfo == null
===========================================================================
org.apache.log4j.spi.LoggingEvent.LoggingEvent(java.lang.String, org.apache.log4j.Category, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::ENTER
fqnOfCategoryClass has only one value
fqnOfCategoryClass.toString == "org.apache.log4j.Category"
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent has only one value
logger.parent.name has only one value
logger.parent.name.toString == "root"
logger.parent.level has only one value
logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
logger.parent.resourceBundle == null
logger.parent.repository has only one value
logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.parent.aai == null
logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
level has only one value
level.level == 20000
level.levelStr has only one value
level.levelStr.toString == "INFO"
level.syslogEquivalent == 6
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
message.getClass().getName() == java.lang.String.class
throwable == null
===========================================================================
org.apache.log4j.spi.LoggingEvent.LoggingEvent(java.lang.String, org.apache.log4j.Category, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::EXIT
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
fqnOfCategoryClass.toString == orig(fqnOfCategoryClass.toString)
logger.name == orig(logger.name)
logger.name.toString == orig(logger.name.toString)
logger.level == orig(logger.level)
logger.parent == orig(logger.parent)
logger.parent.name == orig(logger.parent.name)
logger.parent.name.toString == orig(logger.parent.name.toString)
logger.parent.level == orig(logger.parent.level)
logger.parent.parent == orig(logger.parent.parent)
logger.parent.resourceBundle == orig(logger.parent.resourceBundle)
logger.parent.repository == orig(logger.parent.repository)
logger.parent.repository.getClass().getName() == orig(logger.parent.repository.getClass().getName())
logger.parent.aai == orig(logger.parent.aai)
logger.parent.additive == orig(logger.parent.additive)
logger.resourceBundle == orig(logger.resourceBundle)
logger.repository == orig(logger.repository)
logger.repository.getClass().getName() == orig(logger.repository.getClass().getName())
logger.aai == orig(logger.aai)
logger.additive == orig(logger.additive)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
fqnOfCategoryClass.toString == "org.apache.log4j.Category"
logger.level == null
logger.parent has only one value
logger.parent.name has only one value
logger.parent.name.toString == "root"
logger.parent.level has only one value
logger.parent.parent == null
logger.parent.resourceBundle == null
logger.parent.repository has only one value
logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.parent.aai == null
logger.parent.additive == true
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
level.level == 20000
level.levelStr has only one value
level.levelStr.toString == "INFO"
level.syslogEquivalent == 6
===========================================================================
org.apache.log4j.spi.RootLogger:::CLASS
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
===========================================================================
org.apache.log4j.spi.RootLogger:::OBJECT
org.apache.log4j.Level.FATAL.levelStr == org.apache.log4j.Priority.FATAL.levelStr
org.apache.log4j.Level.ERROR.levelStr == org.apache.log4j.Priority.ERROR.levelStr
org.apache.log4j.Level.WARN.levelStr == org.apache.log4j.Priority.WARN.levelStr
org.apache.log4j.Level.INFO.levelStr == org.apache.log4j.Priority.INFO.levelStr
org.apache.log4j.Level.DEBUG.levelStr == org.apache.log4j.Priority.DEBUG.levelStr
this has only one value
this.name has only one value
this.name.toString == "root"
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.level.level == 10000
this.level.levelStr has only one value
this.level.levelStr.toString == "DEBUG"
this.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.resourceBundle == null
this.repository == null
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.spi.RootLogger.RootLogger(org.apache.log4j.Level):::ENTER
level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.FATAL.levelStr == org.apache.log4j.Priority.FATAL.levelStr
org.apache.log4j.Level.ERROR.levelStr == org.apache.log4j.Priority.ERROR.levelStr
org.apache.log4j.Level.WARN.levelStr == org.apache.log4j.Priority.WARN.levelStr
org.apache.log4j.Level.INFO.levelStr == org.apache.log4j.Priority.INFO.levelStr
org.apache.log4j.Level.DEBUG.levelStr == org.apache.log4j.Priority.DEBUG.levelStr
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.RootLogger(org.apache.log4j.Level):::EXIT
this.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(level)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.level.level == level.level
this.level.levelStr == level.levelStr
this.level.syslogEquivalent == level.syslogEquivalent
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.setLevel(org.apache.log4j.Level):::ENTER
org.apache.log4j.Level.DEBUG == level
this.level == null
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.setLevel(org.apache.log4j.Level):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == org.apache.log4j.Level.DEBUG
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.DEBUG == orig(level)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.level.level == level.level
this.level.levelStr == level.levelStr
this.level.syslogEquivalent == level.syslogEquivalent
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.aai == orig(this.aai)
this.additive == orig(this.additive)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
Exiting Daikon.
