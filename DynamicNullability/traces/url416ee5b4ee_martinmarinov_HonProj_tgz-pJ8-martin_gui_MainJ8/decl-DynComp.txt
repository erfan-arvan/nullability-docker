// Declarations for martin.gui.Main
// Declarations written 2025-04-05T23:24:21.523786 by daikon.DynComp

decl-version 2.0
var-comparability implicit

ppt martin.gui.Main:::CLASS
ppt-type class

ppt martin.gui.Main:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.gui.Main
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt martin.gui.Main.Main():::ENTER
ppt-type enter

ppt martin.gui.Main.Main():::EXIT25
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.gui.Main
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt martin.gui.Main.main(java.lang.String[]):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 3[5]
variable arg0[..].toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic to_string
  comparability 4[6]

ppt martin.gui.Main.main(java.lang.String[]):::EXIT32
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 3[5]
variable arg0[..].toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic to_string
  comparability 4[6]

ppt martin.gui.Main.quantumTeleport():::ENTER
ppt-type enter

ppt martin.gui.Main.quantumTeleport():::EXIT60
ppt-type subexit

ppt martin.gui.Main.AltQunatumTeleport():::ENTER
ppt-type enter

ppt martin.gui.Main.AltQunatumTeleport():::EXIT87
ppt-type subexit

ppt martin.gui.Main.moreComplicatedTest():::ENTER
ppt-type enter

ppt martin.gui.Main.moreComplicatedTest():::EXIT116
ppt-type subexit

ppt martin.gui.Main.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.gui.Main
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.gui.Main.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.gui.Main
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.gui.Main.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.gui.Main
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.gui.Main.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.gui.Main
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.quantum.SystemMatrix:::CLASS
ppt-type class

ppt martin.quantum.SystemMatrix:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.quantum.SystemMatrix.SystemMatrix(martin.math.MathsItem[]):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 3[4]

ppt martin.quantum.SystemMatrix.SystemMatrix(martin.math.MathsItem[]):::EXIT42
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.SystemMatrix(int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.quantum.SystemMatrix.SystemMatrix(int):::EXIT58
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 2
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 3
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[2]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[2]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 3
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[2]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 2
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.quantum.SystemMatrix.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.quantum.SystemMatrix.clone():::EXIT70
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 5
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 6[4]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[4]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 5
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 7[4]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 4
variable return
  var-kind return
  dec-type java.lang.Object
  rep-type hashcode
  comparability 2
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1

ppt martin.quantum.SystemMatrix.setCoeff(martin.math.MathsItem, int[]):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 7
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 8
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 9[7]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[7]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 8
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 10[7]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg1
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 4[11]

ppt martin.quantum.SystemMatrix.setCoeff(martin.math.MathsItem, int[]):::EXIT83
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 7
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 8
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 9[7]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[7]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 8
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 10[7]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg1
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 4[11]

ppt martin.quantum.SystemMatrix.getCoeff(int[]):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.getCoeff(int[]):::EXIT93
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 7
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 8
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 9[7]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[7]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 8
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 10[7]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 7
variable arg0
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[11]
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4

ppt martin.quantum.SystemMatrix.getIdFromIndexes(int[]):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.getIdFromIndexes(int[]):::EXIT104
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 6
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 7
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 8[6]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[6]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 7
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 9[6]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 6
variable arg0
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[10]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 4

ppt martin.quantum.SystemMatrix.getIndexesFromId(int, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt martin.quantum.SystemMatrix.getIndexesFromId(int, int):::EXIT113
ppt-type subexit
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable return
  var-kind return
  dec-type int[]
  rep-type hashcode
  comparability 4
variable return[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 5[6]

ppt martin.quantum.SystemMatrix.getBraKet(int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 5
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 6[4]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[4]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 5
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 7[4]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.quantum.SystemMatrix.getBraKet(int):::EXIT145
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 6
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 7
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 8[6]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[6]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 7
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 9[6]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 6
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 4

ppt martin.quantum.SystemMatrix.getBraKet(int, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt martin.quantum.SystemMatrix.getBraKet(int, int):::EXIT156
ppt-type subexit
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 5

ppt martin.quantum.SystemMatrix.printValues(java.util.HashMap, boolean):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3

ppt martin.quantum.SystemMatrix.printValues(java.util.HashMap, boolean):::EXIT181
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 7
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 8
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 9[7]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[7]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 8
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 10[7]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 7
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 5

ppt martin.quantum.SystemMatrix.performReverse(martin.operators.Operator[]):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.operators.Operator[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type martin.operators.Operator[]
  rep-type hashcode[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.performReverse(martin.operators.Operator[]):::EXIT195
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.operators.Operator[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type martin.operators.Operator[]
  rep-type hashcode[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.perform(martin.operators.Operator[]):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.operators.Operator[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type martin.operators.Operator[]
  rep-type hashcode[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.perform(martin.operators.Operator[]):::EXIT208
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.operators.Operator[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type martin.operators.Operator[]
  rep-type hashcode[]
  comparability 3[9]

ppt martin.quantum.SystemMatrix.getQuickProbability(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 5
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 6[4]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[4]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 5
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 7[4]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.quantum.SystemMatrix.getQuickProbability(java.util.HashMap):::EXIT225
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type double
  rep-type double
  comparability 3

ppt martin.quantum.SystemMatrix.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.quantum.SystemMatrix.simplify():::EXIT231
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.quantum.SystemMatrix.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 5
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 6[4]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[4]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 5
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 7[4]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.quantum.SystemMatrix.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.quantum.SystemMatrix.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 5
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 6[4]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[4]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 5
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 7[4]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.quantum.SystemMatrix.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 5
variable this.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 6
variable this.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.coeff
  flags synthetic classname non_null
  comparability 1
variable this.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 7[5]
variable this.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.coeff[]
  flags synthetic classname non_null
  comparability 1[5]
variable this.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 6
variable this.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 8[5]
variable this.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathExpression:::CLASS
ppt-type class
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.MathExpression():::ENTER
ppt-type enter

ppt martin.math.MathExpression.MathExpression():::EXIT24
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.hasNegativeSign():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.hasNegativeSign():::EXIT29
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.negate():::EXIT39
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.isZero():::EXIT43
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.isOne():::EXIT48
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathExpression.getValue(java.util.HashMap):::EXIT66
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 6
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 7
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 7

ppt martin.math.MathExpression.simplifyMultiplicators():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.simplifyMultiplicators():::EXIT102
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.removeNestedExps():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.removeNestedExps():::EXIT147
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.performAdditionOnSimpleExpressions():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.performAdditionOnSimpleExpressions():::EXIT190
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.removeAllOnes():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.removeAllOnes():::EXIT225
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.removeAllZeros():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.removeAllZeros():::EXIT256
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.removeAllZeros():::EXIT263
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.commonFactors():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.commonFactors():::EXIT332
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathExpression.containsInstance(java.util.HashSet, java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathExpression.containsInstance(java.util.HashSet, java.lang.Object):::EXIT338
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.containsInstance(java.util.HashSet, java.lang.Object):::EXIT340
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.simplify():::EXIT347
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.simplify():::EXIT370
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.simplify():::EXIT375
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.deepSimplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.deepSimplify():::EXIT382
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathExpression.multiply(martin.math.MathsItem):::EXIT417
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathExpression.add(martin.math.MathsItem):::EXIT440
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.clone():::EXIT449
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4

ppt martin.math.MathExpression.cloneItems(java.util.HashSet):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.util.HashSet
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathExpression.cloneItems(java.util.HashSet):::EXIT461
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.util.HashSet
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathExpression.fromString(java.lang.String):::ENTER
ppt-type enter
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathExpression.fromString(java.lang.String):::EXIT515
ppt-type subexit
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable return.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7

ppt martin.math.MathExpression.fromString(java.lang.String):::EXIT517
ppt-type subexit
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable return.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7

ppt martin.math.MathExpression.fromString(java.lang.String):::EXIT529
ppt-type subexit
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable return.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7

ppt martin.math.MathExpression.complexconjugate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.complexconjugate():::EXIT537
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathExpression.parsemultiples(martin.quantum.tools.Tuple):::ENTER
ppt-type enter
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.quantum.tools.Tuple
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.x
  var-kind field x
  dec-type java.lang.Object
  rep-type hashcode
  comparability 3
variable arg0.x.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.x
  flags synthetic classname non_null
  comparability 1
variable arg0.y
  var-kind field y
  dec-type java.lang.Object
  rep-type hashcode
  comparability 4
variable arg0.y.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.y
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathExpression.parsemultiples(martin.quantum.tools.Tuple):::EXIT565
ppt-type subexit
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.quantum.tools.Tuple
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.x
  var-kind field x
  dec-type java.lang.Object
  rep-type hashcode
  comparability 3
variable arg0.x.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.x
  flags synthetic classname non_null
  comparability 1
variable arg0.y
  var-kind field y
  dec-type java.lang.Object
  rep-type hashcode
  comparability 4
variable arg0.y.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.y
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7

ppt martin.math.MathExpression.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathExpression.equals(java.lang.Object):::EXIT571
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathExpression.equals(java.lang.Object):::EXIT573
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathExpression.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathExpression.divide(martin.math.MathsItem):::EXIT590
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.divide(martin.math.MathsItem):::EXIT599
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.divide(martin.math.MathsItem):::EXIT609
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.divide(martin.math.MathsItem):::EXIT612
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExpression.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathExpression.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathNumber:::CLASS
ppt-type class

ppt martin.math.MathNumber:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.MathNumber(double):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2

ppt martin.math.MathNumber.MathNumber(double):::EXIT32
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 2
variable arg0
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2

ppt martin.math.MathNumber.hasNegativeSign():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.hasNegativeSign():::EXIT36
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathNumber.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathNumber.multiply(martin.math.MathsItem):::EXIT44
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.multiply(martin.math.MathsItem):::EXIT47
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathNumber.add(martin.math.MathsItem):::EXIT55
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.add(martin.math.MathsItem):::EXIT58
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.negate():::EXIT64
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.clone():::EXIT68
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 3
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt martin.math.MathNumber.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathNumber.equals(java.lang.Object):::EXIT75
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathNumber.equals(java.lang.Object):::EXIT77
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathNumber.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.isZero():::EXIT94
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathNumber.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.isOne():::EXIT99
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathNumber.isInteger():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.isInteger():::EXIT103
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathNumber.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathNumber.getValue(java.util.HashMap):::EXIT108
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 6
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 4
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 6
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 5

ppt martin.math.MathNumber.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.simplify():::EXIT112
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.fromString(java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathNumber.fromString(java.lang.String):::EXIT116
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathNumber
  rep-type hashcode
  comparability 4
variable return.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5

ppt martin.math.MathNumber.fromString(java.lang.String):::EXIT118
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathNumber
  rep-type hashcode
  comparability 4
variable return.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5

ppt martin.math.MathNumber.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathNumber.divide(martin.math.MathsItem):::EXIT128
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 6
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.divide(martin.math.MathsItem):::EXIT131
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 6
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.divide(martin.math.MathsItem):::EXIT134
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 6
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathNumber.complexconjugate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.complexconjugate():::EXIT138
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.math.MathNumber.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathNumber.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.operators.X:::CLASS
ppt-type class

ppt martin.operators.X:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.operators.X.X(int, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt martin.operators.X.X(int, int):::EXIT24
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt martin.operators.X.X(int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.X.X(int):::EXIT29
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 4
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.X.operate(martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.X.operate(martin.quantum.SystemMatrix):::EXIT37
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.X.operate(martin.quantum.SystemMatrix):::EXIT52
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.X.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 4
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.X.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 5
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 6
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.operators.X.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 4
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.X.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.X
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 5
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 6
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.operators.Z:::CLASS
ppt-type class
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3

ppt martin.operators.Z:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 5
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.operators.Z.Z(int, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt martin.operators.Z.Z(int, int):::EXIT25
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 5
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 7
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt martin.operators.Z.Z(int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.Z.Z(int):::EXIT30
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 6
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 7
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.Z.operate(martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 7
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 8
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 10
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.Z.operate(martin.quantum.SystemMatrix):::EXIT38
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 7
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 8
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 10
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.Z.operate(martin.quantum.SystemMatrix):::EXIT45
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 7
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 8
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 10
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.Z.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 6
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 7
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.Z.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 7
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 8
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.operators.Z.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 6
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 7
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.Z.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.Z
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.operators.Z.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathNumber
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.operators.Z.MINUS_ONE.number
  var-kind field number
  dec-type double
  rep-type double
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 7
variable this.skip
  var-kind field skip
  dec-type boolean
  rep-type boolean
  comparability 8
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.operators.M:::CLASS
ppt-type class
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.M:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 10
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 9
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 8
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 7
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 6
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.M.M(int, int, int, martin.math.MathsItem, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 4
variable arg3
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 5
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg4
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 6

ppt martin.operators.M.M(int, int, int, martin.math.MathsItem, int):::EXIT40
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 9
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 3
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 6
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 4
variable arg3
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 5
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 6

ppt martin.operators.M.operate(martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 9
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 14
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 13
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 12
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 11
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.M.operate(martin.quantum.SystemMatrix):::EXIT52
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 9
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 14
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 13
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 12
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 11
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.M.perform(int, martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 9
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 14
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 13
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 12
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 11
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 2
variable arg1.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 3
variable arg1.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1.coeff
  flags synthetic classname non_null
  comparability 1
variable arg1.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[2]
variable arg1.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.coeff[]
  flags synthetic classname non_null
  comparability 1[2]
variable arg1.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 3
variable arg1.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[2]
variable arg1.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 2

ppt martin.operators.M.perform(int, martin.quantum.SystemMatrix):::EXIT78
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 9
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 14
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 13
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 12
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 11
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 2
variable arg1.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 3
variable arg1.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1.coeff
  flags synthetic classname non_null
  comparability 1
variable arg1.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[2]
variable arg1.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.coeff[]
  flags synthetic classname non_null
  comparability 1[2]
variable arg1.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 3
variable arg1.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[2]
variable arg1.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 2

ppt martin.operators.M.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 11
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 10
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 9
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 8
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 5
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.M.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 12
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 11
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 10
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 9
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 8
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 5
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.operators.M.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 11
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 10
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 9
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 8
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 5
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.M.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.M
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.operators.M.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.M.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.operators.M.ONE_OVER_SQRT_2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.M.ONE_OVER_SQRT_2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.M.ONE_OVER_SQRT_2
  flags synthetic classname non_null
  comparability 1
variable this.t
  var-kind field t
  dec-type int
  rep-type int
  comparability 12
variable this.s
  var-kind field s
  dec-type int
  rep-type int
  comparability 11
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 10
variable this.b
  var-kind field b
  dec-type int
  rep-type int
  comparability 9
variable this.alpha
  var-kind field alpha
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 8
variable this.alpha.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.alpha
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 5
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathSqrt:::CLASS
ppt-type class
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 3

ppt martin.math.MathSqrt:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathSqrt.MathSqrt(martin.math.MathsItem):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathSqrt.MathSqrt(martin.math.MathsItem):::EXIT24
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathSqrt.MathSqrt(martin.math.MathsItem, boolean):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3

ppt martin.math.MathSqrt.MathSqrt(martin.math.MathsItem, boolean):::EXIT29
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 7
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3

ppt martin.math.MathSqrt.fromString(java.lang.String):::ENTER
ppt-type enter
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathSqrt.fromString(java.lang.String):::EXIT33
ppt-type subexit
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 7
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathSqrt
  rep-type hashcode
  comparability 8
variable return.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable return.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.name
  flags synthetic to_string
  comparability 12
variable return.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable return.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13

ppt martin.math.MathSqrt.fromString(java.lang.String):::EXIT34
ppt-type subexit
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 7
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathSqrt
  rep-type hashcode
  comparability 8
variable return.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable return.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.name
  flags synthetic to_string
  comparability 12
variable return.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable return.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13

ppt martin.math.MathSqrt.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathSqrt.isZero():::EXIT39
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathSqrt.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathSqrt.isOne():::EXIT44
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathSqrt.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathSqrt.getValue(java.util.HashMap):::EXIT62
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 7
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 13
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 12
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 14
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 8
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 9
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 9

ppt martin.math.MathSqrt.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathSqrt.simplify():::EXIT68
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathSqrt.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathSqrt.multiply(martin.math.MathsItem):::EXIT78
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathSqrt.multiply(martin.math.MathsItem):::EXIT82
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathSqrt.multiply(martin.math.MathsItem):::EXIT86
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathSqrt.multiply(martin.math.MathsItem):::EXIT89
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathSqrt.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathSqrt.add(martin.math.MathsItem):::EXIT94
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathSqrt.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathSqrt.clone():::EXIT104
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathSqrt.clone():::EXIT107
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathSqrt.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathSqrt.divide(martin.math.MathsItem):::EXIT112
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSqrt
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathSqrt.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathSqrt.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathSqrt.name
  flags synthetic to_string
  comparability 6
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathFunction:::CLASS
ppt-type class

ppt martin.math.MathFunction:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 8
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.math.MathFunction.MathFunction(java.lang.String, martin.math.MathsItem):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathFunction.MathFunction(java.lang.String, martin.math.MathsItem):::EXIT34
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 4
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathFunction.extractInner(java.lang.String, java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1
  flags synthetic to_string
  comparability 5

ppt martin.math.MathFunction.extractInner(java.lang.String, java.lang.String):::EXIT43
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1
  flags synthetic to_string
  comparability 5
variable return
  var-kind return
  dec-type martin.quantum.tools.Tuple
  rep-type hashcode
  comparability 6
variable return.x
  var-kind field x
  dec-type java.lang.Object
  rep-type hashcode
  comparability 7
variable return.x.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.x
  flags synthetic classname non_null
  comparability 1
variable return.y
  var-kind field y
  dec-type java.lang.Object
  rep-type hashcode
  comparability 8
variable return.y.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.y
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFunction.extractInner(java.lang.String, java.lang.String):::EXIT45
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1
  flags synthetic to_string
  comparability 5
variable return
  var-kind return
  dec-type martin.quantum.tools.Tuple
  rep-type hashcode
  comparability 6
variable return.x
  var-kind field x
  dec-type java.lang.Object
  rep-type hashcode
  comparability 7
variable return.x.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.x
  flags synthetic classname non_null
  comparability 1
variable return.y
  var-kind field y
  dec-type java.lang.Object
  rep-type hashcode
  comparability 8
variable return.y.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.y
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFunction.hasNegativeSign():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 8
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.math.MathFunction.hasNegativeSign():::EXIT50
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathFunction.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 8
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.math.MathFunction.negate():::EXIT56
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 8
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.math.MathFunction.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFunction.equals(java.lang.Object):::EXIT101
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathFunction.equals(java.lang.Object):::EXIT103
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathFunction.complexconjugate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 8
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.math.MathFunction.complexconjugate():::EXIT109
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 8
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.math.MathFunction.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFunction.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFunction
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathFract:::CLASS
ppt-type class

ppt martin.math.MathFract:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.MathFract(martin.math.MathsItem, martin.math.MathsItem):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg1
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.MathFract(martin.math.MathsItem, martin.math.MathsItem):::EXIT41
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg1
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.fromString(java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathFract.fromString(java.lang.String):::EXIT47
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathFract
  rep-type hashcode
  comparability 6
variable return.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable return.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable return.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable return.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8

ppt martin.math.MathFract.fromString(java.lang.String):::EXIT52
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathFract
  rep-type hashcode
  comparability 6
variable return.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable return.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable return.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable return.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8

ppt martin.math.MathFract.hasNegativeSign():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.hasNegativeSign():::EXIT57
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathFract.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.negate():::EXIT63
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.isZero():::EXIT67
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathFract.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.isOne():::EXIT72
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathFract.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathFract.getValue(java.util.HashMap):::EXIT87
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 6
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 8
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 7

ppt martin.math.MathFract.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.simplify():::EXIT94
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.simplify():::EXIT102
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.simplify():::EXIT105
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.simplify():::EXIT125
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.putIntsInHere(martin.math.MathExpression, java.util.Collection):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Collection
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.putIntsInHere(martin.math.MathExpression, java.util.Collection):::EXIT135
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Collection
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 7

ppt martin.math.MathFract.putIntsInHere(martin.math.MathExpression, java.util.Collection):::EXIT142
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Collection
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 7

ppt martin.math.MathFract.putIntsInHere(martin.math.MathExpression, java.util.Collection):::EXIT145
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg0
  var-kind variable
  dec-type martin.math.MathExpression
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Collection
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 7

ppt martin.math.MathFract.gcd(java.lang.Iterable):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.gcd(java.lang.Iterable):::EXIT157
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 3

ppt martin.math.MathFract.gcd(java.lang.Iterable):::EXIT160
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 3

ppt martin.math.MathFract.min(java.lang.Iterable):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.min(java.lang.Iterable):::EXIT167
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type java.lang.Integer
  rep-type hashcode
  comparability 3

ppt martin.math.MathFract.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathFract.multiply(martin.math.MathsItem):::EXIT179
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.multiply(martin.math.MathsItem):::EXIT181
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.multiply(martin.math.MathsItem):::EXIT183
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathFract.add(martin.math.MathsItem):::EXIT193
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.add(martin.math.MathsItem):::EXIT211
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.add(martin.math.MathsItem):::EXIT214
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.clone():::EXIT220
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4

ppt martin.math.MathFract.clone():::EXIT222
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4

ppt martin.math.MathFract.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.equals(java.lang.Object):::EXIT234
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathFract.equals(java.lang.Object):::EXIT236
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathFract.equals(java.lang.Object):::EXIT238
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathFract.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt martin.math.MathFract.divide(martin.math.MathsItem):::EXIT243
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathFract.complexconjugate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.complexconjugate():::EXIT250
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 5
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 6

ppt martin.math.MathFract.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 6
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 7
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathFract.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathFract
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.num
  var-kind field num
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.num.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.den
  var-kind field den
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable this.den.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.quantum.tools.Tools:::CLASS
ppt-type class
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.quantum.tools.Tools:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.quantum.tools.Tools
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.quantum.tools.Tools.Tools():::ENTER
ppt-type enter

ppt martin.quantum.tools.Tools.Tools():::EXIT20
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.tools.Tools
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.quantum.tools.Tools.trimAndCheckBrackets(java.lang.String):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.quantum.tools.Tools.trimAndCheckBrackets(java.lang.String):::EXIT41
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 11

ppt martin.quantum.tools.Tools.trimAndCheckBrackets(java.lang.String):::EXIT50
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 11

ppt martin.quantum.tools.Tools.trimAndCheckBrackets(java.lang.String):::EXIT53
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 11

ppt martin.quantum.tools.Tools.balancedBrackets(java.lang.String):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.quantum.tools.Tools.balancedBrackets(java.lang.String):::EXIT70
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.quantum.tools.Tools.balancedBrackets(java.lang.String):::EXIT72
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.quantum.tools.Tools.splitByTopLevel(java.lang.String, char[], boolean):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 12
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 10
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 11
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 5[13]
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 6

ppt martin.quantum.tools.Tools.splitByTopLevel(java.lang.String, char[], boolean):::EXIT106
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 12
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 10
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 11
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 5[15]
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 6
variable return
  var-kind return
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable return[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[16]
variable return[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return[]
  flags synthetic classname non_null
  comparability 1[17]

ppt martin.quantum.tools.Tools.splitByTopLevel(java.lang.String, char[], boolean):::EXIT127
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 12
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 10
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 11
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 5[15]
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 6
variable return
  var-kind return
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable return[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[16]
variable return[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return[]
  flags synthetic classname non_null
  comparability 1[17]

ppt martin.quantum.tools.Tools.splitByTopLevel(java.lang.String, char[], boolean):::EXIT161
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 12
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 10
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 11
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 5[15]
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 6
variable return
  var-kind return
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable return[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[16]
variable return[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return[]
  flags synthetic classname non_null
  comparability 1[17]

ppt martin.quantum.tools.Tools.doesItContain(char[], char):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 10
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable arg0
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 3[11]
variable arg1
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 4

ppt martin.quantum.tools.Tools.doesItContain(char[], char):::EXIT167
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 10
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable arg0
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 3[12]
variable arg1
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 11

ppt martin.quantum.tools.Tools.doesItContain(char[], char):::EXIT168
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 10
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 9
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable arg0
  var-kind variable
  dec-type char[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type char[]
  rep-type int[]
  comparability 3[12]
variable arg1
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 11

ppt martin.quantum.tools.Tools.printTuples(java.util.ArrayList):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.util.ArrayList
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[10]
variable arg0[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic classname non_null
  comparability 1[11]

ppt martin.quantum.tools.Tools.printTuples(java.util.ArrayList):::EXIT175
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.util.ArrayList
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[10]
variable arg0[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic classname non_null
  comparability 1[11]

ppt martin.quantum.tools.Tools.printTuples(java.util.ArrayList):::EXIT200
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 9
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 8
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.util.ArrayList
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[10]
variable arg0[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic classname non_null
  comparability 1[11]

ppt martin.quantum.tools.Tools.generatePairs(java.lang.String[], martin.math.Complex[]):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 14
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 12
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 13
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 11
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 10
variable arg0
  var-kind variable
  dec-type java.lang.String[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 3[15]
variable arg0[..].toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic to_string
  comparability 4[16]
variable arg1
  var-kind variable
  dec-type martin.math.Complex[]
  rep-type hashcode
  flags is_param
  comparability 5
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable arg1[..]
  var-kind array
  array 1
  dec-type martin.math.Complex[]
  rep-type hashcode[]
  comparability 6[17]
variable arg1[..].R
  var-kind field R
  array 1
  dec-type double[]
  rep-type double[]
  comparability 8[18]
variable arg1[..].I
  var-kind field I
  array 1
  dec-type double[]
  rep-type double[]
  comparability 7[19]

ppt martin.quantum.tools.Tools.generatePairs(java.lang.String[], martin.math.Complex[]):::EXIT212
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 14
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 12
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 13
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 11
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 10
variable arg0
  var-kind variable
  dec-type java.lang.String[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 3[16]
variable arg0[..].toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic to_string
  comparability 4[17]
variable arg1
  var-kind variable
  dec-type martin.math.Complex[]
  rep-type hashcode
  flags is_param
  comparability 5
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable arg1[..]
  var-kind array
  array 1
  dec-type martin.math.Complex[]
  rep-type hashcode[]
  comparability 6[18]
variable arg1[..].R
  var-kind field R
  array 1
  dec-type double[]
  rep-type double[]
  comparability 8[19]
variable arg1[..].I
  var-kind field I
  array 1
  dec-type double[]
  rep-type double[]
  comparability 7[20]
variable return
  var-kind return
  dec-type java.util.HashMap
  rep-type hashcode
  comparability 15

ppt martin.quantum.tools.Tools.zBOB(int):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 8
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.quantum.tools.Tools.zBOB(int):::EXIT224
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 8
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 9

ppt martin.quantum.tools.Tools.oBZB(int):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 8
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.quantum.tools.Tools.oBZB(int):::EXIT235
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 8
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 9

ppt martin.quantum.tools.Tools.powerOfTwo(int):::ENTER
ppt-type enter
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 8
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.quantum.tools.Tools.powerOfTwo(int):::EXIT248
ppt-type subexit
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 8
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 7
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 9

ppt martin.quantum.tools.Tools.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.tools.Tools
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 8
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.quantum.tools.Tools.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.tools.Tools
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 8
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.quantum.tools.Tools.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.quantum.tools.Tools
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 8
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.quantum.tools.Tools.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.quantum.tools.Tools
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.quantum.tools.Tools.logger
  var-kind variable
  dec-type java.io.PrintStream
  rep-type hashcode
  comparability 7
variable martin.quantum.tools.Tools.FORCE_SYSTEM_LOGGER
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable martin.quantum.tools.Tools.SIMPLIFICATION_ENABLED
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable martin.quantum.tools.Tools.VERBOSE
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable martin.quantum.tools.Tools.SILENT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable martin.quantum.tools.Tools.MATHEMATICA_FRIENDLY_OUTPUT
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 8
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 9

ppt martin.operators.E:::CLASS
ppt-type class
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt martin.operators.E:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 5
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 5
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt martin.operators.E.E(int, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.E.E(int, int):::EXIT35
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 2
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 2
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.E.operate(martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 3
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 3
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.E.operate(martin.quantum.SystemMatrix):::EXIT51
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 3
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 3
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 8
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.E.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 6
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 6
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.E.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 7
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 7
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.operators.E.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 6
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 6
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.E.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.E
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.bitId1
  var-kind field bitId1
  dec-type int
  rep-type int
  comparability 7
variable this.bitId2
  var-kind field bitId2
  dec-type int
  rep-type int
  comparability 7
variable martin.operators.E.MINUS_ONE
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.operators.E.MINUS_ONE.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args martin.operators.E.MINUS_ONE
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.operators.N:::CLASS
ppt-type class

ppt martin.operators.N:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 4
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 6
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.N.N(int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.N.N(int):::EXIT27
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 5
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 6
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt martin.operators.N.N(int, martin.math.MathsItem, martin.math.MathsItem):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 4
variable arg2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg2
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.N.N(int, martin.math.MathsItem, martin.math.MathsItem):::EXIT33
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 2
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 3
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 4
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable arg2
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 4
variable arg2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg2
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.N.operate(martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 9
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 10
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.N.operate(martin.quantum.SystemMatrix):::EXIT48
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 3
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 9
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 10
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.N.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 5
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 6
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.N.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 6
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 8
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.operators.N.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 5
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 6
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.N.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.N
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.qubitId
  var-kind field qubitId
  dec-type int
  rep-type int
  comparability 6
variable this.st1
  var-kind field st1
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable this.st1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st1
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.st2
  var-kind field st2
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 8
variable this.st2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.st2
  flags synthetic classname non_null
  comparability 1
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathSymbol:::CLASS
ppt-type class

ppt martin.math.MathSymbol:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.MathSymbol(java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathSymbol.MathSymbol(java.lang.String):::EXIT26
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathSymbol.MathSymbol(java.lang.String, boolean, boolean, boolean):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 4
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 5
variable arg3
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 6

ppt martin.math.MathSymbol.MathSymbol(java.lang.String, boolean, boolean, boolean):::EXIT33
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 6
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 4
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 5
variable arg3
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 6

ppt martin.math.MathSymbol.hasNegativeSign():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.hasNegativeSign():::EXIT37
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathSymbol.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.negate():::EXIT43
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.isZero():::EXIT47
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathSymbol.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.isOne():::EXIT52
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt martin.math.MathSymbol.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathSymbol.getValue(java.util.HashMap):::EXIT58
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 11
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 4
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 6
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 5

ppt martin.math.MathSymbol.getValue(java.util.HashMap):::EXIT63
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 11
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 4
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 6
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 5

ppt martin.math.MathSymbol.getValue(java.util.HashMap):::EXIT73
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 11
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 8
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 4
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 6
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 5

ppt martin.math.MathSymbol.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.simplify():::EXIT78
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathSymbol.multiply(martin.math.MathsItem):::EXIT82
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathSymbol.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathSymbol.add(martin.math.MathsItem):::EXIT92
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathSymbol.add(martin.math.MathsItem):::EXIT96
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathSymbol.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.clone():::EXIT102
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 3
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt martin.math.MathSymbol.clone():::EXIT108
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 3
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt martin.math.MathSymbol.clone():::EXIT111
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 3
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt martin.math.MathSymbol.fromString(java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathSymbol.fromString(java.lang.String):::EXIT122
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathSymbol
  rep-type hashcode
  comparability 4
variable return.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.symbol
  flags synthetic to_string
  comparability 8
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable return.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable return.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathSymbol.fromString(java.lang.String):::EXIT124
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathSymbol
  rep-type hashcode
  comparability 4
variable return.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.symbol
  flags synthetic to_string
  comparability 8
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable return.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable return.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5

ppt martin.math.MathSymbol.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathSymbol.equals(java.lang.Object):::EXIT143
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.equals(java.lang.Object):::EXIT146
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathSymbol.divide(martin.math.MathsItem):::EXIT151
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 9
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 10
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 6
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt martin.math.MathSymbol.complexconjugate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.complexconjugate():::EXIT157
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 7
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathSymbol.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 7
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 8
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathSymbol.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathSymbol
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.symbol
  var-kind field symbol
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.symbol.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.symbol
  flags synthetic to_string
  comparability 8
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.zero
  var-kind field zero
  dec-type boolean
  rep-type boolean
  comparability 9
variable this.complexconj
  var-kind field complexconj
  dec-type boolean
  rep-type boolean
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.math.MathIm:::CLASS
ppt-type class
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 3

ppt martin.math.MathIm:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.MathIm(martin.math.MathsItem):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathIm.MathIm(martin.math.MathsItem):::EXIT25
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 2
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathIm.MathIm(martin.math.MathsItem, boolean, boolean):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 4

ppt martin.math.MathIm.MathIm(martin.math.MathsItem, boolean, boolean):::EXIT31
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 7
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 8
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 15
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 13
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 12
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 14
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 4

ppt martin.math.MathIm.fromString(java.lang.String):::ENTER
ppt-type enter
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathIm.fromString(java.lang.String):::EXIT35
ppt-type subexit
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 7
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathIm
  rep-type hashcode
  comparability 8
variable return.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable return.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable return.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.name
  flags synthetic to_string
  comparability 12
variable return.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable return.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13

ppt martin.math.MathIm.fromString(java.lang.String):::EXIT36
ppt-type subexit
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 7
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathIm
  rep-type hashcode
  comparability 8
variable return.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable return.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable return.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.name
  flags synthetic to_string
  comparability 12
variable return.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable return.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13

ppt martin.math.MathIm.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.isZero():::EXIT41
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathIm.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.isOne():::EXIT46
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathIm.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathIm.getValue(java.util.HashMap):::EXIT58
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 7
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 16
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 14
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 12
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 13
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 15
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 8
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 10
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 9

ppt martin.math.MathIm.getValue(java.util.HashMap):::EXIT65
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 6
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 7
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 16
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 14
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 12
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 13
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 15
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 8
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 10
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 9

ppt martin.math.MathIm.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.simplify():::EXIT71
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathIm.multiply(martin.math.MathsItem):::EXIT108
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathIm.multiply(martin.math.MathsItem):::EXIT111
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathIm.multiply(martin.math.MathsItem):::EXIT114
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathIm.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathIm.add(martin.math.MathsItem):::EXIT139
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathIm.add(martin.math.MathsItem):::EXIT142
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathIm.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.clone():::EXIT151
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathIm.clone():::EXIT159
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathIm.clone():::EXIT164
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathIm.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 12
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt martin.math.MathIm.equals(java.lang.Object):::EXIT195
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 7

ppt martin.math.MathIm.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 13
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathIm.divide(martin.math.MathsItem):::EXIT200
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 5
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 6
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 14
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 4
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 3
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathIm.complexconjugate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathIm.complexconjugate():::EXIT207
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathIm
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathIm.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathIm.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathIm.name
  flags synthetic to_string
  comparability 5
variable this.real
  var-kind field real
  dec-type boolean
  rep-type boolean
  comparability 11
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 3
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp:::CLASS
ppt-type class
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3

ppt martin.math.MathExp:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp.MathExp(martin.math.MathsItem):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt martin.math.MathExp.MathExp(martin.math.MathsItem):::EXIT24
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathExp.MathExp(martin.math.MathsItem, boolean):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3

ppt martin.math.MathExp.MathExp(martin.math.MathsItem, boolean):::EXIT29
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 7
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3

ppt martin.math.MathExp.fromString(java.lang.String):::ENTER
ppt-type enter
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt martin.math.MathExp.fromString(java.lang.String):::EXIT33
ppt-type subexit
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathExp
  rep-type hashcode
  comparability 8
variable return.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable return.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.name
  flags synthetic to_string
  comparability 12
variable return.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 7
variable return.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13

ppt martin.math.MathExp.fromString(java.lang.String):::EXIT34
ppt-type subexit
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 5
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type martin.math.MathExp
  rep-type hashcode
  comparability 8
variable return.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable return.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.name
  flags synthetic to_string
  comparability 12
variable return.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 7
variable return.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable return.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13

ppt martin.math.MathExp.isZero():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp.isZero():::EXIT39
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExp.isOne():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp.isOne():::EXIT44
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 6

ppt martin.math.MathExp.getValue(java.util.HashMap):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 10
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 11
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2

ppt martin.math.MathExp.getValue(java.util.HashMap):::EXIT59
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 4
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 5
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 14
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 12
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 7
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 13
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 6
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 15
variable arg0
  var-kind variable
  dec-type java.util.HashMap
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type martin.math.Complex
  rep-type hashcode
  comparability 8
variable martin.math.Complex.COMPARISON_LOWEST_ACC
  var-kind variable
  dec-type double
  rep-type double
  flags nomod
  comparability 3
variable return.R
  var-kind field R
  dec-type double
  rep-type double
  comparability 10
variable return.I
  var-kind field I
  dec-type double
  rep-type double
  comparability 9

ppt martin.math.MathExp.simplify():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp.simplify():::EXIT65
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp.multiply(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathExp.multiply(martin.math.MathsItem):::EXIT74
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathExp.multiply(martin.math.MathsItem):::EXIT77
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathExp.add(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathExp.add(martin.math.MathsItem):::EXIT82
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.math.MathExp.clone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 9
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 7
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 8
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 10

ppt martin.math.MathExp.clone():::EXIT89
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathExp.clone():::EXIT92
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 2
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 3
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 5
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 4
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable return
  var-kind return
  dec-type martin.math.MathsItem
  rep-type hashcode
  comparability 7
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt martin.math.MathExp.divide(martin.math.MathsItem):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 11
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 9
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 12
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7

ppt martin.math.MathExp.divide(martin.math.MathsItem):::EXIT97
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.math.MathExp
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable martin.math.MathExp.name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags nomod
  comparability 3
variable martin.math.MathExp.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args martin.math.MathExp.name
  flags synthetic to_string
  comparability 4
variable this.name
  var-kind field name
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.name
  flags synthetic to_string
  comparability 12
variable this.expr
  var-kind field expr
  dec-type martin.math.MathExpression
  rep-type hashcode
  comparability 10
variable martin.math.MathExpression.MAX_NUMBER_OF_SIMPLIFICAITON_STEPS
  var-kind variable
  dec-type int
  rep-type int
  comparability 6
variable this.expr.items
  var-kind field items
  dec-type java.util.HashSet
  rep-type hashcode
  comparability 11
variable martin.math.MathExpression.DEEP_SIMPLIFY
  var-kind variable
  dec-type boolean
  rep-type boolean
  comparability 5
variable this.negative
  var-kind field negative
  dec-type boolean
  rep-type boolean
  comparability 13
variable arg0
  var-kind variable
  dec-type martin.math.MathsItem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable martin.math.MathsItem.DEBUG
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 8

ppt martin.operators.AddCoeffTogether:::CLASS
ppt-type class

ppt martin.operators.AddCoeffTogether:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt martin.operators.AddCoeffTogether.AddCoeffTogether():::ENTER
ppt-type enter

ppt martin.operators.AddCoeffTogether.AddCoeffTogether():::EXIT17
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt martin.operators.AddCoeffTogether.operate(martin.quantum.SystemMatrix):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.AddCoeffTogether.operate(martin.quantum.SystemMatrix):::EXIT41
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable arg0
  var-kind variable
  dec-type martin.quantum.SystemMatrix
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mNumbQubits
  var-kind field mNumbQubits
  dec-type int
  rep-type int
  comparability 3
variable arg0.coeff
  var-kind field coeff
  dec-type martin.math.MathsItem[]
  rep-type hashcode
  comparability 4
variable arg0.coeff.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.coeff
  flags synthetic classname non_null
  comparability 1
variable arg0.coeff[..]
  var-kind array
  array 1
  dec-type martin.math.MathsItem[]
  rep-type hashcode[]
  comparability 5[3]
variable arg0.coeff[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.coeff[]
  flags synthetic classname non_null
  comparability 1[3]
variable arg0.measured
  var-kind field measured
  dec-type boolean[]
  rep-type hashcode
  comparability 4
variable arg0.measured[..]
  var-kind array
  array 1
  dec-type boolean[]
  rep-type boolean[]
  comparability 6[3]
variable arg0.size
  var-kind field size
  dec-type int
  rep-type int
  comparability 3

ppt martin.operators.AddCoeffTogether.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.AddCoeffTogether.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt martin.operators.AddCoeffTogether.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt martin.operators.AddCoeffTogether.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type martin.operators.AddCoeffTogether
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

