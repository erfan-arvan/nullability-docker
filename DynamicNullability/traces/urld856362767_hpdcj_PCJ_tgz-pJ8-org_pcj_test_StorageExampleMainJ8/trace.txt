Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 1 time.  Unmatched entries are ignored!
Unterminated calls:
  org.pcj.internal.network.SelectorProc.run() : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
com.sun.proxy.$Proxy2:::CLASS
com.sun.proxy.$Proxy2.m1 has only one value
com.sun.proxy.$Proxy2.m1 != null
com.sun.proxy.$Proxy2.m2 has only one value
com.sun.proxy.$Proxy2.m2 != null
com.sun.proxy.$Proxy2.m4 has only one value
com.sun.proxy.$Proxy2.m4 != null
com.sun.proxy.$Proxy2.m0 has only one value
com.sun.proxy.$Proxy2.m0 != null
com.sun.proxy.$Proxy2.m3 has only one value
com.sun.proxy.$Proxy2.m3 != null
===========================================================================
com.sun.proxy.$Proxy2:::OBJECT
===========================================================================
com.sun.proxy.$Proxy2.$Proxy2(java.lang.reflect.InvocationHandler):::ENTER
arg0.getClass().getName() == sun.reflect.annotation.AnnotationInvocationHandler.class
===========================================================================
com.sun.proxy.$Proxy2.$Proxy2(java.lang.reflect.InvocationHandler):::EXIT
===========================================================================
com.sun.proxy.$Proxy2.annotationType():::ENTER
===========================================================================
com.sun.proxy.$Proxy2.annotationType():::EXIT
com.sun.proxy.$Proxy2.m1 == orig(com.sun.proxy.$Proxy2.m1)
com.sun.proxy.$Proxy2.m2 == orig(com.sun.proxy.$Proxy2.m2)
com.sun.proxy.$Proxy2.m4 == orig(com.sun.proxy.$Proxy2.m4)
com.sun.proxy.$Proxy2.m0 == orig(com.sun.proxy.$Proxy2.m0)
com.sun.proxy.$Proxy2.m3 == orig(com.sun.proxy.$Proxy2.m3)
return has only one value
===========================================================================
com.sun.proxy.$Proxy2.value():::ENTER
this has only one value
===========================================================================
com.sun.proxy.$Proxy2.value():::EXIT
com.sun.proxy.$Proxy2.m1 == orig(com.sun.proxy.$Proxy2.m1)
com.sun.proxy.$Proxy2.m2 == orig(com.sun.proxy.$Proxy2.m2)
com.sun.proxy.$Proxy2.m4 == orig(com.sun.proxy.$Proxy2.m4)
com.sun.proxy.$Proxy2.m0 == orig(com.sun.proxy.$Proxy2.m0)
com.sun.proxy.$Proxy2.m3 == orig(com.sun.proxy.$Proxy2.m3)
return has only one value
===========================================================================
com.sun.proxy.$Proxy6:::CLASS
com.sun.proxy.$Proxy6.m1 has only one value
com.sun.proxy.$Proxy6.m1 != null
com.sun.proxy.$Proxy6.m2 has only one value
com.sun.proxy.$Proxy6.m2 != null
com.sun.proxy.$Proxy6.m4 has only one value
com.sun.proxy.$Proxy6.m4 != null
com.sun.proxy.$Proxy6.m0 has only one value
com.sun.proxy.$Proxy6.m0 != null
com.sun.proxy.$Proxy6.m3 has only one value
com.sun.proxy.$Proxy6.m3 != null
===========================================================================
com.sun.proxy.$Proxy6:::OBJECT
===========================================================================
com.sun.proxy.$Proxy6.$Proxy6(java.lang.reflect.InvocationHandler):::ENTER
arg0.getClass().getName() == sun.reflect.annotation.AnnotationInvocationHandler.class
===========================================================================
com.sun.proxy.$Proxy6.$Proxy6(java.lang.reflect.InvocationHandler):::EXIT
===========================================================================
com.sun.proxy.$Proxy6.annotationType():::ENTER
===========================================================================
com.sun.proxy.$Proxy6.annotationType():::EXIT
com.sun.proxy.$Proxy6.m1 == orig(com.sun.proxy.$Proxy6.m1)
com.sun.proxy.$Proxy6.m2 == orig(com.sun.proxy.$Proxy6.m2)
com.sun.proxy.$Proxy6.m4 == orig(com.sun.proxy.$Proxy6.m4)
com.sun.proxy.$Proxy6.m0 == orig(com.sun.proxy.$Proxy6.m0)
com.sun.proxy.$Proxy6.m3 == orig(com.sun.proxy.$Proxy6.m3)
return has only one value
===========================================================================
com.sun.proxy.$Proxy6.value():::ENTER
this has only one value
===========================================================================
com.sun.proxy.$Proxy6.value():::EXIT
com.sun.proxy.$Proxy6.m1 == orig(com.sun.proxy.$Proxy6.m1)
com.sun.proxy.$Proxy6.m2 == orig(com.sun.proxy.$Proxy6.m2)
com.sun.proxy.$Proxy6.m4 == orig(com.sun.proxy.$Proxy6.m4)
com.sun.proxy.$Proxy6.m0 == orig(com.sun.proxy.$Proxy6.m0)
com.sun.proxy.$Proxy6.m3 == orig(com.sun.proxy.$Proxy6.m3)
return has only one value
===========================================================================
org.pcj.NodesDescription:::OBJECT
this has only one value
this.node0.hostname has only one value
this.node0.hostname != null
this.node0.hostname.toString == "localhost"
this.node0.port == 8091
this.node0.threadIds has only one value
this.node0.threadIds != null
this.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
this.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
this.node0.threadIds.getClass().getName() != this.nodesMap.getClass().getName()
===========================================================================
org.pcj.NodesDescription.NodesDescription(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 3
arg0[] elements has only one value
arg0[].toString == [localhost, localhost, localhost]
arg0[].toString elements == "localhost"
size(arg0[]) == 3
===========================================================================
org.pcj.NodesDescription.NodesDescription(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
this.node0 has only one value
this.nodesMap has only one value
arg0[] contains no nulls and has only one value, of length 3
arg0[] elements has only one value
arg0[].toString == [localhost, localhost, localhost]
arg0[].toString elements == "localhost"
arg0[] elements == this.node0.hostname
this.node0.hostname in arg0[]
===========================================================================
org.pcj.NodesDescription.getAllNodes():::ENTER
this.node0 has only one value
this.nodesMap has only one value
===========================================================================
org.pcj.NodesDescription.getAllNodes():::EXIT
this.node0 == orig(this.node0)
this.node0.hostname == orig(this.node0.hostname)
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == orig(this.node0.port)
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.nodesMap == orig(this.nodesMap)
this.nodesMap.getClass().getName() == orig(this.nodesMap.getClass().getName())
this.node0 has only one value
this.nodesMap has only one value
return has only one value
return.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
===========================================================================
org.pcj.NodesDescription.getAllNodesThreadCount():::ENTER
this.node0 has only one value
this.nodesMap has only one value
===========================================================================
org.pcj.NodesDescription.getAllNodesThreadCount():::EXIT
this.node0 == orig(this.node0)
this.node0.hostname == orig(this.node0.hostname)
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == orig(this.node0.port)
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.nodesMap == orig(this.nodesMap)
this.nodesMap.getClass().getName() == orig(this.nodesMap.getClass().getName())
this.node0 has only one value
this.nodesMap has only one value
return == 3
===========================================================================
org.pcj.NodesDescription.getCurrentJvm():::ENTER
this.node0 has only one value
this.nodesMap has only one value
===========================================================================
org.pcj.NodesDescription.getCurrentJvm():::EXIT
this.node0 == orig(this.node0)
this.node0.hostname == return.hostname
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == return.port
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == return.threadIds.getClass().getName()
this.nodesMap == orig(this.nodesMap)
this.nodesMap.getClass().getName() == orig(this.nodesMap.getClass().getName())
return.hostname == orig(this.node0.hostname)
return.port == orig(this.node0.port)
return.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.node0 has only one value
this.nodesMap has only one value
return has only one value
return.hostname has only one value
return.hostname.toString == "localhost"
return.port == 8091
return.threadIds has only one value
return.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
===========================================================================
org.pcj.NodesDescription.getNode0():::ENTER
this.node0 has only one value
this.nodesMap has only one value
===========================================================================
org.pcj.NodesDescription.getNode0():::EXIT
this.node0 == return
this.node0.hostname == return.hostname
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == return.port
this.node0.threadIds == return.threadIds
this.node0.threadIds.getClass().getName() == return.threadIds.getClass().getName()
this.nodesMap == orig(this.nodesMap)
this.nodesMap.getClass().getName() == orig(this.nodesMap.getClass().getName())
return == orig(this.node0)
return.hostname == orig(this.node0.hostname)
return.port == orig(this.node0.port)
return.threadIds == orig(this.node0.threadIds)
return.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.nodesMap has only one value
return has only one value
return.hostname has only one value
return.hostname.toString == "localhost"
return.port == 8091
return.threadIds has only one value
return.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
===========================================================================
org.pcj.NodesDescription.parseArray(java.lang.String[]):::ENTER
this.node0 == null
this.nodesMap == null
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 3
arg0[] elements has only one value
arg0[].toString == [localhost, localhost, localhost]
arg0[].toString elements == "localhost"
size(arg0[]) == 3
===========================================================================
org.pcj.NodesDescription.parseArray(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
this.node0 has only one value
this.nodesMap has only one value
arg0[] contains no nulls and has only one value, of length 3
arg0[] elements has only one value
arg0[].toString == [localhost, localhost, localhost]
arg0[].toString elements == "localhost"
arg0[] elements == this.node0.hostname
this.node0.hostname in arg0[]
===========================================================================
org.pcj.NodesDescription.parseNodeString(java.lang.String):::ENTER
this.node0.hostname == arg0
arg0 has only one value
arg0.toString == "localhost"
===========================================================================
org.pcj.NodesDescription.parseNodeString(java.lang.String):::EXIT
this.node0 == orig(this.node0)
this.node0.hostname == return.hostname
this.node0.hostname == orig(this.node0.hostname)
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == return.port
this.node0.port == orig(this.node0.port)
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == return.threadIds.getClass().getName()
this.node0.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.nodesMap == orig(this.nodesMap)
this.nodesMap.getClass().getName() == orig(this.nodesMap.getClass().getName())
arg0.toString == orig(arg0.toString)
return.hostname == orig(arg0)
arg0.toString == "localhost"
return.hostname has only one value
return.hostname.toString == "localhost"
return.port == 8091
return.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
===========================================================================
org.pcj.PCJ:::CLASS
org.pcj.internal.InternalPCJ.PCJ_VERSION == org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName()
org.pcj.internal.InternalPCJ.LOGGER has only one value
org.pcj.internal.InternalPCJ.LOGGER != null
org.pcj.internal.InternalPCJ.PCJ_VERSION has only one value
org.pcj.internal.InternalPCJ.PCJ_VERSION != null
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == "UNKNOWN"
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == "UNKNOWN"
org.pcj.internal.Networker.LOGGER has only one value
org.pcj.internal.Networker.LOGGER != null
org.pcj.internal.InternalPCJ.networker.selectorProc has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc != null
org.pcj.internal.network.SelectorProc.LOGGER has only one value
org.pcj.internal.network.SelectorProc.LOGGER != null
org.pcj.internal.InternalPCJ.networker.selectorProc.selector has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.selector != null
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == sun.nio.ch.EPollSelectorImpl.class
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer != null
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == java.nio.DirectByteBuffer.class
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap != null
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap != null
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels != null
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges != null
org.pcj.internal.InternalPCJ.networker.selectorProcThread has only one value
org.pcj.internal.InternalPCJ.networker.selectorProcThread != null
org.pcj.internal.InternalPCJ.networker.workers has only one value
org.pcj.internal.InternalPCJ.networker.workers != null
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == java.util.concurrent.ThreadPoolExecutor.class
org.pcj.internal.InternalPCJ.nodeData.node0Socket has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Socket != null
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
org.pcj.internal.InternalPCJ.nodeData.groupById has only one value
org.pcj.internal.InternalPCJ.nodeData.groupById != null
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId has only one value
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId != null
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId has only one value
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId != null
org.pcj.internal.InternalPCJ.nodeData.pcjThreads has only one value
org.pcj.internal.InternalPCJ.nodeData.pcjThreads != null
org.pcj.internal.InternalPCJ.nodeData.node0Data has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == 3
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round one of { 1, 2 }
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.class
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter has only one value
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter != null
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap has only one value
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap != null
org.pcj.internal.InternalPCJ.nodeData.physicalId == 0
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
===========================================================================
org.pcj.PCJ.asyncBarrier():::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.asyncBarrier():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return != null
return.getClass().getName() == org.pcj.internal.futures.GroupBarrierState.class
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() != return.getClass().getName()
===========================================================================
org.pcj.PCJ.asyncBroadcast(java.lang.Object, java.lang.Enum):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0 has only one value
arg0.getClass().getName() == java.lang.Double.class
arg1 has only one value
arg1.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
===========================================================================
org.pcj.PCJ.asyncBroadcast(java.lang.Object, java.lang.Enum):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return has only one value
return.getClass().getName() == org.pcj.internal.futures.BroadcastState.class
===========================================================================
org.pcj.PCJ.asyncPut(java.lang.Object, int, java.lang.Enum, int[]):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0.getClass().getName() == java.lang.Integer.class
arg1 == 0
arg2 has only one value
arg2.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
arg3[] elements one of { 0, 1, 2 }
arg3[] one of { [0], [1], [2] }
size(arg3[]) == 1
===========================================================================
org.pcj.PCJ.asyncPut(java.lang.Object, int, java.lang.Enum, int[]):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
arg3[] == orig(arg3[])
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg3[] elements one of { 0, 1, 2 }
arg3[] one of { [0], [1], [2] }
return.getClass().getName() == org.pcj.internal.futures.PutVariable.class
===========================================================================
org.pcj.PCJ.barrier():::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.barrier():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.broadcast(java.lang.Object, java.lang.Enum):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0 has only one value
arg0.getClass().getName() == java.lang.Double.class
arg1 has only one value
arg1.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
===========================================================================
org.pcj.PCJ.broadcast(java.lang.Object, java.lang.Enum):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.deploy(java.lang.Class, org.pcj.NodesDescription):::ENTER
org.pcj.internal.InternalPCJ.networker == null
org.pcj.internal.InternalPCJ.nodeData == null
arg0 has only one value
arg1 has only one value
arg1.node0 has only one value
arg1.node0.hostname has only one value
arg1.node0.hostname.toString == "localhost"
arg1.node0.port == 8091
arg1.node0.threadIds has only one value
arg1.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg1.nodesMap has only one value
arg1.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
org.pcj.PCJ.deploy(java.lang.Class, org.pcj.NodesDescription):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
arg1.node0 == orig(arg1.node0)
arg1.node0.hostname == orig(arg1.node0.hostname)
arg1.node0.hostname.toString == orig(arg1.node0.hostname.toString)
arg1.node0.port == orig(arg1.node0.port)
arg1.node0.threadIds == orig(arg1.node0.threadIds)
arg1.node0.threadIds.getClass().getName() == orig(arg1.node0.threadIds.getClass().getName())
arg1.nodesMap == orig(arg1.nodesMap)
arg1.nodesMap.getClass().getName() == orig(arg1.nodesMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 2
arg1.node0 has only one value
arg1.node0.hostname has only one value
arg1.node0.hostname.toString == "localhost"
arg1.node0.port == 8091
arg1.node0.threadIds has only one value
arg1.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg1.nodesMap has only one value
arg1.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
org.pcj.PCJ.getGlobalGroup():::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.getGlobalGroup():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return != null
return.getClass().getName() == org.pcj.internal.InternalGroup.class
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() != return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() != return.getClass().getName()
===========================================================================
org.pcj.PCJ.myId():::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.myId():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return one of { 0, 1, 2 }
===========================================================================
org.pcj.PCJ.put(java.lang.Object, int, java.lang.Enum, int[]):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0.getClass().getName() == java.lang.Integer.class
arg1 == 0
arg2 has only one value
arg2.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
arg3[] elements one of { 0, 1, 2 }
arg3[] one of { [0], [1], [2] }
size(arg3[]) == 1
===========================================================================
org.pcj.PCJ.put(java.lang.Object, int, java.lang.Enum, int[]):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
arg3[] == orig(arg3[])
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg3[] elements one of { 0, 1, 2 }
arg3[] one of { [0], [1], [2] }
===========================================================================
org.pcj.PCJ.registerStorage(java.lang.Class):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0 has only one value
===========================================================================
org.pcj.PCJ.registerStorage(java.lang.Class):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.PCJ.threadCount():::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
===========================================================================
org.pcj.PCJ.threadCount():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return == 3
===========================================================================
org.pcj.PCJ.waitFor(java.lang.Enum):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0 has only one value
arg0.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
===========================================================================
org.pcj.PCJ.waitFor(java.lang.Enum):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return == 0
===========================================================================
org.pcj.PCJ.waitFor(java.lang.Enum, int):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
arg0 has only one value
arg0.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
arg1 == 1
===========================================================================
org.pcj.PCJ.waitFor(java.lang.Enum, int):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
return == 0
===========================================================================
org.pcj.internal.Bitmask:::CLASS
===========================================================================
org.pcj.internal.Bitmask:::OBJECT
this.length >= 0
this.value != null
this.value[] elements >= 0
this.all != null
this.all[] elements one of { 1, 3, 7 }
size(this.value[]) one of { 0, 1 }
size(this.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.Bitmask.Bitmask():::EXIT
this.length == 0
this.value[] == []
this.all[] == []
===========================================================================
org.pcj.internal.Bitmask.Bitmask(int):::ENTER
arg0 one of { 0, 1, 3 }
===========================================================================
org.pcj.internal.Bitmask.Bitmask(int):::EXIT
this.length one of { 0, 1, 3 }
this.value[] elements == 0
this.value[] one of { [], [0] }
this.all[] elements one of { 1, 7 }
this.all[] one of { [], [1], [7] }
===========================================================================
org.pcj.internal.Bitmask.Bitmask(org.pcj.internal.Bitmask):::ENTER
arg0.length one of { 1, 3 }
arg0.value[] elements one of { 1, 7 }
arg0.value[] one of { [1], [7] }
arg0.all[] elements one of { 1, 7 }
arg0.all[] one of { [1], [7] }
size(arg0.value[]) == 1
size(arg0.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.Bitmask(org.pcj.internal.Bitmask):::EXIT
arg0.length == orig(arg0.length)
arg0.value == orig(arg0.value)
arg0.value[] == orig(arg0.value[])
arg0.all == orig(arg0.all)
arg0.all[] == orig(arg0.all[])
this.length one of { 1, 3 }
this.value[] elements one of { 1, 7 }
this.value[] one of { [1], [7] }
this.all[] elements one of { 1, 7 }
this.all[] one of { [1], [7] }
arg0.length one of { 1, 3 }
arg0.value[] elements one of { 1, 7 }
arg0.value[] one of { [1], [7] }
arg0.all[] elements one of { 1, 7 }
arg0.all[] one of { [1], [7] }
size(this.value[]) == 1
size(this.all[]) == 1
size(arg0.value[]) == 1
size(arg0.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.calcArrayLength(int):::ENTER
arg0 one of { 1, 2, 3 }
===========================================================================
org.pcj.internal.Bitmask.calcArrayLength(int):::EXIT
return == 1
===========================================================================
org.pcj.internal.Bitmask.clear():::ENTER
this.length == 1
this.value[] == [1]
this.value[] elements == 1
this.all[] == [1]
this.all[] elements == 1
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.clear():::EXIT
this.length == orig(this.length)
this.value == orig(this.value)
this.all == orig(this.all)
this.all[] == orig(this.all[])
size(this.value[]) == orig(size(this.value[]))
this.length == 1
this.value[] == [0]
this.value[] elements == 0
this.all[] == [1]
this.all[] elements == 1
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.enlarge(int):::ENTER
this.length one of { 0, 1, 2 }
this.value[] elements one of { 1, 3 }
this.value[] one of { [], [1], [3] }
this.all[] elements one of { 1, 3 }
this.all[] one of { [], [1], [3] }
arg0 one of { 1, 2, 3 }
===========================================================================
org.pcj.internal.Bitmask.enlarge(int):::EXIT
this.length one of { 1, 2, 3 }
this.value[] elements one of { 0, 1, 3 }
this.value[] one of { [0], [1], [3] }
this.all[] one of { [1], [3], [7] }
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.ensureLength(int):::ENTER
this.length one of { 0, 1, 2 }
this.value[] elements one of { 1, 3 }
this.value[] one of { [], [1], [3] }
this.all[] elements one of { 1, 3 }
this.all[] one of { [], [1], [3] }
arg0 >= 0
===========================================================================
org.pcj.internal.Bitmask.ensureLength(int):::EXIT47
this.length == orig(this.length)
this.value == orig(this.value)
this.value[] == orig(this.value[])
this.all == orig(this.all)
this.all[] == orig(this.all[])
this.length == 0
this.value[] == []
this.all[] == []
orig(arg0) == 0
===========================================================================
org.pcj.internal.Bitmask.ensureLength(int):::EXIT66
this.length one of { 1, 2, 3 }
this.value[] one of { [0], [1], [3] }
this.all[] one of { [1], [3], [7] }
orig(arg0) one of { 1, 2, 3 }
size(this.value[]) == 1
size(this.all[]) == 1
this.length > orig(this.length)
this.all[] > orig(this.all[]) (lexically)
===========================================================================
org.pcj.internal.Bitmask.ensureLength(int):::EXIT
(this.length == 0)  <==>  (orig(arg0) == 0)
(this.length == 0)  <==>  (this.all[] == [])
(this.length == 0)  <==>  (this.length == orig(this.length))
(this.length == 0)  <==>  (this.value[] == [])
(this.length == 0)  ==>  (orig(this.all[]) == [])
(this.length == 0)  ==>  (orig(this.length) == 0)
(this.length == 0)  ==>  (orig(this.value[]) == [])
(this.length == 0)  ==>  (this.all == orig(this.all))
(this.length == 0)  ==>  (this.all[] == orig(this.all[]))
(this.length == 0)  ==>  (this.value == orig(this.value))
(this.length == 0)  ==>  (this.value[] == orig(this.value[]))
(this.length one of { 1, 2, 3 })  <==>  (orig(arg0) one of { 1, 2, 3 })
(this.length one of { 1, 2, 3 })  <==>  (size(this.all[]) == 1)
(this.length one of { 1, 2, 3 })  <==>  (size(this.value[]) == 1)
(this.length one of { 1, 2, 3 })  <==>  (this.all[] one of { [1], [3], [7] })
(this.length one of { 1, 2, 3 })  <==>  (this.length > orig(this.length))
(this.length one of { 1, 2, 3 })  <==>  (this.value[] one of { [0], [1], [3] })
(this.length one of { 1, 2, 3 })  ==>  (orig(size(this.all[])) one of { 0, 1 })
(this.length one of { 1, 2, 3 })  ==>  (orig(size(this.value[])) one of { 0, 1 })
(this.length one of { 1, 2, 3 })  ==>  (orig(this.all[]) elements one of { 1, 3 })
(this.length one of { 1, 2, 3 })  ==>  (orig(this.all[]) one of { [], [1], [3] })
(this.length one of { 1, 2, 3 })  ==>  (orig(this.length) one of { 0, 1, 2 })
(this.length one of { 1, 2, 3 })  ==>  (orig(this.value[]) elements one of { 1, 3 })
(this.length one of { 1, 2, 3 })  ==>  (orig(this.value[]) one of { [], [1], [3] })
(this.length one of { 1, 2, 3 })  ==>  (this.all[] > orig(this.all[]) (lexically))
(this.length one of { 1, 2, 3 })  ==>  (this.all[] elements one of { 1, 3, 7 })
(this.length one of { 1, 2, 3 })  ==>  (this.value[] elements one of { 0, 1, 3 })
this.value[] elements one of { 0, 1, 3 }
this.length >= orig(this.length)
this.value[] >= orig(this.value[]) (lexically)
this.all[] >= orig(this.all[]) (lexically)
size(this.value[]) >= orig(size(this.value[]))
size(this.value[])-1 <= orig(size(this.value[]))
size(this.value[])-1 >= orig(size(this.value[]))-1
size(this.all[]) >= orig(size(this.all[]))
size(this.all[])-1 <= orig(size(this.all[]))
size(this.all[])-1 >= orig(size(this.all[]))-1
===========================================================================
org.pcj.internal.Bitmask.getSize():::ENTER
this.length one of { 1, 3 }
this.value[] elements one of { 1, 7 }
this.value[] one of { [1], [7] }
this.all[] elements one of { 1, 7 }
this.all[] one of { [1], [7] }
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.getSize():::EXIT
this.length == orig(this.length)
this.value == orig(this.value)
this.value[] == orig(this.value[])
this.all == orig(this.all)
this.all[] == orig(this.all[])
this.length one of { 1, 3 }
this.value[] elements one of { 1, 7 }
this.value[] one of { [1], [7] }
this.all[] elements one of { 1, 7 }
this.all[] one of { [1], [7] }
return one of { 1, 3 }
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.isSet():::ENTER
this.length == 1
this.value[] == [1]
this.value[] elements == 1
this.all[] == [1]
this.all[] elements == 1
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.isSet():::EXIT117
===========================================================================
org.pcj.internal.Bitmask.isSet():::EXIT117;condition="return == true"
===========================================================================
org.pcj.internal.Bitmask.isSet():::EXIT
this.length == orig(this.length)
this.value == orig(this.value)
this.value[] == orig(this.value[])
this.all == orig(this.all)
this.all[] == orig(this.all[])
this.length == 1
this.value[] == [1]
this.value[] elements == 1
this.all[] == [1]
this.all[] elements == 1
return == true
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.isSet():::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::ENTER
this.length one of { 1, 3 }
this.all[] elements one of { 1, 7 }
this.all[] one of { [1], [7] }
arg0 != null
arg0.length one of { 1, 3 }
arg0.value != null
arg0.value[] elements one of { 1, 7 }
arg0.value[] one of { [1], [7] }
arg0.all != null
arg0.all[] elements one of { 1, 7 }
arg0.all[] one of { [1], [7] }
size(this.value[]) == 1
size(this.all[]) == 1
size(arg0.value[]) == 1
size(arg0.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT140
this.length == 3
this.all[] == [7]
this.all[] elements == 7
arg0.length == 3
arg0.value[] == [7]
arg0.value[] elements == 7
arg0.all[] == [7]
arg0.all[] elements == 7
return == false
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT140;condition="not(return == true)"
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT143
this.value[] elements one of { 1, 7 }
this.value[] one of { [1], [7] }
return == true
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT143;condition="return == true"
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT
this.length == orig(this.length)
this.value == orig(this.value)
this.value[] == orig(this.value[])
this.all == orig(this.all)
this.all[] == orig(this.all[])
arg0.length == orig(arg0.length)
arg0.value == orig(arg0.value)
arg0.value[] == orig(arg0.value[])
arg0.all == orig(arg0.all)
arg0.all[] == orig(arg0.all[])
(return == false)  ==>  (arg0.all[] == [7])
(return == false)  ==>  (arg0.all[] elements == 7)
(return == false)  ==>  (arg0.length == 3)
(return == false)  ==>  (arg0.value[] == [7])
(return == false)  ==>  (arg0.value[] elements == 7)
(return == false)  ==>  (this.all[] == [7])
(return == false)  ==>  (this.all[] elements == 7)
(return == false)  ==>  (this.length == 3)
(return == true)  ==>  (arg0.all[] elements one of { 1, 7 })
(return == true)  ==>  (arg0.all[] one of { [1], [7] })
(return == true)  ==>  (arg0.length one of { 1, 3 })
(return == true)  ==>  (arg0.value[] elements one of { 1, 7 })
(return == true)  ==>  (arg0.value[] one of { [1], [7] })
(return == true)  ==>  (this.all[] elements one of { 1, 7 })
(return == true)  ==>  (this.all[] one of { [1], [7] })
(return == true)  ==>  (this.length one of { 1, 3 })
(return == true)  ==>  (this.value[] elements one of { 1, 7 })
(return == true)  ==>  (this.value[] one of { [1], [7] })
this.length one of { 1, 3 }
this.all[] elements one of { 1, 7 }
this.all[] one of { [1], [7] }
arg0.length one of { 1, 3 }
arg0.value != null
arg0.value[] elements one of { 1, 7 }
arg0.value[] one of { [1], [7] }
arg0.all != null
arg0.all[] elements one of { 1, 7 }
arg0.all[] one of { [1], [7] }
size(this.value[]) == 1
size(this.all[]) == 1
size(arg0.value[]) == 1
size(arg0.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT;condition="return == true"
this.value[] elements one of { 1, 7 }
this.value[] one of { [1], [7] }
return == true
===========================================================================
org.pcj.internal.Bitmask.isSet(org.pcj.internal.Bitmask):::EXIT;condition="not(return == true)"
this.length == 3
this.all[] == [7]
this.all[] elements == 7
arg0.length == 3
arg0.value[] == [7]
arg0.value[] elements == 7
arg0.all[] == [7]
arg0.all[] elements == 7
return == false
===========================================================================
org.pcj.internal.Bitmask.set(int):::ENTER
this.length one of { 1, 2, 3 }
this.all[] one of { [1], [3], [7] }
arg0 one of { 0, 1, 2 }
size(this.value[]) == 1
size(this.all[]) == 1
===========================================================================
org.pcj.internal.Bitmask.set(int):::EXIT
this.length == orig(this.length)
this.value == orig(this.value)
this.all == orig(this.all)
this.all[] == orig(this.all[])
size(this.value[]) == orig(size(this.value[]))
this.length one of { 1, 2, 3 }
this.value[] elements >= 1
this.all[] one of { [1], [3], [7] }
size(this.value[]) == 1
size(this.all[]) == 1
this.value[] > orig(this.value[]) (elementwise)
===========================================================================
org.pcj.internal.Configuration.getPropertyInt(java.lang.String, int):::ENTER
===========================================================================
org.pcj.internal.Configuration.getPropertyInt(java.lang.String, int):::EXIT68
===========================================================================
org.pcj.internal.Configuration.getPropertyInt(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
return == orig(arg1)
===========================================================================
org.pcj.internal.DeployPCJ:::CLASS
org.pcj.internal.DeployPCJ.LOGGER has only one value
===========================================================================
org.pcj.internal.DeployPCJ:::OBJECT
this.node0.hostname == this.currentJvm.hostname
this.node0.port == this.currentJvm.port
this.node0.threadIds.getClass().getName() == this.currentJvm.threadIds.getClass().getName()
this has only one value
this.startPoint has only one value
this.node0 has only one value
this.node0.hostname has only one value
this.node0.hostname.toString == "localhost"
this.node0.port == 8091
this.node0.threadIds has only one value
this.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
this.currentJvm has only one value
this.currentJvm.hostname.toString == "localhost"
this.currentJvm.threadIds has only one value
this.allNodes has only one value
this.allNodes.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
this.processes has only one value
this.processes[] == []
this.processes[].getClass().getName() == []
this.processes.getClass().getName() == java.util.ArrayList.class
this.allNodesThreadCount == 3
this.node0.threadIds.getClass().getName() != this.allNodes.getClass().getName()
this.node0.threadIds.getClass().getName() != this.processes.getClass().getName()
this.allNodes.getClass().getName() != this.processes.getClass().getName()
===========================================================================
org.pcj.internal.DeployPCJ.DeployPCJ(java.lang.Class, org.pcj.NodesDescription):::ENTER
arg0 has only one value
arg1 has only one value
arg1.node0 has only one value
arg1.node0.hostname has only one value
arg1.node0.hostname.toString == "localhost"
arg1.node0.port == 8091
arg1.node0.threadIds has only one value
arg1.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg1.nodesMap has only one value
arg1.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
org.pcj.internal.DeployPCJ.DeployPCJ(java.lang.Class, org.pcj.NodesDescription):::EXIT
this.startPoint == orig(arg0)
this.node0 == arg1.node0
this.node0 == orig(arg1.node0)
this.node0.hostname == arg1.node0.hostname
this.node0.hostname == orig(arg1.node0.hostname)
this.node0.port == arg1.node0.port
this.node0.port == orig(arg1.node0.port)
this.node0.threadIds == arg1.node0.threadIds
this.node0.threadIds == orig(arg1.node0.threadIds)
this.node0.threadIds.getClass().getName() == arg1.node0.threadIds.getClass().getName()
this.node0.threadIds.getClass().getName() == orig(arg1.node0.threadIds.getClass().getName())
arg1.node0.hostname.toString == orig(arg1.node0.hostname.toString)
arg1.nodesMap == orig(arg1.nodesMap)
arg1.nodesMap.getClass().getName() == orig(arg1.nodesMap.getClass().getName())
arg1.node0.hostname.toString == "localhost"
arg1.nodesMap has only one value
arg1.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
org.pcj.internal.DeployPCJ.deploy(java.lang.Class, org.pcj.NodesDescription):::ENTER
arg0 has only one value
arg1 has only one value
arg1.node0 has only one value
arg1.node0.hostname has only one value
arg1.node0.hostname.toString == "localhost"
arg1.node0.port == 8091
arg1.node0.threadIds has only one value
arg1.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg1.nodesMap has only one value
arg1.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
org.pcj.internal.DeployPCJ.deploy(java.lang.Class, org.pcj.NodesDescription):::EXIT
org.pcj.internal.DeployPCJ.LOGGER == orig(org.pcj.internal.DeployPCJ.LOGGER)
arg1.node0 == orig(arg1.node0)
arg1.node0.hostname == orig(arg1.node0.hostname)
arg1.node0.hostname.toString == orig(arg1.node0.hostname.toString)
arg1.node0.port == orig(arg1.node0.port)
arg1.node0.threadIds == orig(arg1.node0.threadIds)
arg1.node0.threadIds.getClass().getName() == orig(arg1.node0.threadIds.getClass().getName())
arg1.nodesMap == orig(arg1.nodesMap)
arg1.nodesMap.getClass().getName() == orig(arg1.nodesMap.getClass().getName())
arg1.node0 has only one value
arg1.node0.hostname has only one value
arg1.node0.hostname.toString == "localhost"
arg1.node0.port == 8091
arg1.node0.threadIds has only one value
arg1.node0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg1.nodesMap has only one value
arg1.nodesMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
org.pcj.internal.DeployPCJ.runPCJ(org.pcj.internal.NodeInfo):::ENTER
this.node0.threadIds.getClass().getName() == arg0.threadIds.getClass().getName()
arg0 has only one value
arg0.hostname has only one value
arg0.hostname.toString == "localhost"
arg0.port == 8091
arg0.threadIds has only one value
===========================================================================
org.pcj.internal.DeployPCJ.runPCJ(org.pcj.internal.NodeInfo):::EXIT
org.pcj.internal.DeployPCJ.LOGGER == orig(org.pcj.internal.DeployPCJ.LOGGER)
this.startPoint == orig(this.startPoint)
this.node0 == orig(this.node0)
this.node0.hostname == orig(this.node0.hostname)
this.node0.hostname == orig(this.currentJvm.hostname)
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == orig(this.node0.port)
this.node0.port == orig(this.currentJvm.port)
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == arg0.threadIds.getClass().getName()
this.currentJvm == orig(this.currentJvm)
this.currentJvm.hostname.toString == orig(this.currentJvm.hostname.toString)
this.currentJvm.threadIds == orig(this.currentJvm.threadIds)
this.currentJvm.threadIds.getClass().getName() == arg0.threadIds.getClass().getName()
this.allNodes == orig(this.allNodes)
this.allNodes.getClass().getName() == orig(this.allNodes.getClass().getName())
this.processes == orig(this.processes)
this.processes[] == orig(this.processes[])
this.processes.getClass().getName() == orig(this.processes.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
arg0.hostname == orig(arg0.hostname)
arg0.hostname.toString == orig(arg0.hostname.toString)
arg0.port == orig(arg0.port)
arg0.threadIds == orig(arg0.threadIds)
arg0.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
arg0.threadIds.getClass().getName() == orig(this.currentJvm.threadIds.getClass().getName())
arg0.threadIds.getClass().getName() == orig(arg0.threadIds.getClass().getName())
arg0.hostname has only one value
arg0.hostname.toString == "localhost"
arg0.port == 8091
arg0.threadIds has only one value
arg0.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
===========================================================================
org.pcj.internal.DeployPCJ.startDeploying():::ENTER
===========================================================================
org.pcj.internal.DeployPCJ.startDeploying():::EXIT
org.pcj.internal.DeployPCJ.LOGGER == orig(org.pcj.internal.DeployPCJ.LOGGER)
this.startPoint == orig(this.startPoint)
this.node0 == orig(this.node0)
this.node0.hostname == orig(this.node0.hostname)
this.node0.hostname == orig(this.currentJvm.hostname)
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == orig(this.node0.port)
this.node0.port == orig(this.currentJvm.port)
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.node0.threadIds.getClass().getName() == orig(this.currentJvm.threadIds.getClass().getName())
this.currentJvm == orig(this.currentJvm)
this.currentJvm.hostname.toString == orig(this.currentJvm.hostname.toString)
this.currentJvm.threadIds == orig(this.currentJvm.threadIds)
this.allNodes == orig(this.allNodes)
this.allNodes.getClass().getName() == orig(this.allNodes.getClass().getName())
this.processes == orig(this.processes)
this.processes[] == orig(this.processes[])
this.processes.getClass().getName() == orig(this.processes.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
===========================================================================
org.pcj.internal.DeployPCJ.waitForFinish():::ENTER
===========================================================================
org.pcj.internal.DeployPCJ.waitForFinish():::EXIT
org.pcj.internal.DeployPCJ.LOGGER == orig(org.pcj.internal.DeployPCJ.LOGGER)
this.startPoint == orig(this.startPoint)
this.node0 == orig(this.node0)
this.node0.hostname == orig(this.node0.hostname)
this.node0.hostname == orig(this.currentJvm.hostname)
this.node0.hostname.toString == orig(this.node0.hostname.toString)
this.node0.port == orig(this.node0.port)
this.node0.port == orig(this.currentJvm.port)
this.node0.threadIds == orig(this.node0.threadIds)
this.node0.threadIds.getClass().getName() == orig(this.node0.threadIds.getClass().getName())
this.node0.threadIds.getClass().getName() == orig(this.currentJvm.threadIds.getClass().getName())
this.currentJvm == orig(this.currentJvm)
this.currentJvm.hostname.toString == orig(this.currentJvm.hostname.toString)
this.currentJvm.threadIds == orig(this.currentJvm.threadIds)
this.allNodes == orig(this.allNodes)
this.allNodes.getClass().getName() == orig(this.allNodes.getClass().getName())
this.processes == orig(this.processes)
this.processes[] == orig(this.processes[])
this.processes.getClass().getName() == orig(this.processes.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree:::OBJECT
this has only one value
this.rootNode == 0
this.parentNode == -1
this.childrenNodes has only one value
this.childrenNodes != null
this.childrenNodes[] == []
this.childrenNodes[].getClass().getName() == []
this.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree.CommunicationTree(int):::ENTER
arg0 == 0
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree.CommunicationTree(int):::EXIT
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree.getChildrenNodes():::ENTER
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree.getChildrenNodes():::EXIT
this.rootNode == orig(this.rootNode)
this.parentNode == orig(this.parentNode)
this.childrenNodes == orig(this.childrenNodes)
this.childrenNodes[] == orig(this.childrenNodes[])
this.childrenNodes.getClass().getName() == orig(this.childrenNodes.getClass().getName())
return has only one value
return[] == []
return[].getClass().getName() == []
return.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree.getRootNode():::ENTER
===========================================================================
org.pcj.internal.InternalCommonGroup$CommunicationTree.getRootNode():::EXIT
this.rootNode == orig(this.rootNode)
this.parentNode == orig(this.parentNode)
this.childrenNodes == orig(this.childrenNodes)
this.childrenNodes[] == orig(this.childrenNodes[])
this.childrenNodes.getClass().getName() == orig(this.childrenNodes.getClass().getName())
return == 0
===========================================================================
org.pcj.internal.InternalCommonGroup:::CLASS
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
===========================================================================
org.pcj.internal.InternalCommonGroup:::OBJECT
this.threadsMapping has only one value
this.threadsMapping != null
this.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
this.groupId == 0
this.groupName has only one value
this.groupName != null
this.groupName.toString == ""
this.localIds has only one value
this.localIds != null
this.localIds[] elements != null
this.localIds[].getClass().getName() elements == java.lang.Integer.class
this.localIds.getClass().getName() == java.util.ArrayList.class
this.physicalIds has only one value
this.physicalIds != null
this.physicalIds[] elements has only one value
this.physicalIds[] elements != null
this.physicalIds[].getClass().getName() elements == java.lang.Integer.class
this.physicalIds[].getClass().getName() one of { [], [java.lang.Integer] }
this.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
this.localBitmask has only one value
this.localBitmask != null
this.localBitmask.length >= 0
this.localBitmask.value != null
this.localBitmask.value[] elements one of { 1, 3, 7 }
this.localBitmask.all != null
this.localBitmask.all[] elements one of { 1, 3, 7 }
this.physicalBitmask has only one value
this.physicalBitmask != null
this.physicalBitmask.length one of { 0, 1 }
this.physicalBitmask.value != null
this.physicalBitmask.value[] elements == 1
this.physicalBitmask.value[] one of { [], [1] }
this.physicalBitmask.all != null
this.physicalBitmask.all[] elements == 1
this.physicalBitmask.all[] one of { [], [1] }
this.barrierStateMap has only one value
this.barrierStateMap != null
this.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.groupJoinStateMap has only one value
this.groupJoinStateMap != null
this.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.physicalTree has only one value
this.physicalTree != null
this.physicalTree.rootNode == 0
this.physicalTree.parentNode == -1
this.physicalTree.childrenNodes has only one value
this.physicalTree.childrenNodes != null
this.physicalTree.childrenNodes[] == []
this.physicalTree.childrenNodes[].getClass().getName() == []
this.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(this.physicalIds[]) one of { 0, 1 }
size(this.localBitmask.value[]) one of { 0, 1 }
size(this.localBitmask.all[]) one of { 0, 1 }
size(this.physicalBitmask.value[]) one of { 0, 1 }
size(this.physicalBitmask.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.InternalCommonGroup.InternalCommonGroup(int, int, java.lang.String):::ENTER
arg0 == 0
arg1 == 0
arg2 has only one value
arg2.toString == ""
===========================================================================
org.pcj.internal.InternalCommonGroup.InternalCommonGroup(int, int, java.lang.String):::EXIT
arg2.toString == orig(arg2.toString)
this.joinGroupSynchronizer has only one value
this.localIds[] == []
this.localIds[].getClass().getName() == []
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 0
this.localBitmask.value has only one value
this.localBitmask.value[] == []
this.localBitmask.all has only one value
this.localBitmask.all[] == []
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
arg2.toString == ""
size(this.physicalIds[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.InternalCommonGroup(org.pcj.internal.InternalCommonGroup):::ENTER
arg0 has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
arg0.threadsMapping has only one value
arg0.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.joinGroupSynchronizer has only one value
arg0.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg0.groupId == 0
arg0.groupName has only one value
arg0.groupName.toString == ""
arg0.localIds has only one value
arg0.localIds[] contains no nulls and has only one value, of length 3
arg0.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.localIds[].getClass().getName() elements == java.lang.Integer.class
arg0.localIds.getClass().getName() == java.util.ArrayList.class
arg0.physicalIds has only one value
arg0.physicalIds[] contains no nulls and has only one value, of length 1
arg0.physicalIds[] elements has only one value
arg0.physicalIds[].getClass().getName() == [java.lang.Integer]
arg0.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg0.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg0.localBitmask has only one value
arg0.localBitmask.length == 3
arg0.localBitmask.value has only one value
arg0.localBitmask.value[] == [7]
arg0.localBitmask.value[] elements == 7
arg0.localBitmask.all has only one value
arg0.localBitmask.all[] == [7]
arg0.localBitmask.all[] elements == 7
arg0.physicalBitmask has only one value
arg0.physicalBitmask.length == 1
arg0.physicalBitmask.value has only one value
arg0.physicalBitmask.value[] == [1]
arg0.physicalBitmask.value[] elements == 1
arg0.physicalBitmask.all has only one value
arg0.physicalBitmask.all[] == [1]
arg0.physicalBitmask.all[] elements == 1
arg0.barrierStateMap has only one value
arg0.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.groupJoinStateMap has only one value
arg0.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsCounter has only one value
arg0.physicalTree has only one value
arg0.physicalTree.rootNode == 0
arg0.physicalTree.parentNode == -1
arg0.physicalTree.childrenNodes has only one value
arg0.physicalTree.childrenNodes[] == []
arg0.physicalTree.childrenNodes[].getClass().getName() == []
arg0.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg0.localIds[]) == 3
size(arg0.physicalIds[]) == 1
size(arg0.localBitmask.value[]) == 1
size(arg0.localBitmask.all[]) == 1
size(arg0.physicalBitmask.value[]) == 1
size(arg0.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.InternalCommonGroup(org.pcj.internal.InternalCommonGroup):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
arg0.threadsMapping == orig(arg0.threadsMapping)
arg0.threadsMapping.getClass().getName() == orig(arg0.threadsMapping.getClass().getName())
arg0.joinGroupSynchronizer == orig(arg0.joinGroupSynchronizer)
arg0.joinGroupSynchronizer.getClass().getName() == orig(arg0.joinGroupSynchronizer.getClass().getName())
arg0.groupId == orig(arg0.groupId)
arg0.groupName == orig(arg0.groupName)
arg0.groupName.toString == orig(arg0.groupName.toString)
arg0.localIds == orig(arg0.localIds)
arg0.localIds[] == orig(arg0.localIds[])
arg0.localIds.getClass().getName() == orig(arg0.localIds.getClass().getName())
arg0.physicalIds == orig(arg0.physicalIds)
arg0.physicalIds[] == orig(arg0.physicalIds[])
arg0.physicalIds.getClass().getName() == orig(arg0.physicalIds.getClass().getName())
arg0.localBitmask == orig(arg0.localBitmask)
arg0.localBitmask.length == orig(arg0.localBitmask.length)
arg0.localBitmask.value == orig(arg0.localBitmask.value)
arg0.localBitmask.value[] == orig(arg0.localBitmask.value[])
arg0.localBitmask.all == orig(arg0.localBitmask.all)
arg0.localBitmask.all[] == orig(arg0.localBitmask.all[])
arg0.physicalBitmask == orig(arg0.physicalBitmask)
arg0.physicalBitmask.length == orig(arg0.physicalBitmask.length)
arg0.physicalBitmask.value == orig(arg0.physicalBitmask.value)
arg0.physicalBitmask.value[] == orig(arg0.physicalBitmask.value[])
arg0.physicalBitmask.all == orig(arg0.physicalBitmask.all)
arg0.physicalBitmask.all[] == orig(arg0.physicalBitmask.all[])
arg0.barrierStateMap == orig(arg0.barrierStateMap)
arg0.barrierStateMap.getClass().getName() == orig(arg0.barrierStateMap.getClass().getName())
arg0.groupJoinStateMap == orig(arg0.groupJoinStateMap)
arg0.groupJoinStateMap.getClass().getName() == orig(arg0.groupJoinStateMap.getClass().getName())
arg0.threadsCounter == orig(arg0.threadsCounter)
arg0.physicalTree == orig(arg0.physicalTree)
arg0.physicalTree.rootNode == orig(arg0.physicalTree.rootNode)
arg0.physicalTree.parentNode == orig(arg0.physicalTree.parentNode)
arg0.physicalTree.childrenNodes == orig(arg0.physicalTree.childrenNodes)
arg0.physicalTree.childrenNodes[] == orig(arg0.physicalTree.childrenNodes[])
arg0.physicalTree.childrenNodes.getClass().getName() == orig(arg0.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
arg0.threadsMapping has only one value
arg0.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.joinGroupSynchronizer has only one value
arg0.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg0.groupId == 0
arg0.groupName has only one value
arg0.groupName.toString == ""
arg0.localIds has only one value
arg0.localIds[] contains no nulls and has only one value, of length 3
arg0.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.localIds[].getClass().getName() elements == java.lang.Integer.class
arg0.localIds.getClass().getName() == java.util.ArrayList.class
arg0.physicalIds has only one value
arg0.physicalIds[] contains no nulls and has only one value, of length 1
arg0.physicalIds[] elements has only one value
arg0.physicalIds[].getClass().getName() == [java.lang.Integer]
arg0.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg0.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg0.localBitmask has only one value
arg0.localBitmask.length == 3
arg0.localBitmask.value has only one value
arg0.localBitmask.value[] == [7]
arg0.localBitmask.value[] elements == 7
arg0.localBitmask.all has only one value
arg0.localBitmask.all[] == [7]
arg0.localBitmask.all[] elements == 7
arg0.physicalBitmask has only one value
arg0.physicalBitmask.length == 1
arg0.physicalBitmask.value has only one value
arg0.physicalBitmask.value[] == [1]
arg0.physicalBitmask.value[] elements == 1
arg0.physicalBitmask.all has only one value
arg0.physicalBitmask.all[] == [1]
arg0.physicalBitmask.all[] elements == 1
arg0.barrierStateMap has only one value
arg0.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.groupJoinStateMap has only one value
arg0.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsCounter has only one value
arg0.physicalTree has only one value
arg0.physicalTree.rootNode == 0
arg0.physicalTree.parentNode == -1
arg0.physicalTree.childrenNodes has only one value
arg0.physicalTree.childrenNodes[] == []
arg0.physicalTree.childrenNodes[].getClass().getName() == []
arg0.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
size(arg0.localIds[]) == 3
size(arg0.physicalIds[]) == 1
size(arg0.localBitmask.value[]) == 1
size(arg0.localBitmask.all[]) == 1
size(arg0.physicalBitmask.value[]) == 1
size(arg0.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.addThread(int, int):::ENTER
this has only one value
this.joinGroupSynchronizer has only one value
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length one of { 0, 1, 2 }
this.localBitmask.value[] elements one of { 1, 3 }
this.localBitmask.value[] one of { [], [1], [3] }
this.localBitmask.all[] elements one of { 1, 3 }
this.localBitmask.all[] one of { [], [1], [3] }
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
arg0 one of { 0, 1, 2 }
arg1 one of { 0, 1, 2 }
size(this.localIds[]) one of { 0, 1, 2 }
size(this.physicalIds[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.addThread(int, int):::EXIT168
===========================================================================
org.pcj.internal.InternalCommonGroup.addThread(int, int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
size(this.localIds[])-1 == orig(size(this.localIds[]))
this.joinGroupSynchronizer has only one value
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length one of { 1, 2, 3 }
this.localBitmask.value[] one of { [1], [3], [7] }
this.localBitmask.all[] one of { [1], [3], [7] }
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) one of { 1, 2, 3 }
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.barrier(int, int):::ENTER
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
this.threadsCounter != null
arg0 one of { 0, 1, 2 }
arg1 >= 1
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.barrier(int, int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
this.threadsCounter != null
return != null
return.groupId == 0
return.barrierRound >= 1
return.childrenSet != null
return.childrenSet.getClass().getName() == java.util.concurrent.ConcurrentHashMap$KeySetView.class
return.localBarrierBitmask != null
return.localBarrierBitmask.length == 3
return.localBarrierBitmask.value != null
return.localBarrierBitmask.all != null
return.localBarrierBitmask.all[] == [7]
return.localBarrierBitmask.all[] elements == 7
return.localBarrierMaskBitmask != null
return.localBarrierMaskBitmask.length == 3
return.localBarrierMaskBitmask.value != null
return.localBarrierMaskBitmask.value[] == [7]
return.localBarrierMaskBitmask.value[] elements == 7
return.localBarrierMaskBitmask.all != null
return.localBarrierMaskBitmask.all[] == [7]
return.localBarrierMaskBitmask.all[] elements == 7
return.lock != null
return.lock.getClass().getName() == java.lang.Object.class
return.signaled == false
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
size(return.localBarrierBitmask.value[]) == 1
size(return.localBarrierBitmask.all[]) == 1
size(return.localBarrierMaskBitmask.value[]) == 1
size(return.localBarrierMaskBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getBarrierState(int):::ENTER
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
this.threadsCounter != null
arg0 >= 1
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getBarrierState(int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
this.threadsCounter != null
return != null
return.groupId == 0
return.barrierRound >= 1
return.childrenSet != null
return.childrenSet.getClass().getName() == java.util.concurrent.ConcurrentHashMap$KeySetView.class
return.localBarrierBitmask != null
return.localBarrierBitmask.length == 3
return.localBarrierBitmask.value != null
return.localBarrierBitmask.value[] elements >= 0
return.localBarrierBitmask.all != null
return.localBarrierBitmask.all[] == [7]
return.localBarrierBitmask.all[] elements == 7
return.localBarrierMaskBitmask != null
return.localBarrierMaskBitmask.length == 3
return.localBarrierMaskBitmask.value != null
return.localBarrierMaskBitmask.value[] == [7]
return.localBarrierMaskBitmask.value[] elements == 7
return.localBarrierMaskBitmask.all != null
return.localBarrierMaskBitmask.all[] == [7]
return.localBarrierMaskBitmask.all[] elements == 7
return.lock != null
return.lock.getClass().getName() == java.lang.Object.class
return.signaled == false
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
size(return.localBarrierBitmask.value[]) == 1
size(return.localBarrierBitmask.all[]) == 1
size(return.localBarrierMaskBitmask.value[]) == 1
size(return.localBarrierMaskBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getChildrenNodes():::ENTER
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getChildrenNodes():::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return has only one value
return[] == []
return[].getClass().getName() == []
return.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getGlobalThreadId(int):::ENTER
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
this.threadsCounter != null
arg0 one of { 0, 1, 2 }
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getGlobalThreadId(int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
this.threadsCounter != null
return one of { 0, 1, 2 }
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getGroupId():::ENTER
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getGroupId():::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return == 0
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getGroupMasterNode():::ENTER
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getGroupMasterNode():::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return == 0
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getLocalThreadsId():::ENTER
this has only one value
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getLocalThreadsId():::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return has only one value
return[] == [0, 1, 2]
return[] elements one of { 0, 1, 2 }
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
size(return[]) == 3
===========================================================================
org.pcj.internal.InternalCommonGroup.getPhysicalBitmask():::ENTER
this has only one value
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.getPhysicalBitmask():::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return has only one value
return.length == 1
return.value has only one value
return.value[] == [1]
return.value[] elements == 1
return.all has only one value
return.all[] == [1]
return.all[] elements == 1
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
size(return.value[]) == 1
size(return.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.removeBarrierState(int):::ENTER
this has only one value
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.removeBarrierState(int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return.groupId == 0
return.childrenSet.getClass().getName() == java.util.concurrent.ConcurrentHashMap$KeySetView.class
return.localBarrierBitmask.length == 3
return.localBarrierBitmask.value[] == [7]
return.localBarrierBitmask.value[] elements == 7
return.localBarrierBitmask.all[] == [7]
return.localBarrierBitmask.all[] elements == 7
return.localBarrierMaskBitmask.length == 3
return.localBarrierMaskBitmask.value[] == [7]
return.localBarrierMaskBitmask.value[] elements == 7
return.localBarrierMaskBitmask.all[] == [7]
return.localBarrierMaskBitmask.all[] elements == 7
return.lock.getClass().getName() == java.lang.Object.class
return.signaled == false
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
size(return.localBarrierBitmask.value[]) == 1
size(return.localBarrierBitmask.all[]) == 1
size(return.localBarrierMaskBitmask.value[]) == 1
size(return.localBarrierMaskBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.threadCount():::ENTER
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.threadCount():::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.joinGroupSynchronizer has only one value
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
return == 3
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.updateCommunicationTree(int):::ENTER
this has only one value
this.localBitmask.length one of { 0, 1, 2 }
this.localBitmask.value[] elements one of { 1, 3 }
this.localBitmask.value[] one of { [], [1], [3] }
this.localBitmask.all[] elements one of { 1, 3 }
this.localBitmask.all[] one of { [], [1], [3] }
arg0 == 0
size(this.localIds[]) one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.InternalCommonGroup.updateCommunicationTree(int):::EXIT172
this.physicalIds[] == orig(this.physicalIds[])
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.joinGroupSynchronizer has only one value
this.threadsCounter has only one value
===========================================================================
org.pcj.internal.InternalCommonGroup.updateCommunicationTree(int):::EXIT191
size(this.physicalIds[])-1 == orig(size(this.physicalIds[]))
size(this.physicalBitmask.value[])-1 == orig(size(this.physicalBitmask.value[]))
size(this.physicalBitmask.all[])-1 == orig(size(this.physicalBitmask.all[]))
this.joinGroupSynchronizer == null
this.localIds[] == []
this.localIds[].getClass().getName() == []
this.localBitmask.length == 0
this.localBitmask.value has only one value
this.localBitmask.value[] == []
this.localBitmask.all has only one value
this.localBitmask.all[] == []
this.threadsCounter == null
orig(this.physicalIds[]) == []
orig(this.physicalIds[].getClass().getName()) == []
orig(this.physicalBitmask.length) == 0
orig(this.physicalBitmask.value) has only one value
orig(this.physicalBitmask.value[]) == []
orig(this.physicalBitmask.all) has only one value
orig(this.physicalBitmask.all[]) == []
===========================================================================
org.pcj.internal.InternalCommonGroup.updateCommunicationTree(int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
(this.joinGroupSynchronizer == null)  <==>  (orig(this.physicalBitmask.all[]) == [])
(this.joinGroupSynchronizer == null)  <==>  (orig(this.physicalBitmask.length) == 0)
(this.joinGroupSynchronizer == null)  <==>  (orig(this.physicalBitmask.value[]) == [])
(this.joinGroupSynchronizer == null)  <==>  (orig(this.physicalIds[]) == [])
(this.joinGroupSynchronizer == null)  <==>  (orig(this.physicalIds[].getClass().getName()) == [])
(this.joinGroupSynchronizer == null)  <==>  (size(this.physicalBitmask.all[])-1 == orig(size(this.physicalBitmask.all[])))
(this.joinGroupSynchronizer == null)  <==>  (size(this.physicalBitmask.value[])-1 == orig(size(this.physicalBitmask.value[])))
(this.joinGroupSynchronizer == null)  <==>  (size(this.physicalIds[])-1 == orig(size(this.physicalIds[])))
(this.joinGroupSynchronizer == null)  <==>  (this.threadsCounter == null)
(this.joinGroupSynchronizer == null)  ==>  (this.localBitmask.all has only one value)
(this.joinGroupSynchronizer == null)  ==>  (this.localBitmask.all[] == [])
(this.joinGroupSynchronizer == null)  ==>  (this.localBitmask.length == 0)
(this.joinGroupSynchronizer == null)  ==>  (this.localBitmask.value has only one value)
(this.joinGroupSynchronizer == null)  ==>  (this.localBitmask.value[] == [])
(this.joinGroupSynchronizer == null)  ==>  (this.localIds[] == [])
(this.joinGroupSynchronizer == null)  ==>  (this.localIds[].getClass().getName() == [])
(this.joinGroupSynchronizer has only one value)  <==>  (orig(size(this.physicalBitmask.all[])) == 1)
(this.joinGroupSynchronizer has only one value)  <==>  (orig(size(this.physicalBitmask.value[])) == 1)
(this.joinGroupSynchronizer has only one value)  <==>  (orig(size(this.physicalIds[])) == 1)
(this.joinGroupSynchronizer has only one value)  <==>  (orig(this.physicalBitmask.all[]) == [1])
(this.joinGroupSynchronizer has only one value)  <==>  (orig(this.physicalBitmask.length) == 1)
(this.joinGroupSynchronizer has only one value)  <==>  (orig(this.physicalBitmask.value[]) == [1])
(this.joinGroupSynchronizer has only one value)  <==>  (orig(this.physicalIds[]) contains no nulls and has only one value, of length 1)
(this.joinGroupSynchronizer has only one value)  <==>  (orig(this.physicalIds[].getClass().getName()) == [java.lang.Integer])
(this.joinGroupSynchronizer has only one value)  <==>  (this.physicalBitmask.length == orig(this.physicalBitmask.length))
(this.joinGroupSynchronizer has only one value)  <==>  (this.threadsCounter has only one value)
(this.joinGroupSynchronizer has only one value)  ==>  (orig(this.physicalBitmask.all[]) elements == 1)
(this.joinGroupSynchronizer has only one value)  ==>  (orig(this.physicalBitmask.value[]) elements == 1)
(this.joinGroupSynchronizer has only one value)  ==>  (orig(this.physicalIds[]) elements has only one value)
(this.joinGroupSynchronizer has only one value)  ==>  (orig(this.physicalIds[].getClass().getName()) elements == java.lang.Integer.class)
(this.joinGroupSynchronizer has only one value)  ==>  (size(this.localBitmask.all[]) one of { 0, 1 })
(this.joinGroupSynchronizer has only one value)  ==>  (size(this.localBitmask.value[]) one of { 0, 1 })
(this.joinGroupSynchronizer has only one value)  ==>  (size(this.localIds[]) one of { 0, 1, 2 })
(this.joinGroupSynchronizer has only one value)  ==>  (this.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class)
(this.joinGroupSynchronizer has only one value)  ==>  (this.localBitmask.all[] elements one of { 1, 3 })
(this.joinGroupSynchronizer has only one value)  ==>  (this.localBitmask.all[] one of { [], [1], [3] })
(this.joinGroupSynchronizer has only one value)  ==>  (this.localBitmask.length one of { 0, 1, 2 })
(this.joinGroupSynchronizer has only one value)  ==>  (this.localBitmask.value[] elements one of { 1, 3 })
(this.joinGroupSynchronizer has only one value)  ==>  (this.localBitmask.value[] one of { [], [1], [3] })
(this.joinGroupSynchronizer has only one value)  ==>  (this.localIds[].getClass().getName() elements == java.lang.Integer.class)
(this.joinGroupSynchronizer has only one value)  ==>  (this.physicalBitmask.all == orig(this.physicalBitmask.all))
(this.joinGroupSynchronizer has only one value)  ==>  (this.physicalBitmask.value == orig(this.physicalBitmask.value))
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length one of { 0, 1, 2 }
this.localBitmask.value[] elements one of { 1, 3 }
this.localBitmask.value[] one of { [], [1], [3] }
this.localBitmask.all[] elements one of { 1, 3 }
this.localBitmask.all[] one of { [], [1], [3] }
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
size(this.localIds[]) one of { 0, 1, 2 }
size(this.physicalIds[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.updateLocalBitmask(int, int):::ENTER
this has only one value
this.joinGroupSynchronizer has only one value
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length one of { 0, 1, 2 }
this.localBitmask.value[] elements one of { 1, 3 }
this.localBitmask.value[] one of { [], [1], [3] }
this.localBitmask.all[] elements one of { 1, 3 }
this.localBitmask.all[] one of { [], [1], [3] }
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
arg0 == 0
arg1 one of { 0, 1, 2 }
size(this.localIds[]) one of { 0, 1, 2 }
size(this.physicalIds[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalCommonGroup.updateLocalBitmask(int, int):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
size(this.localIds[])-1 == orig(size(this.localIds[]))
this.joinGroupSynchronizer has only one value
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.localBitmask.length one of { 1, 2, 3 }
this.localBitmask.value[] one of { [1], [3], [7] }
this.localBitmask.all[] one of { [1], [3], [7] }
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value[] == [1]
this.physicalBitmask.all has only one value
this.physicalBitmask.all[] == [1]
this.threadsCounter has only one value
size(this.localIds[]) one of { 1, 2, 3 }
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalGroup:::CLASS
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
===========================================================================
org.pcj.internal.InternalGroup:::OBJECT
this.myThreadId one of { 0, 1, 2 }
this.barrierRoundCounter != null
this.getVariableCounter != null
this.getVariableMap != null
this.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.putVariableCounter != null
this.putVariableMap != null
this.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.broadcastCounter != null
this.broadcastStateMap != null
this.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.peerBarrierStateMap != null
this.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadsMapping has only one value
this.threadsMapping != null
this.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.joinGroupSynchronizer has only one value
this.joinGroupSynchronizer != null
this.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
this.groupId == 0
this.groupName has only one value
this.groupName != null
this.groupName.toString == ""
this.localIds has only one value
this.localIds != null
this.localIds[] contains no nulls and has only one value, of length 3
this.localIds[] elements != null
this.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.localIds[].getClass().getName() elements == java.lang.Integer.class
this.localIds.getClass().getName() == java.util.ArrayList.class
this.physicalIds has only one value
this.physicalIds != null
this.physicalIds[] contains no nulls and has only one value, of length 1
this.physicalIds[] elements has only one value
this.physicalIds[] elements != null
this.physicalIds[].getClass().getName() == [java.lang.Integer]
this.physicalIds[].getClass().getName() elements == java.lang.Integer.class
this.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
this.localBitmask has only one value
this.localBitmask != null
this.localBitmask.length == 3
this.localBitmask.value has only one value
this.localBitmask.value != null
this.localBitmask.value[] == [7]
this.localBitmask.value[] elements == 7
this.localBitmask.all has only one value
this.localBitmask.all != null
this.localBitmask.all[] == [7]
this.localBitmask.all[] elements == 7
this.physicalBitmask has only one value
this.physicalBitmask != null
this.physicalBitmask.length == 1
this.physicalBitmask.value has only one value
this.physicalBitmask.value != null
this.physicalBitmask.value[] == [1]
this.physicalBitmask.value[] elements == 1
this.physicalBitmask.all has only one value
this.physicalBitmask.all != null
this.physicalBitmask.all[] == [1]
this.physicalBitmask.all[] elements == 1
this.barrierStateMap has only one value
this.barrierStateMap != null
this.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.groupJoinStateMap has only one value
this.groupJoinStateMap != null
this.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadsCounter has only one value
this.threadsCounter != null
this.physicalTree has only one value
this.physicalTree != null
this.physicalTree.rootNode == 0
this.physicalTree.parentNode == -1
this.physicalTree.childrenNodes has only one value
this.physicalTree.childrenNodes != null
this.physicalTree.childrenNodes[] == []
this.physicalTree.childrenNodes[].getClass().getName() == []
this.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(this.localIds[]) == 3
size(this.physicalIds[]) == 1
size(this.localBitmask.value[]) == 1
size(this.localBitmask.all[]) == 1
size(this.physicalBitmask.value[]) == 1
size(this.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalGroup.InternalGroup(int, org.pcj.internal.InternalCommonGroup):::ENTER
arg0 one of { 0, 1, 2 }
arg1 has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
arg1.threadsMapping has only one value
arg1.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.joinGroupSynchronizer has only one value
arg1.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg1.groupId == 0
arg1.groupName has only one value
arg1.groupName.toString == ""
arg1.localIds has only one value
arg1.localIds[] contains no nulls and has only one value, of length 3
arg1.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg1.localIds[].getClass().getName() elements == java.lang.Integer.class
arg1.localIds.getClass().getName() == java.util.ArrayList.class
arg1.physicalIds has only one value
arg1.physicalIds[] contains no nulls and has only one value, of length 1
arg1.physicalIds[] elements has only one value
arg1.physicalIds[].getClass().getName() == [java.lang.Integer]
arg1.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg1.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg1.localBitmask has only one value
arg1.localBitmask.length == 3
arg1.localBitmask.value has only one value
arg1.localBitmask.value[] == [7]
arg1.localBitmask.value[] elements == 7
arg1.localBitmask.all has only one value
arg1.localBitmask.all[] == [7]
arg1.localBitmask.all[] elements == 7
arg1.physicalBitmask has only one value
arg1.physicalBitmask.length == 1
arg1.physicalBitmask.value has only one value
arg1.physicalBitmask.value[] == [1]
arg1.physicalBitmask.value[] elements == 1
arg1.physicalBitmask.all has only one value
arg1.physicalBitmask.all[] == [1]
arg1.physicalBitmask.all[] elements == 1
arg1.barrierStateMap has only one value
arg1.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.groupJoinStateMap has only one value
arg1.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.threadsCounter has only one value
arg1.physicalTree has only one value
arg1.physicalTree.rootNode == 0
arg1.physicalTree.parentNode == -1
arg1.physicalTree.childrenNodes has only one value
arg1.physicalTree.childrenNodes[] == []
arg1.physicalTree.childrenNodes[].getClass().getName() == []
arg1.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg1.localIds[]) == 3
size(arg1.physicalIds[]) == 1
size(arg1.localBitmask.value[]) == 1
size(arg1.localBitmask.all[]) == 1
size(arg1.physicalBitmask.value[]) == 1
size(arg1.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalGroup.InternalGroup(int, org.pcj.internal.InternalCommonGroup):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
arg1.threadsMapping == orig(arg1.threadsMapping)
arg1.threadsMapping.getClass().getName() == orig(arg1.threadsMapping.getClass().getName())
arg1.joinGroupSynchronizer == orig(arg1.joinGroupSynchronizer)
arg1.joinGroupSynchronizer.getClass().getName() == orig(arg1.joinGroupSynchronizer.getClass().getName())
arg1.groupId == orig(arg1.groupId)
arg1.groupName == orig(arg1.groupName)
arg1.groupName.toString == orig(arg1.groupName.toString)
arg1.localIds == orig(arg1.localIds)
arg1.localIds[] == orig(arg1.localIds[])
arg1.localIds.getClass().getName() == orig(arg1.localIds.getClass().getName())
arg1.physicalIds == orig(arg1.physicalIds)
arg1.physicalIds[] == orig(arg1.physicalIds[])
arg1.physicalIds.getClass().getName() == orig(arg1.physicalIds.getClass().getName())
arg1.localBitmask == orig(arg1.localBitmask)
arg1.localBitmask.length == orig(arg1.localBitmask.length)
arg1.localBitmask.value == orig(arg1.localBitmask.value)
arg1.localBitmask.value[] == orig(arg1.localBitmask.value[])
arg1.localBitmask.all == orig(arg1.localBitmask.all)
arg1.localBitmask.all[] == orig(arg1.localBitmask.all[])
arg1.physicalBitmask == orig(arg1.physicalBitmask)
arg1.physicalBitmask.length == orig(arg1.physicalBitmask.length)
arg1.physicalBitmask.value == orig(arg1.physicalBitmask.value)
arg1.physicalBitmask.value[] == orig(arg1.physicalBitmask.value[])
arg1.physicalBitmask.all == orig(arg1.physicalBitmask.all)
arg1.physicalBitmask.all[] == orig(arg1.physicalBitmask.all[])
arg1.barrierStateMap == orig(arg1.barrierStateMap)
arg1.barrierStateMap.getClass().getName() == orig(arg1.barrierStateMap.getClass().getName())
arg1.groupJoinStateMap == orig(arg1.groupJoinStateMap)
arg1.groupJoinStateMap.getClass().getName() == orig(arg1.groupJoinStateMap.getClass().getName())
arg1.threadsCounter == orig(arg1.threadsCounter)
arg1.physicalTree == orig(arg1.physicalTree)
arg1.physicalTree.rootNode == orig(arg1.physicalTree.rootNode)
arg1.physicalTree.parentNode == orig(arg1.physicalTree.parentNode)
arg1.physicalTree.childrenNodes == orig(arg1.physicalTree.childrenNodes)
arg1.physicalTree.childrenNodes[] == orig(arg1.physicalTree.childrenNodes[])
arg1.physicalTree.childrenNodes.getClass().getName() == orig(arg1.physicalTree.childrenNodes.getClass().getName())
arg1.threadsMapping has only one value
arg1.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.joinGroupSynchronizer has only one value
arg1.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg1.groupId == 0
arg1.groupName has only one value
arg1.groupName.toString == ""
arg1.localIds has only one value
arg1.localIds[] contains no nulls and has only one value, of length 3
arg1.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg1.localIds[].getClass().getName() elements == java.lang.Integer.class
arg1.localIds.getClass().getName() == java.util.ArrayList.class
arg1.physicalIds has only one value
arg1.physicalIds[] contains no nulls and has only one value, of length 1
arg1.physicalIds[] elements has only one value
arg1.physicalIds[].getClass().getName() == [java.lang.Integer]
arg1.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg1.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg1.localBitmask has only one value
arg1.localBitmask.length == 3
arg1.localBitmask.value has only one value
arg1.localBitmask.value[] == [7]
arg1.localBitmask.value[] elements == 7
arg1.localBitmask.all has only one value
arg1.localBitmask.all[] == [7]
arg1.localBitmask.all[] elements == 7
arg1.physicalBitmask has only one value
arg1.physicalBitmask.length == 1
arg1.physicalBitmask.value has only one value
arg1.physicalBitmask.value[] == [1]
arg1.physicalBitmask.value[] elements == 1
arg1.physicalBitmask.all has only one value
arg1.physicalBitmask.all[] == [1]
arg1.physicalBitmask.all[] elements == 1
arg1.barrierStateMap has only one value
arg1.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.groupJoinStateMap has only one value
arg1.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.threadsCounter has only one value
arg1.physicalTree has only one value
arg1.physicalTree.rootNode == 0
arg1.physicalTree.parentNode == -1
arg1.physicalTree.childrenNodes has only one value
arg1.physicalTree.childrenNodes[] == []
arg1.physicalTree.childrenNodes[].getClass().getName() == []
arg1.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg1.localIds[]) == 3
size(arg1.physicalIds[]) == 1
size(arg1.localBitmask.value[]) == 1
size(arg1.localBitmask.all[]) == 1
size(arg1.physicalBitmask.value[]) == 1
size(arg1.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalGroup.asyncBarrier():::ENTER
===========================================================================
org.pcj.internal.InternalGroup.asyncBarrier():::EXIT
this.myThreadId == orig(this.myThreadId)
this.barrierRoundCounter == orig(this.barrierRoundCounter)
this.getVariableCounter == orig(this.getVariableCounter)
this.getVariableMap == orig(this.getVariableMap)
this.getVariableMap.getClass().getName() == orig(this.getVariableMap.getClass().getName())
this.putVariableCounter == orig(this.putVariableCounter)
this.putVariableMap == orig(this.putVariableMap)
this.putVariableMap.getClass().getName() == orig(this.putVariableMap.getClass().getName())
this.broadcastCounter == orig(this.broadcastCounter)
this.broadcastStateMap == orig(this.broadcastStateMap)
this.broadcastStateMap.getClass().getName() == orig(this.broadcastStateMap.getClass().getName())
this.peerBarrierStateMap == orig(this.peerBarrierStateMap)
this.peerBarrierStateMap.getClass().getName() == orig(this.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
return != null
return.getClass().getName() == org.pcj.internal.futures.GroupBarrierState.class
===========================================================================
org.pcj.internal.InternalGroup.asyncBroadcast(java.lang.Object, java.lang.Enum):::ENTER
this has only one value
this.myThreadId == 0
this.barrierRoundCounter has only one value
this.getVariableCounter has only one value
this.getVariableMap has only one value
this.putVariableCounter has only one value
this.putVariableMap has only one value
this.broadcastCounter has only one value
this.broadcastStateMap has only one value
this.peerBarrierStateMap has only one value
arg0 has only one value
arg0.getClass().getName() == java.lang.Double.class
arg1 has only one value
arg1.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
===========================================================================
org.pcj.internal.InternalGroup.asyncBroadcast(java.lang.Object, java.lang.Enum):::EXIT
this.myThreadId == orig(this.myThreadId)
this.barrierRoundCounter == orig(this.barrierRoundCounter)
this.getVariableCounter == orig(this.getVariableCounter)
this.getVariableMap == orig(this.getVariableMap)
this.getVariableMap.getClass().getName() == orig(this.getVariableMap.getClass().getName())
this.putVariableCounter == orig(this.putVariableCounter)
this.putVariableMap == orig(this.putVariableMap)
this.putVariableMap.getClass().getName() == orig(this.putVariableMap.getClass().getName())
this.broadcastCounter == orig(this.broadcastCounter)
this.broadcastStateMap == orig(this.broadcastStateMap)
this.broadcastStateMap.getClass().getName() == orig(this.broadcastStateMap.getClass().getName())
this.peerBarrierStateMap == orig(this.peerBarrierStateMap)
this.peerBarrierStateMap.getClass().getName() == orig(this.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.myThreadId == 0
this.barrierRoundCounter has only one value
this.getVariableCounter has only one value
this.getVariableMap has only one value
this.putVariableCounter has only one value
this.putVariableMap has only one value
this.broadcastCounter has only one value
this.broadcastStateMap has only one value
this.peerBarrierStateMap has only one value
return has only one value
return.getClass().getName() == org.pcj.internal.futures.BroadcastState.class
===========================================================================
org.pcj.internal.InternalGroup.asyncPut(java.lang.Object, int, java.lang.Enum, int[]):::ENTER
arg0.getClass().getName() == java.lang.Integer.class
arg1 == 0
arg2 has only one value
arg2.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
arg3[] elements one of { 0, 1, 2 }
arg3[] one of { [0], [1], [2] }
size(arg3[]) == 1
===========================================================================
org.pcj.internal.InternalGroup.asyncPut(java.lang.Object, int, java.lang.Enum, int[]):::EXIT
this.myThreadId == orig(this.myThreadId)
this.barrierRoundCounter == orig(this.barrierRoundCounter)
this.getVariableCounter == orig(this.getVariableCounter)
this.getVariableMap == orig(this.getVariableMap)
this.getVariableMap.getClass().getName() == orig(this.getVariableMap.getClass().getName())
this.putVariableCounter == orig(this.putVariableCounter)
this.putVariableMap == orig(this.putVariableMap)
this.putVariableMap.getClass().getName() == orig(this.putVariableMap.getClass().getName())
this.broadcastCounter == orig(this.broadcastCounter)
this.broadcastStateMap == orig(this.broadcastStateMap)
this.broadcastStateMap.getClass().getName() == orig(this.broadcastStateMap.getClass().getName())
this.peerBarrierStateMap == orig(this.peerBarrierStateMap)
this.peerBarrierStateMap.getClass().getName() == orig(this.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
arg3[] == orig(arg3[])
arg3[] elements one of { 0, 1, 2 }
arg3[] one of { [0], [1], [2] }
return.getClass().getName() == org.pcj.internal.futures.PutVariable.class
===========================================================================
org.pcj.internal.InternalGroup.getBroadcastState(int):::ENTER
this has only one value
this.myThreadId == 0
this.barrierRoundCounter has only one value
this.getVariableCounter has only one value
this.getVariableMap has only one value
this.putVariableCounter has only one value
this.putVariableMap has only one value
this.broadcastCounter has only one value
this.broadcastStateMap has only one value
this.peerBarrierStateMap has only one value
arg0 == 1
===========================================================================
org.pcj.internal.InternalGroup.getBroadcastState(int):::EXIT
this.myThreadId == orig(this.myThreadId)
this.barrierRoundCounter == orig(this.barrierRoundCounter)
this.getVariableCounter == orig(this.getVariableCounter)
this.getVariableMap == orig(this.getVariableMap)
this.getVariableMap.getClass().getName() == orig(this.getVariableMap.getClass().getName())
this.putVariableCounter == orig(this.putVariableCounter)
this.putVariableMap == orig(this.putVariableMap)
this.putVariableMap.getClass().getName() == orig(this.putVariableMap.getClass().getName())
this.broadcastCounter == orig(this.broadcastCounter)
this.broadcastStateMap == orig(this.broadcastStateMap)
this.broadcastStateMap.getClass().getName() == orig(this.broadcastStateMap.getClass().getName())
this.peerBarrierStateMap == orig(this.peerBarrierStateMap)
this.peerBarrierStateMap.getClass().getName() == orig(this.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
this.myThreadId == 0
this.barrierRoundCounter has only one value
this.getVariableCounter has only one value
this.getVariableMap has only one value
this.putVariableCounter has only one value
this.putVariableMap has only one value
this.broadcastCounter has only one value
this.broadcastStateMap has only one value
this.peerBarrierStateMap has only one value
return has only one value
return.exceptions has only one value
return.exceptions.getClass().getName() == java.util.concurrent.ConcurrentLinkedDeque.class
return.physicalBarrierBitmask has only one value
return.physicalBarrierBitmask.length == 1
return.physicalBarrierBitmask.value has only one value
return.physicalBarrierBitmask.value[] == [0]
return.physicalBarrierBitmask.value[] elements == 0
return.physicalBarrierBitmask.all has only one value
return.physicalBarrierBitmask.all[] == [1]
return.physicalBarrierBitmask.all[] elements == 1
return.physicalBarrierMaskBitmask has only one value
return.physicalBarrierMaskBitmask.length == 1
return.physicalBarrierMaskBitmask.value has only one value
return.physicalBarrierMaskBitmask.value[] == [1]
return.physicalBarrierMaskBitmask.value[] elements == 1
return.physicalBarrierMaskBitmask.all has only one value
return.physicalBarrierMaskBitmask.all[] == [1]
return.physicalBarrierMaskBitmask.all[] elements == 1
return.exception == null
return.lock has only one value
return.lock.getClass().getName() == java.lang.Object.class
return.signaled == false
size(return.physicalBarrierBitmask.value[]) == 1
size(return.physicalBarrierBitmask.all[]) == 1
size(return.physicalBarrierMaskBitmask.value[]) == 1
size(return.physicalBarrierMaskBitmask.all[]) == 1
===========================================================================
org.pcj.internal.InternalGroup.myId():::ENTER
===========================================================================
org.pcj.internal.InternalGroup.myId():::EXIT
this.myThreadId == orig(this.myThreadId)
this.barrierRoundCounter == orig(this.barrierRoundCounter)
this.getVariableCounter == orig(this.getVariableCounter)
this.getVariableMap == orig(this.getVariableMap)
this.getVariableMap.getClass().getName() == orig(this.getVariableMap.getClass().getName())
this.putVariableCounter == orig(this.putVariableCounter)
this.putVariableMap == orig(this.putVariableMap)
this.putVariableMap.getClass().getName() == orig(this.putVariableMap.getClass().getName())
this.broadcastCounter == orig(this.broadcastCounter)
this.broadcastStateMap == orig(this.broadcastStateMap)
this.broadcastStateMap.getClass().getName() == orig(this.broadcastStateMap.getClass().getName())
this.peerBarrierStateMap == orig(this.peerBarrierStateMap)
this.peerBarrierStateMap.getClass().getName() == orig(this.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
return one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.InternalGroup.removePutVariable(int):::ENTER
arg0 == 1
===========================================================================
org.pcj.internal.InternalGroup.removePutVariable(int):::EXIT
this.myThreadId == orig(this.myThreadId)
this.barrierRoundCounter == orig(this.barrierRoundCounter)
this.getVariableCounter == orig(this.getVariableCounter)
this.getVariableMap == orig(this.getVariableMap)
this.getVariableMap.getClass().getName() == orig(this.getVariableMap.getClass().getName())
this.putVariableCounter == orig(this.putVariableCounter)
this.putVariableMap == orig(this.putVariableMap)
this.putVariableMap.getClass().getName() == orig(this.putVariableMap.getClass().getName())
this.broadcastCounter == orig(this.broadcastCounter)
this.broadcastStateMap == orig(this.broadcastStateMap)
this.broadcastStateMap.getClass().getName() == orig(this.broadcastStateMap.getClass().getName())
this.peerBarrierStateMap == orig(this.peerBarrierStateMap)
this.peerBarrierStateMap.getClass().getName() == orig(this.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadsMapping == orig(this.threadsMapping)
this.threadsMapping.getClass().getName() == orig(this.threadsMapping.getClass().getName())
this.joinGroupSynchronizer == orig(this.joinGroupSynchronizer)
this.joinGroupSynchronizer.getClass().getName() == orig(this.joinGroupSynchronizer.getClass().getName())
this.groupId == orig(this.groupId)
this.groupName == orig(this.groupName)
this.groupName.toString == orig(this.groupName.toString)
this.localIds == orig(this.localIds)
this.localIds[] == orig(this.localIds[])
this.localIds.getClass().getName() == orig(this.localIds.getClass().getName())
this.physicalIds == orig(this.physicalIds)
this.physicalIds[] == orig(this.physicalIds[])
this.physicalIds.getClass().getName() == orig(this.physicalIds.getClass().getName())
this.localBitmask == orig(this.localBitmask)
this.localBitmask.length == orig(this.localBitmask.length)
this.localBitmask.value == orig(this.localBitmask.value)
this.localBitmask.value[] == orig(this.localBitmask.value[])
this.localBitmask.all == orig(this.localBitmask.all)
this.localBitmask.all[] == orig(this.localBitmask.all[])
this.physicalBitmask == orig(this.physicalBitmask)
this.physicalBitmask.length == orig(this.physicalBitmask.length)
this.physicalBitmask.value == orig(this.physicalBitmask.value)
this.physicalBitmask.value[] == orig(this.physicalBitmask.value[])
this.physicalBitmask.all == orig(this.physicalBitmask.all)
this.physicalBitmask.all[] == orig(this.physicalBitmask.all[])
this.barrierStateMap == orig(this.barrierStateMap)
this.barrierStateMap.getClass().getName() == orig(this.barrierStateMap.getClass().getName())
this.groupJoinStateMap == orig(this.groupJoinStateMap)
this.groupJoinStateMap.getClass().getName() == orig(this.groupJoinStateMap.getClass().getName())
this.threadsCounter == orig(this.threadsCounter)
this.physicalTree == orig(this.physicalTree)
this.physicalTree.rootNode == orig(this.physicalTree.rootNode)
this.physicalTree.parentNode == orig(this.physicalTree.parentNode)
this.physicalTree.childrenNodes == orig(this.physicalTree.childrenNodes)
this.physicalTree.childrenNodes[] == orig(this.physicalTree.childrenNodes[])
this.physicalTree.childrenNodes.getClass().getName() == orig(this.physicalTree.childrenNodes.getClass().getName())
return.exception == null
return.lock.getClass().getName() == java.lang.Object.class
return.signaled == false
===========================================================================
org.pcj.internal.InternalPCJ:::CLASS
org.pcj.internal.InternalPCJ.PCJ_VERSION == org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName()
org.pcj.internal.InternalPCJ.LOGGER has only one value
org.pcj.internal.InternalPCJ.LOGGER != null
org.pcj.internal.InternalPCJ.PCJ_VERSION has only one value
org.pcj.internal.InternalPCJ.PCJ_VERSION != null
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == "UNKNOWN"
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == "UNKNOWN"
org.pcj.internal.Networker.LOGGER has only one value
org.pcj.internal.Networker.LOGGER != null
org.pcj.internal.InternalPCJ.networker.selectorProc has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc != null
org.pcj.internal.network.SelectorProc.LOGGER has only one value
org.pcj.internal.network.SelectorProc.LOGGER != null
org.pcj.internal.InternalPCJ.networker.selectorProc.selector has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.selector != null
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == sun.nio.ch.EPollSelectorImpl.class
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer != null
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == java.nio.DirectByteBuffer.class
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap != null
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap != null
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels != null
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges has only one value
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges != null
org.pcj.internal.InternalPCJ.networker.selectorProcThread has only one value
org.pcj.internal.InternalPCJ.networker.selectorProcThread != null
org.pcj.internal.InternalPCJ.networker.workers has only one value
org.pcj.internal.InternalPCJ.networker.workers != null
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == java.util.concurrent.ThreadPoolExecutor.class
org.pcj.internal.InternalPCJ.nodeData.node0Socket has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Socket != null
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
org.pcj.internal.InternalPCJ.nodeData.groupById has only one value
org.pcj.internal.InternalPCJ.nodeData.groupById != null
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId has only one value
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId != null
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId has only one value
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId != null
org.pcj.internal.InternalPCJ.nodeData.pcjThreads has only one value
org.pcj.internal.InternalPCJ.nodeData.pcjThreads != null
org.pcj.internal.InternalPCJ.nodeData.node0Data has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId has only one value
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId != null
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == 3
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round one of { 0, 1, 2 }
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.class
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter has only one value
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter != null
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap has only one value
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap != null
org.pcj.internal.InternalPCJ.nodeData.physicalId == 0
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount one of { 0, 1 }
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() != org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.networker.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() != org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName()
===========================================================================
org.pcj.internal.InternalPCJ.bindOnAllNetworkInterfaces(java.util.Queue, int):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
arg0 has only one value
arg0.getClass().getName() == java.util.ArrayDeque.class
arg1 == 8091
===========================================================================
org.pcj.internal.InternalPCJ.bindOnAllNetworkInterfaces(java.util.Queue, int):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
===========================================================================
org.pcj.internal.InternalPCJ.byePhase():::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
===========================================================================
org.pcj.internal.InternalPCJ.byePhase():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 2
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
===========================================================================
org.pcj.internal.InternalPCJ.connectToNode0(boolean, org.pcj.internal.NodeInfo):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
arg0 == true
arg1 has only one value
arg1.hostname has only one value
arg1.hostname.toString == "localhost"
arg1.port == 8091
arg1.threadIds has only one value
arg1.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
===========================================================================
org.pcj.internal.InternalPCJ.connectToNode0(boolean, org.pcj.internal.NodeInfo):::EXIT258
===========================================================================
org.pcj.internal.InternalPCJ.connectToNode0(boolean, org.pcj.internal.NodeInfo):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
arg1.hostname == orig(arg1.hostname)
arg1.hostname.toString == orig(arg1.hostname.toString)
arg1.port == orig(arg1.port)
arg1.threadIds == orig(arg1.threadIds)
arg1.threadIds.getClass().getName() == orig(arg1.threadIds.getClass().getName())
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
arg1.hostname has only one value
arg1.hostname.toString == "localhost"
arg1.port == 8091
arg1.threadIds has only one value
arg1.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
return has only one value
return.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
===========================================================================
org.pcj.internal.InternalPCJ.getHostAllNetworkInferfaces():::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
===========================================================================
org.pcj.internal.InternalPCJ.getHostAllNetworkInferfaces():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
return has only one value
return.getClass().getName() == java.util.ArrayDeque.class
===========================================================================
org.pcj.internal.InternalPCJ.getLoopbackSocketChannel():::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 0
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
===========================================================================
org.pcj.internal.InternalPCJ.getLoopbackSocketChannel():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == return.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
return.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 0
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
return has only one value
return.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
===========================================================================
org.pcj.internal.InternalPCJ.getNetworker():::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round one of { 0, 1 }
===========================================================================
org.pcj.internal.InternalPCJ.getNetworker():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == return.selectorProc.selector.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == return.selectorProc.readBuffer.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == return.selectorProc.serverSocketChannels.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == return.selectorProc.interestChanges.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == return.workers.getClass().getName()
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.selectorProc.readMap.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.selectorProc.writeMap.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round one of { 0, 1 }
return has only one value
return != null
return.selectorProc has only one value
return.selectorProc != null
return.selectorProc.selector has only one value
return.selectorProc.selector != null
return.selectorProc.readBuffer has only one value
return.selectorProc.readBuffer != null
return.selectorProc.readMap has only one value
return.selectorProc.readMap != null
return.selectorProc.writeMap has only one value
return.selectorProc.writeMap != null
return.selectorProc.serverSocketChannels has only one value
return.selectorProc.serverSocketChannels != null
return.selectorProc.interestChanges has only one value
return.selectorProc.interestChanges != null
return.selectorProcThread has only one value
return.selectorProcThread != null
return.workers has only one value
return.workers != null
===========================================================================
org.pcj.internal.InternalPCJ.getNodeData():::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round one of { 0, 1 }
===========================================================================
org.pcj.internal.InternalPCJ.getNodeData():::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == return.node0Socket.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.socketChannelByPhysicalId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.physicalIdByThreadId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.pcjThreads.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.node0Data.groupsId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.node0Data.groupsMaster.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.node0Data.nodeInfoByPhysicalId.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == return.groupJoinQueryMap.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == return.globalWaitObject.condition.getClass().getName()
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.networker != null
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData != null
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round one of { 0, 1 }
return has only one value
return != null
return.node0Socket has only one value
return.node0Socket != null
return.groupById has only one value
return.groupById != null
return.socketChannelByPhysicalId has only one value
return.socketChannelByPhysicalId != null
return.physicalIdByThreadId has only one value
return.physicalIdByThreadId != null
return.pcjThreads has only one value
return.pcjThreads != null
return.node0Data has only one value
return.node0Data != null
return.node0Data.connectedNodeCount has only one value
return.node0Data.connectedNodeCount != null
return.node0Data.connectedThreadCount has only one value
return.node0Data.connectedThreadCount != null
return.node0Data.helloBitmask has only one value
return.node0Data.helloBitmask != null
return.node0Data.finishedBitmask has only one value
return.node0Data.finishedBitmask != null
return.node0Data.groupIdCounter has only one value
return.node0Data.groupIdCounter != null
return.node0Data.groupsId has only one value
return.node0Data.groupsId != null
return.node0Data.groupsMaster has only one value
return.node0Data.groupsMaster != null
return.node0Data.nodeInfoByPhysicalId has only one value
return.node0Data.nodeInfoByPhysicalId != null
return.node0Data.allNodesThreadCount == 3
return.globalWaitObject has only one value
return.globalWaitObject != null
return.globalWaitObject.round one of { 0, 1 }
return.globalWaitObject.lock has only one value
return.globalWaitObject.lock != null
return.globalWaitObject.condition has only one value
return.globalWaitObject.condition != null
return.groupJoinCounter has only one value
return.groupJoinCounter != null
return.groupJoinQueryMap has only one value
return.groupJoinQueryMap != null
return.physicalId == 0
return.totalNodeCount one of { 0, 1 }
===========================================================================
org.pcj.internal.InternalPCJ.helloPhase(int, int[]):::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 0
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 0
arg0 == 8091
arg1 has only one value
arg1[] == [0, 1, 2]
arg1[] elements one of { 0, 1, 2 }
size(arg1[]) == 3
===========================================================================
org.pcj.internal.InternalPCJ.helloPhase(int, int[]):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
arg1[] == orig(arg1[])
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
arg1[] == [0, 1, 2]
arg1[] elements one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.InternalPCJ.preparePcjThreads(java.lang.Class, int[]):::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
arg0 has only one value
arg1 has only one value
arg1[] == [0, 1, 2]
arg1[] elements one of { 0, 1, 2 }
size(arg1[]) == 3
===========================================================================
org.pcj.internal.InternalPCJ.preparePcjThreads(java.lang.Class, int[]):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
arg1[] == orig(arg1[])
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
arg1[] == [0, 1, 2]
arg1[] elements one of { 0, 1, 2 }
return has only one value
return.getClass().getName() == java.util.HashSet.class
===========================================================================
org.pcj.internal.InternalPCJ.scheduleExitTimer(java.lang.Thread):::ENTER
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
arg0 has only one value
===========================================================================
org.pcj.internal.InternalPCJ.scheduleExitTimer(java.lang.Thread):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData == null
return has only one value
return.getClass().getName() == java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.class
===========================================================================
org.pcj.internal.InternalPCJ.start(java.lang.Class, org.pcj.internal.NodeInfo, org.pcj.internal.NodeInfo, int):::ENTER
arg1.threadIds.getClass().getName() == arg2.threadIds.getClass().getName()
org.pcj.internal.InternalPCJ.networker == null
org.pcj.internal.InternalPCJ.nodeData == null
arg0 has only one value
arg1 has only one value
arg1.hostname has only one value
arg1.hostname.toString == "localhost"
arg1.port == 8091
arg1.threadIds has only one value
arg1.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg2 has only one value
arg2.hostname has only one value
arg2.hostname.toString == "localhost"
arg2.port == 8091
arg2.threadIds has only one value
arg3 == 3
===========================================================================
org.pcj.internal.InternalPCJ.start(java.lang.Class, org.pcj.internal.NodeInfo, org.pcj.internal.NodeInfo, int):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
arg1.hostname == orig(arg1.hostname)
arg1.hostname.toString == orig(arg1.hostname.toString)
arg1.port == orig(arg1.port)
arg1.threadIds == orig(arg1.threadIds)
arg1.threadIds.getClass().getName() == arg2.threadIds.getClass().getName()
arg1.threadIds.getClass().getName() == orig(arg1.threadIds.getClass().getName())
arg1.threadIds.getClass().getName() == orig(arg2.threadIds.getClass().getName())
arg2.hostname == orig(arg2.hostname)
arg2.hostname.toString == orig(arg2.hostname.toString)
arg2.port == orig(arg2.port)
arg2.threadIds == orig(arg2.threadIds)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 2
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
arg1.hostname has only one value
arg1.hostname.toString == "localhost"
arg1.port == 8091
arg1.threadIds has only one value
arg1.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
arg2.hostname has only one value
arg2.hostname.toString == "localhost"
arg2.port == 8091
arg2.threadIds has only one value
===========================================================================
org.pcj.internal.InternalPCJ.waitForPcjThreadsComplete(java.util.Set):::ENTER
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
arg0 has only one value
arg0.getClass().getName() == java.util.HashSet.class
===========================================================================
org.pcj.internal.InternalPCJ.waitForPcjThreadsComplete(java.util.Set):::EXIT
org.pcj.internal.InternalPCJ.LOGGER == orig(org.pcj.internal.InternalPCJ.LOGGER)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION)
org.pcj.internal.InternalPCJ.PCJ_VERSION == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE)
org.pcj.internal.InternalPCJ.PCJ_VERSION.toString == orig(org.pcj.internal.InternalPCJ.PCJ_VERSION.toString)
org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString == orig(org.pcj.internal.InternalPCJ.PCJ_BUILD_DATE.toString)
org.pcj.internal.InternalPCJ.networker == orig(org.pcj.internal.InternalPCJ.networker)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc == orig(org.pcj.internal.InternalPCJ.networker.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector)
org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.selector.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer)
org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.readMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap)
org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName() == org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName()
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels)
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.interestChanges)
org.pcj.internal.InternalPCJ.networker.selectorProcThread == orig(org.pcj.internal.InternalPCJ.networker.selectorProcThread)
org.pcj.internal.InternalPCJ.networker.workers == orig(org.pcj.internal.InternalPCJ.networker.workers)
org.pcj.internal.InternalPCJ.networker.workers.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.workers.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData == orig(org.pcj.internal.InternalPCJ.nodeData)
org.pcj.internal.InternalPCJ.nodeData.node0Socket == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket)
org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Socket.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById == orig(org.pcj.internal.InternalPCJ.nodeData.groupById)
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.readMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.networker.selectorProc.writeMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupById.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.socketChannelByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalIdByThreadId)
org.pcj.internal.InternalPCJ.nodeData.pcjThreads == orig(org.pcj.internal.InternalPCJ.nodeData.pcjThreads)
org.pcj.internal.InternalPCJ.nodeData.node0Data == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedNodeCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.connectedThreadCount)
org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.helloBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.finishedBitmask)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupIdCounter)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.groupsMaster)
org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.nodeInfoByPhysicalId)
org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount == orig(org.pcj.internal.InternalPCJ.nodeData.node0Data.allNodesThreadCount)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.lock)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition)
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName() == orig(org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.condition.getClass().getName())
org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinCounter)
org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap == orig(org.pcj.internal.InternalPCJ.nodeData.groupJoinQueryMap)
org.pcj.internal.InternalPCJ.nodeData.physicalId == orig(org.pcj.internal.InternalPCJ.nodeData.physicalId)
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == orig(org.pcj.internal.InternalPCJ.nodeData.totalNodeCount)
org.pcj.internal.InternalPCJ.networker has only one value
org.pcj.internal.InternalPCJ.nodeData has only one value
org.pcj.internal.InternalPCJ.nodeData.globalWaitObject.round == 1
org.pcj.internal.InternalPCJ.nodeData.totalNodeCount == 1
===========================================================================
org.pcj.internal.InternalStorages$StorageField:::OBJECT
this.field != null
this.modificationCount != null
this.storageObject != null
this.storageObject.getClass().getName() == org.pcj.test.StorageExample.class
org.pcj.internal.InternalStorages.this.enumToStorageMap != null
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalStorages.this.storageObjectsMap != null
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalStorages.this.sharedObjectsMap != null
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.InternalStorages$StorageField.StorageField(org.pcj.internal.InternalStorages, java.lang.reflect.Field, java.lang.Object):::ENTER
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.internal.InternalStorages$StorageField.StorageField(org.pcj.internal.InternalStorages, java.lang.reflect.Field, java.lang.Object):::EXIT
org.pcj.internal.InternalStorages.this == orig(org.pcj.internal.InternalStorages.this)
org.pcj.internal.InternalStorages.this.enumToStorageMap == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap)
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName())
org.pcj.internal.InternalStorages.this.storageObjectsMap == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap)
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName())
org.pcj.internal.InternalStorages.this.sharedObjectsMap == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap)
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName())
===========================================================================
org.pcj.internal.InternalStorages$StorageField.getModificationCount():::ENTER
===========================================================================
org.pcj.internal.InternalStorages$StorageField.getModificationCount():::EXIT
this.field == orig(this.field)
this.modificationCount == orig(this.modificationCount)
this.storageObject == orig(this.storageObject)
this.storageObject.getClass().getName() == orig(this.storageObject.getClass().getName())
org.pcj.internal.InternalStorages.this == orig(org.pcj.internal.InternalStorages.this)
org.pcj.internal.InternalStorages.this.enumToStorageMap == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap)
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName())
org.pcj.internal.InternalStorages.this.storageObjectsMap == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap)
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName())
org.pcj.internal.InternalStorages.this.sharedObjectsMap == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap)
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName())
===========================================================================
org.pcj.internal.InternalStorages$StorageField.getType():::ENTER
===========================================================================
org.pcj.internal.InternalStorages$StorageField.getType():::EXIT
this.field == orig(this.field)
this.modificationCount == orig(this.modificationCount)
this.storageObject == orig(this.storageObject)
this.storageObject.getClass().getName() == orig(this.storageObject.getClass().getName())
org.pcj.internal.InternalStorages.this == orig(org.pcj.internal.InternalStorages.this)
org.pcj.internal.InternalStorages.this.enumToStorageMap == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap)
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName())
org.pcj.internal.InternalStorages.this.storageObjectsMap == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap)
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName())
org.pcj.internal.InternalStorages.this.sharedObjectsMap == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap)
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName())
===========================================================================
org.pcj.internal.InternalStorages$StorageField.getValue():::ENTER
this has only one value
this.field has only one value
this.modificationCount has only one value
this.storageObject has only one value
org.pcj.internal.InternalStorages.this has only one value
org.pcj.internal.InternalStorages.this.enumToStorageMap has only one value
org.pcj.internal.InternalStorages.this.storageObjectsMap has only one value
org.pcj.internal.InternalStorages.this.sharedObjectsMap has only one value
===========================================================================
org.pcj.internal.InternalStorages$StorageField.getValue():::EXIT
this.field == orig(this.field)
this.modificationCount == orig(this.modificationCount)
this.storageObject == orig(this.storageObject)
this.storageObject.getClass().getName() == orig(this.storageObject.getClass().getName())
org.pcj.internal.InternalStorages.this == orig(org.pcj.internal.InternalStorages.this)
org.pcj.internal.InternalStorages.this.enumToStorageMap == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap)
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName())
org.pcj.internal.InternalStorages.this.storageObjectsMap == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap)
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName())
org.pcj.internal.InternalStorages.this.sharedObjectsMap == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap)
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName())
this.field has only one value
this.modificationCount has only one value
this.storageObject has only one value
org.pcj.internal.InternalStorages.this has only one value
org.pcj.internal.InternalStorages.this.enumToStorageMap has only one value
org.pcj.internal.InternalStorages.this.storageObjectsMap has only one value
org.pcj.internal.InternalStorages.this.sharedObjectsMap has only one value
return has only one value
return.getClass().getName() == int[].class
===========================================================================
org.pcj.internal.InternalStorages$StorageField.setValue(java.lang.Object):::ENTER
arg0.getClass().getName() == java.lang.Double.class
===========================================================================
org.pcj.internal.InternalStorages$StorageField.setValue(java.lang.Object):::EXIT
this.field == orig(this.field)
this.modificationCount == orig(this.modificationCount)
this.storageObject == orig(this.storageObject)
this.storageObject.getClass().getName() == orig(this.storageObject.getClass().getName())
org.pcj.internal.InternalStorages.this == orig(org.pcj.internal.InternalStorages.this)
org.pcj.internal.InternalStorages.this.enumToStorageMap == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap)
org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.enumToStorageMap.getClass().getName())
org.pcj.internal.InternalStorages.this.storageObjectsMap == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap)
org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.storageObjectsMap.getClass().getName())
org.pcj.internal.InternalStorages.this.sharedObjectsMap == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap)
org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName() == orig(org.pcj.internal.InternalStorages.this.sharedObjectsMap.getClass().getName())
===========================================================================
org.pcj.internal.InternalStorages:::OBJECT
this.enumToStorageMap != null
this.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.storageObjectsMap != null
this.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.sharedObjectsMap != null
this.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.InternalStorages.InternalStorages():::EXIT
===========================================================================
org.pcj.internal.InternalStorages.createShared0(java.lang.String, java.lang.String, java.lang.reflect.Field, java.lang.Object):::ENTER
arg0 has only one value
arg0.toString == "org.pcj.test.StorageExample"
arg1.toString one of { "avg", "x" }
arg3.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.internal.InternalStorages.createShared0(java.lang.String, java.lang.String, java.lang.reflect.Field, java.lang.Object):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg0.toString == "org.pcj.test.StorageExample"
arg1.toString one of { "avg", "x" }
===========================================================================
org.pcj.internal.InternalStorages.getArrayElement(java.lang.Object, int[], int):::ENTER
this has only one value
this.enumToStorageMap has only one value
this.storageObjectsMap has only one value
this.sharedObjectsMap has only one value
arg0 has only one value
arg0.getClass().getName() == int[].class
arg1[] elements one of { 0, 1, 2 }
arg1[] one of { [0], [1], [2] }
arg2 == 0
size(arg1[]) == 1
===========================================================================
org.pcj.internal.InternalStorages.getArrayElement(java.lang.Object, int[], int):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg1[] == orig(arg1[])
this.enumToStorageMap has only one value
this.storageObjectsMap has only one value
this.sharedObjectsMap has only one value
arg1[] elements one of { 0, 1, 2 }
arg1[] one of { [0], [1], [2] }
return has only one value
return.getClass().getName() == int[].class
===========================================================================
org.pcj.internal.InternalStorages.getParent(java.lang.Enum):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
===========================================================================
org.pcj.internal.InternalStorages.getParent(java.lang.Enum):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
return has only one value
return.toString == "org.pcj.test.StorageExample"
===========================================================================
org.pcj.internal.InternalStorages.getParent(java.lang.String):::ENTER
arg0.toString == "org.pcj.test.StorageExample$SharedEnum"
===========================================================================
org.pcj.internal.InternalStorages.getParent(java.lang.String):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "org.pcj.test.StorageExample$SharedEnum"
return has only one value
return.toString == "org.pcj.test.StorageExample"
===========================================================================
org.pcj.internal.InternalStorages.getTargetClass(java.lang.Class, int[]):::ENTER
this has only one value
this.enumToStorageMap has only one value
this.storageObjectsMap has only one value
this.sharedObjectsMap has only one value
arg0 has only one value
arg1[] elements one of { 0, 1, 2 }
arg1[] one of { [0], [1], [2] }
size(arg1[]) == 1
===========================================================================
org.pcj.internal.InternalStorages.getTargetClass(java.lang.Class, int[]):::EXIT330
===========================================================================
org.pcj.internal.InternalStorages.getTargetClass(java.lang.Class, int[]):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg1[] == orig(arg1[])
this.enumToStorageMap has only one value
this.storageObjectsMap has only one value
this.sharedObjectsMap has only one value
arg1[] elements one of { 0, 1, 2 }
arg1[] one of { [0], [1], [2] }
return has only one value
===========================================================================
org.pcj.internal.InternalStorages.getValueClass(java.lang.Object):::ENTER
===========================================================================
org.pcj.internal.InternalStorages.getValueClass(java.lang.Object):::EXIT319
===========================================================================
org.pcj.internal.InternalStorages.getValueClass(java.lang.Object):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
===========================================================================
org.pcj.internal.InternalStorages.isAssignableFrom(java.lang.Class, java.lang.Class):::ENTER
===========================================================================
org.pcj.internal.InternalStorages.isAssignableFrom(java.lang.Class, java.lang.Class):::EXIT356
===========================================================================
org.pcj.internal.InternalStorages.isAssignableFrom(java.lang.Class, java.lang.Class):::EXIT356;condition="return == true"
===========================================================================
org.pcj.internal.InternalStorages.isAssignableFrom(java.lang.Class, java.lang.Class):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
return == true
===========================================================================
org.pcj.internal.InternalStorages.isAssignableFrom(java.lang.Class, java.lang.Class):::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.InternalStorages.put(java.lang.String, java.lang.String, java.lang.Object, int[]):::ENTER
arg0.toString == "org.pcj.test.StorageExample$SharedEnum"
arg1.toString one of { "avg", "x" }
arg3[] elements one of { 0, 1, 2 }
size(arg3[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.InternalStorages.put(java.lang.String, java.lang.String, java.lang.Object, int[]):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg3[] == orig(arg3[])
arg0.toString == "org.pcj.test.StorageExample$SharedEnum"
arg1.toString one of { "avg", "x" }
arg3[] elements one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.InternalStorages.put0(java.lang.String, java.lang.String, java.lang.Object, int[]):::ENTER
arg0 has only one value
arg0.toString == "org.pcj.test.StorageExample"
arg1.toString one of { "avg", "x" }
arg3[] elements one of { 0, 1, 2 }
size(arg3[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.InternalStorages.put0(java.lang.String, java.lang.String, java.lang.Object, int[]):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg3[] == orig(arg3[])
arg0.toString == "org.pcj.test.StorageExample"
arg1.toString one of { "avg", "x" }
arg3[] elements one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.InternalStorages.registerStorage(java.lang.Class):::ENTER
arg0 has only one value
===========================================================================
org.pcj.internal.InternalStorages.registerStorage(java.lang.Class):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
return.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.internal.InternalStorages.registerStorage0(java.lang.Class):::ENTER
arg0 has only one value
===========================================================================
org.pcj.internal.InternalStorages.registerStorage0(java.lang.Class):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
return.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.internal.InternalStorages.waitFor(java.lang.Enum, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.test.StorageExample$SharedEnum.class
arg1 == 1
===========================================================================
org.pcj.internal.InternalStorages.waitFor(java.lang.Enum, int):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
return == 0
===========================================================================
org.pcj.internal.InternalStorages.waitFor0(java.lang.String, java.lang.String, int):::ENTER
arg0 has only one value
arg0.toString == "org.pcj.test.StorageExample"
arg1 has only one value
arg1.toString == "avg"
arg2 == 1
===========================================================================
org.pcj.internal.InternalStorages.waitFor0(java.lang.String, java.lang.String, int):::EXIT429
===========================================================================
org.pcj.internal.InternalStorages.waitFor0(java.lang.String, java.lang.String, int):::EXIT
this.enumToStorageMap == orig(this.enumToStorageMap)
this.enumToStorageMap.getClass().getName() == orig(this.enumToStorageMap.getClass().getName())
this.storageObjectsMap == orig(this.storageObjectsMap)
this.storageObjectsMap.getClass().getName() == orig(this.storageObjectsMap.getClass().getName())
this.sharedObjectsMap == orig(this.sharedObjectsMap)
this.sharedObjectsMap.getClass().getName() == orig(this.sharedObjectsMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg0.toString == "org.pcj.test.StorageExample"
arg1.toString == "avg"
return == 0
===========================================================================
org.pcj.internal.Networker$1:::OBJECT
this has only one value
this.counter has only one value
org.pcj.internal.Networker.this has only one value
org.pcj.internal.Networker.LOGGER has only one value
org.pcj.internal.network.SelectorProc.LOGGER has only one value
org.pcj.internal.Networker.this.selectorProc.selector has only one value
org.pcj.internal.Networker.this.selectorProc.selector.getClass().getName() == sun.nio.ch.EPollSelectorImpl.class
org.pcj.internal.Networker.this.selectorProc.readBuffer has only one value
org.pcj.internal.Networker.this.selectorProc.readBuffer.getClass().getName() == java.nio.DirectByteBuffer.class
org.pcj.internal.Networker.this.selectorProc.readMap has only one value
org.pcj.internal.Networker.this.selectorProc.readMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.Networker.this.selectorProc.writeMap has only one value
org.pcj.internal.Networker.this.selectorProc.writeMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.Networker.this.selectorProc.serverSocketChannels has only one value
org.pcj.internal.Networker.this.selectorProc.serverSocketChannels.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
org.pcj.internal.Networker.this.selectorProc.interestChanges has only one value
org.pcj.internal.Networker.this.selectorProc.interestChanges.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
org.pcj.internal.Networker.this.workers.getClass().getName() == java.util.concurrent.ThreadPoolExecutor.class
===========================================================================
org.pcj.internal.Networker$1.(org.pcj.internal.Networker):::ENTER
org.pcj.internal.Networker.this has only one value
org.pcj.internal.Networker.LOGGER has only one value
org.pcj.internal.Networker.this.selectorProc == null
org.pcj.internal.Networker.this.selectorProcThread == null
org.pcj.internal.Networker.this.workers == null
===========================================================================
org.pcj.internal.Networker$1.(org.pcj.internal.Networker):::EXIT
org.pcj.internal.Networker.this == orig(org.pcj.internal.Networker.this)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.Networker.this.selectorProc == orig(org.pcj.internal.Networker.this.selectorProc)
org.pcj.internal.Networker.this.selectorProcThread == orig(org.pcj.internal.Networker.this.selectorProcThread)
org.pcj.internal.Networker.this.workers == orig(org.pcj.internal.Networker.this.workers)
org.pcj.internal.Networker.this.selectorProc == null
org.pcj.internal.Networker.this.selectorProcThread == null
org.pcj.internal.Networker.this.workers == null
===========================================================================
org.pcj.internal.Networker$1.newThread(java.lang.Runnable):::ENTER
org.pcj.internal.Networker.this.selectorProc has only one value
org.pcj.internal.Networker.this.selectorProcThread has only one value
org.pcj.internal.Networker.this.workers has only one value
arg0.getClass().getName() == java.util.concurrent.ThreadPoolExecutor$Worker.class
===========================================================================
org.pcj.internal.Networker$1.newThread(java.lang.Runnable):::EXIT
this.counter == orig(this.counter)
org.pcj.internal.Networker.this == orig(org.pcj.internal.Networker.this)
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
org.pcj.internal.Networker.this.selectorProc == orig(org.pcj.internal.Networker.this.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
org.pcj.internal.Networker.this.selectorProc.selector == orig(org.pcj.internal.Networker.this.selectorProc.selector)
org.pcj.internal.Networker.this.selectorProc.selector.getClass().getName() == orig(org.pcj.internal.Networker.this.selectorProc.selector.getClass().getName())
org.pcj.internal.Networker.this.selectorProc.readBuffer == orig(org.pcj.internal.Networker.this.selectorProc.readBuffer)
org.pcj.internal.Networker.this.selectorProc.readBuffer.getClass().getName() == orig(org.pcj.internal.Networker.this.selectorProc.readBuffer.getClass().getName())
org.pcj.internal.Networker.this.selectorProc.readMap == orig(org.pcj.internal.Networker.this.selectorProc.readMap)
org.pcj.internal.Networker.this.selectorProc.readMap.getClass().getName() == orig(org.pcj.internal.Networker.this.selectorProc.readMap.getClass().getName())
org.pcj.internal.Networker.this.selectorProc.writeMap == orig(org.pcj.internal.Networker.this.selectorProc.writeMap)
org.pcj.internal.Networker.this.selectorProc.writeMap.getClass().getName() == orig(org.pcj.internal.Networker.this.selectorProc.writeMap.getClass().getName())
org.pcj.internal.Networker.this.selectorProc.serverSocketChannels == orig(org.pcj.internal.Networker.this.selectorProc.serverSocketChannels)
org.pcj.internal.Networker.this.selectorProc.serverSocketChannels.getClass().getName() == orig(org.pcj.internal.Networker.this.selectorProc.serverSocketChannels.getClass().getName())
org.pcj.internal.Networker.this.selectorProc.interestChanges == orig(org.pcj.internal.Networker.this.selectorProc.interestChanges)
org.pcj.internal.Networker.this.selectorProc.interestChanges.getClass().getName() == orig(org.pcj.internal.Networker.this.selectorProc.interestChanges.getClass().getName())
org.pcj.internal.Networker.this.selectorProcThread == orig(org.pcj.internal.Networker.this.selectorProcThread)
org.pcj.internal.Networker.this.workers == orig(org.pcj.internal.Networker.this.workers)
org.pcj.internal.Networker.this.workers.getClass().getName() == orig(org.pcj.internal.Networker.this.workers.getClass().getName())
org.pcj.internal.Networker.this.selectorProc has only one value
org.pcj.internal.Networker.this.selectorProcThread has only one value
org.pcj.internal.Networker.this.workers has only one value
===========================================================================
org.pcj.internal.Networker$WorkerTask:::OBJECT
this.socket has only one value
this.socket != null
this.socket.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
this.message != null
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
this.message.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
this.messageDataInputStream != null
this.messageDataInputStream.input != null
this.messageDataInputStream.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.Networker$WorkerTask.WorkerTask(java.nio.channels.SocketChannel, org.pcj.internal.message.Message, org.pcj.internal.network.MessageDataInputStream):::ENTER
arg0 has only one value
arg0 != null
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 != null
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
arg1.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
arg2 != null
arg2.input != null
arg2.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg2.objectInputStream == null
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.Networker$WorkerTask.WorkerTask(java.nio.channels.SocketChannel, org.pcj.internal.message.Message, org.pcj.internal.network.MessageDataInputStream):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
arg1.type == orig(arg1.type)
arg1.type.getClass().getName() == orig(arg1.type.getClass().getName())
arg1.type.id == orig(arg1.type.id)
arg2.input == orig(arg2.input)
arg2.input.getClass().getName() == orig(arg2.input.getClass().getName())
arg2.objectInputStream == orig(arg2.objectInputStream)
this.messageDataInputStream.objectInputStream == null
arg1.type != null
arg2.input != null
arg2.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg2.objectInputStream == null
===========================================================================
org.pcj.internal.Networker$WorkerTask.run():::ENTER
this.messageDataInputStream.objectInputStream == null
===========================================================================
org.pcj.internal.Networker$WorkerTask.run():::EXIT
this.socket == orig(this.socket)
this.socket.getClass().getName() == orig(this.socket.getClass().getName())
this.message == orig(this.message)
this.message.getClass().getName() == orig(this.message.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.message.type == orig(this.message.type)
this.message.type.getClass().getName() == orig(this.message.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
this.message.type.id == orig(this.message.type.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
this.messageDataInputStream == orig(this.messageDataInputStream)
this.messageDataInputStream.input == orig(this.messageDataInputStream.input)
this.messageDataInputStream.input.getClass().getName() == orig(this.messageDataInputStream.input.getClass().getName())
===========================================================================
org.pcj.internal.Networker:::CLASS
org.pcj.internal.Networker.LOGGER has only one value
org.pcj.internal.Networker.LOGGER != null
===========================================================================
org.pcj.internal.Networker:::OBJECT
this has only one value
this.selectorProc has only one value
this.selectorProc != null
org.pcj.internal.network.SelectorProc.LOGGER has only one value
org.pcj.internal.network.SelectorProc.LOGGER != null
this.selectorProc.selector has only one value
this.selectorProc.selector != null
this.selectorProc.selector.getClass().getName() == sun.nio.ch.EPollSelectorImpl.class
this.selectorProc.readBuffer has only one value
this.selectorProc.readBuffer != null
this.selectorProc.readBuffer.getClass().getName() == java.nio.DirectByteBuffer.class
this.selectorProc.readMap has only one value
this.selectorProc.readMap != null
this.selectorProc.readMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.selectorProc.writeMap has only one value
this.selectorProc.writeMap != null
this.selectorProc.writeMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.selectorProc.serverSocketChannels has only one value
this.selectorProc.serverSocketChannels != null
this.selectorProc.serverSocketChannels.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
this.selectorProc.interestChanges has only one value
this.selectorProc.interestChanges != null
this.selectorProc.interestChanges.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
this.selectorProcThread has only one value
this.selectorProcThread != null
this.workers has only one value
this.workers != null
this.workers.getClass().getName() == java.util.concurrent.ThreadPoolExecutor.class
===========================================================================
org.pcj.internal.Networker.Networker(int):::ENTER
arg0 == 4
===========================================================================
org.pcj.internal.Networker.Networker(int):::EXIT
===========================================================================
org.pcj.internal.Networker.bind(java.net.InetAddress, int, int):::ENTER
arg1 == 8091
arg2 == 4096
===========================================================================
org.pcj.internal.Networker.bind(java.net.InetAddress, int, int):::EXIT
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
this.selectorProc == orig(this.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selectorProc.selector == orig(this.selectorProc.selector)
this.selectorProc.selector.getClass().getName() == orig(this.selectorProc.selector.getClass().getName())
this.selectorProc.readBuffer == orig(this.selectorProc.readBuffer)
this.selectorProc.readBuffer.getClass().getName() == orig(this.selectorProc.readBuffer.getClass().getName())
this.selectorProc.readMap == orig(this.selectorProc.readMap)
this.selectorProc.readMap.getClass().getName() == orig(this.selectorProc.readMap.getClass().getName())
this.selectorProc.writeMap == orig(this.selectorProc.writeMap)
this.selectorProc.writeMap.getClass().getName() == orig(this.selectorProc.writeMap.getClass().getName())
this.selectorProc.serverSocketChannels == orig(this.selectorProc.serverSocketChannels)
this.selectorProc.serverSocketChannels.getClass().getName() == orig(this.selectorProc.serverSocketChannels.getClass().getName())
this.selectorProc.interestChanges == orig(this.selectorProc.interestChanges)
this.selectorProc.interestChanges.getClass().getName() == orig(this.selectorProc.interestChanges.getClass().getName())
this.selectorProcThread == orig(this.selectorProcThread)
this.workers == orig(this.workers)
this.workers.getClass().getName() == orig(this.workers.getClass().getName())
return.getClass().getName() == sun.nio.ch.ServerSocketChannelImpl.class
===========================================================================
org.pcj.internal.Networker.send(java.nio.channels.SocketChannel, org.pcj.internal.message.Message):::ENTER
arg0 has only one value
arg0 != null
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 != null
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
arg1.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.Networker.send(java.nio.channels.SocketChannel, org.pcj.internal.message.Message):::EXIT
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
this.selectorProc == orig(this.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selectorProc.selector == orig(this.selectorProc.selector)
this.selectorProc.selector.getClass().getName() == orig(this.selectorProc.selector.getClass().getName())
this.selectorProc.readBuffer == orig(this.selectorProc.readBuffer)
this.selectorProc.readBuffer.getClass().getName() == orig(this.selectorProc.readBuffer.getClass().getName())
this.selectorProc.readMap == orig(this.selectorProc.readMap)
this.selectorProc.readMap.getClass().getName() == orig(this.selectorProc.readMap.getClass().getName())
this.selectorProc.writeMap == orig(this.selectorProc.writeMap)
this.selectorProc.writeMap.getClass().getName() == orig(this.selectorProc.writeMap.getClass().getName())
this.selectorProc.serverSocketChannels == orig(this.selectorProc.serverSocketChannels)
this.selectorProc.serverSocketChannels.getClass().getName() == orig(this.selectorProc.serverSocketChannels.getClass().getName())
this.selectorProc.interestChanges == orig(this.selectorProc.interestChanges)
this.selectorProc.interestChanges.getClass().getName() == orig(this.selectorProc.interestChanges.getClass().getName())
this.selectorProcThread == orig(this.selectorProcThread)
this.workers == orig(this.workers)
this.workers.getClass().getName() == orig(this.workers.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
arg1.type == orig(arg1.type)
arg1.type.getClass().getName() == orig(arg1.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
arg1.type.id == orig(arg1.type.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
arg1.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.Networker.shutdown():::ENTER
===========================================================================
org.pcj.internal.Networker.shutdown():::EXIT
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
this.selectorProc == orig(this.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selectorProc.selector == orig(this.selectorProc.selector)
this.selectorProc.selector.getClass().getName() == orig(this.selectorProc.selector.getClass().getName())
this.selectorProc.readBuffer == orig(this.selectorProc.readBuffer)
this.selectorProc.readBuffer.getClass().getName() == orig(this.selectorProc.readBuffer.getClass().getName())
this.selectorProc.readMap == orig(this.selectorProc.readMap)
this.selectorProc.readMap.getClass().getName() == orig(this.selectorProc.readMap.getClass().getName())
this.selectorProc.writeMap == orig(this.selectorProc.writeMap)
this.selectorProc.writeMap.getClass().getName() == orig(this.selectorProc.writeMap.getClass().getName())
this.selectorProc.serverSocketChannels == orig(this.selectorProc.serverSocketChannels)
this.selectorProc.serverSocketChannels.getClass().getName() == orig(this.selectorProc.serverSocketChannels.getClass().getName())
this.selectorProc.interestChanges == orig(this.selectorProc.interestChanges)
this.selectorProc.interestChanges.getClass().getName() == orig(this.selectorProc.interestChanges.getClass().getName())
this.selectorProcThread == orig(this.selectorProcThread)
this.workers == orig(this.workers)
this.workers.getClass().getName() == orig(this.workers.getClass().getName())
===========================================================================
org.pcj.internal.Networker.startup():::ENTER
===========================================================================
org.pcj.internal.Networker.startup():::EXIT
org.pcj.internal.Networker.LOGGER == orig(org.pcj.internal.Networker.LOGGER)
this.selectorProc == orig(this.selectorProc)
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selectorProc.selector == orig(this.selectorProc.selector)
this.selectorProc.selector.getClass().getName() == orig(this.selectorProc.selector.getClass().getName())
this.selectorProc.readBuffer == orig(this.selectorProc.readBuffer)
this.selectorProc.readBuffer.getClass().getName() == orig(this.selectorProc.readBuffer.getClass().getName())
this.selectorProc.readMap == orig(this.selectorProc.readMap)
this.selectorProc.readMap.getClass().getName() == orig(this.selectorProc.readMap.getClass().getName())
this.selectorProc.writeMap == orig(this.selectorProc.writeMap)
this.selectorProc.writeMap.getClass().getName() == orig(this.selectorProc.writeMap.getClass().getName())
this.selectorProc.serverSocketChannels == orig(this.selectorProc.serverSocketChannels)
this.selectorProc.serverSocketChannels.getClass().getName() == orig(this.selectorProc.serverSocketChannels.getClass().getName())
this.selectorProc.interestChanges == orig(this.selectorProc.interestChanges)
this.selectorProc.interestChanges.getClass().getName() == orig(this.selectorProc.interestChanges.getClass().getName())
this.selectorProcThread == orig(this.selectorProcThread)
this.workers == orig(this.workers)
this.workers.getClass().getName() == orig(this.workers.getClass().getName())
===========================================================================
org.pcj.internal.NodeData$Node0Data:::OBJECT
this has only one value
this.connectedNodeCount has only one value
this.connectedNodeCount != null
this.connectedThreadCount has only one value
this.connectedThreadCount != null
this.helloBitmask has only one value
this.helloBitmask != null
this.helloBitmask.length one of { 0, 1 }
this.helloBitmask.value != null
this.helloBitmask.value[] elements == 0
this.helloBitmask.value[] one of { [], [0] }
this.helloBitmask.all != null
this.helloBitmask.all[] elements == 1
this.helloBitmask.all[] one of { [], [1] }
this.finishedBitmask has only one value
this.finishedBitmask != null
this.finishedBitmask.length one of { 0, 1 }
this.finishedBitmask.value != null
this.finishedBitmask.value[] elements == 0
this.finishedBitmask.value[] one of { [], [0] }
this.finishedBitmask.all != null
this.finishedBitmask.all[] elements == 1
this.finishedBitmask.all[] one of { [], [1] }
this.groupIdCounter has only one value
this.groupIdCounter != null
this.groupsId has only one value
this.groupsId != null
this.groupsId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.groupsMaster has only one value
this.groupsMaster != null
this.groupsMaster.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.nodeInfoByPhysicalId has only one value
this.nodeInfoByPhysicalId != null
this.nodeInfoByPhysicalId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.allNodesThreadCount one of { 0, 3 }
size(this.helloBitmask.value[]) one of { 0, 1 }
size(this.helloBitmask.all[]) one of { 0, 1 }
size(this.finishedBitmask.value[]) one of { 0, 1 }
size(this.finishedBitmask.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.NodeData$Node0Data.Node0Data():::EXIT
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 0
===========================================================================
org.pcj.internal.NodeData$Node0Data.getAllNodesThreadCount():::ENTER
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.getAllNodesThreadCount():::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
return == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.getConnectedNodeCount():::ENTER
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.getConnectedNodeCount():::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
return has only one value
===========================================================================
org.pcj.internal.NodeData$Node0Data.getConnectedThreadCount():::ENTER
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.getConnectedThreadCount():::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
return has only one value
===========================================================================
org.pcj.internal.NodeData$Node0Data.getFinishedBitmask():::ENTER
this.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.getFinishedBitmask():::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
this.allNodesThreadCount == 3
return has only one value
return.length one of { 0, 1 }
return.value[] elements == 0
return.value[] one of { [], [0] }
return.all[] elements == 1
return.all[] one of { [], [1] }
size(return.value[]) one of { 0, 1 }
size(return.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.NodeData$Node0Data.getHelloBitmask():::ENTER
this.finishedBitmask.length == 1
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == [0]
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == [1]
this.allNodesThreadCount == 3
size(this.finishedBitmask.value[]) == 1
size(this.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData$Node0Data.getHelloBitmask():::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
this.finishedBitmask.length == 1
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == [0]
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == [1]
this.allNodesThreadCount == 3
return has only one value
return.length one of { 0, 1 }
return.value[] elements == 0
return.value[] one of { [], [0] }
return.all[] elements == 1
return.all[] one of { [], [1] }
size(this.finishedBitmask.value[]) == 1
size(this.finishedBitmask.all[]) == 1
size(return.value[]) one of { 0, 1 }
size(return.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.NodeData$Node0Data.getNodeInfoByPhysicalId():::ENTER
this.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.getNodeInfoByPhysicalId():::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.allNodesThreadCount == orig(this.allNodesThreadCount)
this.allNodesThreadCount == 3
return has only one value
return.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.NodeData$Node0Data.setAllNodesThreadCount(int):::ENTER
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 0
arg0 == 3
===========================================================================
org.pcj.internal.NodeData$Node0Data.setAllNodesThreadCount(int):::EXIT
this.connectedNodeCount == orig(this.connectedNodeCount)
this.connectedThreadCount == orig(this.connectedThreadCount)
this.helloBitmask == orig(this.helloBitmask)
this.helloBitmask.length == orig(this.helloBitmask.length)
this.helloBitmask.value == orig(this.helloBitmask.value)
this.helloBitmask.value[] == orig(this.helloBitmask.value[])
this.helloBitmask.all == orig(this.helloBitmask.all)
this.helloBitmask.all[] == orig(this.helloBitmask.all[])
this.finishedBitmask == orig(this.finishedBitmask)
this.finishedBitmask.length == orig(this.finishedBitmask.length)
this.finishedBitmask.value == orig(this.finishedBitmask.value)
this.finishedBitmask.value[] == orig(this.finishedBitmask.value[])
this.finishedBitmask.all == orig(this.finishedBitmask.all)
this.finishedBitmask.all[] == orig(this.finishedBitmask.all[])
this.groupIdCounter == orig(this.groupIdCounter)
this.groupsId == orig(this.groupsId)
this.groupsId.getClass().getName() == orig(this.groupsId.getClass().getName())
this.groupsMaster == orig(this.groupsMaster)
this.groupsMaster.getClass().getName() == orig(this.groupsMaster.getClass().getName())
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
this.helloBitmask.length == 0
this.helloBitmask.value has only one value
this.helloBitmask.value[] == []
this.helloBitmask.all has only one value
this.helloBitmask.all[] == []
this.finishedBitmask.length == 0
this.finishedBitmask.value has only one value
this.finishedBitmask.value[] == []
this.finishedBitmask.all has only one value
this.finishedBitmask.all[] == []
this.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData:::OBJECT
this has only one value
this.node0Socket has only one value
this.node0Socket != null
this.node0Socket.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
this.groupById has only one value
this.groupById != null
this.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.socketChannelByPhysicalId has only one value
this.socketChannelByPhysicalId != null
this.socketChannelByPhysicalId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.physicalIdByThreadId has only one value
this.physicalIdByThreadId != null
this.physicalIdByThreadId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.pcjThreads has only one value
this.pcjThreads != null
this.pcjThreads.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.node0Data has only one value
this.node0Data != null
this.node0Data.connectedNodeCount has only one value
this.node0Data.connectedNodeCount != null
this.node0Data.connectedThreadCount has only one value
this.node0Data.connectedThreadCount != null
this.node0Data.helloBitmask has only one value
this.node0Data.helloBitmask != null
this.node0Data.helloBitmask.length one of { 0, 1 }
this.node0Data.helloBitmask.value != null
this.node0Data.helloBitmask.value[] elements == 0
this.node0Data.helloBitmask.value[] one of { [], [0] }
this.node0Data.helloBitmask.all != null
this.node0Data.helloBitmask.all[] elements == 1
this.node0Data.helloBitmask.all[] one of { [], [1] }
this.node0Data.finishedBitmask has only one value
this.node0Data.finishedBitmask != null
this.node0Data.finishedBitmask.length one of { 0, 1 }
this.node0Data.finishedBitmask.value != null
this.node0Data.finishedBitmask.value[] elements == 0
this.node0Data.finishedBitmask.value[] one of { [], [0] }
this.node0Data.finishedBitmask.all != null
this.node0Data.finishedBitmask.all[] elements == 1
this.node0Data.finishedBitmask.all[] one of { [], [1] }
this.node0Data.groupIdCounter has only one value
this.node0Data.groupIdCounter != null
this.node0Data.groupsId has only one value
this.node0Data.groupsId != null
this.node0Data.groupsId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.node0Data.groupsMaster has only one value
this.node0Data.groupsMaster != null
this.node0Data.groupsMaster.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.node0Data.nodeInfoByPhysicalId has only one value
this.node0Data.nodeInfoByPhysicalId != null
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.node0Data.allNodesThreadCount one of { 0, 3 }
this.globalWaitObject has only one value
this.globalWaitObject != null
this.globalWaitObject.round one of { 0, 1 }
this.globalWaitObject.lock has only one value
this.globalWaitObject.lock != null
this.globalWaitObject.condition has only one value
this.globalWaitObject.condition != null
this.globalWaitObject.condition.getClass().getName() == java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.class
this.groupJoinCounter has only one value
this.groupJoinCounter != null
this.groupJoinQueryMap has only one value
this.groupJoinQueryMap != null
this.groupJoinQueryMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.physicalId == 0
this.totalNodeCount one of { 0, 1 }
size(this.node0Data.helloBitmask.value[]) one of { 0, 1 }
size(this.node0Data.helloBitmask.all[]) one of { 0, 1 }
size(this.node0Data.finishedBitmask.value[]) one of { 0, 1 }
size(this.node0Data.finishedBitmask.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.NodeData.NodeData(java.nio.channels.SocketChannel, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 == true
===========================================================================
org.pcj.internal.NodeData.NodeData(java.nio.channels.SocketChannel, boolean):::EXIT
this.node0Data.helloBitmask.length == 0
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == []
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == []
this.node0Data.finishedBitmask.length == 0
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == []
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == []
this.node0Data.allNodesThreadCount == 0
this.globalWaitObject.round == 0
this.totalNodeCount == 0
===========================================================================
org.pcj.internal.NodeData.createGroup(int, int, java.lang.String):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
this.totalNodeCount == 0
arg0 == 0
arg1 == 0
arg2 has only one value
arg2.toString == ""
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.createGroup(int, int, java.lang.String):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
arg2.toString == orig(arg2.toString)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
this.totalNodeCount == 0
arg2.toString == ""
return has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
return.threadsMapping has only one value
return.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.joinGroupSynchronizer has only one value
return.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
return.groupId == 0
return.groupName has only one value
return.groupName.toString == ""
return.localIds has only one value
return.localIds[] == []
return.localIds[].getClass().getName() == []
return.localIds.getClass().getName() == java.util.ArrayList.class
return.physicalIds has only one value
return.physicalIds[] contains no nulls and has only one value, of length 1
return.physicalIds[] elements has only one value
return.physicalIds[].getClass().getName() == [java.lang.Integer]
return.physicalIds[].getClass().getName() elements == java.lang.Integer.class
return.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
return.localBitmask has only one value
return.localBitmask.length == 0
return.localBitmask.value has only one value
return.localBitmask.value[] == []
return.localBitmask.all has only one value
return.localBitmask.all[] == []
return.physicalBitmask has only one value
return.physicalBitmask.length == 1
return.physicalBitmask.value has only one value
return.physicalBitmask.value[] == [1]
return.physicalBitmask.value[] elements == 1
return.physicalBitmask.all has only one value
return.physicalBitmask.all[] == [1]
return.physicalBitmask.all[] elements == 1
return.barrierStateMap has only one value
return.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.groupJoinStateMap has only one value
return.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.threadsCounter has only one value
return.physicalTree has only one value
return.physicalTree.rootNode == 0
return.physicalTree.parentNode == -1
return.physicalTree.childrenNodes has only one value
return.physicalTree.childrenNodes[] == []
return.physicalTree.childrenNodes[].getClass().getName() == []
return.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
size(return.physicalIds[]) == 1
size(return.physicalBitmask.value[]) == 1
size(return.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getGlobalWaitObject():::ENTER
this.node0Data.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData.getGlobalWaitObject():::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.allNodesThreadCount == 3
return has only one value
return.round one of { 0, 1 }
return.lock has only one value
return.condition has only one value
return.condition.getClass().getName() == java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.class
===========================================================================
org.pcj.internal.NodeData.getGroupById(int):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 1
this.totalNodeCount == 1
arg0 == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getGroupById(int):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 1
this.totalNodeCount == 1
return has only one value
return != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
return.threadsMapping has only one value
return.threadsMapping != null
return.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.joinGroupSynchronizer has only one value
return.joinGroupSynchronizer != null
return.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
return.groupId == 0
return.groupName has only one value
return.groupName != null
return.groupName.toString == ""
return.localIds has only one value
return.localIds != null
return.localIds[] contains no nulls and has only one value, of length 3
return.localIds[] elements != null
return.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
return.localIds[].getClass().getName() elements == java.lang.Integer.class
return.localIds.getClass().getName() == java.util.ArrayList.class
return.physicalIds has only one value
return.physicalIds != null
return.physicalIds[] contains no nulls and has only one value, of length 1
return.physicalIds[] elements has only one value
return.physicalIds[] elements != null
return.physicalIds[].getClass().getName() == [java.lang.Integer]
return.physicalIds[].getClass().getName() elements == java.lang.Integer.class
return.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
return.localBitmask has only one value
return.localBitmask != null
return.localBitmask.length == 3
return.localBitmask.value has only one value
return.localBitmask.value != null
return.localBitmask.value[] == [7]
return.localBitmask.value[] elements == 7
return.localBitmask.all has only one value
return.localBitmask.all != null
return.localBitmask.all[] == [7]
return.localBitmask.all[] elements == 7
return.physicalBitmask has only one value
return.physicalBitmask != null
return.physicalBitmask.length == 1
return.physicalBitmask.value has only one value
return.physicalBitmask.value != null
return.physicalBitmask.value[] == [1]
return.physicalBitmask.value[] elements == 1
return.physicalBitmask.all has only one value
return.physicalBitmask.all != null
return.physicalBitmask.all[] == [1]
return.physicalBitmask.all[] elements == 1
return.barrierStateMap has only one value
return.barrierStateMap != null
return.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.groupJoinStateMap has only one value
return.groupJoinStateMap != null
return.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.threadsCounter has only one value
return.threadsCounter != null
return.physicalTree has only one value
return.physicalTree != null
return.physicalTree.rootNode == 0
return.physicalTree.parentNode == -1
return.physicalTree.childrenNodes has only one value
return.physicalTree.childrenNodes != null
return.physicalTree.childrenNodes[] == []
return.physicalTree.childrenNodes[].getClass().getName() == []
return.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
size(return.localIds[]) == 3
size(return.physicalIds[]) == 1
size(return.localBitmask.value[]) == 1
size(return.localBitmask.all[]) == 1
size(return.physicalBitmask.value[]) == 1
size(return.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getNode0Data():::ENTER
===========================================================================
org.pcj.internal.NodeData.getNode0Data():::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
return has only one value
return.connectedNodeCount has only one value
return.connectedThreadCount has only one value
return.helloBitmask has only one value
return.helloBitmask.length one of { 0, 1 }
return.helloBitmask.value[] elements == 0
return.helloBitmask.value[] one of { [], [0] }
return.helloBitmask.all[] elements == 1
return.helloBitmask.all[] one of { [], [1] }
return.finishedBitmask has only one value
return.finishedBitmask.length one of { 0, 1 }
return.finishedBitmask.value[] elements == 0
return.finishedBitmask.value[] one of { [], [0] }
return.finishedBitmask.all[] elements == 1
return.finishedBitmask.all[] one of { [], [1] }
return.groupIdCounter has only one value
return.groupsId has only one value
return.groupsId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.groupsMaster has only one value
return.groupsMaster.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.nodeInfoByPhysicalId has only one value
return.nodeInfoByPhysicalId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.allNodesThreadCount one of { 0, 3 }
size(return.helloBitmask.value[]) one of { 0, 1 }
size(return.helloBitmask.all[]) one of { 0, 1 }
size(return.finishedBitmask.value[]) one of { 0, 1 }
size(return.finishedBitmask.all[]) one of { 0, 1 }
===========================================================================
org.pcj.internal.NodeData.getNode0Socket():::ENTER
this.node0Data.allNodesThreadCount == 3
===========================================================================
org.pcj.internal.NodeData.getNode0Socket():::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.allNodesThreadCount == 3
return has only one value
return.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
===========================================================================
org.pcj.internal.NodeData.getPcjThread(int):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 1
this.totalNodeCount == 1
arg0 one of { 0, 1, 2 }
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getPcjThread(int):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 1
this.totalNodeCount == 1
return.startPointClass has only one value
return.threadId one of { 0, 1, 2 }
return.throwable == null
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getPhysicalId():::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.totalNodeCount == 1
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getPhysicalId():::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.totalNodeCount == 1
return == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getPhysicalId(int):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.totalNodeCount == 1
arg0 one of { 0, 1, 2 }
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getPhysicalId(int):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.totalNodeCount == 1
return == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getSocketChannelByPhysicalId():::ENTER
===========================================================================
org.pcj.internal.NodeData.getSocketChannelByPhysicalId():::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
return has only one value
return != null
return.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.NodeData.getTotalNodeCount():::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.totalNodeCount == 1
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.getTotalNodeCount():::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.totalNodeCount == 1
return == 1
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.putPcjThread(org.pcj.internal.PcjThread):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 1
this.totalNodeCount == 1
arg0.startPointClass has only one value
arg0.threadId one of { 0, 1, 2 }
arg0.throwable == null
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.putPcjThread(org.pcj.internal.PcjThread):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
arg0.startPointClass == orig(arg0.startPointClass)
arg0.pcjThreadGroup == orig(arg0.pcjThreadGroup)
arg0.pcjThreadGroup.threadData == orig(arg0.pcjThreadGroup.threadData)
arg0.threadId == orig(arg0.threadId)
arg0.throwable == orig(arg0.throwable)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 1
this.totalNodeCount == 1
arg0.startPointClass has only one value
arg0.threadId one of { 0, 1, 2 }
arg0.throwable == null
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.setPhysicalId(int):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
this.totalNodeCount == 0
arg0 == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.setPhysicalId(int):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
this.totalNodeCount == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.setPhysicalId(int, int):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
arg0 one of { 0, 1, 2 }
arg1 == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.setPhysicalId(int, int):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.totalNodeCount == orig(this.totalNodeCount)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.setTotalNodeCount(int):::ENTER
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
this.totalNodeCount == 0
arg0 == 1
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeData.setTotalNodeCount(int):::EXIT
this.node0Socket == orig(this.node0Socket)
this.node0Socket.getClass().getName() == orig(this.node0Socket.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
this.socketChannelByPhysicalId == orig(this.socketChannelByPhysicalId)
this.socketChannelByPhysicalId.getClass().getName() == orig(this.socketChannelByPhysicalId.getClass().getName())
this.physicalIdByThreadId == orig(this.physicalIdByThreadId)
this.physicalIdByThreadId.getClass().getName() == orig(this.physicalIdByThreadId.getClass().getName())
this.pcjThreads == orig(this.pcjThreads)
this.pcjThreads.getClass().getName() == orig(this.pcjThreads.getClass().getName())
this.node0Data == orig(this.node0Data)
this.node0Data.connectedNodeCount == orig(this.node0Data.connectedNodeCount)
this.node0Data.connectedThreadCount == orig(this.node0Data.connectedThreadCount)
this.node0Data.helloBitmask == orig(this.node0Data.helloBitmask)
this.node0Data.helloBitmask.length == orig(this.node0Data.helloBitmask.length)
this.node0Data.helloBitmask.value == orig(this.node0Data.helloBitmask.value)
this.node0Data.helloBitmask.value[] == orig(this.node0Data.helloBitmask.value[])
this.node0Data.helloBitmask.all == orig(this.node0Data.helloBitmask.all)
this.node0Data.helloBitmask.all[] == orig(this.node0Data.helloBitmask.all[])
this.node0Data.finishedBitmask == orig(this.node0Data.finishedBitmask)
this.node0Data.finishedBitmask.length == orig(this.node0Data.finishedBitmask.length)
this.node0Data.finishedBitmask.value == orig(this.node0Data.finishedBitmask.value)
this.node0Data.finishedBitmask.value[] == orig(this.node0Data.finishedBitmask.value[])
this.node0Data.finishedBitmask.all == orig(this.node0Data.finishedBitmask.all)
this.node0Data.finishedBitmask.all[] == orig(this.node0Data.finishedBitmask.all[])
this.node0Data.groupIdCounter == orig(this.node0Data.groupIdCounter)
this.node0Data.groupsId == orig(this.node0Data.groupsId)
this.node0Data.groupsId.getClass().getName() == orig(this.node0Data.groupsId.getClass().getName())
this.node0Data.groupsMaster == orig(this.node0Data.groupsMaster)
this.node0Data.groupsMaster.getClass().getName() == orig(this.node0Data.groupsMaster.getClass().getName())
this.node0Data.nodeInfoByPhysicalId == orig(this.node0Data.nodeInfoByPhysicalId)
this.node0Data.nodeInfoByPhysicalId.getClass().getName() == orig(this.node0Data.nodeInfoByPhysicalId.getClass().getName())
this.node0Data.allNodesThreadCount == orig(this.node0Data.allNodesThreadCount)
this.globalWaitObject == orig(this.globalWaitObject)
this.globalWaitObject.round == orig(this.globalWaitObject.round)
this.globalWaitObject.lock == orig(this.globalWaitObject.lock)
this.globalWaitObject.condition == orig(this.globalWaitObject.condition)
this.globalWaitObject.condition.getClass().getName() == orig(this.globalWaitObject.condition.getClass().getName())
this.groupJoinCounter == orig(this.groupJoinCounter)
this.groupJoinQueryMap == orig(this.groupJoinQueryMap)
this.groupJoinQueryMap.getClass().getName() == orig(this.groupJoinQueryMap.getClass().getName())
this.physicalId == orig(this.physicalId)
this.node0Data.helloBitmask.length == 1
this.node0Data.helloBitmask.value has only one value
this.node0Data.helloBitmask.value[] == [0]
this.node0Data.helloBitmask.all has only one value
this.node0Data.helloBitmask.all[] == [1]
this.node0Data.finishedBitmask.length == 1
this.node0Data.finishedBitmask.value has only one value
this.node0Data.finishedBitmask.value[] == [0]
this.node0Data.finishedBitmask.all has only one value
this.node0Data.finishedBitmask.all[] == [1]
this.node0Data.allNodesThreadCount == 3
this.globalWaitObject.round == 0
this.totalNodeCount == 1
size(this.node0Data.helloBitmask.value[]) == 1
size(this.node0Data.helloBitmask.all[]) == 1
size(this.node0Data.finishedBitmask.value[]) == 1
size(this.node0Data.finishedBitmask.all[]) == 1
===========================================================================
org.pcj.internal.NodeInfo:::OBJECT
this.hostname.toString == "localhost"
this.port one of { 0, 8091 }
this.threadIds.getClass().getName() == java.util.concurrent.ConcurrentSkipListSet.class
===========================================================================
org.pcj.internal.NodeInfo.NodeInfo(java.lang.String, int):::ENTER
arg0.toString == "localhost"
arg1 == 8091
===========================================================================
org.pcj.internal.NodeInfo.NodeInfo(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
this.port == 8091
arg0.toString == "localhost"
===========================================================================
org.pcj.internal.NodeInfo.NodeInfo(java.lang.String, int, int[]):::ENTER
arg0 == null
arg1 == 8091
arg2 has only one value
arg2[] == [0, 1, 2]
arg2[] elements one of { 0, 1, 2 }
size(arg2[]) == 3
===========================================================================
org.pcj.internal.NodeInfo.NodeInfo(java.lang.String, int, int[]):::EXIT
arg2[] == orig(arg2[])
this.hostname == null
this.port == 8091
this.threadIds has only one value
arg2[] == [0, 1, 2]
arg2[] elements one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.NodeInfo.addThreadId(int):::ENTER
this has only one value
this.hostname has only one value
this.port == 8091
this.threadIds has only one value
arg0 one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.NodeInfo.addThreadId(int):::EXIT
this.hostname == orig(this.hostname)
this.hostname.toString == orig(this.hostname.toString)
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds.getClass().getName() == orig(this.threadIds.getClass().getName())
this.hostname has only one value
this.port == 8091
this.threadIds has only one value
===========================================================================
org.pcj.internal.NodeInfo.equals(java.lang.Object):::ENTER
this has only one value
this.hostname has only one value
this.port == 8091
this.threadIds has only one value
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.NodeInfo.class
===========================================================================
org.pcj.internal.NodeInfo.equals(java.lang.Object):::EXIT62
===========================================================================
org.pcj.internal.NodeInfo.equals(java.lang.Object):::EXIT62;condition="return == true"
===========================================================================
org.pcj.internal.NodeInfo.equals(java.lang.Object):::EXIT
this.hostname == orig(this.hostname)
this.hostname.toString == orig(this.hostname.toString)
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds.getClass().getName() == orig(this.threadIds.getClass().getName())
this.hostname has only one value
this.port == 8091
this.threadIds has only one value
return == true
===========================================================================
org.pcj.internal.NodeInfo.equals(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.NodeInfo.getPort():::ENTER
this.hostname has only one value
this.port == 8091
===========================================================================
org.pcj.internal.NodeInfo.getPort():::EXIT
this.hostname == orig(this.hostname)
this.hostname.toString == orig(this.hostname.toString)
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds.getClass().getName() == orig(this.threadIds.getClass().getName())
this.hostname has only one value
this.port == 8091
return == 8091
===========================================================================
org.pcj.internal.NodeInfo.getThreadIds():::ENTER
this.port == 8091
===========================================================================
org.pcj.internal.NodeInfo.getThreadIds():::EXIT
this.hostname == orig(this.hostname)
this.hostname.toString == orig(this.hostname.toString)
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds.getClass().getName() == orig(this.threadIds.getClass().getName())
this.port == 8091
return[] == [0, 1, 2]
return[] elements one of { 0, 1, 2 }
size(return[]) == 3
===========================================================================
org.pcj.internal.NodeInfo.isLocalAddress():::ENTER
this.hostname has only one value
this.port == 8091
===========================================================================
org.pcj.internal.NodeInfo.isLocalAddress():::EXIT91
===========================================================================
org.pcj.internal.NodeInfo.isLocalAddress():::EXIT91;condition="return == true"
===========================================================================
org.pcj.internal.NodeInfo.isLocalAddress():::EXIT
this.hostname == orig(this.hostname)
this.hostname.toString == orig(this.hostname.toString)
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds.getClass().getName() == orig(this.threadIds.getClass().getName())
this.hostname has only one value
this.port == 8091
return == true
===========================================================================
org.pcj.internal.NodeInfo.isLocalAddress():::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.NodeInfo.readObject(java.io.ObjectInputStream):::ENTER
this has only one value
this.hostname == null
this.port == 0
this.threadIds == null
arg0 has only one value
===========================================================================
org.pcj.internal.NodeInfo.readObject(java.io.ObjectInputStream):::EXIT
this.hostname == orig(this.hostname)
this.hostname == null
this.port == 8091
this.threadIds has only one value
===========================================================================
org.pcj.internal.NodeInfo.writeObject(java.io.ObjectOutputStream):::ENTER
this has only one value
this.hostname == null
this.port == 8091
this.threadIds has only one value
arg0 has only one value
===========================================================================
org.pcj.internal.NodeInfo.writeObject(java.io.ObjectOutputStream):::EXIT
this.hostname == orig(this.hostname)
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds.getClass().getName() == orig(this.threadIds.getClass().getName())
this.hostname == null
this.port == 8091
this.threadIds has only one value
===========================================================================
org.pcj.internal.PcjThread$PcjThreadGroup:::OBJECT
this.threadData != null
this.threadData.storages != null
this.threadData.storages.enumToStorageMap != null
this.threadData.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.storages.storageObjectsMap != null
this.threadData.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.storages.sharedObjectsMap != null
this.threadData.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup != null
this.threadData.globalGroup.myThreadId one of { 0, 1, 2 }
this.threadData.globalGroup.barrierRoundCounter != null
this.threadData.globalGroup.getVariableCounter != null
this.threadData.globalGroup.getVariableMap != null
this.threadData.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup.putVariableCounter != null
this.threadData.globalGroup.putVariableMap != null
this.threadData.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup.broadcastCounter != null
this.threadData.globalGroup.broadcastStateMap != null
this.threadData.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup.peerBarrierStateMap != null
this.threadData.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
this.threadData.globalGroup.threadsMapping has only one value
this.threadData.globalGroup.threadsMapping != null
this.threadData.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup.joinGroupSynchronizer has only one value
this.threadData.globalGroup.joinGroupSynchronizer != null
this.threadData.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
this.threadData.globalGroup.groupId == 0
this.threadData.globalGroup.groupName has only one value
this.threadData.globalGroup.groupName != null
this.threadData.globalGroup.groupName.toString == ""
this.threadData.globalGroup.localIds has only one value
this.threadData.globalGroup.localIds != null
this.threadData.globalGroup.localIds[] contains no nulls and has only one value, of length 3
this.threadData.globalGroup.localIds[] elements != null
this.threadData.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.threadData.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
this.threadData.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
this.threadData.globalGroup.physicalIds has only one value
this.threadData.globalGroup.physicalIds != null
this.threadData.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
this.threadData.globalGroup.physicalIds[] elements has only one value
this.threadData.globalGroup.physicalIds[] elements != null
this.threadData.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
this.threadData.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
this.threadData.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
this.threadData.globalGroup.localBitmask has only one value
this.threadData.globalGroup.localBitmask != null
this.threadData.globalGroup.physicalBitmask has only one value
this.threadData.globalGroup.physicalBitmask != null
this.threadData.globalGroup.barrierStateMap has only one value
this.threadData.globalGroup.barrierStateMap != null
this.threadData.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup.groupJoinStateMap has only one value
this.threadData.globalGroup.groupJoinStateMap != null
this.threadData.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadData.globalGroup.threadsCounter has only one value
this.threadData.globalGroup.threadsCounter != null
this.threadData.globalGroup.physicalTree has only one value
this.threadData.globalGroup.physicalTree != null
this.threadData.groupById != null
this.threadData.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(this.threadData.globalGroup.localIds[]) == 3
size(this.threadData.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread$PcjThreadGroup.PcjThreadGroup(java.lang.String, org.pcj.internal.PcjThreadData):::ENTER
arg0.toString one of { "PcjThreadGroup-0", "PcjThreadGroup-1", "PcjThreadGroup-2" }
arg1.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.myThreadId one of { 0, 1, 2 }
arg1.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
arg1.globalGroup.threadsMapping has only one value
arg1.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.joinGroupSynchronizer has only one value
arg1.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg1.globalGroup.groupId == 0
arg1.globalGroup.groupName has only one value
arg1.globalGroup.groupName.toString == ""
arg1.globalGroup.localIds has only one value
arg1.globalGroup.localIds[] contains no nulls and has only one value, of length 3
arg1.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg1.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
arg1.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
arg1.globalGroup.physicalIds has only one value
arg1.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
arg1.globalGroup.physicalIds[] elements has only one value
arg1.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
arg1.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg1.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg1.globalGroup.localBitmask has only one value
arg1.globalGroup.physicalBitmask has only one value
arg1.globalGroup.barrierStateMap has only one value
arg1.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.groupJoinStateMap has only one value
arg1.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.threadsCounter has only one value
arg1.globalGroup.physicalTree has only one value
arg1.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(arg1.globalGroup.localIds[]) == 3
size(arg1.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread$PcjThreadGroup.PcjThreadGroup(java.lang.String, org.pcj.internal.PcjThreadData):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
arg0.toString == orig(arg0.toString)
arg1.storages == orig(arg1.storages)
arg1.storages.enumToStorageMap == orig(arg1.storages.enumToStorageMap)
arg1.storages.enumToStorageMap.getClass().getName() == orig(arg1.storages.enumToStorageMap.getClass().getName())
arg1.storages.storageObjectsMap == orig(arg1.storages.storageObjectsMap)
arg1.storages.storageObjectsMap.getClass().getName() == orig(arg1.storages.storageObjectsMap.getClass().getName())
arg1.storages.sharedObjectsMap == orig(arg1.storages.sharedObjectsMap)
arg1.storages.sharedObjectsMap.getClass().getName() == orig(arg1.storages.sharedObjectsMap.getClass().getName())
arg1.globalGroup == orig(arg1.globalGroup)
arg1.globalGroup.myThreadId == orig(arg1.globalGroup.myThreadId)
arg1.globalGroup.barrierRoundCounter == orig(arg1.globalGroup.barrierRoundCounter)
arg1.globalGroup.getVariableCounter == orig(arg1.globalGroup.getVariableCounter)
arg1.globalGroup.getVariableMap == orig(arg1.globalGroup.getVariableMap)
arg1.globalGroup.getVariableMap.getClass().getName() == orig(arg1.globalGroup.getVariableMap.getClass().getName())
arg1.globalGroup.putVariableCounter == orig(arg1.globalGroup.putVariableCounter)
arg1.globalGroup.putVariableMap == orig(arg1.globalGroup.putVariableMap)
arg1.globalGroup.putVariableMap.getClass().getName() == orig(arg1.globalGroup.putVariableMap.getClass().getName())
arg1.globalGroup.broadcastCounter == orig(arg1.globalGroup.broadcastCounter)
arg1.globalGroup.broadcastStateMap == orig(arg1.globalGroup.broadcastStateMap)
arg1.globalGroup.broadcastStateMap.getClass().getName() == orig(arg1.globalGroup.broadcastStateMap.getClass().getName())
arg1.globalGroup.peerBarrierStateMap == orig(arg1.globalGroup.peerBarrierStateMap)
arg1.globalGroup.peerBarrierStateMap.getClass().getName() == orig(arg1.globalGroup.peerBarrierStateMap.getClass().getName())
arg1.globalGroup.threadsMapping == orig(arg1.globalGroup.threadsMapping)
arg1.globalGroup.threadsMapping.getClass().getName() == orig(arg1.globalGroup.threadsMapping.getClass().getName())
arg1.globalGroup.joinGroupSynchronizer == orig(arg1.globalGroup.joinGroupSynchronizer)
arg1.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(arg1.globalGroup.joinGroupSynchronizer.getClass().getName())
arg1.globalGroup.groupId == orig(arg1.globalGroup.groupId)
arg1.globalGroup.groupName == orig(arg1.globalGroup.groupName)
arg1.globalGroup.groupName.toString == orig(arg1.globalGroup.groupName.toString)
arg1.globalGroup.localIds == orig(arg1.globalGroup.localIds)
arg1.globalGroup.localIds[] == orig(arg1.globalGroup.localIds[])
arg1.globalGroup.localIds.getClass().getName() == orig(arg1.globalGroup.localIds.getClass().getName())
arg1.globalGroup.physicalIds == orig(arg1.globalGroup.physicalIds)
arg1.globalGroup.physicalIds[] == orig(arg1.globalGroup.physicalIds[])
arg1.globalGroup.physicalIds.getClass().getName() == orig(arg1.globalGroup.physicalIds.getClass().getName())
arg1.globalGroup.localBitmask == orig(arg1.globalGroup.localBitmask)
arg1.globalGroup.physicalBitmask == orig(arg1.globalGroup.physicalBitmask)
arg1.globalGroup.barrierStateMap == orig(arg1.globalGroup.barrierStateMap)
arg1.globalGroup.barrierStateMap.getClass().getName() == orig(arg1.globalGroup.barrierStateMap.getClass().getName())
arg1.globalGroup.groupJoinStateMap == orig(arg1.globalGroup.groupJoinStateMap)
arg1.globalGroup.groupJoinStateMap.getClass().getName() == orig(arg1.globalGroup.groupJoinStateMap.getClass().getName())
arg1.globalGroup.threadsCounter == orig(arg1.globalGroup.threadsCounter)
arg1.globalGroup.physicalTree == orig(arg1.globalGroup.physicalTree)
arg1.groupById == orig(arg1.groupById)
arg1.groupById.getClass().getName() == orig(arg1.groupById.getClass().getName())
arg0.toString one of { "PcjThreadGroup-0", "PcjThreadGroup-1", "PcjThreadGroup-2" }
arg1.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.myThreadId one of { 0, 1, 2 }
arg1.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.threadsMapping has only one value
arg1.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.joinGroupSynchronizer has only one value
arg1.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg1.globalGroup.groupId == 0
arg1.globalGroup.groupName has only one value
arg1.globalGroup.groupName.toString == ""
arg1.globalGroup.localIds has only one value
arg1.globalGroup.localIds[] contains no nulls and has only one value, of length 3
arg1.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg1.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
arg1.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
arg1.globalGroup.physicalIds has only one value
arg1.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
arg1.globalGroup.physicalIds[] elements has only one value
arg1.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
arg1.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg1.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg1.globalGroup.localBitmask has only one value
arg1.globalGroup.physicalBitmask has only one value
arg1.globalGroup.barrierStateMap has only one value
arg1.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.groupJoinStateMap has only one value
arg1.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg1.globalGroup.threadsCounter has only one value
arg1.globalGroup.physicalTree has only one value
arg1.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(arg1.globalGroup.localIds[]) == 3
size(arg1.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread$PcjThreadGroup.getThreadData():::ENTER
===========================================================================
org.pcj.internal.PcjThread$PcjThreadGroup.getThreadData():::EXIT
this.threadData == orig(this.threadData)
this.threadData.storages == orig(this.threadData.storages)
this.threadData.storages.enumToStorageMap == orig(this.threadData.storages.enumToStorageMap)
this.threadData.storages.enumToStorageMap.getClass().getName() == orig(this.threadData.storages.enumToStorageMap.getClass().getName())
this.threadData.storages.storageObjectsMap == orig(this.threadData.storages.storageObjectsMap)
this.threadData.storages.storageObjectsMap.getClass().getName() == orig(this.threadData.storages.storageObjectsMap.getClass().getName())
this.threadData.storages.sharedObjectsMap == orig(this.threadData.storages.sharedObjectsMap)
this.threadData.storages.sharedObjectsMap.getClass().getName() == orig(this.threadData.storages.sharedObjectsMap.getClass().getName())
this.threadData.globalGroup == orig(this.threadData.globalGroup)
this.threadData.globalGroup.myThreadId == orig(this.threadData.globalGroup.myThreadId)
this.threadData.globalGroup.barrierRoundCounter == orig(this.threadData.globalGroup.barrierRoundCounter)
this.threadData.globalGroup.getVariableCounter == orig(this.threadData.globalGroup.getVariableCounter)
this.threadData.globalGroup.getVariableMap == orig(this.threadData.globalGroup.getVariableMap)
this.threadData.globalGroup.getVariableMap.getClass().getName() == orig(this.threadData.globalGroup.getVariableMap.getClass().getName())
this.threadData.globalGroup.putVariableCounter == orig(this.threadData.globalGroup.putVariableCounter)
this.threadData.globalGroup.putVariableMap == orig(this.threadData.globalGroup.putVariableMap)
this.threadData.globalGroup.putVariableMap.getClass().getName() == orig(this.threadData.globalGroup.putVariableMap.getClass().getName())
this.threadData.globalGroup.broadcastCounter == orig(this.threadData.globalGroup.broadcastCounter)
this.threadData.globalGroup.broadcastStateMap == orig(this.threadData.globalGroup.broadcastStateMap)
this.threadData.globalGroup.broadcastStateMap.getClass().getName() == orig(this.threadData.globalGroup.broadcastStateMap.getClass().getName())
this.threadData.globalGroup.peerBarrierStateMap == orig(this.threadData.globalGroup.peerBarrierStateMap)
this.threadData.globalGroup.peerBarrierStateMap.getClass().getName() == orig(this.threadData.globalGroup.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.threadData.globalGroup.threadsMapping == orig(this.threadData.globalGroup.threadsMapping)
this.threadData.globalGroup.threadsMapping.getClass().getName() == orig(this.threadData.globalGroup.threadsMapping.getClass().getName())
this.threadData.globalGroup.joinGroupSynchronizer == orig(this.threadData.globalGroup.joinGroupSynchronizer)
this.threadData.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(this.threadData.globalGroup.joinGroupSynchronizer.getClass().getName())
this.threadData.globalGroup.groupId == orig(this.threadData.globalGroup.groupId)
this.threadData.globalGroup.groupName == orig(this.threadData.globalGroup.groupName)
this.threadData.globalGroup.groupName.toString == orig(this.threadData.globalGroup.groupName.toString)
this.threadData.globalGroup.localIds == orig(this.threadData.globalGroup.localIds)
this.threadData.globalGroup.localIds[] == orig(this.threadData.globalGroup.localIds[])
this.threadData.globalGroup.localIds.getClass().getName() == orig(this.threadData.globalGroup.localIds.getClass().getName())
this.threadData.globalGroup.physicalIds == orig(this.threadData.globalGroup.physicalIds)
this.threadData.globalGroup.physicalIds[] == orig(this.threadData.globalGroup.physicalIds[])
this.threadData.globalGroup.physicalIds.getClass().getName() == orig(this.threadData.globalGroup.physicalIds.getClass().getName())
this.threadData.globalGroup.localBitmask == orig(this.threadData.globalGroup.localBitmask)
this.threadData.globalGroup.physicalBitmask == orig(this.threadData.globalGroup.physicalBitmask)
this.threadData.globalGroup.barrierStateMap == orig(this.threadData.globalGroup.barrierStateMap)
this.threadData.globalGroup.barrierStateMap.getClass().getName() == orig(this.threadData.globalGroup.barrierStateMap.getClass().getName())
this.threadData.globalGroup.groupJoinStateMap == orig(this.threadData.globalGroup.groupJoinStateMap)
this.threadData.globalGroup.groupJoinStateMap.getClass().getName() == orig(this.threadData.globalGroup.groupJoinStateMap.getClass().getName())
this.threadData.globalGroup.threadsCounter == orig(this.threadData.globalGroup.threadsCounter)
this.threadData.globalGroup.physicalTree == orig(this.threadData.globalGroup.physicalTree)
this.threadData.groupById == orig(this.threadData.groupById)
this.threadData.groupById.getClass().getName() == orig(this.threadData.groupById.getClass().getName())
return != null
return.storages != null
return.storages.enumToStorageMap != null
return.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storages.storageObjectsMap != null
return.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storages.sharedObjectsMap != null
return.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup != null
return.globalGroup.myThreadId one of { 0, 1, 2 }
return.globalGroup.barrierRoundCounter != null
return.globalGroup.getVariableCounter != null
return.globalGroup.getVariableMap != null
return.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.putVariableCounter != null
return.globalGroup.putVariableMap != null
return.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.broadcastCounter != null
return.globalGroup.broadcastStateMap != null
return.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.peerBarrierStateMap != null
return.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.threadsMapping has only one value
return.globalGroup.threadsMapping != null
return.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.joinGroupSynchronizer has only one value
return.globalGroup.joinGroupSynchronizer != null
return.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
return.globalGroup.groupId == 0
return.globalGroup.groupName has only one value
return.globalGroup.groupName != null
return.globalGroup.groupName.toString == ""
return.globalGroup.localIds has only one value
return.globalGroup.localIds != null
return.globalGroup.localIds[] contains no nulls and has only one value, of length 3
return.globalGroup.localIds[] elements != null
return.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
return.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
return.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
return.globalGroup.physicalIds has only one value
return.globalGroup.physicalIds != null
return.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
return.globalGroup.physicalIds[] elements has only one value
return.globalGroup.physicalIds[] elements != null
return.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
return.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
return.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
return.globalGroup.localBitmask has only one value
return.globalGroup.localBitmask != null
return.globalGroup.physicalBitmask has only one value
return.globalGroup.physicalBitmask != null
return.globalGroup.barrierStateMap has only one value
return.globalGroup.barrierStateMap != null
return.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.groupJoinStateMap has only one value
return.globalGroup.groupJoinStateMap != null
return.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.threadsCounter has only one value
return.globalGroup.threadsCounter != null
return.globalGroup.physicalTree has only one value
return.globalGroup.physicalTree != null
return.groupById != null
return.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(return.globalGroup.localIds[]) == 3
size(return.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread:::OBJECT
this.startPointClass has only one value
this.startPointClass != null
this.pcjThreadGroup != null
this.pcjThreadGroup.threadData != null
this.pcjThreadGroup.threadData.storages != null
this.pcjThreadGroup.threadData.globalGroup != null
this.pcjThreadGroup.threadData.groupById != null
this.pcjThreadGroup.threadData.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.threadId one of { 0, 1, 2 }
this.throwable == null
===========================================================================
org.pcj.internal.PcjThread.PcjThread(int, java.lang.Class, org.pcj.internal.PcjThreadData):::ENTER
arg0 one of { 0, 1, 2 }
arg1 has only one value
arg2.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.myThreadId one of { 0, 1, 2 }
arg2.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
arg2.globalGroup.threadsMapping has only one value
arg2.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.joinGroupSynchronizer has only one value
arg2.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg2.globalGroup.groupId == 0
arg2.globalGroup.groupName has only one value
arg2.globalGroup.groupName.toString == ""
arg2.globalGroup.localIds has only one value
arg2.globalGroup.localIds[] contains no nulls and has only one value, of length 3
arg2.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg2.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
arg2.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
arg2.globalGroup.physicalIds has only one value
arg2.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
arg2.globalGroup.physicalIds[] elements has only one value
arg2.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
arg2.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg2.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg2.globalGroup.localBitmask has only one value
arg2.globalGroup.physicalBitmask has only one value
arg2.globalGroup.barrierStateMap has only one value
arg2.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.groupJoinStateMap has only one value
arg2.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.threadsCounter has only one value
arg2.globalGroup.physicalTree has only one value
arg2.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(arg2.globalGroup.localIds[]) == 3
size(arg2.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread.PcjThread(int, java.lang.Class, org.pcj.internal.PcjThreadData):::EXIT
arg2.storages == orig(arg2.storages)
arg2.storages.enumToStorageMap == orig(arg2.storages.enumToStorageMap)
arg2.storages.enumToStorageMap.getClass().getName() == orig(arg2.storages.enumToStorageMap.getClass().getName())
arg2.storages.storageObjectsMap == orig(arg2.storages.storageObjectsMap)
arg2.storages.storageObjectsMap.getClass().getName() == orig(arg2.storages.storageObjectsMap.getClass().getName())
arg2.storages.sharedObjectsMap == orig(arg2.storages.sharedObjectsMap)
arg2.storages.sharedObjectsMap.getClass().getName() == orig(arg2.storages.sharedObjectsMap.getClass().getName())
arg2.globalGroup == orig(arg2.globalGroup)
arg2.globalGroup.myThreadId == orig(arg2.globalGroup.myThreadId)
arg2.globalGroup.barrierRoundCounter == orig(arg2.globalGroup.barrierRoundCounter)
arg2.globalGroup.getVariableCounter == orig(arg2.globalGroup.getVariableCounter)
arg2.globalGroup.getVariableMap == orig(arg2.globalGroup.getVariableMap)
arg2.globalGroup.getVariableMap.getClass().getName() == orig(arg2.globalGroup.getVariableMap.getClass().getName())
arg2.globalGroup.putVariableCounter == orig(arg2.globalGroup.putVariableCounter)
arg2.globalGroup.putVariableMap == orig(arg2.globalGroup.putVariableMap)
arg2.globalGroup.putVariableMap.getClass().getName() == orig(arg2.globalGroup.putVariableMap.getClass().getName())
arg2.globalGroup.broadcastCounter == orig(arg2.globalGroup.broadcastCounter)
arg2.globalGroup.broadcastStateMap == orig(arg2.globalGroup.broadcastStateMap)
arg2.globalGroup.broadcastStateMap.getClass().getName() == orig(arg2.globalGroup.broadcastStateMap.getClass().getName())
arg2.globalGroup.peerBarrierStateMap == orig(arg2.globalGroup.peerBarrierStateMap)
arg2.globalGroup.peerBarrierStateMap.getClass().getName() == orig(arg2.globalGroup.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
arg2.globalGroup.threadsMapping == orig(arg2.globalGroup.threadsMapping)
arg2.globalGroup.threadsMapping.getClass().getName() == orig(arg2.globalGroup.threadsMapping.getClass().getName())
arg2.globalGroup.joinGroupSynchronizer == orig(arg2.globalGroup.joinGroupSynchronizer)
arg2.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(arg2.globalGroup.joinGroupSynchronizer.getClass().getName())
arg2.globalGroup.groupId == orig(arg2.globalGroup.groupId)
arg2.globalGroup.groupName == orig(arg2.globalGroup.groupName)
arg2.globalGroup.groupName.toString == orig(arg2.globalGroup.groupName.toString)
arg2.globalGroup.localIds == orig(arg2.globalGroup.localIds)
arg2.globalGroup.localIds[] == orig(arg2.globalGroup.localIds[])
arg2.globalGroup.localIds.getClass().getName() == orig(arg2.globalGroup.localIds.getClass().getName())
arg2.globalGroup.physicalIds == orig(arg2.globalGroup.physicalIds)
arg2.globalGroup.physicalIds[] == orig(arg2.globalGroup.physicalIds[])
arg2.globalGroup.physicalIds.getClass().getName() == orig(arg2.globalGroup.physicalIds.getClass().getName())
arg2.globalGroup.localBitmask == orig(arg2.globalGroup.localBitmask)
arg2.globalGroup.physicalBitmask == orig(arg2.globalGroup.physicalBitmask)
arg2.globalGroup.barrierStateMap == orig(arg2.globalGroup.barrierStateMap)
arg2.globalGroup.barrierStateMap.getClass().getName() == orig(arg2.globalGroup.barrierStateMap.getClass().getName())
arg2.globalGroup.groupJoinStateMap == orig(arg2.globalGroup.groupJoinStateMap)
arg2.globalGroup.groupJoinStateMap.getClass().getName() == orig(arg2.globalGroup.groupJoinStateMap.getClass().getName())
arg2.globalGroup.threadsCounter == orig(arg2.globalGroup.threadsCounter)
arg2.globalGroup.physicalTree == orig(arg2.globalGroup.physicalTree)
arg2.groupById == orig(arg2.groupById)
arg2.groupById.getClass().getName() == orig(arg2.groupById.getClass().getName())
arg2.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.myThreadId one of { 0, 1, 2 }
arg2.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
arg2.globalGroup.threadsMapping has only one value
arg2.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.joinGroupSynchronizer has only one value
arg2.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg2.globalGroup.groupId == 0
arg2.globalGroup.groupName has only one value
arg2.globalGroup.groupName.toString == ""
arg2.globalGroup.localIds has only one value
arg2.globalGroup.localIds[] contains no nulls and has only one value, of length 3
arg2.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg2.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
arg2.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
arg2.globalGroup.physicalIds has only one value
arg2.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
arg2.globalGroup.physicalIds[] elements has only one value
arg2.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
arg2.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg2.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg2.globalGroup.localBitmask has only one value
arg2.globalGroup.physicalBitmask has only one value
arg2.globalGroup.barrierStateMap has only one value
arg2.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.groupJoinStateMap has only one value
arg2.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg2.globalGroup.threadsCounter has only one value
arg2.globalGroup.physicalTree has only one value
arg2.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(arg2.globalGroup.localIds[]) == 3
size(arg2.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread.getCurrentThreadData():::EXIT
return != null
return.storages != null
return.storages.enumToStorageMap != null
return.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storages.storageObjectsMap != null
return.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storages.sharedObjectsMap != null
return.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup != null
return.globalGroup.myThreadId one of { 0, 1, 2 }
return.globalGroup.barrierRoundCounter != null
return.globalGroup.getVariableCounter != null
return.globalGroup.getVariableMap != null
return.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.putVariableCounter != null
return.globalGroup.putVariableMap != null
return.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.broadcastCounter != null
return.globalGroup.broadcastStateMap != null
return.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.peerBarrierStateMap != null
return.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
return.globalGroup.threadsMapping has only one value
return.globalGroup.threadsMapping != null
return.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.joinGroupSynchronizer has only one value
return.globalGroup.joinGroupSynchronizer != null
return.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
return.globalGroup.groupId == 0
return.globalGroup.groupName has only one value
return.globalGroup.groupName != null
return.globalGroup.groupName.toString == ""
return.globalGroup.localIds has only one value
return.globalGroup.localIds != null
return.globalGroup.localIds[] contains no nulls and has only one value, of length 3
return.globalGroup.localIds[] elements != null
return.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
return.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
return.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
return.globalGroup.physicalIds has only one value
return.globalGroup.physicalIds != null
return.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
return.globalGroup.physicalIds[] elements has only one value
return.globalGroup.physicalIds[] elements != null
return.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
return.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
return.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
return.globalGroup.localBitmask has only one value
return.globalGroup.localBitmask != null
return.globalGroup.physicalBitmask has only one value
return.globalGroup.physicalBitmask != null
return.globalGroup.barrierStateMap has only one value
return.globalGroup.barrierStateMap != null
return.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.groupJoinStateMap has only one value
return.globalGroup.groupJoinStateMap != null
return.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.threadsCounter has only one value
return.globalGroup.threadsCounter != null
return.globalGroup.physicalTree has only one value
return.globalGroup.physicalTree != null
return.groupById != null
return.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(return.globalGroup.localIds[]) == 3
size(return.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread.getPcjThreadGroupForCurrentThread():::EXIT123
===========================================================================
org.pcj.internal.PcjThread.getPcjThreadGroupForCurrentThread():::EXIT
return != null
return.threadData != null
return.threadData.storages != null
return.threadData.globalGroup != null
return.threadData.groupById != null
return.threadData.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.PcjThread.getStartPointObject():::ENTER
===========================================================================
org.pcj.internal.PcjThread.getStartPointObject():::EXIT
this.startPointClass == orig(this.startPointClass)
this.pcjThreadGroup == orig(this.pcjThreadGroup)
this.pcjThreadGroup.threadData == orig(this.pcjThreadGroup.threadData)
this.pcjThreadGroup.threadData.storages == orig(this.pcjThreadGroup.threadData.storages)
this.pcjThreadGroup.threadData.globalGroup == orig(this.pcjThreadGroup.threadData.globalGroup)
this.pcjThreadGroup.threadData.groupById == orig(this.pcjThreadGroup.threadData.groupById)
this.pcjThreadGroup.threadData.groupById.getClass().getName() == orig(this.pcjThreadGroup.threadData.groupById.getClass().getName())
this.threadId == orig(this.threadId)
this.throwable == orig(this.throwable)
return.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.internal.PcjThread.getThreadData():::ENTER
===========================================================================
org.pcj.internal.PcjThread.getThreadData():::EXIT
this.startPointClass == orig(this.startPointClass)
this.pcjThreadGroup == orig(this.pcjThreadGroup)
this.pcjThreadGroup.threadData == orig(this.pcjThreadGroup.threadData)
this.pcjThreadGroup.threadData.storages == orig(this.pcjThreadGroup.threadData.storages)
this.pcjThreadGroup.threadData.globalGroup == orig(this.pcjThreadGroup.threadData.globalGroup)
this.pcjThreadGroup.threadData.groupById == orig(this.pcjThreadGroup.threadData.groupById)
this.pcjThreadGroup.threadData.groupById.getClass().getName() == orig(this.pcjThreadGroup.threadData.groupById.getClass().getName())
this.threadId == orig(this.threadId)
this.throwable == orig(this.throwable)
return.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.myThreadId one of { 0, 1, 2 }
return.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
return.globalGroup.threadsMapping has only one value
return.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.joinGroupSynchronizer has only one value
return.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
return.globalGroup.groupId == 0
return.globalGroup.groupName has only one value
return.globalGroup.groupName.toString == ""
return.globalGroup.localIds has only one value
return.globalGroup.localIds[] contains no nulls and has only one value, of length 3
return.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
return.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
return.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
return.globalGroup.physicalIds has only one value
return.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
return.globalGroup.physicalIds[] elements has only one value
return.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
return.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
return.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
return.globalGroup.localBitmask has only one value
return.globalGroup.physicalBitmask has only one value
return.globalGroup.barrierStateMap has only one value
return.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.groupJoinStateMap has only one value
return.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.globalGroup.threadsCounter has only one value
return.globalGroup.physicalTree has only one value
return.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(return.globalGroup.localIds[]) == 3
size(return.globalGroup.physicalIds[]) == 1
===========================================================================
org.pcj.internal.PcjThread.getThreadId():::ENTER
===========================================================================
org.pcj.internal.PcjThread.getThreadId():::EXIT
this.startPointClass == orig(this.startPointClass)
this.pcjThreadGroup == orig(this.pcjThreadGroup)
this.pcjThreadGroup.threadData == orig(this.pcjThreadGroup.threadData)
this.pcjThreadGroup.threadData.storages == orig(this.pcjThreadGroup.threadData.storages)
this.pcjThreadGroup.threadData.globalGroup == orig(this.pcjThreadGroup.threadData.globalGroup)
this.pcjThreadGroup.threadData.groupById == orig(this.pcjThreadGroup.threadData.groupById)
this.pcjThreadGroup.threadData.groupById.getClass().getName() == orig(this.pcjThreadGroup.threadData.groupById.getClass().getName())
this.threadId == orig(this.threadId)
this.throwable == orig(this.throwable)
return one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.PcjThread.getThrowable():::ENTER
===========================================================================
org.pcj.internal.PcjThread.getThrowable():::EXIT
this.startPointClass == orig(this.startPointClass)
this.pcjThreadGroup == orig(this.pcjThreadGroup)
this.pcjThreadGroup.threadData == orig(this.pcjThreadGroup.threadData)
this.pcjThreadGroup.threadData.storages == orig(this.pcjThreadGroup.threadData.storages)
this.pcjThreadGroup.threadData.globalGroup == orig(this.pcjThreadGroup.threadData.globalGroup)
this.pcjThreadGroup.threadData.groupById == orig(this.pcjThreadGroup.threadData.groupById)
this.pcjThreadGroup.threadData.groupById.getClass().getName() == orig(this.pcjThreadGroup.threadData.groupById.getClass().getName())
this.threadId == orig(this.threadId)
this.throwable == orig(this.throwable)
return == null
===========================================================================
org.pcj.internal.PcjThread.initializeStorages():::ENTER
===========================================================================
org.pcj.internal.PcjThread.initializeStorages():::EXIT
this.startPointClass == orig(this.startPointClass)
this.pcjThreadGroup == orig(this.pcjThreadGroup)
this.pcjThreadGroup.threadData == orig(this.pcjThreadGroup.threadData)
this.pcjThreadGroup.threadData.storages == orig(this.pcjThreadGroup.threadData.storages)
this.pcjThreadGroup.threadData.globalGroup == orig(this.pcjThreadGroup.threadData.globalGroup)
this.pcjThreadGroup.threadData.groupById == orig(this.pcjThreadGroup.threadData.groupById)
this.pcjThreadGroup.threadData.groupById.getClass().getName() == orig(this.pcjThreadGroup.threadData.groupById.getClass().getName())
this.threadId == orig(this.threadId)
this.throwable == orig(this.throwable)
return.getClass().getName() == org.pcj.test.StorageExample.class
===========================================================================
org.pcj.internal.PcjThread.run():::ENTER
===========================================================================
org.pcj.internal.PcjThread.run():::EXIT
this.startPointClass == orig(this.startPointClass)
this.pcjThreadGroup == orig(this.pcjThreadGroup)
this.pcjThreadGroup.threadData == orig(this.pcjThreadGroup.threadData)
this.pcjThreadGroup.threadData.storages == orig(this.pcjThreadGroup.threadData.storages)
this.pcjThreadGroup.threadData.globalGroup == orig(this.pcjThreadGroup.threadData.globalGroup)
this.pcjThreadGroup.threadData.groupById == orig(this.pcjThreadGroup.threadData.groupById)
this.pcjThreadGroup.threadData.groupById.getClass().getName() == orig(this.pcjThreadGroup.threadData.groupById.getClass().getName())
this.threadId == orig(this.threadId)
this.throwable == orig(this.throwable)
===========================================================================
org.pcj.internal.PcjThreadData:::OBJECT
this.storages != null
this.storages.enumToStorageMap != null
this.storages.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.storages.storageObjectsMap != null
this.storages.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.storages.sharedObjectsMap != null
this.storages.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup != null
this.globalGroup.myThreadId one of { 0, 1, 2 }
this.globalGroup.barrierRoundCounter != null
this.globalGroup.getVariableCounter != null
this.globalGroup.getVariableMap != null
this.globalGroup.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup.putVariableCounter != null
this.globalGroup.putVariableMap != null
this.globalGroup.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup.broadcastCounter != null
this.globalGroup.broadcastStateMap != null
this.globalGroup.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup.peerBarrierStateMap != null
this.globalGroup.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME != null
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
this.globalGroup.threadsMapping has only one value
this.globalGroup.threadsMapping != null
this.globalGroup.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup.joinGroupSynchronizer has only one value
this.globalGroup.joinGroupSynchronizer != null
this.globalGroup.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
this.globalGroup.groupId == 0
this.globalGroup.groupName has only one value
this.globalGroup.groupName != null
this.globalGroup.groupName.toString == ""
this.globalGroup.localIds has only one value
this.globalGroup.localIds != null
this.globalGroup.localIds[] contains no nulls and has only one value, of length 3
this.globalGroup.localIds[] elements != null
this.globalGroup.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.globalGroup.localIds[].getClass().getName() elements == java.lang.Integer.class
this.globalGroup.localIds.getClass().getName() == java.util.ArrayList.class
this.globalGroup.physicalIds has only one value
this.globalGroup.physicalIds != null
this.globalGroup.physicalIds[] contains no nulls and has only one value, of length 1
this.globalGroup.physicalIds[] elements has only one value
this.globalGroup.physicalIds[] elements != null
this.globalGroup.physicalIds[].getClass().getName() == [java.lang.Integer]
this.globalGroup.physicalIds[].getClass().getName() elements == java.lang.Integer.class
this.globalGroup.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
this.globalGroup.localBitmask has only one value
this.globalGroup.localBitmask != null
this.globalGroup.localBitmask.length == 3
this.globalGroup.localBitmask.value has only one value
this.globalGroup.localBitmask.value != null
this.globalGroup.localBitmask.value[] == [7]
this.globalGroup.localBitmask.value[] elements == 7
this.globalGroup.localBitmask.all has only one value
this.globalGroup.localBitmask.all != null
this.globalGroup.localBitmask.all[] == [7]
this.globalGroup.localBitmask.all[] elements == 7
this.globalGroup.physicalBitmask has only one value
this.globalGroup.physicalBitmask != null
this.globalGroup.physicalBitmask.length == 1
this.globalGroup.physicalBitmask.value has only one value
this.globalGroup.physicalBitmask.value != null
this.globalGroup.physicalBitmask.value[] == [1]
this.globalGroup.physicalBitmask.value[] elements == 1
this.globalGroup.physicalBitmask.all has only one value
this.globalGroup.physicalBitmask.all != null
this.globalGroup.physicalBitmask.all[] == [1]
this.globalGroup.physicalBitmask.all[] elements == 1
this.globalGroup.barrierStateMap has only one value
this.globalGroup.barrierStateMap != null
this.globalGroup.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup.groupJoinStateMap has only one value
this.globalGroup.groupJoinStateMap != null
this.globalGroup.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.globalGroup.threadsCounter has only one value
this.globalGroup.threadsCounter != null
this.globalGroup.physicalTree has only one value
this.globalGroup.physicalTree != null
this.globalGroup.physicalTree.rootNode == 0
this.globalGroup.physicalTree.parentNode == -1
this.globalGroup.physicalTree.childrenNodes has only one value
this.globalGroup.physicalTree.childrenNodes != null
this.globalGroup.physicalTree.childrenNodes[] == []
this.globalGroup.physicalTree.childrenNodes[].getClass().getName() == []
this.globalGroup.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
this.groupById != null
this.groupById.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
size(this.globalGroup.localIds[]) == 3
size(this.globalGroup.physicalIds[]) == 1
size(this.globalGroup.localBitmask.value[]) == 1
size(this.globalGroup.localBitmask.all[]) == 1
size(this.globalGroup.physicalBitmask.value[]) == 1
size(this.globalGroup.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.PcjThreadData.PcjThreadData(org.pcj.internal.InternalGroup):::ENTER
arg0.myThreadId one of { 0, 1, 2 }
arg0.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME has only one value
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == ""
arg0.threadsMapping has only one value
arg0.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.joinGroupSynchronizer has only one value
arg0.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg0.groupId == 0
arg0.groupName has only one value
arg0.groupName.toString == ""
arg0.localIds has only one value
arg0.localIds[] contains no nulls and has only one value, of length 3
arg0.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.localIds[].getClass().getName() elements == java.lang.Integer.class
arg0.localIds.getClass().getName() == java.util.ArrayList.class
arg0.physicalIds has only one value
arg0.physicalIds[] contains no nulls and has only one value, of length 1
arg0.physicalIds[] elements has only one value
arg0.physicalIds[].getClass().getName() == [java.lang.Integer]
arg0.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg0.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg0.localBitmask has only one value
arg0.localBitmask.length == 3
arg0.localBitmask.value has only one value
arg0.localBitmask.value[] == [7]
arg0.localBitmask.value[] elements == 7
arg0.localBitmask.all has only one value
arg0.localBitmask.all[] == [7]
arg0.localBitmask.all[] elements == 7
arg0.physicalBitmask has only one value
arg0.physicalBitmask.length == 1
arg0.physicalBitmask.value has only one value
arg0.physicalBitmask.value[] == [1]
arg0.physicalBitmask.value[] elements == 1
arg0.physicalBitmask.all has only one value
arg0.physicalBitmask.all[] == [1]
arg0.physicalBitmask.all[] elements == 1
arg0.barrierStateMap has only one value
arg0.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.groupJoinStateMap has only one value
arg0.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsCounter has only one value
arg0.physicalTree has only one value
arg0.physicalTree.rootNode == 0
arg0.physicalTree.parentNode == -1
arg0.physicalTree.childrenNodes has only one value
arg0.physicalTree.childrenNodes[] == []
arg0.physicalTree.childrenNodes[].getClass().getName() == []
arg0.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg0.localIds[]) == 3
size(arg0.physicalIds[]) == 1
size(arg0.localBitmask.value[]) == 1
size(arg0.localBitmask.all[]) == 1
size(arg0.physicalBitmask.value[]) == 1
size(arg0.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.PcjThreadData.PcjThreadData(org.pcj.internal.InternalGroup):::EXIT
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
arg0.myThreadId == orig(arg0.myThreadId)
arg0.barrierRoundCounter == orig(arg0.barrierRoundCounter)
arg0.getVariableCounter == orig(arg0.getVariableCounter)
arg0.getVariableMap == orig(arg0.getVariableMap)
arg0.getVariableMap.getClass().getName() == orig(arg0.getVariableMap.getClass().getName())
arg0.putVariableCounter == orig(arg0.putVariableCounter)
arg0.putVariableMap == orig(arg0.putVariableMap)
arg0.putVariableMap.getClass().getName() == orig(arg0.putVariableMap.getClass().getName())
arg0.broadcastCounter == orig(arg0.broadcastCounter)
arg0.broadcastStateMap == orig(arg0.broadcastStateMap)
arg0.broadcastStateMap.getClass().getName() == orig(arg0.broadcastStateMap.getClass().getName())
arg0.peerBarrierStateMap == orig(arg0.peerBarrierStateMap)
arg0.peerBarrierStateMap.getClass().getName() == orig(arg0.peerBarrierStateMap.getClass().getName())
arg0.threadsMapping == orig(arg0.threadsMapping)
arg0.threadsMapping.getClass().getName() == orig(arg0.threadsMapping.getClass().getName())
arg0.joinGroupSynchronizer == orig(arg0.joinGroupSynchronizer)
arg0.joinGroupSynchronizer.getClass().getName() == orig(arg0.joinGroupSynchronizer.getClass().getName())
arg0.groupId == orig(arg0.groupId)
arg0.groupName == orig(arg0.groupName)
arg0.groupName.toString == orig(arg0.groupName.toString)
arg0.localIds == orig(arg0.localIds)
arg0.localIds[] == orig(arg0.localIds[])
arg0.localIds.getClass().getName() == orig(arg0.localIds.getClass().getName())
arg0.physicalIds == orig(arg0.physicalIds)
arg0.physicalIds[] == orig(arg0.physicalIds[])
arg0.physicalIds.getClass().getName() == orig(arg0.physicalIds.getClass().getName())
arg0.localBitmask == orig(arg0.localBitmask)
arg0.localBitmask.length == orig(arg0.localBitmask.length)
arg0.localBitmask.value == orig(arg0.localBitmask.value)
arg0.localBitmask.value[] == orig(arg0.localBitmask.value[])
arg0.localBitmask.all == orig(arg0.localBitmask.all)
arg0.localBitmask.all[] == orig(arg0.localBitmask.all[])
arg0.physicalBitmask == orig(arg0.physicalBitmask)
arg0.physicalBitmask.length == orig(arg0.physicalBitmask.length)
arg0.physicalBitmask.value == orig(arg0.physicalBitmask.value)
arg0.physicalBitmask.value[] == orig(arg0.physicalBitmask.value[])
arg0.physicalBitmask.all == orig(arg0.physicalBitmask.all)
arg0.physicalBitmask.all[] == orig(arg0.physicalBitmask.all[])
arg0.barrierStateMap == orig(arg0.barrierStateMap)
arg0.barrierStateMap.getClass().getName() == orig(arg0.barrierStateMap.getClass().getName())
arg0.groupJoinStateMap == orig(arg0.groupJoinStateMap)
arg0.groupJoinStateMap.getClass().getName() == orig(arg0.groupJoinStateMap.getClass().getName())
arg0.threadsCounter == orig(arg0.threadsCounter)
arg0.physicalTree == orig(arg0.physicalTree)
arg0.physicalTree.rootNode == orig(arg0.physicalTree.rootNode)
arg0.physicalTree.parentNode == orig(arg0.physicalTree.parentNode)
arg0.physicalTree.childrenNodes == orig(arg0.physicalTree.childrenNodes)
arg0.physicalTree.childrenNodes[] == orig(arg0.physicalTree.childrenNodes[])
arg0.physicalTree.childrenNodes.getClass().getName() == orig(arg0.physicalTree.childrenNodes.getClass().getName())
arg0.myThreadId one of { 0, 1, 2 }
arg0.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsMapping has only one value
arg0.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.joinGroupSynchronizer has only one value
arg0.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg0.groupId == 0
arg0.groupName has only one value
arg0.groupName.toString == ""
arg0.localIds has only one value
arg0.localIds[] contains no nulls and has only one value, of length 3
arg0.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.localIds[].getClass().getName() elements == java.lang.Integer.class
arg0.localIds.getClass().getName() == java.util.ArrayList.class
arg0.physicalIds has only one value
arg0.physicalIds[] contains no nulls and has only one value, of length 1
arg0.physicalIds[] elements has only one value
arg0.physicalIds[].getClass().getName() == [java.lang.Integer]
arg0.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg0.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg0.localBitmask has only one value
arg0.localBitmask.length == 3
arg0.localBitmask.value has only one value
arg0.localBitmask.value[] == [7]
arg0.localBitmask.value[] elements == 7
arg0.localBitmask.all has only one value
arg0.localBitmask.all[] == [7]
arg0.localBitmask.all[] elements == 7
arg0.physicalBitmask has only one value
arg0.physicalBitmask.length == 1
arg0.physicalBitmask.value has only one value
arg0.physicalBitmask.value[] == [1]
arg0.physicalBitmask.value[] elements == 1
arg0.physicalBitmask.all has only one value
arg0.physicalBitmask.all[] == [1]
arg0.physicalBitmask.all[] elements == 1
arg0.barrierStateMap has only one value
arg0.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.groupJoinStateMap has only one value
arg0.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsCounter has only one value
arg0.physicalTree has only one value
arg0.physicalTree.rootNode == 0
arg0.physicalTree.parentNode == -1
arg0.physicalTree.childrenNodes has only one value
arg0.physicalTree.childrenNodes[] == []
arg0.physicalTree.childrenNodes[].getClass().getName() == []
arg0.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg0.localIds[]) == 3
size(arg0.physicalIds[]) == 1
size(arg0.localBitmask.value[]) == 1
size(arg0.localBitmask.all[]) == 1
size(arg0.physicalBitmask.value[]) == 1
size(arg0.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.PcjThreadData.addGroup(org.pcj.internal.InternalGroup):::ENTER
arg0.myThreadId one of { 0, 1, 2 }
arg0.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsMapping has only one value
arg0.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.joinGroupSynchronizer has only one value
arg0.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg0.groupId == 0
arg0.groupName has only one value
arg0.groupName.toString == ""
arg0.localIds has only one value
arg0.localIds[] contains no nulls and has only one value, of length 3
arg0.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.localIds[].getClass().getName() elements == java.lang.Integer.class
arg0.localIds.getClass().getName() == java.util.ArrayList.class
arg0.physicalIds has only one value
arg0.physicalIds[] contains no nulls and has only one value, of length 1
arg0.physicalIds[] elements has only one value
arg0.physicalIds[].getClass().getName() == [java.lang.Integer]
arg0.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg0.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg0.localBitmask has only one value
arg0.localBitmask.length == 3
arg0.localBitmask.value has only one value
arg0.localBitmask.value[] == [7]
arg0.localBitmask.value[] elements == 7
arg0.localBitmask.all has only one value
arg0.localBitmask.all[] == [7]
arg0.localBitmask.all[] elements == 7
arg0.physicalBitmask has only one value
arg0.physicalBitmask.length == 1
arg0.physicalBitmask.value has only one value
arg0.physicalBitmask.value[] == [1]
arg0.physicalBitmask.value[] elements == 1
arg0.physicalBitmask.all has only one value
arg0.physicalBitmask.all[] == [1]
arg0.physicalBitmask.all[] elements == 1
arg0.barrierStateMap has only one value
arg0.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.groupJoinStateMap has only one value
arg0.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsCounter has only one value
arg0.physicalTree has only one value
arg0.physicalTree.rootNode == 0
arg0.physicalTree.parentNode == -1
arg0.physicalTree.childrenNodes has only one value
arg0.physicalTree.childrenNodes[] == []
arg0.physicalTree.childrenNodes[].getClass().getName() == []
arg0.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg0.localIds[]) == 3
size(arg0.physicalIds[]) == 1
size(arg0.localBitmask.value[]) == 1
size(arg0.localBitmask.all[]) == 1
size(arg0.physicalBitmask.value[]) == 1
size(arg0.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.PcjThreadData.addGroup(org.pcj.internal.InternalGroup):::EXIT
this.storages == orig(this.storages)
this.storages.enumToStorageMap == orig(this.storages.enumToStorageMap)
this.storages.enumToStorageMap.getClass().getName() == orig(this.storages.enumToStorageMap.getClass().getName())
this.storages.storageObjectsMap == orig(this.storages.storageObjectsMap)
this.storages.storageObjectsMap.getClass().getName() == orig(this.storages.storageObjectsMap.getClass().getName())
this.storages.sharedObjectsMap == orig(this.storages.sharedObjectsMap)
this.storages.sharedObjectsMap.getClass().getName() == orig(this.storages.sharedObjectsMap.getClass().getName())
this.globalGroup == orig(this.globalGroup)
this.globalGroup.myThreadId == orig(this.globalGroup.myThreadId)
this.globalGroup.barrierRoundCounter == orig(this.globalGroup.barrierRoundCounter)
this.globalGroup.getVariableCounter == orig(this.globalGroup.getVariableCounter)
this.globalGroup.getVariableMap == orig(this.globalGroup.getVariableMap)
this.globalGroup.getVariableMap.getClass().getName() == orig(this.globalGroup.getVariableMap.getClass().getName())
this.globalGroup.putVariableCounter == orig(this.globalGroup.putVariableCounter)
this.globalGroup.putVariableMap == orig(this.globalGroup.putVariableMap)
this.globalGroup.putVariableMap.getClass().getName() == orig(this.globalGroup.putVariableMap.getClass().getName())
this.globalGroup.broadcastCounter == orig(this.globalGroup.broadcastCounter)
this.globalGroup.broadcastStateMap == orig(this.globalGroup.broadcastStateMap)
this.globalGroup.broadcastStateMap.getClass().getName() == orig(this.globalGroup.broadcastStateMap.getClass().getName())
this.globalGroup.peerBarrierStateMap == orig(this.globalGroup.peerBarrierStateMap)
this.globalGroup.peerBarrierStateMap.getClass().getName() == orig(this.globalGroup.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.globalGroup.threadsMapping == orig(this.globalGroup.threadsMapping)
this.globalGroup.threadsMapping.getClass().getName() == orig(this.globalGroup.threadsMapping.getClass().getName())
this.globalGroup.joinGroupSynchronizer == orig(this.globalGroup.joinGroupSynchronizer)
this.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(this.globalGroup.joinGroupSynchronizer.getClass().getName())
this.globalGroup.groupId == orig(this.globalGroup.groupId)
this.globalGroup.groupName == orig(this.globalGroup.groupName)
this.globalGroup.groupName.toString == orig(this.globalGroup.groupName.toString)
this.globalGroup.localIds == orig(this.globalGroup.localIds)
this.globalGroup.localIds[] == orig(this.globalGroup.localIds[])
this.globalGroup.localIds.getClass().getName() == orig(this.globalGroup.localIds.getClass().getName())
this.globalGroup.physicalIds == orig(this.globalGroup.physicalIds)
this.globalGroup.physicalIds[] == orig(this.globalGroup.physicalIds[])
this.globalGroup.physicalIds.getClass().getName() == orig(this.globalGroup.physicalIds.getClass().getName())
this.globalGroup.localBitmask == orig(this.globalGroup.localBitmask)
this.globalGroup.localBitmask.length == orig(this.globalGroup.localBitmask.length)
this.globalGroup.localBitmask.value == orig(this.globalGroup.localBitmask.value)
this.globalGroup.localBitmask.value[] == orig(this.globalGroup.localBitmask.value[])
this.globalGroup.localBitmask.all == orig(this.globalGroup.localBitmask.all)
this.globalGroup.localBitmask.all[] == orig(this.globalGroup.localBitmask.all[])
this.globalGroup.physicalBitmask == orig(this.globalGroup.physicalBitmask)
this.globalGroup.physicalBitmask.length == orig(this.globalGroup.physicalBitmask.length)
this.globalGroup.physicalBitmask.value == orig(this.globalGroup.physicalBitmask.value)
this.globalGroup.physicalBitmask.value[] == orig(this.globalGroup.physicalBitmask.value[])
this.globalGroup.physicalBitmask.all == orig(this.globalGroup.physicalBitmask.all)
this.globalGroup.physicalBitmask.all[] == orig(this.globalGroup.physicalBitmask.all[])
this.globalGroup.barrierStateMap == orig(this.globalGroup.barrierStateMap)
this.globalGroup.barrierStateMap.getClass().getName() == orig(this.globalGroup.barrierStateMap.getClass().getName())
this.globalGroup.groupJoinStateMap == orig(this.globalGroup.groupJoinStateMap)
this.globalGroup.groupJoinStateMap.getClass().getName() == orig(this.globalGroup.groupJoinStateMap.getClass().getName())
this.globalGroup.threadsCounter == orig(this.globalGroup.threadsCounter)
this.globalGroup.physicalTree == orig(this.globalGroup.physicalTree)
this.globalGroup.physicalTree.rootNode == orig(this.globalGroup.physicalTree.rootNode)
this.globalGroup.physicalTree.parentNode == orig(this.globalGroup.physicalTree.parentNode)
this.globalGroup.physicalTree.childrenNodes == orig(this.globalGroup.physicalTree.childrenNodes)
this.globalGroup.physicalTree.childrenNodes[] == orig(this.globalGroup.physicalTree.childrenNodes[])
this.globalGroup.physicalTree.childrenNodes.getClass().getName() == orig(this.globalGroup.physicalTree.childrenNodes.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
arg0.myThreadId == orig(arg0.myThreadId)
arg0.barrierRoundCounter == orig(arg0.barrierRoundCounter)
arg0.getVariableCounter == orig(arg0.getVariableCounter)
arg0.getVariableMap == orig(arg0.getVariableMap)
arg0.getVariableMap.getClass().getName() == orig(arg0.getVariableMap.getClass().getName())
arg0.putVariableCounter == orig(arg0.putVariableCounter)
arg0.putVariableMap == orig(arg0.putVariableMap)
arg0.putVariableMap.getClass().getName() == orig(arg0.putVariableMap.getClass().getName())
arg0.broadcastCounter == orig(arg0.broadcastCounter)
arg0.broadcastStateMap == orig(arg0.broadcastStateMap)
arg0.broadcastStateMap.getClass().getName() == orig(arg0.broadcastStateMap.getClass().getName())
arg0.peerBarrierStateMap == orig(arg0.peerBarrierStateMap)
arg0.peerBarrierStateMap.getClass().getName() == orig(arg0.peerBarrierStateMap.getClass().getName())
arg0.threadsMapping == orig(arg0.threadsMapping)
arg0.threadsMapping.getClass().getName() == orig(arg0.threadsMapping.getClass().getName())
arg0.joinGroupSynchronizer == orig(arg0.joinGroupSynchronizer)
arg0.joinGroupSynchronizer.getClass().getName() == orig(arg0.joinGroupSynchronizer.getClass().getName())
arg0.groupId == orig(arg0.groupId)
arg0.groupName == orig(arg0.groupName)
arg0.groupName.toString == orig(arg0.groupName.toString)
arg0.localIds == orig(arg0.localIds)
arg0.localIds[] == orig(arg0.localIds[])
arg0.localIds.getClass().getName() == orig(arg0.localIds.getClass().getName())
arg0.physicalIds == orig(arg0.physicalIds)
arg0.physicalIds[] == orig(arg0.physicalIds[])
arg0.physicalIds.getClass().getName() == orig(arg0.physicalIds.getClass().getName())
arg0.localBitmask == orig(arg0.localBitmask)
arg0.localBitmask.length == orig(arg0.localBitmask.length)
arg0.localBitmask.value == orig(arg0.localBitmask.value)
arg0.localBitmask.value[] == orig(arg0.localBitmask.value[])
arg0.localBitmask.all == orig(arg0.localBitmask.all)
arg0.localBitmask.all[] == orig(arg0.localBitmask.all[])
arg0.physicalBitmask == orig(arg0.physicalBitmask)
arg0.physicalBitmask.length == orig(arg0.physicalBitmask.length)
arg0.physicalBitmask.value == orig(arg0.physicalBitmask.value)
arg0.physicalBitmask.value[] == orig(arg0.physicalBitmask.value[])
arg0.physicalBitmask.all == orig(arg0.physicalBitmask.all)
arg0.physicalBitmask.all[] == orig(arg0.physicalBitmask.all[])
arg0.barrierStateMap == orig(arg0.barrierStateMap)
arg0.barrierStateMap.getClass().getName() == orig(arg0.barrierStateMap.getClass().getName())
arg0.groupJoinStateMap == orig(arg0.groupJoinStateMap)
arg0.groupJoinStateMap.getClass().getName() == orig(arg0.groupJoinStateMap.getClass().getName())
arg0.threadsCounter == orig(arg0.threadsCounter)
arg0.physicalTree == orig(arg0.physicalTree)
arg0.physicalTree.rootNode == orig(arg0.physicalTree.rootNode)
arg0.physicalTree.parentNode == orig(arg0.physicalTree.parentNode)
arg0.physicalTree.childrenNodes == orig(arg0.physicalTree.childrenNodes)
arg0.physicalTree.childrenNodes[] == orig(arg0.physicalTree.childrenNodes[])
arg0.physicalTree.childrenNodes.getClass().getName() == orig(arg0.physicalTree.childrenNodes.getClass().getName())
arg0.myThreadId one of { 0, 1, 2 }
arg0.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsMapping has only one value
arg0.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.joinGroupSynchronizer has only one value
arg0.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
arg0.groupId == 0
arg0.groupName has only one value
arg0.groupName.toString == ""
arg0.localIds has only one value
arg0.localIds[] contains no nulls and has only one value, of length 3
arg0.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.localIds[].getClass().getName() elements == java.lang.Integer.class
arg0.localIds.getClass().getName() == java.util.ArrayList.class
arg0.physicalIds has only one value
arg0.physicalIds[] contains no nulls and has only one value, of length 1
arg0.physicalIds[] elements has only one value
arg0.physicalIds[].getClass().getName() == [java.lang.Integer]
arg0.physicalIds[].getClass().getName() elements == java.lang.Integer.class
arg0.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
arg0.localBitmask has only one value
arg0.localBitmask.length == 3
arg0.localBitmask.value has only one value
arg0.localBitmask.value[] == [7]
arg0.localBitmask.value[] elements == 7
arg0.localBitmask.all has only one value
arg0.localBitmask.all[] == [7]
arg0.localBitmask.all[] elements == 7
arg0.physicalBitmask has only one value
arg0.physicalBitmask.length == 1
arg0.physicalBitmask.value has only one value
arg0.physicalBitmask.value[] == [1]
arg0.physicalBitmask.value[] elements == 1
arg0.physicalBitmask.all has only one value
arg0.physicalBitmask.all[] == [1]
arg0.physicalBitmask.all[] elements == 1
arg0.barrierStateMap has only one value
arg0.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.groupJoinStateMap has only one value
arg0.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.threadsCounter has only one value
arg0.physicalTree has only one value
arg0.physicalTree.rootNode == 0
arg0.physicalTree.parentNode == -1
arg0.physicalTree.childrenNodes has only one value
arg0.physicalTree.childrenNodes[] == []
arg0.physicalTree.childrenNodes[].getClass().getName() == []
arg0.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg0.localIds[]) == 3
size(arg0.physicalIds[]) == 1
size(arg0.localBitmask.value[]) == 1
size(arg0.localBitmask.all[]) == 1
size(arg0.physicalBitmask.value[]) == 1
size(arg0.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.PcjThreadData.getGlobalGroup():::ENTER
===========================================================================
org.pcj.internal.PcjThreadData.getGlobalGroup():::EXIT
this.storages == orig(this.storages)
this.storages.enumToStorageMap == orig(this.storages.enumToStorageMap)
this.storages.enumToStorageMap.getClass().getName() == orig(this.storages.enumToStorageMap.getClass().getName())
this.storages.storageObjectsMap == orig(this.storages.storageObjectsMap)
this.storages.storageObjectsMap.getClass().getName() == orig(this.storages.storageObjectsMap.getClass().getName())
this.storages.sharedObjectsMap == orig(this.storages.sharedObjectsMap)
this.storages.sharedObjectsMap.getClass().getName() == orig(this.storages.sharedObjectsMap.getClass().getName())
this.globalGroup == orig(this.globalGroup)
this.globalGroup.myThreadId == orig(this.globalGroup.myThreadId)
this.globalGroup.barrierRoundCounter == orig(this.globalGroup.barrierRoundCounter)
this.globalGroup.getVariableCounter == orig(this.globalGroup.getVariableCounter)
this.globalGroup.getVariableMap == orig(this.globalGroup.getVariableMap)
this.globalGroup.getVariableMap.getClass().getName() == orig(this.globalGroup.getVariableMap.getClass().getName())
this.globalGroup.putVariableCounter == orig(this.globalGroup.putVariableCounter)
this.globalGroup.putVariableMap == orig(this.globalGroup.putVariableMap)
this.globalGroup.putVariableMap.getClass().getName() == orig(this.globalGroup.putVariableMap.getClass().getName())
this.globalGroup.broadcastCounter == orig(this.globalGroup.broadcastCounter)
this.globalGroup.broadcastStateMap == orig(this.globalGroup.broadcastStateMap)
this.globalGroup.broadcastStateMap.getClass().getName() == orig(this.globalGroup.broadcastStateMap.getClass().getName())
this.globalGroup.peerBarrierStateMap == orig(this.globalGroup.peerBarrierStateMap)
this.globalGroup.peerBarrierStateMap.getClass().getName() == orig(this.globalGroup.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.globalGroup.threadsMapping == orig(this.globalGroup.threadsMapping)
this.globalGroup.threadsMapping.getClass().getName() == orig(this.globalGroup.threadsMapping.getClass().getName())
this.globalGroup.joinGroupSynchronizer == orig(this.globalGroup.joinGroupSynchronizer)
this.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(this.globalGroup.joinGroupSynchronizer.getClass().getName())
this.globalGroup.groupId == orig(this.globalGroup.groupId)
this.globalGroup.groupName == orig(this.globalGroup.groupName)
this.globalGroup.groupName.toString == orig(this.globalGroup.groupName.toString)
this.globalGroup.localIds == orig(this.globalGroup.localIds)
this.globalGroup.localIds[] == orig(this.globalGroup.localIds[])
this.globalGroup.localIds.getClass().getName() == orig(this.globalGroup.localIds.getClass().getName())
this.globalGroup.physicalIds == orig(this.globalGroup.physicalIds)
this.globalGroup.physicalIds[] == orig(this.globalGroup.physicalIds[])
this.globalGroup.physicalIds.getClass().getName() == orig(this.globalGroup.physicalIds.getClass().getName())
this.globalGroup.localBitmask == orig(this.globalGroup.localBitmask)
this.globalGroup.localBitmask.length == orig(this.globalGroup.localBitmask.length)
this.globalGroup.localBitmask.value == orig(this.globalGroup.localBitmask.value)
this.globalGroup.localBitmask.value[] == orig(this.globalGroup.localBitmask.value[])
this.globalGroup.localBitmask.all == orig(this.globalGroup.localBitmask.all)
this.globalGroup.localBitmask.all[] == orig(this.globalGroup.localBitmask.all[])
this.globalGroup.physicalBitmask == orig(this.globalGroup.physicalBitmask)
this.globalGroup.physicalBitmask.length == orig(this.globalGroup.physicalBitmask.length)
this.globalGroup.physicalBitmask.value == orig(this.globalGroup.physicalBitmask.value)
this.globalGroup.physicalBitmask.value[] == orig(this.globalGroup.physicalBitmask.value[])
this.globalGroup.physicalBitmask.all == orig(this.globalGroup.physicalBitmask.all)
this.globalGroup.physicalBitmask.all[] == orig(this.globalGroup.physicalBitmask.all[])
this.globalGroup.barrierStateMap == orig(this.globalGroup.barrierStateMap)
this.globalGroup.barrierStateMap.getClass().getName() == orig(this.globalGroup.barrierStateMap.getClass().getName())
this.globalGroup.groupJoinStateMap == orig(this.globalGroup.groupJoinStateMap)
this.globalGroup.groupJoinStateMap.getClass().getName() == orig(this.globalGroup.groupJoinStateMap.getClass().getName())
this.globalGroup.threadsCounter == orig(this.globalGroup.threadsCounter)
this.globalGroup.physicalTree == orig(this.globalGroup.physicalTree)
this.globalGroup.physicalTree.rootNode == orig(this.globalGroup.physicalTree.rootNode)
this.globalGroup.physicalTree.parentNode == orig(this.globalGroup.physicalTree.parentNode)
this.globalGroup.physicalTree.childrenNodes == orig(this.globalGroup.physicalTree.childrenNodes)
this.globalGroup.physicalTree.childrenNodes[] == orig(this.globalGroup.physicalTree.childrenNodes[])
this.globalGroup.physicalTree.childrenNodes.getClass().getName() == orig(this.globalGroup.physicalTree.childrenNodes.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
return != null
return.getClass().getName() == org.pcj.internal.InternalGroup.class
===========================================================================
org.pcj.internal.PcjThreadData.getGroupById(int):::ENTER
arg0 == 0
===========================================================================
org.pcj.internal.PcjThreadData.getGroupById(int):::EXIT
this.storages == orig(this.storages)
this.storages.enumToStorageMap == orig(this.storages.enumToStorageMap)
this.storages.enumToStorageMap.getClass().getName() == orig(this.storages.enumToStorageMap.getClass().getName())
this.storages.storageObjectsMap == orig(this.storages.storageObjectsMap)
this.storages.storageObjectsMap.getClass().getName() == orig(this.storages.storageObjectsMap.getClass().getName())
this.storages.sharedObjectsMap == orig(this.storages.sharedObjectsMap)
this.storages.sharedObjectsMap.getClass().getName() == orig(this.storages.sharedObjectsMap.getClass().getName())
this.globalGroup == orig(this.globalGroup)
this.globalGroup.myThreadId == orig(this.globalGroup.myThreadId)
this.globalGroup.barrierRoundCounter == orig(this.globalGroup.barrierRoundCounter)
this.globalGroup.getVariableCounter == orig(this.globalGroup.getVariableCounter)
this.globalGroup.getVariableMap == orig(this.globalGroup.getVariableMap)
this.globalGroup.getVariableMap.getClass().getName() == orig(this.globalGroup.getVariableMap.getClass().getName())
this.globalGroup.putVariableCounter == orig(this.globalGroup.putVariableCounter)
this.globalGroup.putVariableMap == orig(this.globalGroup.putVariableMap)
this.globalGroup.putVariableMap.getClass().getName() == orig(this.globalGroup.putVariableMap.getClass().getName())
this.globalGroup.broadcastCounter == orig(this.globalGroup.broadcastCounter)
this.globalGroup.broadcastStateMap == orig(this.globalGroup.broadcastStateMap)
this.globalGroup.broadcastStateMap.getClass().getName() == orig(this.globalGroup.broadcastStateMap.getClass().getName())
this.globalGroup.peerBarrierStateMap == orig(this.globalGroup.peerBarrierStateMap)
this.globalGroup.peerBarrierStateMap.getClass().getName() == orig(this.globalGroup.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.globalGroup.threadsMapping == orig(this.globalGroup.threadsMapping)
this.globalGroup.threadsMapping.getClass().getName() == orig(this.globalGroup.threadsMapping.getClass().getName())
this.globalGroup.joinGroupSynchronizer == orig(this.globalGroup.joinGroupSynchronizer)
this.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(this.globalGroup.joinGroupSynchronizer.getClass().getName())
this.globalGroup.groupId == orig(this.globalGroup.groupId)
this.globalGroup.groupName == orig(this.globalGroup.groupName)
this.globalGroup.groupName.toString == orig(this.globalGroup.groupName.toString)
this.globalGroup.localIds == orig(this.globalGroup.localIds)
this.globalGroup.localIds[] == orig(this.globalGroup.localIds[])
this.globalGroup.localIds.getClass().getName() == orig(this.globalGroup.localIds.getClass().getName())
this.globalGroup.physicalIds == orig(this.globalGroup.physicalIds)
this.globalGroup.physicalIds[] == orig(this.globalGroup.physicalIds[])
this.globalGroup.physicalIds.getClass().getName() == orig(this.globalGroup.physicalIds.getClass().getName())
this.globalGroup.localBitmask == orig(this.globalGroup.localBitmask)
this.globalGroup.localBitmask.length == orig(this.globalGroup.localBitmask.length)
this.globalGroup.localBitmask.value == orig(this.globalGroup.localBitmask.value)
this.globalGroup.localBitmask.value[] == orig(this.globalGroup.localBitmask.value[])
this.globalGroup.localBitmask.all == orig(this.globalGroup.localBitmask.all)
this.globalGroup.localBitmask.all[] == orig(this.globalGroup.localBitmask.all[])
this.globalGroup.physicalBitmask == orig(this.globalGroup.physicalBitmask)
this.globalGroup.physicalBitmask.length == orig(this.globalGroup.physicalBitmask.length)
this.globalGroup.physicalBitmask.value == orig(this.globalGroup.physicalBitmask.value)
this.globalGroup.physicalBitmask.value[] == orig(this.globalGroup.physicalBitmask.value[])
this.globalGroup.physicalBitmask.all == orig(this.globalGroup.physicalBitmask.all)
this.globalGroup.physicalBitmask.all[] == orig(this.globalGroup.physicalBitmask.all[])
this.globalGroup.barrierStateMap == orig(this.globalGroup.barrierStateMap)
this.globalGroup.barrierStateMap.getClass().getName() == orig(this.globalGroup.barrierStateMap.getClass().getName())
this.globalGroup.groupJoinStateMap == orig(this.globalGroup.groupJoinStateMap)
this.globalGroup.groupJoinStateMap.getClass().getName() == orig(this.globalGroup.groupJoinStateMap.getClass().getName())
this.globalGroup.threadsCounter == orig(this.globalGroup.threadsCounter)
this.globalGroup.physicalTree == orig(this.globalGroup.physicalTree)
this.globalGroup.physicalTree.rootNode == orig(this.globalGroup.physicalTree.rootNode)
this.globalGroup.physicalTree.parentNode == orig(this.globalGroup.physicalTree.parentNode)
this.globalGroup.physicalTree.childrenNodes == orig(this.globalGroup.physicalTree.childrenNodes)
this.globalGroup.physicalTree.childrenNodes[] == orig(this.globalGroup.physicalTree.childrenNodes[])
this.globalGroup.physicalTree.childrenNodes.getClass().getName() == orig(this.globalGroup.physicalTree.childrenNodes.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
return.myThreadId one of { 0, 1, 2 }
return.getVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.putVariableMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.broadcastStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.peerBarrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.threadsMapping has only one value
return.threadsMapping.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.joinGroupSynchronizer has only one value
return.joinGroupSynchronizer.getClass().getName() == java.lang.Object.class
return.groupId == 0
return.groupName has only one value
return.groupName.toString == ""
return.localIds has only one value
return.localIds[] contains no nulls and has only one value, of length 3
return.localIds[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer]
return.localIds[].getClass().getName() elements == java.lang.Integer.class
return.localIds.getClass().getName() == java.util.ArrayList.class
return.physicalIds has only one value
return.physicalIds[] contains no nulls and has only one value, of length 1
return.physicalIds[] elements has only one value
return.physicalIds[].getClass().getName() == [java.lang.Integer]
return.physicalIds[].getClass().getName() elements == java.lang.Integer.class
return.physicalIds.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
return.localBitmask has only one value
return.localBitmask.length == 3
return.localBitmask.value has only one value
return.localBitmask.value[] == [7]
return.localBitmask.value[] elements == 7
return.localBitmask.all has only one value
return.localBitmask.all[] == [7]
return.localBitmask.all[] elements == 7
return.physicalBitmask has only one value
return.physicalBitmask.length == 1
return.physicalBitmask.value has only one value
return.physicalBitmask.value[] == [1]
return.physicalBitmask.value[] elements == 1
return.physicalBitmask.all has only one value
return.physicalBitmask.all[] == [1]
return.physicalBitmask.all[] elements == 1
return.barrierStateMap has only one value
return.barrierStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.groupJoinStateMap has only one value
return.groupJoinStateMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.threadsCounter has only one value
return.physicalTree has only one value
return.physicalTree.rootNode == 0
return.physicalTree.parentNode == -1
return.physicalTree.childrenNodes has only one value
return.physicalTree.childrenNodes[] == []
return.physicalTree.childrenNodes[].getClass().getName() == []
return.physicalTree.childrenNodes.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(return.localIds[]) == 3
size(return.physicalIds[]) == 1
size(return.localBitmask.value[]) == 1
size(return.localBitmask.all[]) == 1
size(return.physicalBitmask.value[]) == 1
size(return.physicalBitmask.all[]) == 1
===========================================================================
org.pcj.internal.PcjThreadData.getStorages():::ENTER
===========================================================================
org.pcj.internal.PcjThreadData.getStorages():::EXIT
this.storages == orig(this.storages)
this.storages.enumToStorageMap == orig(this.storages.enumToStorageMap)
this.storages.enumToStorageMap.getClass().getName() == orig(this.storages.enumToStorageMap.getClass().getName())
this.storages.storageObjectsMap == orig(this.storages.storageObjectsMap)
this.storages.storageObjectsMap.getClass().getName() == orig(this.storages.storageObjectsMap.getClass().getName())
this.storages.sharedObjectsMap == orig(this.storages.sharedObjectsMap)
this.storages.sharedObjectsMap.getClass().getName() == orig(this.storages.sharedObjectsMap.getClass().getName())
this.globalGroup == orig(this.globalGroup)
this.globalGroup.myThreadId == orig(this.globalGroup.myThreadId)
this.globalGroup.barrierRoundCounter == orig(this.globalGroup.barrierRoundCounter)
this.globalGroup.getVariableCounter == orig(this.globalGroup.getVariableCounter)
this.globalGroup.getVariableMap == orig(this.globalGroup.getVariableMap)
this.globalGroup.getVariableMap.getClass().getName() == orig(this.globalGroup.getVariableMap.getClass().getName())
this.globalGroup.putVariableCounter == orig(this.globalGroup.putVariableCounter)
this.globalGroup.putVariableMap == orig(this.globalGroup.putVariableMap)
this.globalGroup.putVariableMap.getClass().getName() == orig(this.globalGroup.putVariableMap.getClass().getName())
this.globalGroup.broadcastCounter == orig(this.globalGroup.broadcastCounter)
this.globalGroup.broadcastStateMap == orig(this.globalGroup.broadcastStateMap)
this.globalGroup.broadcastStateMap.getClass().getName() == orig(this.globalGroup.broadcastStateMap.getClass().getName())
this.globalGroup.peerBarrierStateMap == orig(this.globalGroup.peerBarrierStateMap)
this.globalGroup.peerBarrierStateMap.getClass().getName() == orig(this.globalGroup.peerBarrierStateMap.getClass().getName())
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME)
org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString == orig(org.pcj.internal.InternalCommonGroup.GLOBAL_GROUP_NAME.toString)
this.globalGroup.threadsMapping == orig(this.globalGroup.threadsMapping)
this.globalGroup.threadsMapping.getClass().getName() == orig(this.globalGroup.threadsMapping.getClass().getName())
this.globalGroup.joinGroupSynchronizer == orig(this.globalGroup.joinGroupSynchronizer)
this.globalGroup.joinGroupSynchronizer.getClass().getName() == orig(this.globalGroup.joinGroupSynchronizer.getClass().getName())
this.globalGroup.groupId == orig(this.globalGroup.groupId)
this.globalGroup.groupName == orig(this.globalGroup.groupName)
this.globalGroup.groupName.toString == orig(this.globalGroup.groupName.toString)
this.globalGroup.localIds == orig(this.globalGroup.localIds)
this.globalGroup.localIds[] == orig(this.globalGroup.localIds[])
this.globalGroup.localIds.getClass().getName() == orig(this.globalGroup.localIds.getClass().getName())
this.globalGroup.physicalIds == orig(this.globalGroup.physicalIds)
this.globalGroup.physicalIds[] == orig(this.globalGroup.physicalIds[])
this.globalGroup.physicalIds.getClass().getName() == orig(this.globalGroup.physicalIds.getClass().getName())
this.globalGroup.localBitmask == orig(this.globalGroup.localBitmask)
this.globalGroup.localBitmask.length == orig(this.globalGroup.localBitmask.length)
this.globalGroup.localBitmask.value == orig(this.globalGroup.localBitmask.value)
this.globalGroup.localBitmask.value[] == orig(this.globalGroup.localBitmask.value[])
this.globalGroup.localBitmask.all == orig(this.globalGroup.localBitmask.all)
this.globalGroup.localBitmask.all[] == orig(this.globalGroup.localBitmask.all[])
this.globalGroup.physicalBitmask == orig(this.globalGroup.physicalBitmask)
this.globalGroup.physicalBitmask.length == orig(this.globalGroup.physicalBitmask.length)
this.globalGroup.physicalBitmask.value == orig(this.globalGroup.physicalBitmask.value)
this.globalGroup.physicalBitmask.value[] == orig(this.globalGroup.physicalBitmask.value[])
this.globalGroup.physicalBitmask.all == orig(this.globalGroup.physicalBitmask.all)
this.globalGroup.physicalBitmask.all[] == orig(this.globalGroup.physicalBitmask.all[])
this.globalGroup.barrierStateMap == orig(this.globalGroup.barrierStateMap)
this.globalGroup.barrierStateMap.getClass().getName() == orig(this.globalGroup.barrierStateMap.getClass().getName())
this.globalGroup.groupJoinStateMap == orig(this.globalGroup.groupJoinStateMap)
this.globalGroup.groupJoinStateMap.getClass().getName() == orig(this.globalGroup.groupJoinStateMap.getClass().getName())
this.globalGroup.threadsCounter == orig(this.globalGroup.threadsCounter)
this.globalGroup.physicalTree == orig(this.globalGroup.physicalTree)
this.globalGroup.physicalTree.rootNode == orig(this.globalGroup.physicalTree.rootNode)
this.globalGroup.physicalTree.parentNode == orig(this.globalGroup.physicalTree.parentNode)
this.globalGroup.physicalTree.childrenNodes == orig(this.globalGroup.physicalTree.childrenNodes)
this.globalGroup.physicalTree.childrenNodes[] == orig(this.globalGroup.physicalTree.childrenNodes[])
this.globalGroup.physicalTree.childrenNodes.getClass().getName() == orig(this.globalGroup.physicalTree.childrenNodes.getClass().getName())
this.groupById == orig(this.groupById)
this.groupById.getClass().getName() == orig(this.groupById.getClass().getName())
return != null
return.enumToStorageMap != null
return.enumToStorageMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.storageObjectsMap != null
return.storageObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
return.sharedObjectsMap != null
return.sharedObjectsMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.PrimitiveTypes:::CLASS
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES has only one value
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES != null
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName() == java.util.Collections$UnmodifiableSet.class
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP has only one value
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP != null
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName() == java.util.HashMap.class
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP has only one value
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP != null
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName() == java.util.HashMap.class
===========================================================================
org.pcj.internal.PrimitiveTypes.convert(java.lang.Class, java.lang.Object):::ENTER
===========================================================================
org.pcj.internal.PrimitiveTypes.convert(java.lang.Class, java.lang.Object):::EXIT76
===========================================================================
org.pcj.internal.PrimitiveTypes.convert(java.lang.Class, java.lang.Object):::EXIT
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES)
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName())
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP)
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName())
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP)
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName())
===========================================================================
org.pcj.internal.PrimitiveTypes.convertToDouble(java.lang.Object):::ENTER
arg0.getClass().getName() == java.lang.Double.class
===========================================================================
org.pcj.internal.PrimitiveTypes.convertToDouble(java.lang.Object):::EXIT93
===========================================================================
org.pcj.internal.PrimitiveTypes.convertToDouble(java.lang.Object):::EXIT
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES)
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName())
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP)
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName())
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP)
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName())
return == 2.0
===========================================================================
org.pcj.internal.PrimitiveTypes.convertToInt(java.lang.Object):::ENTER
arg0.getClass().getName() == java.lang.Integer.class
===========================================================================
org.pcj.internal.PrimitiveTypes.convertToInt(java.lang.Object):::EXIT144
===========================================================================
org.pcj.internal.PrimitiveTypes.convertToInt(java.lang.Object):::EXIT
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES)
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName())
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP)
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName())
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP)
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName())
return one of { 1, 2, 3 }
===========================================================================
org.pcj.internal.PrimitiveTypes.isBoxedClass(java.lang.Class):::ENTER
===========================================================================
org.pcj.internal.PrimitiveTypes.isBoxedClass(java.lang.Class):::EXIT
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES)
org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.BOXED_PRIMITIVES.getClass().getName())
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP)
org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.CONVERSION_MAP.getClass().getName())
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP)
org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName() == orig(org.pcj.internal.PrimitiveTypes.DEFAULT_VALUE_MAP.getClass().getName())
return == true
===========================================================================
org.pcj.internal.PrimitiveTypes.isBoxedClass(java.lang.Class):::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.futures.BroadcastState:::OBJECT
this has only one value
this.exceptions has only one value
this.exceptions != null
this.exceptions.getClass().getName() == java.util.concurrent.ConcurrentLinkedDeque.class
this.physicalBarrierBitmask has only one value
this.physicalBarrierBitmask != null
this.physicalBarrierBitmask.length == 1
this.physicalBarrierBitmask.value has only one value
this.physicalBarrierBitmask.value != null
this.physicalBarrierBitmask.value[] elements one of { 0, 1 }
this.physicalBarrierBitmask.value[] one of { [0], [1] }
this.physicalBarrierBitmask.all has only one value
this.physicalBarrierBitmask.all != null
this.physicalBarrierBitmask.all[] == [1]
this.physicalBarrierBitmask.all[] elements == 1
this.physicalBarrierMaskBitmask has only one value
this.physicalBarrierMaskBitmask != null
this.physicalBarrierMaskBitmask.length == 1
this.physicalBarrierMaskBitmask.value has only one value
this.physicalBarrierMaskBitmask.value != null
this.physicalBarrierMaskBitmask.value[] == [1]
this.physicalBarrierMaskBitmask.value[] elements == 1
this.physicalBarrierMaskBitmask.all has only one value
this.physicalBarrierMaskBitmask.all != null
this.physicalBarrierMaskBitmask.all[] == [1]
this.physicalBarrierMaskBitmask.all[] elements == 1
this.exception == null
this.lock has only one value
this.lock != null
this.lock.getClass().getName() == java.lang.Object.class
size(this.physicalBarrierBitmask.value[]) == 1
size(this.physicalBarrierBitmask.all[]) == 1
size(this.physicalBarrierMaskBitmask.value[]) == 1
size(this.physicalBarrierMaskBitmask.all[]) == 1
===========================================================================
org.pcj.internal.futures.BroadcastState.BroadcastState(org.pcj.internal.Bitmask):::ENTER
arg0 has only one value
arg0.length == 1
arg0.value has only one value
arg0.value[] == [1]
arg0.value[] elements == 1
arg0.all has only one value
arg0.all[] == [1]
arg0.all[] elements == 1
size(arg0.value[]) == 1
size(arg0.all[]) == 1
===========================================================================
org.pcj.internal.futures.BroadcastState.BroadcastState(org.pcj.internal.Bitmask):::EXIT
arg0.length == orig(arg0.length)
arg0.value == orig(arg0.value)
arg0.value[] == orig(arg0.value[])
arg0.all == orig(arg0.all)
arg0.all[] == orig(arg0.all[])
this.physicalBarrierBitmask.value[] == [0]
this.physicalBarrierBitmask.value[] elements == 0
this.signaled == false
arg0.length == 1
arg0.value has only one value
arg0.value[] == [1]
arg0.value[] elements == 1
arg0.all has only one value
arg0.all[] == [1]
arg0.all[] elements == 1
size(arg0.value[]) == 1
size(arg0.all[]) == 1
===========================================================================
org.pcj.internal.futures.BroadcastState.get():::ENTER
this.physicalBarrierBitmask.value[] == [0]
this.physicalBarrierBitmask.value[] elements == 0
this.signaled == false
===========================================================================
org.pcj.internal.futures.BroadcastState.get():::EXIT
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
this.physicalBarrierBitmask == orig(this.physicalBarrierBitmask)
this.physicalBarrierBitmask.length == orig(this.physicalBarrierBitmask.length)
this.physicalBarrierBitmask.value == orig(this.physicalBarrierBitmask.value)
this.physicalBarrierBitmask.all == orig(this.physicalBarrierBitmask.all)
this.physicalBarrierBitmask.all[] == orig(this.physicalBarrierBitmask.all[])
this.physicalBarrierMaskBitmask == orig(this.physicalBarrierMaskBitmask)
this.physicalBarrierMaskBitmask.length == orig(this.physicalBarrierMaskBitmask.length)
this.physicalBarrierMaskBitmask.value == orig(this.physicalBarrierMaskBitmask.value)
this.physicalBarrierMaskBitmask.value[] == orig(this.physicalBarrierMaskBitmask.value[])
this.physicalBarrierMaskBitmask.all == orig(this.physicalBarrierMaskBitmask.all)
this.physicalBarrierMaskBitmask.all[] == orig(this.physicalBarrierMaskBitmask.all[])
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
size(this.physicalBarrierBitmask.value[]) == orig(size(this.physicalBarrierBitmask.value[]))
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == true
return == null
===========================================================================
org.pcj.internal.futures.BroadcastState.isExceptionOccurs():::ENTER
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
===========================================================================
org.pcj.internal.futures.BroadcastState.isExceptionOccurs():::EXIT
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
this.physicalBarrierBitmask == orig(this.physicalBarrierBitmask)
this.physicalBarrierBitmask.length == orig(this.physicalBarrierBitmask.length)
this.physicalBarrierBitmask.value == orig(this.physicalBarrierBitmask.value)
this.physicalBarrierBitmask.value[] == orig(this.physicalBarrierBitmask.value[])
this.physicalBarrierBitmask.all == orig(this.physicalBarrierBitmask.all)
this.physicalBarrierBitmask.all[] == orig(this.physicalBarrierBitmask.all[])
this.physicalBarrierMaskBitmask == orig(this.physicalBarrierMaskBitmask)
this.physicalBarrierMaskBitmask.length == orig(this.physicalBarrierMaskBitmask.length)
this.physicalBarrierMaskBitmask.value == orig(this.physicalBarrierMaskBitmask.value)
this.physicalBarrierMaskBitmask.value[] == orig(this.physicalBarrierMaskBitmask.value[])
this.physicalBarrierMaskBitmask.all == orig(this.physicalBarrierMaskBitmask.all)
this.physicalBarrierMaskBitmask.all[] == orig(this.physicalBarrierMaskBitmask.all[])
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
return == false
===========================================================================
org.pcj.internal.futures.BroadcastState.isExceptionOccurs():::EXIT;condition="not(return == true)"
===========================================================================
org.pcj.internal.futures.BroadcastState.isPhysicalSet():::ENTER
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
===========================================================================
org.pcj.internal.futures.BroadcastState.isPhysicalSet():::EXIT
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
this.physicalBarrierBitmask == orig(this.physicalBarrierBitmask)
this.physicalBarrierBitmask.length == orig(this.physicalBarrierBitmask.length)
this.physicalBarrierBitmask.value == orig(this.physicalBarrierBitmask.value)
this.physicalBarrierBitmask.value[] == orig(this.physicalBarrierBitmask.value[])
this.physicalBarrierBitmask.all == orig(this.physicalBarrierBitmask.all)
this.physicalBarrierBitmask.all[] == orig(this.physicalBarrierBitmask.all[])
this.physicalBarrierMaskBitmask == orig(this.physicalBarrierMaskBitmask)
this.physicalBarrierMaskBitmask.length == orig(this.physicalBarrierMaskBitmask.length)
this.physicalBarrierMaskBitmask.value == orig(this.physicalBarrierMaskBitmask.value)
this.physicalBarrierMaskBitmask.value[] == orig(this.physicalBarrierMaskBitmask.value[])
this.physicalBarrierMaskBitmask.all == orig(this.physicalBarrierMaskBitmask.all)
this.physicalBarrierMaskBitmask.all[] == orig(this.physicalBarrierMaskBitmask.all[])
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
return == true
===========================================================================
org.pcj.internal.futures.BroadcastState.isPhysicalSet():::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.futures.BroadcastState.processPhysical(int):::ENTER
this.physicalBarrierBitmask.value[] == [0]
this.physicalBarrierBitmask.value[] elements == 0
this.signaled == false
arg0 == 0
===========================================================================
org.pcj.internal.futures.BroadcastState.processPhysical(int):::EXIT
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
this.physicalBarrierBitmask == orig(this.physicalBarrierBitmask)
this.physicalBarrierBitmask.length == orig(this.physicalBarrierBitmask.length)
this.physicalBarrierBitmask.value == orig(this.physicalBarrierBitmask.value)
this.physicalBarrierBitmask.all == orig(this.physicalBarrierBitmask.all)
this.physicalBarrierBitmask.all[] == orig(this.physicalBarrierBitmask.all[])
this.physicalBarrierMaskBitmask == orig(this.physicalBarrierMaskBitmask)
this.physicalBarrierMaskBitmask.length == orig(this.physicalBarrierMaskBitmask.length)
this.physicalBarrierMaskBitmask.value == orig(this.physicalBarrierMaskBitmask.value)
this.physicalBarrierMaskBitmask.value[] == orig(this.physicalBarrierMaskBitmask.value[])
this.physicalBarrierMaskBitmask.all == orig(this.physicalBarrierMaskBitmask.all)
this.physicalBarrierMaskBitmask.all[] == orig(this.physicalBarrierMaskBitmask.all[])
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
size(this.physicalBarrierBitmask.value[]) == orig(size(this.physicalBarrierBitmask.value[]))
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
return == true
===========================================================================
org.pcj.internal.futures.BroadcastState.processPhysical(int):::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.futures.BroadcastState.setPhysical(int):::ENTER
this.physicalBarrierBitmask.value[] == [0]
this.physicalBarrierBitmask.value[] elements == 0
this.signaled == false
arg0 == 0
===========================================================================
org.pcj.internal.futures.BroadcastState.setPhysical(int):::EXIT
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
this.physicalBarrierBitmask == orig(this.physicalBarrierBitmask)
this.physicalBarrierBitmask.length == orig(this.physicalBarrierBitmask.length)
this.physicalBarrierBitmask.value == orig(this.physicalBarrierBitmask.value)
this.physicalBarrierBitmask.all == orig(this.physicalBarrierBitmask.all)
this.physicalBarrierBitmask.all[] == orig(this.physicalBarrierBitmask.all[])
this.physicalBarrierMaskBitmask == orig(this.physicalBarrierMaskBitmask)
this.physicalBarrierMaskBitmask.length == orig(this.physicalBarrierMaskBitmask.length)
this.physicalBarrierMaskBitmask.value == orig(this.physicalBarrierMaskBitmask.value)
this.physicalBarrierMaskBitmask.value[] == orig(this.physicalBarrierMaskBitmask.value[])
this.physicalBarrierMaskBitmask.all == orig(this.physicalBarrierMaskBitmask.all)
this.physicalBarrierMaskBitmask.all[] == orig(this.physicalBarrierMaskBitmask.all[])
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
size(this.physicalBarrierBitmask.value[]) == orig(size(this.physicalBarrierBitmask.value[]))
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
===========================================================================
org.pcj.internal.futures.BroadcastState.signalDone():::ENTER
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == false
===========================================================================
org.pcj.internal.futures.BroadcastState.signalDone():::EXIT
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
this.physicalBarrierBitmask == orig(this.physicalBarrierBitmask)
this.physicalBarrierBitmask.length == orig(this.physicalBarrierBitmask.length)
this.physicalBarrierBitmask.value == orig(this.physicalBarrierBitmask.value)
this.physicalBarrierBitmask.value[] == orig(this.physicalBarrierBitmask.value[])
this.physicalBarrierBitmask.all == orig(this.physicalBarrierBitmask.all)
this.physicalBarrierBitmask.all[] == orig(this.physicalBarrierBitmask.all[])
this.physicalBarrierMaskBitmask == orig(this.physicalBarrierMaskBitmask)
this.physicalBarrierMaskBitmask.length == orig(this.physicalBarrierMaskBitmask.length)
this.physicalBarrierMaskBitmask.value == orig(this.physicalBarrierMaskBitmask.value)
this.physicalBarrierMaskBitmask.value[] == orig(this.physicalBarrierMaskBitmask.value[])
this.physicalBarrierMaskBitmask.all == orig(this.physicalBarrierMaskBitmask.all)
this.physicalBarrierMaskBitmask.all[] == orig(this.physicalBarrierMaskBitmask.all[])
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.physicalBarrierBitmask.value[] == [1]
this.physicalBarrierBitmask.value[] elements == 1
this.signaled == true
===========================================================================
org.pcj.internal.futures.GroupBarrierState:::OBJECT
this.groupId == 0
this.barrierRound >= 1
this.childrenSet != null
this.childrenSet.getClass().getName() == java.util.concurrent.ConcurrentHashMap$KeySetView.class
this.localBarrierBitmask != null
this.localBarrierBitmask.length == 3
this.localBarrierBitmask.value != null
this.localBarrierBitmask.value[] elements >= 0
this.localBarrierBitmask.all != null
this.localBarrierBitmask.all[] == [7]
this.localBarrierBitmask.all[] elements == 7
this.localBarrierMaskBitmask != null
this.localBarrierMaskBitmask.length == 3
this.localBarrierMaskBitmask.value != null
this.localBarrierMaskBitmask.value[] == [7]
this.localBarrierMaskBitmask.value[] elements == 7
this.localBarrierMaskBitmask.all != null
this.localBarrierMaskBitmask.all[] == [7]
this.localBarrierMaskBitmask.all[] elements == 7
this.lock != null
this.lock.getClass().getName() == java.lang.Object.class
size(this.localBarrierBitmask.value[]) == 1
size(this.localBarrierBitmask.all[]) == 1
size(this.localBarrierMaskBitmask.value[]) == 1
size(this.localBarrierMaskBitmask.all[]) == 1
===========================================================================
org.pcj.internal.futures.GroupBarrierState.GroupBarrierState(int, int, org.pcj.internal.Bitmask, java.util.List):::ENTER
arg0 == 0
arg2 has only one value
arg2.length == 3
arg2.value has only one value
arg2.value[] == [7]
arg2.value[] elements == 7
arg2.all has only one value
arg2.all[] == [7]
arg2.all[] elements == 7
arg3 has only one value
arg3[] == []
arg3[].getClass().getName() == []
arg3.getClass().getName() == java.util.concurrent.CopyOnWriteArrayList.class
size(arg2.value[]) == 1
size(arg2.all[]) == 1
===========================================================================
org.pcj.internal.futures.GroupBarrierState.GroupBarrierState(int, int, org.pcj.internal.Bitmask, java.util.List):::EXIT
arg2.length == orig(arg2.length)
arg2.value == orig(arg2.value)
arg2.value[] == orig(arg2.value[])
arg2.all == orig(arg2.all)
arg2.all[] == orig(arg2.all[])
arg3[] == orig(arg3[])
this.localBarrierBitmask.value[] == [0]
this.localBarrierBitmask.value[] elements == 0
this.signaled == false
arg2.length == 3
arg2.value has only one value
arg2.value[] == [7]
arg2.value[] elements == 7
arg2.all has only one value
arg2.all[] == [7]
arg2.all[] elements == 7
arg3[] == []
arg3[].getClass().getName() == []
size(arg2.value[]) == 1
size(arg2.all[]) == 1
===========================================================================
org.pcj.internal.futures.GroupBarrierState.get():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.get():::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
size(this.localBarrierBitmask.value[]) == orig(size(this.localBarrierBitmask.value[]))
this.localBarrierBitmask.value[] == [7]
this.localBarrierBitmask.value[] elements == 7
this.signaled == true
return == null
this.localBarrierBitmask.value[] >= orig(this.localBarrierBitmask.value[]) (elementwise)
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isLocalSet():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isLocalSet():::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.value[] == orig(this.localBarrierBitmask.value[])
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
(return == true)  ==>  (this.localBarrierBitmask.value[] == [7])
(return == true)  ==>  (this.localBarrierBitmask.value[] elements == 7)
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isLocalSet():::EXIT;condition="return == true"
this.localBarrierBitmask.value[] == [7]
this.localBarrierBitmask.value[] elements == 7
return == true
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isLocalSet():::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isPhysicalSet():::ENTER
this.localBarrierBitmask.value[] == [7]
this.localBarrierBitmask.value[] elements == 7
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isPhysicalSet():::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.value[] == orig(this.localBarrierBitmask.value[])
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
this.localBarrierBitmask.value[] == [7]
this.localBarrierBitmask.value[] elements == 7
this.signaled == false
return == true
===========================================================================
org.pcj.internal.futures.GroupBarrierState.isPhysicalSet():::EXIT;condition="return == true"
===========================================================================
org.pcj.internal.futures.GroupBarrierState.process():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.process():::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.value[] == orig(this.localBarrierBitmask.value[])
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.processLocal(int):::ENTER
this.signaled == false
arg0 one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.futures.GroupBarrierState.processLocal(int):::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
size(this.localBarrierBitmask.value[]) == orig(size(this.localBarrierBitmask.value[]))
this.signaled == false
this.localBarrierBitmask.value[] > orig(this.localBarrierBitmask.value[]) (elementwise)
===========================================================================
org.pcj.internal.futures.GroupBarrierState.setLocal(int):::ENTER
this.signaled == false
arg0 one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.futures.GroupBarrierState.setLocal(int):::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == orig(this.signaled)
size(this.localBarrierBitmask.value[]) == orig(size(this.localBarrierBitmask.value[]))
this.signaled == false
this.localBarrierBitmask.value[] > orig(this.localBarrierBitmask.value[]) (elementwise)
===========================================================================
org.pcj.internal.futures.GroupBarrierState.signalDone():::ENTER
this.localBarrierBitmask.value[] == [7]
this.localBarrierBitmask.value[] elements == 7
this.signaled == false
===========================================================================
org.pcj.internal.futures.GroupBarrierState.signalDone():::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
this.childrenSet == orig(this.childrenSet)
this.childrenSet.getClass().getName() == orig(this.childrenSet.getClass().getName())
this.localBarrierBitmask == orig(this.localBarrierBitmask)
this.localBarrierBitmask.length == orig(this.localBarrierBitmask.length)
this.localBarrierBitmask.value == orig(this.localBarrierBitmask.value)
this.localBarrierBitmask.value[] == orig(this.localBarrierBitmask.value[])
this.localBarrierBitmask.all == orig(this.localBarrierBitmask.all)
this.localBarrierBitmask.all[] == orig(this.localBarrierBitmask.all[])
this.localBarrierMaskBitmask == orig(this.localBarrierMaskBitmask)
this.localBarrierMaskBitmask.length == orig(this.localBarrierMaskBitmask.length)
this.localBarrierMaskBitmask.value == orig(this.localBarrierMaskBitmask.value)
this.localBarrierMaskBitmask.value[] == orig(this.localBarrierMaskBitmask.value[])
this.localBarrierMaskBitmask.all == orig(this.localBarrierMaskBitmask.all)
this.localBarrierMaskBitmask.all[] == orig(this.localBarrierMaskBitmask.all[])
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.localBarrierBitmask.value[] == [7]
this.localBarrierBitmask.value[] elements == 7
this.signaled == true
===========================================================================
org.pcj.internal.futures.InternalFuture:::OBJECT
this.lock != null
this.lock.getClass().getName() == java.lang.Object.class
===========================================================================
org.pcj.internal.futures.InternalFuture.InternalFuture():::EXIT
this.signaled == false
===========================================================================
org.pcj.internal.futures.InternalFuture.await():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.InternalFuture.await():::EXIT
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == true
===========================================================================
org.pcj.internal.futures.InternalFuture.signalDone():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.InternalFuture.signalDone():::EXIT
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == true
===========================================================================
org.pcj.internal.futures.PutVariable:::OBJECT
this.exception == null
this.lock != null
this.lock.getClass().getName() == java.lang.Object.class
===========================================================================
org.pcj.internal.futures.PutVariable.PutVariable():::EXIT
this.signaled == false
===========================================================================
org.pcj.internal.futures.PutVariable.get():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.PutVariable.get():::EXIT
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == true
return == null
===========================================================================
org.pcj.internal.futures.PutVariable.signalDone():::ENTER
this.signaled == false
===========================================================================
org.pcj.internal.futures.PutVariable.signalDone():::EXIT
this.exception == orig(this.exception)
this.lock == orig(this.lock)
this.lock.getClass().getName() == orig(this.lock.getClass().getName())
this.signaled == true
===========================================================================
org.pcj.internal.futures.WaitObject:::OBJECT
this has only one value
this.round one of { 0, 1, 2 }
this.lock has only one value
this.lock != null
this.condition has only one value
this.condition != null
this.condition.getClass().getName() == java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.class
===========================================================================
org.pcj.internal.futures.WaitObject.WaitObject():::EXIT
this.round == 0
===========================================================================
org.pcj.internal.futures.WaitObject.await():::ENTER
this.round one of { 0, 1 }
===========================================================================
org.pcj.internal.futures.WaitObject.await():::EXIT
this.lock == orig(this.lock)
this.condition == orig(this.condition)
this.condition.getClass().getName() == orig(this.condition.getClass().getName())
this.round one of { 1, 2 }
===========================================================================
org.pcj.internal.futures.WaitObject.lock():::ENTER
this.round one of { 0, 1 }
===========================================================================
org.pcj.internal.futures.WaitObject.lock():::EXIT
this.round == orig(this.round)
this.lock == orig(this.lock)
this.condition == orig(this.condition)
this.condition.getClass().getName() == orig(this.condition.getClass().getName())
this.round one of { 0, 1 }
===========================================================================
org.pcj.internal.futures.WaitObject.nextRound():::ENTER
this.round one of { 0, 1 }
===========================================================================
org.pcj.internal.futures.WaitObject.nextRound():::EXIT
this.lock == orig(this.lock)
this.condition == orig(this.condition)
this.condition.getClass().getName() == orig(this.condition.getClass().getName())
this.round one of { 1, 2 }
===========================================================================
org.pcj.internal.futures.WaitObject.signal():::ENTER
this.round one of { 0, 1 }
===========================================================================
org.pcj.internal.futures.WaitObject.signal():::EXIT
this.lock == orig(this.lock)
this.condition == orig(this.condition)
this.condition.getClass().getName() == orig(this.condition.getClass().getName())
this.round one of { 1, 2 }
===========================================================================
org.pcj.internal.futures.WaitObject.unlock():::ENTER
this.round one of { 1, 2 }
===========================================================================
org.pcj.internal.futures.WaitObject.unlock():::EXIT
this.round == orig(this.round)
this.lock == orig(this.lock)
this.condition == orig(this.condition)
this.condition.getClass().getName() == orig(this.condition.getClass().getName())
this.round one of { 1, 2 }
===========================================================================
org.pcj.internal.message.Message:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
===========================================================================
org.pcj.internal.message.Message:::OBJECT
this.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.Message.Message(org.pcj.internal.message.MessageType):::ENTER
arg0 != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.Message.Message(org.pcj.internal.message.MessageType):::EXIT
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
arg0.id == orig(arg0.id)
===========================================================================
org.pcj.internal.message.MessageBye:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageBye:::OBJECT
this has only one value
this.physicalId == 0
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 6
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageBye.MessageBye():::EXIT
===========================================================================
org.pcj.internal.message.MessageBye.MessageBye(int):::ENTER
arg0 == 0
===========================================================================
org.pcj.internal.message.MessageBye.MessageBye(int):::EXIT
===========================================================================
org.pcj.internal.message.MessageBye.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageBye.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.physicalId == orig(this.physicalId)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageBye.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageBye.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.physicalId == orig(this.physicalId)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageByeCompleted:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageByeCompleted:::OBJECT
this has only one value
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 7
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageByeCompleted.MessageByeCompleted():::EXIT
===========================================================================
org.pcj.internal.message.MessageByeCompleted.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageByeCompleted.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageByeCompleted.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageByeCompleted.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo:::OBJECT
this.groupId == 0
this.barrierRound >= 0
this.type has only one value
this.type != null
this.type.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 11
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.MessageGroupBarrierGo():::EXIT
this.barrierRound == 0
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.MessageGroupBarrierGo(int, int):::ENTER
arg0 == 0
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.MessageGroupBarrierGo(int, int):::EXIT
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageGroupBarrierGo.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.groupId == orig(this.groupId)
this.barrierRound == orig(this.barrierRound)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHello:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageHello:::OBJECT
this has only one value
this.port one of { 0, 8091 }
this.threadIds[] == [0, 1, 2]
this.threadIds[] elements one of { 0, 1, 2 }
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 1
size(this.threadIds[]) == 3
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageHello.MessageHello():::EXIT
this.port == 0
this.threadIds == null
===========================================================================
org.pcj.internal.message.MessageHello.MessageHello(int, int[]):::ENTER
arg0 == 8091
arg1 has only one value
arg1[] == [0, 1, 2]
arg1[] elements one of { 0, 1, 2 }
size(arg1[]) == 3
===========================================================================
org.pcj.internal.message.MessageHello.MessageHello(int, int[]):::EXIT
arg1[] == orig(arg1[])
this.port == 8091
this.threadIds has only one value
arg1[] == [0, 1, 2]
arg1[] elements one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.message.MessageHello.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
this.port == 8091
this.threadIds has only one value
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHello.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.port == orig(this.port)
this.threadIds[] == orig(this.threadIds[])
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
this.port == 8091
this.threadIds has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHello.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
this.port == 8091
this.threadIds has only one value
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHello.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.port == orig(this.port)
this.threadIds == orig(this.threadIds)
this.threadIds[] == orig(this.threadIds[])
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
this.port == 8091
this.threadIds has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloCompleted:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageHelloCompleted:::OBJECT
this has only one value
this.physicalId == 0
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 4
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.MessageHelloCompleted():::EXIT
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.MessageHelloCompleted(int):::ENTER
arg0 == 0
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.MessageHelloCompleted(int):::EXIT
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.physicalId == orig(this.physicalId)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloCompleted.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.physicalId == orig(this.physicalId)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloGo:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageHelloGo:::OBJECT
this has only one value
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 5
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageHelloGo.MessageHelloGo():::EXIT
===========================================================================
org.pcj.internal.message.MessageHelloGo.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloGo.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloGo.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloGo.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloInform:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageHelloInform:::OBJECT
this has only one value
this.physicalId == 0
this.nodeInfoByPhysicalId.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 2
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageHelloInform.MessageHelloInform():::EXIT
this.nodeInfoByPhysicalId == null
===========================================================================
org.pcj.internal.message.MessageHelloInform.MessageHelloInform(int, java.util.Map):::ENTER
arg0 == 0
arg1 has only one value
arg1.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.pcj.internal.message.MessageHelloInform.MessageHelloInform(int, java.util.Map):::EXIT
this.nodeInfoByPhysicalId has only one value
===========================================================================
org.pcj.internal.message.MessageHelloInform.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
this.nodeInfoByPhysicalId has only one value
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloInform.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.physicalId == orig(this.physicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
this.nodeInfoByPhysicalId has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream has only one value
===========================================================================
org.pcj.internal.message.MessageHelloInform.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
this.nodeInfoByPhysicalId has only one value
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageHelloInform.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.physicalId == orig(this.physicalId)
this.nodeInfoByPhysicalId == orig(this.nodeInfoByPhysicalId)
this.nodeInfoByPhysicalId.getClass().getName() == orig(this.nodeInfoByPhysicalId.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
this.nodeInfoByPhysicalId has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream has only one value
===========================================================================
org.pcj.internal.message.MessageType$1:::OBJECT
this has only one value
this.id == 1
===========================================================================
org.pcj.internal.message.MessageType$10:::OBJECT
this has only one value
this.id == 12
===========================================================================
org.pcj.internal.message.MessageType$10.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "PEER_BARRIER"
arg1 == 9
arg2 == 12
===========================================================================
org.pcj.internal.message.MessageType$10.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "PEER_BARRIER"
===========================================================================
org.pcj.internal.message.MessageType$11:::OBJECT
this has only one value
this.id == 20
===========================================================================
org.pcj.internal.message.MessageType$11.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_JOIN_QUERY"
arg1 == 10
arg2 == 20
===========================================================================
org.pcj.internal.message.MessageType$11.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_JOIN_QUERY"
===========================================================================
org.pcj.internal.message.MessageType$12:::OBJECT
this has only one value
this.id == 21
===========================================================================
org.pcj.internal.message.MessageType$12.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_JOIN_ANSWER"
arg1 == 11
arg2 == 21
===========================================================================
org.pcj.internal.message.MessageType$12.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_JOIN_ANSWER"
===========================================================================
org.pcj.internal.message.MessageType$13:::OBJECT
this has only one value
this.id == 22
===========================================================================
org.pcj.internal.message.MessageType$13.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_JOIN_REQUEST"
arg1 == 12
arg2 == 22
===========================================================================
org.pcj.internal.message.MessageType$13.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_JOIN_REQUEST"
===========================================================================
org.pcj.internal.message.MessageType$14:::OBJECT
this has only one value
this.id == 23
===========================================================================
org.pcj.internal.message.MessageType$14.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_JOIN_INFORM"
arg1 == 13
arg2 == 23
===========================================================================
org.pcj.internal.message.MessageType$14.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_JOIN_INFORM"
===========================================================================
org.pcj.internal.message.MessageType$15:::OBJECT
this has only one value
this.id == 24
===========================================================================
org.pcj.internal.message.MessageType$15.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_JOIN_CONFIRM"
arg1 == 14
arg2 == 24
===========================================================================
org.pcj.internal.message.MessageType$15.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_JOIN_CONFIRM"
===========================================================================
org.pcj.internal.message.MessageType$16:::OBJECT
this has only one value
this.id == 25
===========================================================================
org.pcj.internal.message.MessageType$16.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_JOIN_RESPONSE"
arg1 == 15
arg2 == 25
===========================================================================
org.pcj.internal.message.MessageType$16.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_JOIN_RESPONSE"
===========================================================================
org.pcj.internal.message.MessageType$17:::OBJECT
this has only one value
this.id == 30
===========================================================================
org.pcj.internal.message.MessageType$17.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_GET_REQUEST"
arg1 == 16
arg2 == 30
===========================================================================
org.pcj.internal.message.MessageType$17.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_GET_REQUEST"
===========================================================================
org.pcj.internal.message.MessageType$18:::OBJECT
this has only one value
this.id == 31
===========================================================================
org.pcj.internal.message.MessageType$18.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_GET_RESPONSE"
arg1 == 17
arg2 == 31
===========================================================================
org.pcj.internal.message.MessageType$18.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_GET_RESPONSE"
===========================================================================
org.pcj.internal.message.MessageType$19:::OBJECT
this has only one value
this.id == 32
===========================================================================
org.pcj.internal.message.MessageType$19.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_PUT_REQUEST"
arg1 == 18
arg2 == 32
===========================================================================
org.pcj.internal.message.MessageType$19.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_PUT_REQUEST"
===========================================================================
org.pcj.internal.message.MessageType$1.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "HELLO"
arg1 == 0
arg2 == 1
===========================================================================
org.pcj.internal.message.MessageType$1.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "HELLO"
===========================================================================
org.pcj.internal.message.MessageType$2:::OBJECT
this has only one value
this.id == 2
===========================================================================
org.pcj.internal.message.MessageType$20:::OBJECT
this has only one value
this.id == 33
===========================================================================
org.pcj.internal.message.MessageType$20.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_PUT_RESPONSE"
arg1 == 19
arg2 == 33
===========================================================================
org.pcj.internal.message.MessageType$20.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_PUT_RESPONSE"
===========================================================================
org.pcj.internal.message.MessageType$21:::OBJECT
this has only one value
this.id == 34
===========================================================================
org.pcj.internal.message.MessageType$21.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_BROADCAST_REQUEST"
arg1 == 20
arg2 == 34
===========================================================================
org.pcj.internal.message.MessageType$21.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_BROADCAST_REQUEST"
===========================================================================
org.pcj.internal.message.MessageType$22:::OBJECT
this has only one value
this.id == 35
===========================================================================
org.pcj.internal.message.MessageType$22.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_BROADCAST_BYTES"
arg1 == 21
arg2 == 35
===========================================================================
org.pcj.internal.message.MessageType$22.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_BROADCAST_BYTES"
===========================================================================
org.pcj.internal.message.MessageType$23:::OBJECT
this has only one value
this.id == 36
===========================================================================
org.pcj.internal.message.MessageType$23.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "VALUE_BROADCAST_INFORM"
arg1 == 22
arg2 == 36
===========================================================================
org.pcj.internal.message.MessageType$23.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "VALUE_BROADCAST_INFORM"
===========================================================================
org.pcj.internal.message.MessageType$24:::OBJECT
this has only one value
this.id == -1
===========================================================================
org.pcj.internal.message.MessageType$24.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "UNKNOWN"
arg1 == 23
arg2 == -1
===========================================================================
org.pcj.internal.message.MessageType$24.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "UNKNOWN"
===========================================================================
org.pcj.internal.message.MessageType$2.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "HELLO_INFORM"
arg1 == 1
arg2 == 2
===========================================================================
org.pcj.internal.message.MessageType$2.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "HELLO_INFORM"
===========================================================================
org.pcj.internal.message.MessageType$3:::OBJECT
this has only one value
this.id == 3
===========================================================================
org.pcj.internal.message.MessageType$3.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "HELLO_BONJOUR"
arg1 == 2
arg2 == 3
===========================================================================
org.pcj.internal.message.MessageType$3.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "HELLO_BONJOUR"
===========================================================================
org.pcj.internal.message.MessageType$4:::OBJECT
this has only one value
this.id == 4
===========================================================================
org.pcj.internal.message.MessageType$4.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "HELLO_COMPLETED"
arg1 == 3
arg2 == 4
===========================================================================
org.pcj.internal.message.MessageType$4.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "HELLO_COMPLETED"
===========================================================================
org.pcj.internal.message.MessageType$5:::OBJECT
this has only one value
this.id == 5
===========================================================================
org.pcj.internal.message.MessageType$5.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "HELLO_GO"
arg1 == 4
arg2 == 5
===========================================================================
org.pcj.internal.message.MessageType$5.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "HELLO_GO"
===========================================================================
org.pcj.internal.message.MessageType$6:::OBJECT
this has only one value
this.id == 6
===========================================================================
org.pcj.internal.message.MessageType$6.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "BYE"
arg1 == 5
arg2 == 6
===========================================================================
org.pcj.internal.message.MessageType$6.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "BYE"
===========================================================================
org.pcj.internal.message.MessageType$7:::OBJECT
this has only one value
this.id == 7
===========================================================================
org.pcj.internal.message.MessageType$7.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "BYE_COMPLETED"
arg1 == 6
arg2 == 7
===========================================================================
org.pcj.internal.message.MessageType$7.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "BYE_COMPLETED"
===========================================================================
org.pcj.internal.message.MessageType$8:::OBJECT
this has only one value
this.id == 10
===========================================================================
org.pcj.internal.message.MessageType$8.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_BARRIER_WAITING"
arg1 == 7
arg2 == 10
===========================================================================
org.pcj.internal.message.MessageType$8.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_BARRIER_WAITING"
===========================================================================
org.pcj.internal.message.MessageType$9:::OBJECT
this has only one value
this.id == 11
===========================================================================
org.pcj.internal.message.MessageType$9.(java.lang.String, int, byte):::ENTER
arg0 has only one value
arg0.toString == "GROUP_BARRIER_GO"
arg1 == 8
arg2 == 11
===========================================================================
org.pcj.internal.message.MessageType$9.(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "GROUP_BARRIER_GO"
===========================================================================
org.pcj.internal.message.MessageType:::OBJECT
===========================================================================
org.pcj.internal.message.MessageType.MessageType(java.lang.String, int, byte):::ENTER
arg0 != null
===========================================================================
org.pcj.internal.message.MessageType.MessageType(java.lang.String, int, byte):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
org.pcj.internal.message.MessageType.getId():::ENTER
===========================================================================
org.pcj.internal.message.MessageType.getId():::EXIT
this.id == orig(this.id)
===========================================================================
org.pcj.internal.message.MessageType.values():::EXIT
return.getClass().getName() == org.pcj.internal.message.MessageType[].class
return[] contains no nulls and has only one value, of length 24
return[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
size(return[]) == 24
===========================================================================
org.pcj.internal.message.MessageValueBroadcastBytes:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageValueBroadcastBytes:::OBJECT
this has only one value
this.requestNum one of { 0, 1 }
this.groupId == 0
this.requesterThreadId == 0
this.sharedEnumClassName.toString == "org.pcj.test.StorageExample$SharedEnum"
this.name.toString == "avg"
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == 8192
org.pcj.internal.network.CloneInputStream.EMPTY has only one value
org.pcj.internal.network.CloneInputStream.EMPTY[] == []
this.clonedData.bytesList has only one value
this.clonedData.bytesList[] contains no nulls and has only one value, of length 1
this.clonedData.bytesList[] elements has only one value
this.clonedData.bytesList[].getClass().getName() == [byte[]]
this.clonedData.bytesList[].getClass().getName() elements == byte[].class
this.clonedData.bytesList.getClass().getName() == java.util.ArrayList.class
this.clonedData.iterator == null
this.clonedData.currentByteArray == null
this.clonedData.currentIndex == 0
this.clonedData.length == 84
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 35
size(this.clonedData.bytesList[]) == 1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageValueBroadcastBytes.MessageValueBroadcastBytes():::EXIT
this.requestNum == 0
this.sharedEnumClassName == null
this.name == null
this.clonedData == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastBytes.MessageValueBroadcastBytes(int, int, int, java.lang.String, java.lang.String, org.pcj.internal.network.CloneInputStream):::ENTER
arg0 == 0
arg1 == 1
arg2 == 0
arg3 has only one value
arg3.toString == "org.pcj.test.StorageExample$SharedEnum"
arg4 has only one value
arg4.toString == "avg"
arg5 has only one value
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == 8192
org.pcj.internal.network.CloneInputStream.EMPTY has only one value
org.pcj.internal.network.CloneInputStream.EMPTY[] == []
arg5.bytesList has only one value
arg5.bytesList[] contains no nulls and has only one value, of length 1
arg5.bytesList[] elements has only one value
arg5.bytesList[].getClass().getName() == [byte[]]
arg5.bytesList[].getClass().getName() elements == byte[].class
arg5.bytesList.getClass().getName() == java.util.ArrayList.class
arg5.iterator == null
arg5.currentByteArray == null
arg5.currentIndex == 0
arg5.length == 84
size(arg5.bytesList[]) == 1
===========================================================================
org.pcj.internal.message.MessageValueBroadcastBytes.MessageValueBroadcastBytes(int, int, int, java.lang.String, java.lang.String, org.pcj.internal.network.CloneInputStream):::EXIT
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == orig(org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE)
org.pcj.internal.network.CloneInputStream.EMPTY == orig(org.pcj.internal.network.CloneInputStream.EMPTY)
org.pcj.internal.network.CloneInputStream.EMPTY[] == orig(org.pcj.internal.network.CloneInputStream.EMPTY[])
arg3.toString == orig(arg3.toString)
arg4.toString == orig(arg4.toString)
arg5.bytesList == orig(arg5.bytesList)
arg5.bytesList[] == orig(arg5.bytesList[])
arg5.bytesList.getClass().getName() == orig(arg5.bytesList.getClass().getName())
arg5.iterator == orig(arg5.iterator)
arg5.currentByteArray == orig(arg5.currentByteArray)
arg5.currentIndex == orig(arg5.currentIndex)
arg5.length == orig(arg5.length)
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
this.clonedData has only one value
arg3.toString == "org.pcj.test.StorageExample$SharedEnum"
arg4.toString == "avg"
arg5.bytesList has only one value
arg5.bytesList[] contains no nulls and has only one value, of length 1
arg5.bytesList[] elements has only one value
arg5.bytesList[].getClass().getName() == [byte[]]
arg5.bytesList[].getClass().getName() elements == byte[].class
arg5.bytesList.getClass().getName() == java.util.ArrayList.class
arg5.iterator == null
arg5.currentByteArray == null
arg5.currentIndex == 0
arg5.length == 84
size(arg5.bytesList[]) == 1
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform:::OBJECT
this has only one value
this.groupId == 0
this.requestNum one of { 0, 1 }
this.requesterThreadId == 0
this.physicalId == 0
this.exceptions.getClass().getName() == java.util.LinkedList.class
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 36
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.MessageValueBroadcastInform():::EXIT
this.requestNum == 0
this.exceptions == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.MessageValueBroadcastInform(int, int, int, int, java.util.Queue):::ENTER
arg0 == 0
arg1 == 1
arg2 == 0
arg3 == 0
arg4 has only one value
arg4.getClass().getName() == java.util.LinkedList.class
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.MessageValueBroadcastInform(int, int, int, int, java.util.Queue):::EXIT
this.requestNum == 1
this.exceptions has only one value
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
this.requestNum == 1
this.exceptions has only one value
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.groupId == orig(this.groupId)
this.requestNum == orig(this.requestNum)
this.requesterThreadId == orig(this.requesterThreadId)
this.physicalId == orig(this.physicalId)
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
this.requestNum == 1
this.exceptions has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
this.requestNum == 1
this.exceptions has only one value
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastInform.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.groupId == orig(this.groupId)
this.requestNum == orig(this.requestNum)
this.requesterThreadId == orig(this.requesterThreadId)
this.physicalId == orig(this.physicalId)
this.exceptions == orig(this.exceptions)
this.exceptions.getClass().getName() == orig(this.exceptions.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
this.requestNum == 1
this.exceptions has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest:::OBJECT
this has only one value
this.groupId == 0
this.requestNum one of { 0, 1 }
this.requesterThreadId == 0
this.sharedEnumClassName.toString == "org.pcj.test.StorageExample$SharedEnum"
this.name.toString == "avg"
this.newValue.getClass().getName() == java.lang.Double.class
this.type has only one value
this.type.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 34
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.MessageValueBroadcastRequest():::EXIT
this.requestNum == 0
this.sharedEnumClassName == null
this.name == null
this.newValue == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.MessageValueBroadcastRequest(int, int, int, java.lang.String, java.lang.String, java.lang.Object):::ENTER
arg0 == 0
arg1 == 1
arg2 == 0
arg3 has only one value
arg3.toString == "org.pcj.test.StorageExample$SharedEnum"
arg4 has only one value
arg4.toString == "avg"
arg5 has only one value
arg5.getClass().getName() == java.lang.Double.class
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.MessageValueBroadcastRequest(int, int, int, java.lang.String, java.lang.String, java.lang.Object):::EXIT
arg3.toString == orig(arg3.toString)
arg4.toString == orig(arg4.toString)
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
this.newValue has only one value
arg3.toString == "org.pcj.test.StorageExample$SharedEnum"
arg4.toString == "avg"
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
this.newValue has only one value
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1 has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.groupId == orig(this.groupId)
this.requestNum == orig(this.requestNum)
this.requesterThreadId == orig(this.requesterThreadId)
this.sharedEnumClassName.toString == orig(this.sharedEnumClassName.toString)
this.name.toString == orig(this.name.toString)
this.newValue.getClass().getName() == orig(this.newValue.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
this.newValue has only one value
arg1.input has only one value
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
this.newValue has only one value
arg0 has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageValueBroadcastRequest.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.groupId == orig(this.groupId)
this.requestNum == orig(this.requestNum)
this.requesterThreadId == orig(this.requesterThreadId)
this.sharedEnumClassName == orig(this.sharedEnumClassName)
this.sharedEnumClassName.toString == orig(this.sharedEnumClassName.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.newValue == orig(this.newValue)
this.newValue.getClass().getName() == orig(this.newValue.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
this.newValue has only one value
arg0.output has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream has only one value
===========================================================================
org.pcj.internal.message.MessageValuePutRequest:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
===========================================================================
org.pcj.internal.message.MessageValuePutRequest:::OBJECT
this.requestNum one of { 0, 1 }
this.groupId == 0
this.requesterThreadId one of { 0, 1, 2 }
this.threadId == 0
this.sharedEnumClassName.toString == "org.pcj.test.StorageExample$SharedEnum"
this.name.toString == "x"
this.indices[] elements one of { 0, 1, 2 }
this.indices[] one of { [0], [1], [2] }
this.newValue.getClass().getName() == java.lang.Integer.class
this.type has only one value
this.type != null
this.type.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 32
size(this.indices[]) == 1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.MessageValuePutRequest():::EXIT
this.requestNum == 0
this.requesterThreadId == 0
this.sharedEnumClassName == null
this.name == null
this.indices == null
this.newValue == null
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.MessageValuePutRequest(int, int, int, int, java.lang.String, java.lang.String, int[], java.lang.Object):::ENTER
arg0 == 0
arg1 == 1
arg2 one of { 0, 1, 2 }
arg3 == 0
arg4 has only one value
arg4.toString == "org.pcj.test.StorageExample$SharedEnum"
arg5 has only one value
arg5.toString == "x"
arg6[] elements one of { 0, 1, 2 }
arg6[] one of { [0], [1], [2] }
arg7.getClass().getName() == java.lang.Integer.class
size(arg6[]) == 1
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.MessageValuePutRequest(int, int, int, int, java.lang.String, java.lang.String, int[], java.lang.Object):::EXIT
arg4.toString == orig(arg4.toString)
arg5.toString == orig(arg5.toString)
arg6[] == orig(arg6[])
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
arg4.toString == "org.pcj.test.StorageExample$SharedEnum"
arg5.toString == "x"
arg6[] elements one of { 0, 1, 2 }
arg6[] one of { [0], [1], [2] }
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.requestNum == orig(this.requestNum)
this.groupId == orig(this.groupId)
this.requesterThreadId == orig(this.requesterThreadId)
this.threadId == orig(this.threadId)
this.sharedEnumClassName.toString == orig(this.sharedEnumClassName.toString)
this.name.toString == orig(this.name.toString)
this.indices[] == orig(this.indices[])
this.newValue.getClass().getName() == orig(this.newValue.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
this.requestNum == 1
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageValuePutRequest.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.requestNum == orig(this.requestNum)
this.groupId == orig(this.groupId)
this.requesterThreadId == orig(this.requesterThreadId)
this.threadId == orig(this.threadId)
this.sharedEnumClassName == orig(this.sharedEnumClassName)
this.sharedEnumClassName.toString == orig(this.sharedEnumClassName.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.indices == orig(this.indices)
this.indices[] == orig(this.indices[])
this.newValue == orig(this.newValue)
this.newValue.getClass().getName() == orig(this.newValue.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
this.requestNum == 1
this.sharedEnumClassName has only one value
this.name has only one value
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
===========================================================================
org.pcj.internal.message.MessageValuePutResponse:::CLASS
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
===========================================================================
org.pcj.internal.message.MessageValuePutResponse:::OBJECT
this.requestNum one of { 0, 1 }
this.groupId == 0
this.requesterThreadId one of { 0, 1, 2 }
this.exception == null
this.type has only one value
this.type != null
this.type.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.HELLO.id == 1
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
org.pcj.internal.message.MessageType.HELLO_INFORM.id == 2
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == 3
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == 4
org.pcj.internal.message.MessageType.HELLO_GO.id == 5
org.pcj.internal.message.MessageType.BYE.id == 6
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == 7
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == 10
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == 11
org.pcj.internal.message.MessageType.PEER_BARRIER.id == 12
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == 20
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == 21
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == 22
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == 23
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == 24
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == 25
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == 30
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == 31
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == 32
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == 33
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == 34
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == 35
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == 36
org.pcj.internal.message.MessageType.UNKNOWN.id == -1
this.type.id == 33
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.MessageValuePutResponse():::EXIT
this.requestNum == 0
this.requesterThreadId == 0
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.MessageValuePutResponse(int, int, int):::ENTER
arg0 == 0
arg1 == 1
arg2 one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.MessageValuePutResponse(int, int, int):::EXIT
this.requestNum == 1
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::ENTER
this.requestNum == 1
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.execute(java.nio.channels.SocketChannel, org.pcj.internal.network.MessageDataInputStream):::EXIT
this.requestNum == orig(this.requestNum)
this.groupId == orig(this.groupId)
this.requesterThreadId == orig(this.requesterThreadId)
this.exception == orig(this.exception)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg1.input == orig(arg1.input)
arg1.input.getClass().getName() == orig(arg1.input.getClass().getName())
arg1.objectInputStream == orig(arg1.objectInputStream)
this.requestNum == 1
arg1.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
arg1.objectInputStream == null
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.write(org.pcj.internal.network.MessageDataOutputStream):::ENTER
this.requestNum == 1
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.message.MessageValuePutResponse.write(org.pcj.internal.network.MessageDataOutputStream):::EXIT
this.requestNum == orig(this.requestNum)
this.groupId == orig(this.groupId)
this.requesterThreadId == orig(this.requesterThreadId)
this.exception == orig(this.exception)
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.type == orig(this.type)
this.type.getClass().getName() == orig(this.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.HELLO.id == orig(org.pcj.internal.message.MessageType.HELLO.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
org.pcj.internal.message.MessageType.HELLO_INFORM.id == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.id)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.id == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.id)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.id == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.id)
org.pcj.internal.message.MessageType.HELLO_GO.id == orig(org.pcj.internal.message.MessageType.HELLO_GO.id)
org.pcj.internal.message.MessageType.BYE.id == orig(org.pcj.internal.message.MessageType.BYE.id)
org.pcj.internal.message.MessageType.BYE_COMPLETED.id == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.id)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.id)
org.pcj.internal.message.MessageType.PEER_BARRIER.id == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.id)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.id)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.id)
org.pcj.internal.message.MessageType.UNKNOWN.id == orig(org.pcj.internal.message.MessageType.UNKNOWN.id)
this.type.id == orig(this.type.id)
arg0.output == orig(arg0.output)
arg0.output.getClass().getName() == orig(arg0.output.getClass().getName())
arg0.objectOutputStream == orig(arg0.objectOutputStream)
this.requestNum == 1
arg0.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
arg0.objectOutputStream == null
===========================================================================
org.pcj.internal.network.CloneInputStream:::CLASS
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == 8192
org.pcj.internal.network.CloneInputStream.EMPTY has only one value
org.pcj.internal.network.CloneInputStream.EMPTY != null
org.pcj.internal.network.CloneInputStream.EMPTY[] == []
===========================================================================
org.pcj.internal.network.CloneInputStream:::OBJECT
this has only one value
this.bytesList has only one value
this.bytesList != null
this.bytesList[] elements has only one value
this.bytesList[] elements != null
this.bytesList[].getClass().getName() elements == byte[].class
this.bytesList[].getClass().getName() one of { [], [byte[]] }
this.bytesList.getClass().getName() == java.util.ArrayList.class
this.iterator.getClass().getName() == java.util.ArrayList$Itr.class
this.currentByteArray[] one of { [], [-84, -19, 0, 5, 115, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 68, 111, 117, 98, 108, 101, -128, -77, -62, 74, 41, 107, -5, 4, 2, 0, 1, 68, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 64, 0, 0, 0, 0, 0, 0, 0] }
this.currentIndex >= 0
this.length one of { 0, 84 }
size(this.bytesList[]) one of { 0, 1 }
size(this.currentByteArray[]) one of { 0, 84 }
size(this.currentByteArray[])-1 != 0
===========================================================================
org.pcj.internal.network.CloneInputStream.CloneInputStream():::EXIT
this.bytesList[] == []
this.bytesList[].getClass().getName() == []
this.iterator == null
this.currentByteArray == null
this.currentIndex == 0
this.length == 0
===========================================================================
org.pcj.internal.network.CloneInputStream.addByteArray(byte[]):::ENTER
this.bytesList[] == []
this.bytesList[].getClass().getName() == []
this.iterator == null
this.currentByteArray == null
this.currentIndex == 0
this.length == 0
arg0 has only one value
arg0[] == [-84, -19, 0, 5, 115, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 68, 111, 117, 98, 108, 101, -128, -77, -62, 74, 41, 107, -5, 4, 2, 0, 1, 68, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 64, 0, 0, 0, 0, 0, 0, 0]
size(arg0[]) == 84
===========================================================================
org.pcj.internal.network.CloneInputStream.addByteArray(byte[]):::EXIT
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == orig(org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE)
org.pcj.internal.network.CloneInputStream.EMPTY == orig(org.pcj.internal.network.CloneInputStream.EMPTY)
org.pcj.internal.network.CloneInputStream.EMPTY[] == orig(org.pcj.internal.network.CloneInputStream.EMPTY[])
this.bytesList == orig(this.bytesList)
this.bytesList.getClass().getName() == orig(this.bytesList.getClass().getName())
this.iterator == orig(this.iterator)
this.currentByteArray == orig(this.currentByteArray)
this.currentIndex == orig(this.currentIndex)
arg0[] == orig(arg0[])
size(this.bytesList[])-1 == orig(size(this.bytesList[]))
this.bytesList[] contains no nulls and has only one value, of length 1
this.bytesList[].getClass().getName() == [byte[]]
this.iterator == null
this.currentByteArray == null
this.currentIndex == 0
this.length == 84
arg0[] == [-84, -19, 0, 5, 115, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 68, 111, 117, 98, 108, 101, -128, -77, -62, 74, 41, 107, -5, 4, 2, 0, 1, 68, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 64, 0, 0, 0, 0, 0, 0, 0]
size(this.bytesList[]) == 1
===========================================================================
org.pcj.internal.network.CloneInputStream.clone(java.io.InputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.pcj.internal.network.MessageDataInputStream.class
===========================================================================
org.pcj.internal.network.CloneInputStream.clone(java.io.InputStream):::EXIT
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == orig(org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE)
org.pcj.internal.network.CloneInputStream.EMPTY == orig(org.pcj.internal.network.CloneInputStream.EMPTY)
org.pcj.internal.network.CloneInputStream.EMPTY[] == orig(org.pcj.internal.network.CloneInputStream.EMPTY[])
return has only one value
return.bytesList has only one value
return.bytesList[] contains no nulls and has only one value, of length 1
return.bytesList[] elements has only one value
return.bytesList[].getClass().getName() == [byte[]]
return.bytesList[].getClass().getName() elements == byte[].class
return.bytesList.getClass().getName() == java.util.ArrayList.class
return.iterator == null
return.currentByteArray == null
return.currentIndex == 0
return.length == 84
size(return.bytesList[]) == 1
===========================================================================
org.pcj.internal.network.CloneInputStream.read():::ENTER
this.bytesList[] contains no nulls and has only one value, of length 1
this.bytesList[].getClass().getName() == [byte[]]
this.iterator != null
this.currentByteArray != null
this.length == 84
size(this.bytesList[]) == 1
===========================================================================
org.pcj.internal.network.CloneInputStream.read():::EXIT86
===========================================================================
org.pcj.internal.network.CloneInputStream.read():::EXIT
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == orig(org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE)
org.pcj.internal.network.CloneInputStream.EMPTY == orig(org.pcj.internal.network.CloneInputStream.EMPTY)
org.pcj.internal.network.CloneInputStream.EMPTY[] == orig(org.pcj.internal.network.CloneInputStream.EMPTY[])
this.bytesList == orig(this.bytesList)
this.bytesList[] == orig(this.bytesList[])
this.bytesList.getClass().getName() == orig(this.bytesList.getClass().getName())
this.iterator == orig(this.iterator)
this.iterator.getClass().getName() == orig(this.iterator.getClass().getName())
this.length == orig(this.length)
this.bytesList[] contains no nulls and has only one value, of length 1
this.bytesList[].getClass().getName() == [byte[]]
this.iterator != null
this.currentByteArray has only one value
this.currentByteArray != null
this.currentByteArray[] == [-84, -19, 0, 5, 115, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 68, 111, 117, 98, 108, 101, -128, -77, -62, 74, 41, 107, -5, 4, 2, 0, 1, 68, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 64, 0, 0, 0, 0, 0, 0, 0]
this.currentIndex >= 1
this.length == 84
return >= 0
size(this.bytesList[]) == 1
size(this.currentByteArray[]) == 84
this.currentIndex - orig(this.currentIndex) - 1 == 0
size(this.currentByteArray[]) >= orig(size(this.currentByteArray[]))
size(this.currentByteArray[])-1 != orig(size(this.currentByteArray[]))
size(this.currentByteArray[])-1 >= orig(size(this.currentByteArray[]))-1
===========================================================================
org.pcj.internal.network.CloneInputStream.reset():::ENTER
this.bytesList[] contains no nulls and has only one value, of length 1
this.bytesList[].getClass().getName() == [byte[]]
this.currentByteArray[] == [-84, -19, 0, 5, 115, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 68, 111, 117, 98, 108, 101, -128, -77, -62, 74, 41, 107, -5, 4, 2, 0, 1, 68, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 64, 0, 0, 0, 0, 0, 0, 0]
this.currentIndex one of { 0, 84 }
this.length == 84
size(this.bytesList[]) == 1
size(this.currentByteArray[]) == 84
===========================================================================
org.pcj.internal.network.CloneInputStream.reset():::EXIT
org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE == orig(org.pcj.internal.network.CloneInputStream.BYTES_CHUNK_SIZE)
org.pcj.internal.network.CloneInputStream.EMPTY == orig(org.pcj.internal.network.CloneInputStream.EMPTY)
org.pcj.internal.network.CloneInputStream.EMPTY[] == orig(org.pcj.internal.network.CloneInputStream.EMPTY[])
this.bytesList == orig(this.bytesList)
this.bytesList[] == orig(this.bytesList[])
this.bytesList.getClass().getName() == orig(this.bytesList.getClass().getName())
this.iterator.getClass().getName() == orig(this.iterator.getClass().getName())
this.length == orig(this.length)
this.bytesList[] contains no nulls and has only one value, of length 1
this.bytesList[].getClass().getName() == [byte[]]
this.currentByteArray has only one value
this.currentByteArray[] == []
this.currentIndex == 0
this.length == 84
size(this.bytesList[]) == 1
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream:::OBJECT
this.queue != null
this.queue.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.LoopbackInputStream(java.util.Queue):::ENTER
arg0 != null
arg0.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.LoopbackInputStream(java.util.Queue):::EXIT
this.closed == false
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.close():::ENTER
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.close():::EXIT
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == true
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read():::ENTER
this.closed == true
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read():::EXIT157
this.queue has only one value
return == -1
orig(this) has only one value
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read():::EXIT164
return >= 0
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read():::EXIT
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == orig(this.closed)
(return == -1)  ==>  (orig(this) has only one value)
(return == -1)  ==>  (this.queue has only one value)
this.closed == true
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read(byte[], int, int):::ENTER
this.closed == true
arg0 != null
arg1 one of { 0, 1 }
size(arg0[]) >= 1
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read(byte[], int, int):::EXIT203
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.read(byte[], int, int):::EXIT
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == orig(this.closed)
this.closed == true
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream:::OBJECT
this.chunkSize == 8192
this.queue != null
this.queue.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
this.currentByteBuffer.getClass().getName() == java.nio.HeapByteBuffer.class
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.LoopbackOutputStream(java.util.Queue, int):::ENTER
arg0 != null
arg0.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
arg1 == 8192
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.LoopbackOutputStream(java.util.Queue, int):::EXIT
this.closed == false
this.currentByteBuffer != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.allocateBuffer(int):::ENTER
this.closed == false
this.currentByteBuffer == null
arg0 == 8192
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.allocateBuffer(int):::EXIT
this.chunkSize == orig(this.chunkSize)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == orig(this.closed)
this.closed == false
this.currentByteBuffer != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.close():::ENTER
this.closed == false
this.currentByteBuffer != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.close():::EXIT
this.chunkSize == orig(this.chunkSize)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == true
this.currentByteBuffer == null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.flush(int):::ENTER
this.closed == true
this.currentByteBuffer != null
arg0 == 0
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.flush(int):::EXIT86
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.flush(int):::EXIT
this.chunkSize == orig(this.chunkSize)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == orig(this.closed)
this.currentByteBuffer == orig(this.currentByteBuffer)
this.currentByteBuffer.getClass().getName() == orig(this.currentByteBuffer.getClass().getName())
this.closed == true
this.currentByteBuffer != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.write(byte[], int, int):::ENTER
this.closed == false
this.currentByteBuffer != null
arg0 != null
arg1 == 0
arg2 >= 1
size(arg0[]) >= 1
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.write(byte[], int, int):::EXIT
this.chunkSize == orig(this.chunkSize)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == orig(this.closed)
this.currentByteBuffer == orig(this.currentByteBuffer)
this.currentByteBuffer.getClass().getName() == orig(this.currentByteBuffer.getClass().getName())
arg0[] == orig(arg0[])
this.closed == false
this.currentByteBuffer != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.write(int):::ENTER
this.closed == false
arg0 == 0
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.write(int):::EXIT
this.chunkSize == orig(this.chunkSize)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.closed == orig(this.closed)
this.currentByteBuffer == orig(this.currentByteBuffer)
this.currentByteBuffer.getClass().getName() == orig(this.currentByteBuffer.getClass().getName())
this.closed == false
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream:::OBJECT
this.message != null
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
this.message.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
this.queue != null
this.queue.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
this.messageDataOutputStream != null
this.messageDataOutputStream.output != null
this.messageDataOutputStream.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
this.messageDataInputStream != null
this.messageDataInputStream.input != null
this.messageDataInputStream.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
this.messageDataInputStream.objectInputStream == null
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.LoopbackMessageBytesStream(org.pcj.internal.message.Message):::ENTER
arg0 != null
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
arg0.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.LoopbackMessageBytesStream(org.pcj.internal.message.Message):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
arg0.type == orig(arg0.type)
arg0.type.getClass().getName() == orig(arg0.type.getClass().getName())
arg0.type.id == orig(arg0.type.id)
this.messageDataOutputStream.objectOutputStream == null
arg0.type != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.LoopbackMessageBytesStream(org.pcj.internal.message.Message, int):::ENTER
arg0 != null
org.pcj.internal.message.Message.LOGGER has only one value
org.pcj.internal.message.Message.LOGGER != null
arg0.type != null
org.pcj.internal.message.MessageType.HELLO has only one value
org.pcj.internal.message.MessageType.HELLO != null
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == org.pcj.internal.message.MessageType$1.class
org.pcj.internal.message.MessageType.HELLO_INFORM has only one value
org.pcj.internal.message.MessageType.HELLO_INFORM != null
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$2.class
org.pcj.internal.message.MessageType.HELLO_BONJOUR has only one value
org.pcj.internal.message.MessageType.HELLO_BONJOUR != null
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == org.pcj.internal.message.MessageType$3.class
org.pcj.internal.message.MessageType.HELLO_COMPLETED has only one value
org.pcj.internal.message.MessageType.HELLO_COMPLETED != null
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$4.class
org.pcj.internal.message.MessageType.HELLO_GO has only one value
org.pcj.internal.message.MessageType.HELLO_GO != null
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == org.pcj.internal.message.MessageType$5.class
org.pcj.internal.message.MessageType.BYE has only one value
org.pcj.internal.message.MessageType.BYE != null
org.pcj.internal.message.MessageType.BYE.getClass().getName() == org.pcj.internal.message.MessageType$6.class
org.pcj.internal.message.MessageType.BYE_COMPLETED has only one value
org.pcj.internal.message.MessageType.BYE_COMPLETED != null
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == org.pcj.internal.message.MessageType$7.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == org.pcj.internal.message.MessageType$8.class
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO has only one value
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO != null
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == org.pcj.internal.message.MessageType$9.class
org.pcj.internal.message.MessageType.PEER_BARRIER has only one value
org.pcj.internal.message.MessageType.PEER_BARRIER != null
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == org.pcj.internal.message.MessageType$10.class
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY != null
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == org.pcj.internal.message.MessageType$11.class
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER != null
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == org.pcj.internal.message.MessageType$12.class
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST != null
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$13.class
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$14.class
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM != null
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == org.pcj.internal.message.MessageType$15.class
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE has only one value
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE != null
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$16.class
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$17.class
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$18.class
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$19.class
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE has only one value
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE != null
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == org.pcj.internal.message.MessageType$20.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == org.pcj.internal.message.MessageType$21.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == org.pcj.internal.message.MessageType$22.class
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM has only one value
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM != null
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == org.pcj.internal.message.MessageType$23.class
org.pcj.internal.message.MessageType.UNKNOWN has only one value
org.pcj.internal.message.MessageType.UNKNOWN != null
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == org.pcj.internal.message.MessageType$24.class
org.pcj.internal.message.MessageType.map has only one value
org.pcj.internal.message.MessageType.map != null
org.pcj.internal.message.MessageType.map.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.pcj.internal.message.MessageType.$VALUES has only one value
org.pcj.internal.message.MessageType.$VALUES != null
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == org.pcj.internal.message.MessageType[].class
org.pcj.internal.message.MessageType.$VALUES[] contains no nulls and has only one value, of length 24
org.pcj.internal.message.MessageType.$VALUES[] elements != null
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
org.pcj.internal.message.MessageType.$VALUES[].getClass().getName() elements == null
org.pcj.internal.message.MessageType.$VALUES[].id == [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, -1]
org.pcj.internal.message.MessageType.$VALUES[].id elements >= -1
arg1 == 8192
size(org.pcj.internal.message.MessageType.$VALUES[]) == 24
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.LoopbackMessageBytesStream(org.pcj.internal.message.Message, int):::EXIT
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
arg0.type == orig(arg0.type)
arg0.type.getClass().getName() == orig(arg0.type.getClass().getName())
arg0.type.id == orig(arg0.type.id)
this.messageDataOutputStream.objectOutputStream == null
arg0.type != null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.close():::ENTER
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.close():::EXIT
this.message == orig(this.message)
this.message.getClass().getName() == orig(this.message.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.message.type == orig(this.message.type)
this.message.type.getClass().getName() == orig(this.message.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
this.message.type.id == orig(this.message.type.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.messageDataOutputStream == orig(this.messageDataOutputStream)
this.messageDataOutputStream.output == orig(this.messageDataOutputStream.output)
this.messageDataOutputStream.output.getClass().getName() == orig(this.messageDataOutputStream.output.getClass().getName())
this.messageDataOutputStream.objectOutputStream == orig(this.messageDataOutputStream.objectOutputStream)
this.messageDataInputStream == orig(this.messageDataInputStream)
this.messageDataInputStream.input == orig(this.messageDataInputStream.input)
this.messageDataInputStream.input.getClass().getName() == orig(this.messageDataInputStream.input.getClass().getName())
this.messageDataInputStream.objectInputStream == orig(this.messageDataInputStream.objectInputStream)
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.getMessageDataInputStream():::ENTER
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.getMessageDataInputStream():::EXIT
this.message == orig(this.message)
this.message.getClass().getName() == orig(this.message.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.message.type == orig(this.message.type)
this.message.type.getClass().getName() == orig(this.message.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
this.message.type.id == orig(this.message.type.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.messageDataOutputStream == orig(this.messageDataOutputStream)
this.messageDataOutputStream.output == orig(this.messageDataOutputStream.output)
this.messageDataOutputStream.output.getClass().getName() == orig(this.messageDataOutputStream.output.getClass().getName())
this.messageDataOutputStream.objectOutputStream == orig(this.messageDataOutputStream.objectOutputStream)
this.messageDataInputStream == orig(this.messageDataInputStream)
this.messageDataInputStream.input == orig(this.messageDataInputStream.input)
this.messageDataInputStream.input.getClass().getName() == orig(this.messageDataInputStream.input.getClass().getName())
this.messageDataInputStream.objectInputStream == orig(this.messageDataInputStream.objectInputStream)
return != null
return.input != null
return.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
return.objectInputStream == null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.writeMessage():::ENTER
this.messageDataOutputStream.objectOutputStream == null
===========================================================================
org.pcj.internal.network.LoopbackMessageBytesStream.writeMessage():::EXIT
this.message == orig(this.message)
this.message.getClass().getName() == orig(this.message.getClass().getName())
org.pcj.internal.message.Message.LOGGER == orig(org.pcj.internal.message.Message.LOGGER)
this.message.type == orig(this.message.type)
this.message.type.getClass().getName() == orig(this.message.type.getClass().getName())
org.pcj.internal.message.MessageType.HELLO == orig(org.pcj.internal.message.MessageType.HELLO)
org.pcj.internal.message.MessageType.HELLO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_INFORM == orig(org.pcj.internal.message.MessageType.HELLO_INFORM)
org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_BONJOUR == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR)
org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_BONJOUR.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_COMPLETED == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED)
org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.HELLO_GO == orig(org.pcj.internal.message.MessageType.HELLO_GO)
org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.HELLO_GO.getClass().getName())
org.pcj.internal.message.MessageType.BYE == orig(org.pcj.internal.message.MessageType.BYE)
org.pcj.internal.message.MessageType.BYE.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE.getClass().getName())
org.pcj.internal.message.MessageType.BYE_COMPLETED == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED)
org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName() == orig(org.pcj.internal.message.MessageType.BYE_COMPLETED.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING)
org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_WAITING.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO)
org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_BARRIER_GO.getClass().getName())
org.pcj.internal.message.MessageType.PEER_BARRIER == orig(org.pcj.internal.message.MessageType.PEER_BARRIER)
org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName() == orig(org.pcj.internal.message.MessageType.PEER_BARRIER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY)
org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_QUERY.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER)
org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_ANSWER.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST)
org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM)
org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM)
org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_CONFIRM.getClass().getName())
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE)
org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.GROUP_JOIN_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST)
org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_GET_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST)
org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE)
org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_PUT_RESPONSE.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_REQUEST.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_BYTES.getClass().getName())
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM)
org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName() == orig(org.pcj.internal.message.MessageType.VALUE_BROADCAST_INFORM.getClass().getName())
org.pcj.internal.message.MessageType.UNKNOWN == orig(org.pcj.internal.message.MessageType.UNKNOWN)
org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName() == orig(org.pcj.internal.message.MessageType.UNKNOWN.getClass().getName())
org.pcj.internal.message.MessageType.map == orig(org.pcj.internal.message.MessageType.map)
org.pcj.internal.message.MessageType.map.getClass().getName() == orig(org.pcj.internal.message.MessageType.map.getClass().getName())
this.message.type.id == orig(this.message.type.id)
org.pcj.internal.message.MessageType.$VALUES == orig(org.pcj.internal.message.MessageType.$VALUES)
org.pcj.internal.message.MessageType.$VALUES.getClass().getName() == orig(org.pcj.internal.message.MessageType.$VALUES.getClass().getName())
org.pcj.internal.message.MessageType.$VALUES[] == orig(org.pcj.internal.message.MessageType.$VALUES[])
org.pcj.internal.message.MessageType.$VALUES[].id == orig(org.pcj.internal.message.MessageType.$VALUES[].id)
this.queue == orig(this.queue)
this.queue.getClass().getName() == orig(this.queue.getClass().getName())
this.messageDataOutputStream == orig(this.messageDataOutputStream)
this.messageDataOutputStream.output == orig(this.messageDataOutputStream.output)
this.messageDataOutputStream.output.getClass().getName() == orig(this.messageDataOutputStream.output.getClass().getName())
this.messageDataInputStream == orig(this.messageDataInputStream)
this.messageDataInputStream.input == orig(this.messageDataInputStream.input)
this.messageDataInputStream.input.getClass().getName() == orig(this.messageDataInputStream.input.getClass().getName())
this.messageDataInputStream.objectInputStream == orig(this.messageDataInputStream.objectInputStream)
===========================================================================
org.pcj.internal.network.LoopbackSocketChannel$LoopbackSocketAddress:::OBJECT
this has only one value
===========================================================================
org.pcj.internal.network.LoopbackSocketChannel$LoopbackSocketAddress.LoopbackSocketAddress():::EXIT
===========================================================================
org.pcj.internal.network.LoopbackSocketChannel:::OBJECT
this has only one value
this.loopbackSocketAddress has only one value
this.loopbackSocketAddress.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel$LoopbackSocketAddress.class
===========================================================================
org.pcj.internal.network.LoopbackSocketChannel.LoopbackSocketChannel():::EXIT
===========================================================================
org.pcj.internal.network.LoopbackSocketChannel.getInstance():::EXIT
return has only one value
return.getClass().getName() == org.pcj.internal.network.LoopbackSocketChannel.class
===========================================================================
org.pcj.internal.network.MessageDataInputStream:::OBJECT
this.input != null
this.input.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
===========================================================================
org.pcj.internal.network.MessageDataInputStream.MessageDataInputStream(java.io.InputStream):::ENTER
arg0 != null
arg0.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackInputStream.class
===========================================================================
org.pcj.internal.network.MessageDataInputStream.MessageDataInputStream(java.io.InputStream):::EXIT
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.bytesToInt(byte[]):::ENTER
this.objectInputStream == null
arg0 != null
size(arg0[]) == 4
===========================================================================
org.pcj.internal.network.MessageDataInputStream.bytesToInt(byte[]):::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
arg0[] == orig(arg0[])
this.objectInputStream == null
return >= 0
===========================================================================
org.pcj.internal.network.MessageDataInputStream.close():::ENTER
===========================================================================
org.pcj.internal.network.MessageDataInputStream.close():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
===========================================================================
org.pcj.internal.network.MessageDataInputStream.read():::ENTER
this has only one value
this.input has only one value
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.read():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
this.input has only one value
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readBoolean():::ENTER
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readBoolean():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
this.objectInputStream == null
return == false
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readBoolean():::EXIT;condition="not(return == true)"
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readInt():::ENTER
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readInt():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
this.objectInputStream == null
return >= 0
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readIntArray():::ENTER
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readIntArray():::EXIT136
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readIntArray():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
this.objectInputStream == null
return[] elements one of { 0, 1, 2 }
size(return[]) one of { 1, 3 }
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readObject():::ENTER
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readObject():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readString():::ENTER
this.objectInputStream == null
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readString():::EXIT166
===========================================================================
org.pcj.internal.network.MessageDataInputStream.readString():::EXIT
this.input == orig(this.input)
this.input.getClass().getName() == orig(this.input.getClass().getName())
this.objectInputStream == orig(this.objectInputStream)
this.objectInputStream == null
return.toString one of { "avg", "org.pcj.test.StorageExample$SharedEnum", "x" }
===========================================================================
org.pcj.internal.network.MessageDataOutputStream:::OBJECT
this.output != null
this.output.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.MessageDataOutputStream(java.io.OutputStream):::ENTER
arg0 != null
arg0.getClass().getName() == org.pcj.internal.network.LoopbackMessageBytesStream$LoopbackOutputStream.class
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.MessageDataOutputStream(java.io.OutputStream):::EXIT
this.objectOutputStream == null
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.close():::ENTER
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.close():::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
this.objectOutputStream == orig(this.objectOutputStream)
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.intToBytes(int):::ENTER
this.objectOutputStream == null
arg0 >= 0
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.intToBytes(int):::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
this.objectOutputStream == orig(this.objectOutputStream)
this.objectOutputStream == null
return != null
size(return[]) == 4
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeBoolean(boolean):::ENTER
this.objectOutputStream == null
arg0 == false
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeBoolean(boolean):::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
this.objectOutputStream == orig(this.objectOutputStream)
this.objectOutputStream == null
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeInt(int):::ENTER
this.objectOutputStream == null
arg0 >= 0
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeInt(int):::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
this.objectOutputStream == orig(this.objectOutputStream)
this.objectOutputStream == null
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeIntArray(int[]):::ENTER
this.objectOutputStream == null
arg0[] elements one of { 0, 1, 2 }
size(arg0[]) one of { 1, 3 }
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeIntArray(int[]):::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
this.objectOutputStream == orig(this.objectOutputStream)
arg0[] == orig(arg0[])
this.objectOutputStream == null
arg0[] elements one of { 0, 1, 2 }
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeObject(java.lang.Object):::ENTER
this.objectOutputStream == null
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeObject(java.lang.Object):::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeString(java.lang.String):::ENTER
this.objectOutputStream == null
arg0.toString one of { "avg", "org.pcj.test.StorageExample$SharedEnum", "x" }
===========================================================================
org.pcj.internal.network.MessageDataOutputStream.writeString(java.lang.String):::EXIT
this.output == orig(this.output)
this.output.getClass().getName() == orig(this.output.getClass().getName())
this.objectOutputStream == orig(this.objectOutputStream)
arg0.toString == orig(arg0.toString)
this.objectOutputStream == null
arg0.toString one of { "avg", "org.pcj.test.StorageExample$SharedEnum", "x" }
===========================================================================
org.pcj.internal.network.SelectorProc$InterestChange:::OBJECT
this.channel.getClass().getName() == sun.nio.ch.ServerSocketChannelImpl.class
this.interestOps == 16
===========================================================================
org.pcj.internal.network.SelectorProc$InterestChange.InterestChange(java.nio.channels.SelectableChannel, int):::ENTER
arg0.getClass().getName() == sun.nio.ch.ServerSocketChannelImpl.class
arg1 == 16
===========================================================================
org.pcj.internal.network.SelectorProc$InterestChange.InterestChange(java.nio.channels.SelectableChannel, int):::EXIT
===========================================================================
org.pcj.internal.network.SelectorProc:::CLASS
org.pcj.internal.network.SelectorProc.LOGGER has only one value
org.pcj.internal.network.SelectorProc.LOGGER != null
===========================================================================
org.pcj.internal.network.SelectorProc:::OBJECT
this has only one value
this.selector has only one value
this.selector != null
this.selector.getClass().getName() == sun.nio.ch.EPollSelectorImpl.class
this.readBuffer has only one value
this.readBuffer != null
this.readBuffer.getClass().getName() == java.nio.DirectByteBuffer.class
this.readMap has only one value
this.readMap != null
this.readMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.writeMap has only one value
this.writeMap != null
this.writeMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.serverSocketChannels has only one value
this.serverSocketChannels != null
this.serverSocketChannels.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
this.interestChanges has only one value
this.interestChanges != null
this.interestChanges.getClass().getName() == java.util.concurrent.ConcurrentLinkedQueue.class
===========================================================================
org.pcj.internal.network.SelectorProc.SelectorProc():::EXIT
===========================================================================
org.pcj.internal.network.SelectorProc.bind(java.net.InetAddress, int, int):::ENTER
arg1 == 8091
arg2 == 4096
===========================================================================
org.pcj.internal.network.SelectorProc.bind(java.net.InetAddress, int, int):::EXIT
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selector == orig(this.selector)
this.selector.getClass().getName() == orig(this.selector.getClass().getName())
this.readBuffer == orig(this.readBuffer)
this.readBuffer.getClass().getName() == orig(this.readBuffer.getClass().getName())
this.readMap == orig(this.readMap)
this.readMap.getClass().getName() == orig(this.readMap.getClass().getName())
this.writeMap == orig(this.writeMap)
this.writeMap.getClass().getName() == orig(this.writeMap.getClass().getName())
this.serverSocketChannels == orig(this.serverSocketChannels)
this.serverSocketChannels.getClass().getName() == orig(this.serverSocketChannels.getClass().getName())
this.interestChanges == orig(this.interestChanges)
this.interestChanges.getClass().getName() == orig(this.interestChanges.getClass().getName())
return.getClass().getName() == sun.nio.ch.ServerSocketChannelImpl.class
===========================================================================
org.pcj.internal.network.SelectorProc.changeInterestOps(java.nio.channels.SelectableChannel, int):::ENTER
arg0.getClass().getName() == sun.nio.ch.ServerSocketChannelImpl.class
arg1 == 16
===========================================================================
org.pcj.internal.network.SelectorProc.changeInterestOps(java.nio.channels.SelectableChannel, int):::EXIT
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selector == orig(this.selector)
this.selector.getClass().getName() == orig(this.selector.getClass().getName())
this.readBuffer == orig(this.readBuffer)
this.readBuffer.getClass().getName() == orig(this.readBuffer.getClass().getName())
this.readMap == orig(this.readMap)
this.readMap.getClass().getName() == orig(this.readMap.getClass().getName())
this.writeMap == orig(this.writeMap)
this.writeMap.getClass().getName() == orig(this.writeMap.getClass().getName())
this.serverSocketChannels == orig(this.serverSocketChannels)
this.serverSocketChannels.getClass().getName() == orig(this.serverSocketChannels.getClass().getName())
this.interestChanges == orig(this.interestChanges)
this.interestChanges.getClass().getName() == orig(this.interestChanges.getClass().getName())
===========================================================================
org.pcj.internal.network.SelectorProc.closeAllSockets():::ENTER
===========================================================================
org.pcj.internal.network.SelectorProc.closeAllSockets():::EXIT
org.pcj.internal.network.SelectorProc.LOGGER == orig(org.pcj.internal.network.SelectorProc.LOGGER)
this.selector == orig(this.selector)
this.selector.getClass().getName() == orig(this.selector.getClass().getName())
this.readBuffer == orig(this.readBuffer)
this.readBuffer.getClass().getName() == orig(this.readBuffer.getClass().getName())
this.readMap == orig(this.readMap)
this.readMap.getClass().getName() == orig(this.readMap.getClass().getName())
this.writeMap == orig(this.writeMap)
this.writeMap.getClass().getName() == orig(this.writeMap.getClass().getName())
this.serverSocketChannels == orig(this.serverSocketChannels)
this.serverSocketChannels.getClass().getName() == orig(this.serverSocketChannels.getClass().getName())
this.interestChanges == orig(this.interestChanges)
this.interestChanges.getClass().getName() == orig(this.interestChanges.getClass().getName())
===========================================================================
org.pcj.test.StorageExample$SharedEnum:::CLASS
org.pcj.test.StorageExample$SharedEnum.x has only one value
org.pcj.test.StorageExample$SharedEnum.avg has only one value
org.pcj.test.StorageExample$SharedEnum.$VALUES has only one value
org.pcj.test.StorageExample$SharedEnum.$VALUES.getClass().getName() == org.pcj.test.StorageExample$SharedEnum[].class
org.pcj.test.StorageExample$SharedEnum.$VALUES[] contains no nulls and has only one value, of length 2
org.pcj.test.StorageExample$SharedEnum.$VALUES[].getClass().getName() == [org.pcj.test.StorageExample.SharedEnum, org.pcj.test.StorageExample.SharedEnum]
org.pcj.test.StorageExample$SharedEnum.$VALUES[].getClass().getName() elements == org.pcj.test.StorageExample.SharedEnum.class
size(org.pcj.test.StorageExample$SharedEnum.$VALUES[]) == 2
===========================================================================
org.pcj.test.StorageExample$SharedEnum:::OBJECT
===========================================================================
org.pcj.test.StorageExample$SharedEnum.SharedEnum(java.lang.String, int):::ENTER
arg0.toString one of { "avg", "x" }
arg1 one of { 0, 1 }
===========================================================================
org.pcj.test.StorageExample$SharedEnum.SharedEnum(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "avg", "x" }
===========================================================================
org.pcj.test.StorageExample$SharedEnum.values():::ENTER
===========================================================================
org.pcj.test.StorageExample$SharedEnum.values():::EXIT
org.pcj.test.StorageExample$SharedEnum.x == orig(org.pcj.test.StorageExample$SharedEnum.x)
org.pcj.test.StorageExample$SharedEnum.avg == orig(org.pcj.test.StorageExample$SharedEnum.avg)
org.pcj.test.StorageExample$SharedEnum.$VALUES == orig(org.pcj.test.StorageExample$SharedEnum.$VALUES)
org.pcj.test.StorageExample$SharedEnum.$VALUES.getClass().getName() == orig(org.pcj.test.StorageExample$SharedEnum.$VALUES.getClass().getName())
org.pcj.test.StorageExample$SharedEnum.$VALUES[] == orig(org.pcj.test.StorageExample$SharedEnum.$VALUES[])
return.getClass().getName() == org.pcj.test.StorageExample$SharedEnum[].class
return[] contains no nulls and has only one value, of length 2
size(return[]) == 2
===========================================================================
org.pcj.test.StorageExample:::CLASS
org.pcj.test.StorageExample.STATIC_TEST has only one value
org.pcj.test.StorageExample.STATIC_TEST[] == [0.0, 0.0, 0.0]
org.pcj.test.StorageExample.STATIC_TEST[] elements == 0.0
size(org.pcj.test.StorageExample.STATIC_TEST[]) == 3
===========================================================================
org.pcj.test.StorageExample:::OBJECT
this.x[] == [1, 2, 3]
this.x[] elements one of { 1, 2, 3 }
this.avg one of { 0.0, 2.0 }
this.obiekt_nie_w_Enum_wiec_nie_Shared == 0.0
size(this.x[]) == 3
===========================================================================
org.pcj.test.StorageExample.StorageExample():::EXIT
this.x == null
this.avg == 0.0
===========================================================================
org.pcj.test.StorageExample.main():::ENTER
this.x == null
this.avg == 0.0
===========================================================================
org.pcj.test.StorageExample.main():::EXIT
org.pcj.test.StorageExample.STATIC_TEST == orig(org.pcj.test.StorageExample.STATIC_TEST)
org.pcj.test.StorageExample.STATIC_TEST[] == orig(org.pcj.test.StorageExample.STATIC_TEST[])
this.obiekt_nie_w_Enum_wiec_nie_Shared == orig(this.obiekt_nie_w_Enum_wiec_nie_Shared)
this.avg == 2.0
===========================================================================
org.pcj.test.StorageExampleMain.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
org.pcj.test.StorageExampleMain.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
Exiting Daikon.
