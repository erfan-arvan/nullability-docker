Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 8 times.  Unmatched entries are ignored!
Unterminated calls:
  com.undi.javascheme.JavaScheme.main(java.lang.String[]) : 1 invocation
  com.undi.javascheme.SchemeEval.SchemeEval() : 1 invocation
  com.undi.javascheme.SchemeEval.SchemeEval(boolean) : 1 invocation
  com.undi.javascheme.SchemeEval.loadStdLib(com.undi.javascheme.SchemeObject) : 1 invocation
  com.undi.javascheme.SchemeEval.loadStream(java.io.InputStream, com.undi.javascheme.SchemeObject) : 1 invocation
  com.undi.javascheme.SchemeReader.read() : 1 invocation
  com.undi.javascheme.SchemeReader.eatWhitespace() : 1 invocation
  com.undi.javascheme.SchemeReader.getc() : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$1.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$1.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@707f7072
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$1.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$1.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$2.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$2.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@2c483876
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$2.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$2.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$3.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$3.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@76c6d0ae
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$3.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$3.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$4.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$4.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@170b533c
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$4.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$4.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$5.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$5.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@5165e6c8
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$5.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$5.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$6.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$6.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@1b92a4e6
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$6.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$6.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$7.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$7.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@6abe9a57
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$7.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$7.(com.undi.javascheme.SchemeReader):::EXIT)
missing variables in newEnterExitRel:
  parent = com.undi.javascheme.SchemeReader$8.(com.undi.javascheme.SchemeReader):::ENTER
  child = com.undi.javascheme.SchemeReader$8.(com.undi.javascheme.SchemeReader):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@324d0780
parent varinfos missing from parent_to_child_map:
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE]
   com.undi.javascheme.SchemeReader.this.readFuncs[com.undi.javascheme.SchemeReader.PUSHBACK_SIZE-1]
rel.parent_to_child_map:
    com.undi.javascheme.SchemeReader.this => orig(com.undi.javascheme.SchemeReader.this)
    com.undi.javascheme.SchemeReader.this.mBufIn => orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE => com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs => orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    com.undi.javascheme.SchemeReader.this.readFuncs[..] => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName() => orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..]) => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1 => orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
child.var_infos:
    this
    com.undi.javascheme.SchemeReader.this
    com.undi.javascheme.SchemeReader.this.mBufIn
    com.undi.javascheme.SchemeReader.PUSHBACK_SIZE
    com.undi.javascheme.SchemeReader.this.readFuncs
    com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName()
    com.undi.javascheme.SchemeReader.this.readFuncs[..]
    com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName()
    orig(com.undi.javascheme.SchemeReader.this)
    orig(com.undi.javascheme.SchemeReader.this.mBufIn)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs)
    orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    orig(com.undi.javascheme.SchemeReader.this.readFuncs[..].getClass().getName())
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])
    size(com.undi.javascheme.SchemeReader.this.readFuncs[..])-1
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))
    orig(size(com.undi.javascheme.SchemeReader.this.readFuncs[..]))-1
End of diagnostics for newEnterExitRel(com.undi.javascheme.SchemeReader$8.(com.undi.javascheme.SchemeReader):::ENTER, com.undi.javascheme.SchemeReader$8.(com.undi.javascheme.SchemeReader):::EXIT)
===========================================================================
com.undi.javascheme.SchemeEval$1:::OBJECT
com.undi.javascheme.SchemeEval.emptyEnvironment == com.undi.javascheme.SchemeObject.THE_EMPTY_LIST
this has only one value
com.undi.javascheme.SchemeEval.this has only one value
com.undi.javascheme.SchemeEval.emptyEnvironment has only one value
com.undi.javascheme.SchemeObject.keywords has only one value
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == java.util.HashMap.class
com.undi.javascheme.SchemeEval.emptyEnvironment.mType has only one value
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == null
com.undi.javascheme.SchemeObject.TRUE has only one value
com.undi.javascheme.SchemeObject.FALSE has only one value
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL has only one value
com.undi.javascheme.SchemeEval.this.globalEnvironment == null
com.undi.javascheme.SchemeEval.this.globalEnv == null
===========================================================================
com.undi.javascheme.SchemeEval$1.(com.undi.javascheme.SchemeEval):::ENTER
com.undi.javascheme.SchemeEval.emptyEnvironment == com.undi.javascheme.SchemeObject.THE_EMPTY_LIST
com.undi.javascheme.SchemeEval.this has only one value
com.undi.javascheme.SchemeEval.emptyEnvironment has only one value
com.undi.javascheme.SchemeObject.keywords has only one value
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == java.util.HashMap.class
com.undi.javascheme.SchemeEval.emptyEnvironment.mType has only one value
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == null
com.undi.javascheme.SchemeObject.TRUE has only one value
com.undi.javascheme.SchemeObject.FALSE has only one value
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL has only one value
com.undi.javascheme.SchemeEval.this.globalEnvironment == null
com.undi.javascheme.SchemeEval.this.globalEnv == null
===========================================================================
com.undi.javascheme.SchemeEval$1.(com.undi.javascheme.SchemeEval):::EXIT
com.undi.javascheme.SchemeEval.this == orig(com.undi.javascheme.SchemeEval.this)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeEval.this.globalEnvironment == orig(com.undi.javascheme.SchemeEval.this.globalEnvironment)
com.undi.javascheme.SchemeEval.this.globalEnv == orig(com.undi.javascheme.SchemeEval.this.globalEnv)
===========================================================================
com.undi.javascheme.SchemeEval:::CLASS
com.undi.javascheme.SchemeEval.emptyEnvironment == com.undi.javascheme.SchemeObject.THE_EMPTY_LIST
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeEval.emptyEnvironment has only one value
com.undi.javascheme.SchemeEval.emptyEnvironment != null
com.undi.javascheme.SchemeObject.keywords has only one value
com.undi.javascheme.SchemeObject.keywords != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == java.util.HashMap.class
com.undi.javascheme.SchemeEval.emptyEnvironment.mType has only one value
com.undi.javascheme.SchemeEval.emptyEnvironment.mType != null
com.undi.javascheme.SchemeObject$type.NUMBER has only one value
com.undi.javascheme.SchemeObject$type.NUMBER != null
com.undi.javascheme.SchemeObject$type.BOOLEAN has only one value
com.undi.javascheme.SchemeObject$type.BOOLEAN != null
com.undi.javascheme.SchemeObject$type.CHARACTER has only one value
com.undi.javascheme.SchemeObject$type.CHARACTER != null
com.undi.javascheme.SchemeObject$type.STRING has only one value
com.undi.javascheme.SchemeObject$type.STRING != null
com.undi.javascheme.SchemeObject$type.SYMBOL has only one value
com.undi.javascheme.SchemeObject$type.SYMBOL != null
com.undi.javascheme.SchemeObject$type.PAIR has only one value
com.undi.javascheme.SchemeObject$type.PAIR != null
com.undi.javascheme.SchemeObject$type.EMPTY_LIST has only one value
com.undi.javascheme.SchemeObject$type.EMPTY_LIST != null
com.undi.javascheme.SchemeObject$type.NATIVE_PROC has only one value
com.undi.javascheme.SchemeObject$type.NATIVE_PROC != null
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC has only one value
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC != null
com.undi.javascheme.SchemeObject$type.VECTOR has only one value
com.undi.javascheme.SchemeObject$type.VECTOR != null
com.undi.javascheme.SchemeObject$type.HASH_MAP has only one value
com.undi.javascheme.SchemeObject$type.HASH_MAP != null
com.undi.javascheme.SchemeObject$type.JAVA_OBJ has only one value
com.undi.javascheme.SchemeObject$type.JAVA_OBJ != null
com.undi.javascheme.SchemeObject$type.JAVA_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_METHOD != null
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR has only one value
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR != null
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD != null
com.undi.javascheme.SchemeObject$type.KEYWORD has only one value
com.undi.javascheme.SchemeObject$type.KEYWORD != null
com.undi.javascheme.SchemeObject$type.NUM_TYPES has only one value
com.undi.javascheme.SchemeObject$type.NUM_TYPES != null
com.undi.javascheme.SchemeObject$type.$VALUES has only one value
com.undi.javascheme.SchemeObject$type.$VALUES != null
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == com.undi.javascheme.SchemeObject$type[].class
com.undi.javascheme.SchemeObject$type.$VALUES[] contains no nulls and has only one value, of length 17
com.undi.javascheme.SchemeObject$type.$VALUES[] elements != null
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() == [com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type]
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() elements == com.undi.javascheme.SchemeObject.type.class
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == null
com.undi.javascheme.SchemeObject.TRUE has only one value
com.undi.javascheme.SchemeObject.TRUE != null
com.undi.javascheme.SchemeObject.TRUE.mType has only one value
com.undi.javascheme.SchemeObject.TRUE.mType != null
com.undi.javascheme.SchemeObject.TRUE.mData has only one value
com.undi.javascheme.SchemeObject.TRUE.mData != null
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == java.lang.Boolean.class
com.undi.javascheme.SchemeObject.FALSE has only one value
com.undi.javascheme.SchemeObject.FALSE != null
com.undi.javascheme.SchemeObject.symbolTable != null
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL != null
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL != null
com.undi.javascheme.SchemeObject.SET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL != null
com.undi.javascheme.SchemeObject.OK_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL != null
com.undi.javascheme.SchemeObject.IF_SYMBOL has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL != null
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL != null
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL != null
com.undi.javascheme.SchemeObject.COND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL != null
com.undi.javascheme.SchemeObject.ELSE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL != null
com.undi.javascheme.SchemeObject.LET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL != null
com.undi.javascheme.SchemeObject.LOAD_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL != null
com.undi.javascheme.SchemeObject.OR_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL != null
com.undi.javascheme.SchemeObject.AND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL != null
com.undi.javascheme.SchemeObject.APPLY_SYMBOL has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL != null
com.undi.javascheme.SchemeObject.WHILE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL != null
com.undi.javascheme.SchemeObject.EVAL_SYMBOL has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL != null
com.undi.javascheme.SchemeObject.FALSE.mData has only one value
com.undi.javascheme.SchemeObject.FALSE.mData != null
com.undi.javascheme.SchemeObject.symbolTable.mType has only one value
com.undi.javascheme.SchemeObject.symbolTable.mType != null
com.undi.javascheme.SchemeObject.symbolTable.mData != null
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData != null
size(com.undi.javascheme.SchemeObject$type.$VALUES[]) == 17
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval:::OBJECT
com.undi.javascheme.SchemeObject$type.PAIR == this.globalEnvironment.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == this.globalEnv.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == this.globalEnvironment.mData.getClass().getName()
this has only one value
this.globalEnvironment.mType has only one value
this.globalEnvironment.mType != null
this.globalEnvironment.mData has only one value
this.globalEnvironment.mData != null
this.globalEnvironment.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
this.globalEnv has only one value
this.globalEnv != null
this.globalEnv.mData has only one value
this.globalEnv.mData != null
this.globalEnv.mData.getClass().getName() == com.undi.javascheme.SchemeEval$1.class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.globalEnvironment.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.globalEnv.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != this.globalEnvironment.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != this.globalEnv.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != this.globalEnvironment.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != this.globalEnv.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != this.globalEnv.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != this.globalEnvironment.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != this.globalEnv.mData.getClass().getName()
this.globalEnvironment.mData.getClass().getName() != this.globalEnv.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.addBindingToFrame(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == arg2.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.SYMBOL == arg0.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == arg1.mType
com.undi.javascheme.SchemeObject$type.HASH_MAP == arg2.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == arg0.mData.getClass().getName()
this.globalEnvironment has only one value
this.globalEnvironment != null
arg0 != null
arg0.mData != null
arg1 != null
arg1.mData != null
arg2 has only one value
arg2 != null
arg2.mData has only one value
arg2.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.addBindingToFrame(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == arg2.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(arg2.mData.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == arg0.mType
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.globalEnvironment.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == arg1.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(arg1.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == arg2.mType
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(arg2.mType)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(this.globalEnvironment.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnvironment.mData == orig(this.globalEnvironment.mData)
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
arg0.mData == orig(arg0.mData)
arg1.mData == orig(arg1.mData)
arg1.mData.getClass().getName() == orig(arg1.mData.getClass().getName())
arg2.mData == orig(arg2.mData)
this.globalEnvironment has only one value
this.globalEnvironment != null
arg0.mData != null
arg1.mData != null
arg2.mData has only one value
arg2.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.addNativeProc(java.lang.String, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == arg1.mType
this.globalEnvironment has only one value
this.globalEnvironment != null
arg0 != null
arg1 != null
arg1.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.addNativeProc(java.lang.String, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.globalEnvironment.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == arg1.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(arg1.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(this.globalEnvironment.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnvironment.mData == orig(this.globalEnvironment.mData)
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.mData == orig(arg1.mData)
arg1.mData.getClass().getName() == orig(arg1.mData.getClass().getName())
this.globalEnvironment has only one value
this.globalEnvironment != null
arg1.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.defineVariable(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject$type.SYMBOL == arg0.mType
com.undi.javascheme.SchemeObject$type.PAIR == arg2.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == arg1.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg2.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == arg0.mData.getClass().getName()
this.globalEnvironment == arg2
this.globalEnvironment.mData == arg2.mData
this.globalEnvironment has only one value
this.globalEnvironment != null
arg0 != null
arg0.mData != null
arg1 != null
arg1.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.defineVariable(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == arg0.mType
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.PAIR == arg2.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.globalEnvironment.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(arg2.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == arg1.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(arg1.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg2.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(this.globalEnvironment.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(arg2.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnvironment == orig(arg2)
this.globalEnvironment.mData == arg2.mData
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
arg0.mData == orig(arg0.mData)
arg1.mData == orig(arg1.mData)
arg1.mData.getClass().getName() == orig(arg1.mData.getClass().getName())
arg2.mData == orig(this.globalEnvironment.mData)
arg2.mData == orig(arg2.mData)
this.globalEnvironment has only one value
this.globalEnvironment != null
arg0.mData != null
arg1.mData != null
arg2.mData has only one value
arg2.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeEval.extendEnvironment(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeEval.emptyEnvironment == arg0
com.undi.javascheme.SchemeEval.emptyEnvironment == arg1
com.undi.javascheme.SchemeEval.emptyEnvironment == arg2
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg0.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg1.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg2.mType
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
this.globalEnvironment == null
arg0.mData == null
arg1.mData == null
arg2.mData == null
===========================================================================
com.undi.javascheme.SchemeEval.extendEnvironment(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(arg0)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(arg1)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(arg2)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == return.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg0.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg1.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg2.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(arg1.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(arg2.mType)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
arg0.mData == orig(arg0.mData)
arg1.mData == orig(arg1.mData)
arg2.mData == orig(arg2.mData)
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
this.globalEnvironment == null
arg0.mData == null
arg1.mData == null
arg2.mData == null
return has only one value
return.mData has only one value
===========================================================================
com.undi.javascheme.SchemeEval.firstFrame(com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject$type.PAIR == arg0.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
this.globalEnvironment == arg0
this.globalEnvironment.mData == arg0.mData
this.globalEnvironment has only one value
this.globalEnvironment != null
===========================================================================
com.undi.javascheme.SchemeEval.firstFrame(com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == arg0.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.globalEnvironment.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == return.mType
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(this.globalEnvironment.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnvironment == orig(arg0)
this.globalEnvironment.mData == arg0.mData
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
arg0.mData == orig(this.globalEnvironment.mData)
arg0.mData == orig(arg0.mData)
this.globalEnvironment has only one value
this.globalEnvironment != null
arg0.mData has only one value
arg0.mData != null
return has only one value
return != null
return.mData has only one value
return.mData != null
===========================================================================
com.undi.javascheme.SchemeEval.makeFrame(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeEval.emptyEnvironment == arg0
com.undi.javascheme.SchemeEval.emptyEnvironment == arg1
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg0.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg1.mType
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
this.globalEnvironment == null
arg0.mData == null
arg1.mData == null
===========================================================================
com.undi.javascheme.SchemeEval.makeFrame(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(arg0)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(arg1)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg0.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg1.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(arg1.mType)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == return.mType
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
arg0.mData == orig(arg0.mData)
arg1.mData == orig(arg1.mData)
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
this.globalEnvironment == null
arg0.mData == null
arg1.mData == null
return has only one value
return.mData has only one value
===========================================================================
com.undi.javascheme.SchemeEval.setupEnvironment():::ENTER
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
this.globalEnvironment == null
===========================================================================
com.undi.javascheme.SchemeEval.setupEnvironment():::EXIT
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeEval.emptyEnvironment)
com.undi.javascheme.SchemeEval.emptyEnvironment == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mType)
com.undi.javascheme.SchemeEval.emptyEnvironment.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == return.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(this.globalEnv.mType)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeEval.emptyEnvironment.mData)
com.undi.javascheme.SchemeEval.emptyEnvironment.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.globalEnvironment == orig(this.globalEnvironment)
this.globalEnv == orig(this.globalEnv)
this.globalEnv.mData == orig(this.globalEnv.mData)
this.globalEnv.mData.getClass().getName() == orig(this.globalEnv.mData.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
this.globalEnvironment == null
return has only one value
return.mData has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$1:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$10:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$10.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$11:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$11.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$12:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$12.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$13:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$13.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$14:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$14.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$15:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$15.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$16:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$16.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$17:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$17.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$18:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$18.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$19:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$19.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$1.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$2:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$20:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$20.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$21:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$21.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$22:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$22.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$23:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$23.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$24:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$24.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$25:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$25.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$26:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$26.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$27:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$27.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$28:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$28.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$29:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$29.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$2.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$3:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$30:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$30.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$31:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$31.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$32:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$32.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$33:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$33.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$34:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$34.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$35:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$35.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$36:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$36.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$37:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$37.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$38:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$38.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$39:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$39.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$3.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$4:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$40:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$40.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$41:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$41.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$42:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$42.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$43:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$43.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$44:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$44.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$45:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$45.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$46:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$46.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$47:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$47.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$48:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$48.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$49:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$49.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$4.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$5:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$50:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$50.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$51:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$51.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$52:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$52.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$53:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$53.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$54:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$54.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$55:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$55.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$56:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$56.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$57:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$57.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$58:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$58.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$59:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$59.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$5.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$6:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$60:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$60.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$6.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$7:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$7.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$8:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$8.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$9:::OBJECT
this has only one value
===========================================================================
com.undi.javascheme.SchemeNatives$9.():::EXIT
===========================================================================
com.undi.javascheme.SchemeNatives$NativeProc:::OBJECT
===========================================================================
com.undi.javascheme.SchemeNatives$NativeProc.NativeProc():::EXIT
===========================================================================
com.undi.javascheme.SchemeObject$type:::CLASS
com.undi.javascheme.SchemeObject$type.NUMBER has only one value
com.undi.javascheme.SchemeObject$type.BOOLEAN has only one value
com.undi.javascheme.SchemeObject$type.CHARACTER has only one value
com.undi.javascheme.SchemeObject$type.STRING has only one value
com.undi.javascheme.SchemeObject$type.SYMBOL has only one value
com.undi.javascheme.SchemeObject$type.PAIR has only one value
com.undi.javascheme.SchemeObject$type.EMPTY_LIST has only one value
com.undi.javascheme.SchemeObject$type.NATIVE_PROC has only one value
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC has only one value
com.undi.javascheme.SchemeObject$type.VECTOR has only one value
com.undi.javascheme.SchemeObject$type.HASH_MAP has only one value
com.undi.javascheme.SchemeObject$type.JAVA_OBJ has only one value
com.undi.javascheme.SchemeObject$type.JAVA_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR has only one value
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD has only one value
com.undi.javascheme.SchemeObject$type.KEYWORD has only one value
com.undi.javascheme.SchemeObject$type.NUM_TYPES has only one value
com.undi.javascheme.SchemeObject$type.$VALUES has only one value
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == com.undi.javascheme.SchemeObject$type[].class
com.undi.javascheme.SchemeObject$type.$VALUES[] contains no nulls and has only one value, of length 17
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() == [com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type]
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() elements == com.undi.javascheme.SchemeObject.type.class
size(com.undi.javascheme.SchemeObject$type.$VALUES[]) == 17
===========================================================================
com.undi.javascheme.SchemeObject$type:::OBJECT
===========================================================================
com.undi.javascheme.SchemeObject$type.type(java.lang.String, int):::ENTER
arg0 != null
===========================================================================
com.undi.javascheme.SchemeObject$type.type(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
com.undi.javascheme.SchemeObject$type.values():::ENTER
===========================================================================
com.undi.javascheme.SchemeObject$type.values():::EXIT
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == return.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
return has only one value
return[] contains no nulls and has only one value, of length 17
size(return[]) == 17
com.undi.javascheme.SchemeObject$type.NUMBER in return[]
com.undi.javascheme.SchemeObject$type.BOOLEAN in return[]
com.undi.javascheme.SchemeObject$type.CHARACTER in return[]
com.undi.javascheme.SchemeObject$type.STRING in return[]
com.undi.javascheme.SchemeObject$type.SYMBOL in return[]
com.undi.javascheme.SchemeObject$type.PAIR in return[]
com.undi.javascheme.SchemeObject$type.EMPTY_LIST in return[]
com.undi.javascheme.SchemeObject$type.NATIVE_PROC in return[]
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC in return[]
com.undi.javascheme.SchemeObject$type.VECTOR in return[]
com.undi.javascheme.SchemeObject$type.HASH_MAP in return[]
com.undi.javascheme.SchemeObject$type.JAVA_OBJ in return[]
com.undi.javascheme.SchemeObject$type.JAVA_METHOD in return[]
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR in return[]
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD in return[]
com.undi.javascheme.SchemeObject$type.KEYWORD in return[]
com.undi.javascheme.SchemeObject$type.NUM_TYPES in return[]
===========================================================================
com.undi.javascheme.SchemeObject:::CLASS
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords has only one value
com.undi.javascheme.SchemeObject.keywords != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == java.util.HashMap.class
com.undi.javascheme.SchemeObject.TRUE has only one value
com.undi.javascheme.SchemeObject.TRUE != null
com.undi.javascheme.SchemeObject.TRUE.mType has only one value
com.undi.javascheme.SchemeObject.TRUE.mType != null
com.undi.javascheme.SchemeObject$type.NUMBER has only one value
com.undi.javascheme.SchemeObject$type.NUMBER != null
com.undi.javascheme.SchemeObject$type.BOOLEAN has only one value
com.undi.javascheme.SchemeObject$type.BOOLEAN != null
com.undi.javascheme.SchemeObject$type.CHARACTER has only one value
com.undi.javascheme.SchemeObject$type.CHARACTER != null
com.undi.javascheme.SchemeObject$type.STRING has only one value
com.undi.javascheme.SchemeObject$type.STRING != null
com.undi.javascheme.SchemeObject$type.SYMBOL has only one value
com.undi.javascheme.SchemeObject$type.SYMBOL != null
com.undi.javascheme.SchemeObject$type.PAIR has only one value
com.undi.javascheme.SchemeObject$type.PAIR != null
com.undi.javascheme.SchemeObject$type.EMPTY_LIST has only one value
com.undi.javascheme.SchemeObject$type.EMPTY_LIST != null
com.undi.javascheme.SchemeObject$type.NATIVE_PROC has only one value
com.undi.javascheme.SchemeObject$type.NATIVE_PROC != null
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC has only one value
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC != null
com.undi.javascheme.SchemeObject$type.VECTOR has only one value
com.undi.javascheme.SchemeObject$type.VECTOR != null
com.undi.javascheme.SchemeObject$type.HASH_MAP has only one value
com.undi.javascheme.SchemeObject$type.HASH_MAP != null
com.undi.javascheme.SchemeObject$type.JAVA_OBJ has only one value
com.undi.javascheme.SchemeObject$type.JAVA_OBJ != null
com.undi.javascheme.SchemeObject$type.JAVA_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_METHOD != null
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR has only one value
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR != null
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD != null
com.undi.javascheme.SchemeObject$type.KEYWORD has only one value
com.undi.javascheme.SchemeObject$type.KEYWORD != null
com.undi.javascheme.SchemeObject$type.NUM_TYPES has only one value
com.undi.javascheme.SchemeObject$type.NUM_TYPES != null
com.undi.javascheme.SchemeObject$type.$VALUES has only one value
com.undi.javascheme.SchemeObject$type.$VALUES != null
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == com.undi.javascheme.SchemeObject$type[].class
com.undi.javascheme.SchemeObject$type.$VALUES[] contains no nulls and has only one value, of length 17
com.undi.javascheme.SchemeObject$type.$VALUES[] elements != null
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() == [com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type]
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() elements == com.undi.javascheme.SchemeObject.type.class
com.undi.javascheme.SchemeObject.TRUE.mData has only one value
com.undi.javascheme.SchemeObject.TRUE.mData != null
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == java.lang.Boolean.class
com.undi.javascheme.SchemeObject.FALSE has only one value
com.undi.javascheme.SchemeObject.FALSE != null
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST has only one value
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST != null
com.undi.javascheme.SchemeObject.symbolTable != null
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL != null
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL != null
com.undi.javascheme.SchemeObject.SET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL != null
com.undi.javascheme.SchemeObject.OK_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL != null
com.undi.javascheme.SchemeObject.IF_SYMBOL has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL != null
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL != null
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL != null
com.undi.javascheme.SchemeObject.COND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL != null
com.undi.javascheme.SchemeObject.ELSE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL != null
com.undi.javascheme.SchemeObject.LET_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL != null
com.undi.javascheme.SchemeObject.LOAD_SYMBOL has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL != null
com.undi.javascheme.SchemeObject.OR_SYMBOL has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL != null
com.undi.javascheme.SchemeObject.AND_SYMBOL has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL != null
com.undi.javascheme.SchemeObject.APPLY_SYMBOL has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL != null
com.undi.javascheme.SchemeObject.WHILE_SYMBOL has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL != null
com.undi.javascheme.SchemeObject.EVAL_SYMBOL has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL != null
com.undi.javascheme.SchemeObject.FALSE.mType has only one value
com.undi.javascheme.SchemeObject.FALSE.mType != null
com.undi.javascheme.SchemeObject.FALSE.mData has only one value
com.undi.javascheme.SchemeObject.FALSE.mData != null
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType has only one value
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType != null
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == null
com.undi.javascheme.SchemeObject.symbolTable.mType has only one value
com.undi.javascheme.SchemeObject.symbolTable.mType != null
com.undi.javascheme.SchemeObject.symbolTable.mData != null
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.SET_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.OK_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.IF_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.COND_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.LET_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.OR_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.AND_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData != null
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType != null
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData has only one value
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData != null
size(com.undi.javascheme.SchemeObject$type.$VALUES[]) == 17
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject:::OBJECT
com.undi.javascheme.SchemeObject$type.NUMBER has only one value
com.undi.javascheme.SchemeObject$type.NUMBER != null
com.undi.javascheme.SchemeObject$type.BOOLEAN has only one value
com.undi.javascheme.SchemeObject$type.BOOLEAN != null
com.undi.javascheme.SchemeObject$type.CHARACTER has only one value
com.undi.javascheme.SchemeObject$type.CHARACTER != null
com.undi.javascheme.SchemeObject$type.STRING has only one value
com.undi.javascheme.SchemeObject$type.STRING != null
com.undi.javascheme.SchemeObject$type.SYMBOL has only one value
com.undi.javascheme.SchemeObject$type.SYMBOL != null
com.undi.javascheme.SchemeObject$type.PAIR has only one value
com.undi.javascheme.SchemeObject$type.PAIR != null
com.undi.javascheme.SchemeObject$type.EMPTY_LIST has only one value
com.undi.javascheme.SchemeObject$type.EMPTY_LIST != null
com.undi.javascheme.SchemeObject$type.NATIVE_PROC has only one value
com.undi.javascheme.SchemeObject$type.NATIVE_PROC != null
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC has only one value
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC != null
com.undi.javascheme.SchemeObject$type.VECTOR has only one value
com.undi.javascheme.SchemeObject$type.VECTOR != null
com.undi.javascheme.SchemeObject$type.HASH_MAP has only one value
com.undi.javascheme.SchemeObject$type.HASH_MAP != null
com.undi.javascheme.SchemeObject$type.JAVA_OBJ has only one value
com.undi.javascheme.SchemeObject$type.JAVA_OBJ != null
com.undi.javascheme.SchemeObject$type.JAVA_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_METHOD != null
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR has only one value
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR != null
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD has only one value
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD != null
com.undi.javascheme.SchemeObject$type.KEYWORD has only one value
com.undi.javascheme.SchemeObject$type.KEYWORD != null
com.undi.javascheme.SchemeObject$type.NUM_TYPES has only one value
com.undi.javascheme.SchemeObject$type.NUM_TYPES != null
com.undi.javascheme.SchemeObject$type.$VALUES has only one value
com.undi.javascheme.SchemeObject$type.$VALUES != null
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == com.undi.javascheme.SchemeObject$type[].class
com.undi.javascheme.SchemeObject$type.$VALUES[] contains no nulls and has only one value, of length 17
com.undi.javascheme.SchemeObject$type.$VALUES[] elements != null
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() == [com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type, com.undi.javascheme.SchemeObject.type]
com.undi.javascheme.SchemeObject$type.$VALUES[].getClass().getName() elements == com.undi.javascheme.SchemeObject.type.class
size(com.undi.javascheme.SchemeObject$type.$VALUES[]) == 17
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.SchemeObject():::EXIT
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mType == null
this.mData == null
===========================================================================
com.undi.javascheme.SchemeObject.car(com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject$type.PAIR == arg0.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
arg0 != null
arg0.mData != null
arg0.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.car(com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == arg0.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.PAIR == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mData == orig(arg0.mData)
arg0.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
arg0.mData != null
arg0.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
return != null
return.mType != null
return.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.mData.getClass().getName()
arg0.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.cdr(com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject$type.PAIR == arg0.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
arg0 != null
arg0.mData != null
arg0.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.cdr(com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == arg0.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.PAIR == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mData == orig(arg0.mData)
arg0.mData.getClass().getName() == return.mData.getClass().getName()
arg0.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
arg0.mData != null
arg0.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
return != null
return.mType != null
return.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.cons(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
arg0 != null
arg0.mType != null
arg0.mData != null
arg1 != null
arg1.mType != null
arg1.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
arg0.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.cons(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == return.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mType == orig(arg0.mType)
arg0.mData == orig(arg0.mData)
arg0.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
arg1.mType == orig(arg1.mType)
arg1.mData == orig(arg1.mData)
arg1.mData.getClass().getName() == return.mData.getClass().getName()
arg1.mData.getClass().getName() == orig(arg1.mData.getClass().getName())
arg0.mType != null
arg0.mData != null
arg1.mType != null
arg1.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
return != null
return.mData != null
return.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != return.mData.getClass().getName()
arg0.mData.getClass().getName() != arg1.mData.getClass().getName()
arg0.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.createBoolean(boolean):::ENTER
===========================================================================
com.undi.javascheme.SchemeObject.createBoolean(boolean):::EXIT
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == return.mType
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
return.mData.getClass().getName() == java.lang.Boolean.class
===========================================================================
com.undi.javascheme.SchemeObject.createEmptyList():::ENTER
===========================================================================
com.undi.javascheme.SchemeObject.createEmptyList():::EXIT
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == return.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
return has only one value
return.mData == null
===========================================================================
com.undi.javascheme.SchemeObject.getCar():::ENTER
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.getCar():::EXIT307
===========================================================================
com.undi.javascheme.SchemeObject.getCar():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
return != null
return.mType != null
return.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.getCdr():::ENTER
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.getCdr():::EXIT315
===========================================================================
com.undi.javascheme.SchemeObject.getCdr():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
this.mData.getClass().getName() == return.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
return != null
return.mType != null
return.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.getHashMap():::ENTER
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == this.mData.getClass().getName()
this.mType == com.undi.javascheme.SchemeObject$type.HASH_MAP
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this has only one value
this.mData has only one value
this.mData != null
===========================================================================
com.undi.javascheme.SchemeObject.getHashMap():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == this.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(this.mData.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.HASH_MAP
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(this.mType)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == return
this.mData == orig(this.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.mData has only one value
this.mData != null
return has only one value
return != null
===========================================================================
com.undi.javascheme.SchemeObject.getSymbol():::ENTER
this.mType == com.undi.javascheme.SchemeObject$type.SYMBOL
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mData != null
this.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.getSymbol():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.SYMBOL
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(this.mType)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == return
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.mData != null
this.mData.getClass().getName() == java.lang.String.class
return != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.hashCode():::ENTER
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName()
this.mType has only one value
this.mType != null
this.mData != null
this.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.hashCode():::EXIT762
===========================================================================
com.undi.javascheme.SchemeObject.hashCode():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == orig(this.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
this.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.mType has only one value
this.mType != null
this.mData != null
this.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.isEmptyList():::ENTER
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mType != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.isEmptyList():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == orig(this.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
(this.mData != null)  <==>  (return == false)
(this.mData != null)  ==>  (com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != this.mData.getClass().getName())
(this.mData != null)  ==>  (com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName())
(this.mData != null)  ==>  (this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
(this.mData != null)  ==>  (this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
(this.mData != null)  ==>  (this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
(this.mData != null)  ==>  (this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class)
(this.mData != null)  ==>  (this.mType == com.undi.javascheme.SchemeObject$type.PAIR)
(this.mData == null)  <==>  (return == true)
(this.mData == null)  ==>  (com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(this))
(this.mData == null)  ==>  (orig(this) has only one value)
(this.mData == null)  ==>  (this.mType == com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
this.mType != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.isEmptyList():::EXIT;condition="return == true"
this.mType == com.undi.javascheme.SchemeObject$type.EMPTY_LIST
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(this.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(this)
this.mData == null
return == true
orig(this) has only one value
===========================================================================
com.undi.javascheme.SchemeObject.isEmptyList():::EXIT;condition="not(return == true)"
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.mType)
this.mData != null
return == false
===========================================================================
com.undi.javascheme.SchemeObject.isHashMap():::ENTER
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == this.mData.getClass().getName()
this.mType == com.undi.javascheme.SchemeObject$type.HASH_MAP
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this has only one value
this.mData has only one value
this.mData != null
===========================================================================
com.undi.javascheme.SchemeObject.isHashMap():::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == this.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(this.mData.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.HASH_MAP
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(this.mType)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
this.mData has only one value
this.mData != null
return == true
===========================================================================
com.undi.javascheme.SchemeObject.isHashMap():::EXIT;condition="return == true"
===========================================================================
com.undi.javascheme.SchemeObject.makeHashMap(com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg0.mType
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == arg0
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
arg0.mData == null
===========================================================================
com.undi.javascheme.SchemeObject.makeHashMap(com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == arg0.mType
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(arg0.mType)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == return.mType
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(arg0)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mData == orig(arg0.mData)
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
arg0.mData == null
return has only one value
return.mData has only one value
===========================================================================
com.undi.javascheme.SchemeObject.makeNativeProc(com.undi.javascheme.SchemeNatives$NativeProc):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
arg0 != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.makeNativeProc(com.undi.javascheme.SchemeNatives$NativeProc):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == return.mType
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
return.mData == orig(arg0)
return.mData.getClass().getName() == orig(arg0.getClass().getName())
com.undi.javascheme.SchemeObject.symbolTable has only one value
com.undi.javascheme.SchemeObject.symbolTable.mData has only one value
return != null
return.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.makePair(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
arg0 != null
arg0.mType != null
arg0.mData != null
arg1 != null
arg1.mType != null
arg1.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
arg0.mData.getClass().getName() != arg1.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.makePair(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT288
===========================================================================
com.undi.javascheme.SchemeObject.makePair(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == return.mType
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mType == orig(arg0.mType)
arg0.mData == orig(arg0.mData)
arg0.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
arg1.mType == orig(arg1.mType)
arg1.mData == orig(arg1.mData)
arg1.mData.getClass().getName() == return.mData.getClass().getName()
arg1.mData.getClass().getName() == orig(arg1.mData.getClass().getName())
arg0.mType != null
arg0.mData != null
arg1.mType != null
arg1.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
return != null
return.mData != null
return.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg1.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != return.mData.getClass().getName()
arg0.mData.getClass().getName() != arg1.mData.getClass().getName()
arg0.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.makeSymbol(java.lang.String):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
arg0 != null
===========================================================================
com.undi.javascheme.SchemeObject.makeSymbol(java.lang.String):::EXIT548
===========================================================================
com.undi.javascheme.SchemeObject.makeSymbol(java.lang.String):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == return.mType
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.toString == orig(arg0.toString)
return.mData == orig(arg0)
return != null
return.mData != null
return.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != return.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != return.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.setBoolean(boolean):::ENTER
this.mType == null
this.mData == null
===========================================================================
com.undi.javascheme.SchemeObject.setBoolean(boolean):::EXIT
this.mType == com.undi.javascheme.SchemeObject$type.BOOLEAN
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData.getClass().getName() == java.lang.Boolean.class
===========================================================================
com.undi.javascheme.SchemeObject.setCar(com.undi.javascheme.SchemeObject):::ENTER
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
arg0 != null
arg0.mType != null
arg0.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.setCar(com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mType == orig(arg0.mType)
arg0.mData == orig(arg0.mData)
arg0.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
arg0.mType != null
arg0.mData != null
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
this.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() != arg0.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.setCdr(com.undi.javascheme.SchemeObject):::ENTER
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
this.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
arg0 != null
arg0.mType != null
arg0.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.setCdr(com.undi.javascheme.SchemeObject):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.PAIR
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(this.mType)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(this.mData)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
this.mData.getClass().getName() == arg0.mData.getClass().getName()
this.mData.getClass().getName() == orig(this.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.mType == orig(arg0.mType)
arg0.mData == orig(arg0.mData)
arg0.mData.getClass().getName() == orig(arg0.mData.getClass().getName())
this.mData != null
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
arg0.mType != null
arg0.mData.getClass().getName() == com.undi.javascheme.SchemeObject[].class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() != arg0.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() != arg0.mData.getClass().getName()
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() != arg0.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeObject.setSymbol(java.lang.String):::ENTER
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
this.mType == null
this.mData == null
arg0 != null
===========================================================================
com.undi.javascheme.SchemeObject.setSymbol(java.lang.String):::EXIT
com.undi.javascheme.SchemeObject.keywords == orig(com.undi.javascheme.SchemeObject.keywords)
com.undi.javascheme.SchemeObject.keywords.getClass().getName() == orig(com.undi.javascheme.SchemeObject.keywords.getClass().getName())
this.mType == com.undi.javascheme.SchemeObject$type.SYMBOL
com.undi.javascheme.SchemeObject$type.NUMBER == orig(com.undi.javascheme.SchemeObject$type.NUMBER)
com.undi.javascheme.SchemeObject$type.BOOLEAN == orig(com.undi.javascheme.SchemeObject$type.BOOLEAN)
com.undi.javascheme.SchemeObject$type.CHARACTER == orig(com.undi.javascheme.SchemeObject$type.CHARACTER)
com.undi.javascheme.SchemeObject$type.STRING == orig(com.undi.javascheme.SchemeObject$type.STRING)
com.undi.javascheme.SchemeObject$type.SYMBOL == orig(com.undi.javascheme.SchemeObject$type.SYMBOL)
com.undi.javascheme.SchemeObject$type.PAIR == orig(com.undi.javascheme.SchemeObject$type.PAIR)
com.undi.javascheme.SchemeObject$type.EMPTY_LIST == orig(com.undi.javascheme.SchemeObject$type.EMPTY_LIST)
com.undi.javascheme.SchemeObject$type.NATIVE_PROC == orig(com.undi.javascheme.SchemeObject$type.NATIVE_PROC)
com.undi.javascheme.SchemeObject$type.COMPOUND_PROC == orig(com.undi.javascheme.SchemeObject$type.COMPOUND_PROC)
com.undi.javascheme.SchemeObject$type.VECTOR == orig(com.undi.javascheme.SchemeObject$type.VECTOR)
com.undi.javascheme.SchemeObject$type.HASH_MAP == orig(com.undi.javascheme.SchemeObject$type.HASH_MAP)
com.undi.javascheme.SchemeObject$type.JAVA_OBJ == orig(com.undi.javascheme.SchemeObject$type.JAVA_OBJ)
com.undi.javascheme.SchemeObject$type.JAVA_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_METHOD)
com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR == orig(com.undi.javascheme.SchemeObject$type.JAVA_CONSTRUCTOR)
com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD == orig(com.undi.javascheme.SchemeObject$type.JAVA_STATIC_METHOD)
com.undi.javascheme.SchemeObject$type.KEYWORD == orig(com.undi.javascheme.SchemeObject$type.KEYWORD)
com.undi.javascheme.SchemeObject$type.NUM_TYPES == orig(com.undi.javascheme.SchemeObject$type.NUM_TYPES)
com.undi.javascheme.SchemeObject$type.$VALUES == orig(com.undi.javascheme.SchemeObject$type.$VALUES)
com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName() == orig(com.undi.javascheme.SchemeObject$type.$VALUES.getClass().getName())
com.undi.javascheme.SchemeObject$type.$VALUES[] == orig(com.undi.javascheme.SchemeObject$type.$VALUES[])
this.mData == orig(arg0)
this.mData.getClass().getName() == com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName()
com.undi.javascheme.SchemeObject.TRUE == orig(com.undi.javascheme.SchemeObject.TRUE)
com.undi.javascheme.SchemeObject.TRUE.mType == com.undi.javascheme.SchemeObject.FALSE.mType
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.TRUE.mType)
com.undi.javascheme.SchemeObject.TRUE.mType == orig(com.undi.javascheme.SchemeObject.FALSE.mType)
com.undi.javascheme.SchemeObject.TRUE.mData == orig(com.undi.javascheme.SchemeObject.TRUE.mData)
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.TRUE.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.FALSE.mData.getClass().getName())
com.undi.javascheme.SchemeObject.FALSE == orig(com.undi.javascheme.SchemeObject.FALSE)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST)
com.undi.javascheme.SchemeObject.symbolTable == orig(com.undi.javascheme.SchemeObject.symbolTable)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL)
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL)
com.undi.javascheme.SchemeObject.SET_SYMBOL == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL)
com.undi.javascheme.SchemeObject.OK_SYMBOL == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL)
com.undi.javascheme.SchemeObject.IF_SYMBOL == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL)
com.undi.javascheme.SchemeObject.COND_SYMBOL == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL)
com.undi.javascheme.SchemeObject.LET_SYMBOL == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL)
com.undi.javascheme.SchemeObject.OR_SYMBOL == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL)
com.undi.javascheme.SchemeObject.AND_SYMBOL == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL)
com.undi.javascheme.SchemeObject.FALSE.mData == orig(com.undi.javascheme.SchemeObject.FALSE.mData)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mType)
com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData == orig(com.undi.javascheme.SchemeObject.THE_EMPTY_LIST.mData)
com.undi.javascheme.SchemeObject.symbolTable.mType == orig(com.undi.javascheme.SchemeObject.symbolTable.mType)
com.undi.javascheme.SchemeObject.symbolTable.mData == orig(com.undi.javascheme.SchemeObject.symbolTable.mData)
com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.SET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OK_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.IF_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.COND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LET_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.OR_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.AND_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mType == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mType)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.QUOTE_SYMBOL.mData.getClass().getName() == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData.getClass().getName())
com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.DEFINE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.SET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.SET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OK_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OK_SYMBOL.mData)
com.undi.javascheme.SchemeObject.IF_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.IF_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LAMBDA_SYMBOL.mData)
com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.BEGIN_SYMBOL.mData)
com.undi.javascheme.SchemeObject.COND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.COND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.ELSE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LET_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LET_SYMBOL.mData)
com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.LOAD_SYMBOL.mData)
com.undi.javascheme.SchemeObject.OR_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.OR_SYMBOL.mData)
com.undi.javascheme.SchemeObject.AND_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.AND_SYMBOL.mData)
com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.APPLY_SYMBOL.mData)
com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.WHILE_SYMBOL.mData)
com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData == orig(com.undi.javascheme.SchemeObject.EVAL_SYMBOL.mData)
arg0.toString == orig(arg0.toString)
this.mData != null
this.mData.getClass().getName() == java.lang.String.class
com.undi.javascheme.SchemeObject.keywords.getClass().getName() != this.mData.getClass().getName()
this.mData.getClass().getName() != com.undi.javascheme.SchemeObject.symbolTable.mData.getClass().getName()
===========================================================================
com.undi.javascheme.SchemeReader$1:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[] contains only nulls and has only one value, of length 16
com.undi.javascheme.SchemeReader.this.readFuncs[] elements == null
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$1.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[] contains only nulls and has only one value, of length 16
com.undi.javascheme.SchemeReader.this.readFuncs[] elements == null
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$1.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$2:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$2.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$2.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$3:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$3.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$3.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$4:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$4.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$4.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$5:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$5.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$5.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$6:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$6.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$6.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$7:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$7.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$7.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader$8:::OBJECT
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$8.(com.undi.javascheme.SchemeReader):::ENTER
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
com.undi.javascheme.SchemeReader.this.readFuncs[].getClass().getName() elements == null
size(com.undi.javascheme.SchemeReader.this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader$8.(com.undi.javascheme.SchemeReader):::EXIT
com.undi.javascheme.SchemeReader.this == orig(com.undi.javascheme.SchemeReader.this)
com.undi.javascheme.SchemeReader.this.mBufIn == orig(com.undi.javascheme.SchemeReader.this.mBufIn)
com.undi.javascheme.SchemeReader.this.readFuncs == orig(com.undi.javascheme.SchemeReader.this.readFuncs)
com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName() == orig(com.undi.javascheme.SchemeReader.this.readFuncs.getClass().getName())
com.undi.javascheme.SchemeReader.this.readFuncs[] == orig(com.undi.javascheme.SchemeReader.this.readFuncs[])
===========================================================================
com.undi.javascheme.SchemeReader:::CLASS
===========================================================================
com.undi.javascheme.SchemeReader:::OBJECT
this.readFuncs.getClass().getName() == com.undi.javascheme.SchemeReader$ReadFunc[].class
this.readFuncs[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.readFuncs[].getClass().getName() elements == null
size(this.readFuncs[]) == 16
===========================================================================
com.undi.javascheme.SchemeReader.SchemeReader(java.io.InputStream):::ENTER
arg0.getClass().getName() == java.io.BufferedInputStream.class
===========================================================================
com.undi.javascheme.SchemeReader.SchemeReader(java.io.InputStream):::EXIT
===========================================================================
com.undi.util.HashCodeUtil:::CLASS
===========================================================================
com.undi.util.HashCodeUtil.firstTerm(int):::ENTER
arg0 == 23
===========================================================================
com.undi.util.HashCodeUtil.firstTerm(int):::EXIT
return == 851
===========================================================================
com.undi.util.HashCodeUtil.hash(int, int):::ENTER
arg0 == 23
===========================================================================
com.undi.util.HashCodeUtil.hash(int, int):::EXIT
===========================================================================
com.undi.util.HashCodeUtil.hash(int, java.lang.Object):::ENTER
arg0 == 23
arg1 != null
arg1.getClass().getName() == java.lang.String.class
===========================================================================
com.undi.util.HashCodeUtil.hash(int, java.lang.Object):::EXIT
===========================================================================
com.undi.util.HashCodeUtil.isArray(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
===========================================================================
com.undi.util.HashCodeUtil.isArray(java.lang.Object):::EXIT
return == false
===========================================================================
com.undi.util.HashCodeUtil.isArray(java.lang.Object):::EXIT;condition="not(return == true)"
Exiting Daikon.
