Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 5 times.  Unmatched entries are ignored!
Unterminated calls:
  org.KonohaScript.Konoha.main(java.lang.String[]) : 1 invocation
  org.KonohaScript.Konoha.Eval(java.lang.String, long) : 1 invocation
  org.KonohaScript.KNameSpace.Eval(java.lang.String, long) : 1 invocation
  org.KonohaScript.UntypedNode.ParseNewNode2(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int) : 1 invocation
  org.KonohaScript.UntypedNode.ParseToken(org.KonohaScript.KToken, java.util.ArrayList, int, int) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
org.KonohaScript.CommonSyntax:::OBJECT
this has only one value
===========================================================================
org.KonohaScript.CommonSyntax.CommonSyntax():::EXIT
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha:::CLASS
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == false
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha:::OBJECT
this has only one value
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.Add(int, int):::ENTER
arg0 == 1
arg1 == 2
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.Add(int, int):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
return == 3
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.CloseBraceMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent == 0
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 38
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg2 == 34
arg3 == 35
arg4 has only one value
arg4[] contains no nulls and has only one value, of length 16
arg4[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ns.ImportedTokenMatrix[]) == 41
size(arg1[]) == 38
size(arg4[]) == 16
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.CloseBraceMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.TopLevel == orig(arg0.TopLevel)
arg0.SkipIndent == orig(arg0.SkipIndent)
arg0.LastIndent == orig(arg0.LastIndent)
arg0.ns == orig(arg0.ns)
arg0.ns.KonohaContext == orig(arg0.ns.KonohaContext)
arg0.ns.ParentNameSpace == orig(arg0.ns.ParentNameSpace)
arg0.ns.ImportedNameSpaceList == orig(arg0.ns.ImportedNameSpaceList)
arg0.ns.DefinedTokenMatrix == orig(arg0.ns.DefinedTokenMatrix)
arg0.ns.ImportedTokenMatrix == orig(arg0.ns.ImportedTokenMatrix)
arg0.ns.ImportedTokenMatrix.getClass().getName() == orig(arg0.ns.ImportedTokenMatrix.getClass().getName())
arg0.ns.ImportedTokenMatrix[] == orig(arg0.ns.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ns.DefinedSymbolTable == orig(arg0.ns.DefinedSymbolTable)
arg0.ns.ImportedSymbolTable == orig(arg0.ns.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
arg1[] == orig(arg1[])
size(arg4[])-1 == orig(size(arg4[]))
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent == 0
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1[] contains no nulls and has only one value, of length 38
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[] contains no nulls and has only one value, of length 17
arg4[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
return == -1
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.CloseParenthesisMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent one of { 0, 4 }
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1 has only one value
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
arg3 == 35
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
size(arg0.ns.ImportedTokenMatrix[]) == 41
size(arg1[]) one of { 37, 38 }
size(arg4[]) one of { 3, 4 }
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.CloseParenthesisMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.TopLevel == orig(arg0.TopLevel)
arg0.SkipIndent == orig(arg0.SkipIndent)
arg0.LastIndent == orig(arg0.LastIndent)
arg0.ns == orig(arg0.ns)
arg0.ns.KonohaContext == orig(arg0.ns.KonohaContext)
arg0.ns.ParentNameSpace == orig(arg0.ns.ParentNameSpace)
arg0.ns.ImportedNameSpaceList == orig(arg0.ns.ImportedNameSpaceList)
arg0.ns.DefinedTokenMatrix == orig(arg0.ns.DefinedTokenMatrix)
arg0.ns.ImportedTokenMatrix == orig(arg0.ns.ImportedTokenMatrix)
arg0.ns.ImportedTokenMatrix.getClass().getName() == orig(arg0.ns.ImportedTokenMatrix.getClass().getName())
arg0.ns.ImportedTokenMatrix[] == orig(arg0.ns.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ns.DefinedSymbolTable == orig(arg0.ns.DefinedSymbolTable)
arg0.ns.ImportedSymbolTable == orig(arg0.ns.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
arg1[] == orig(arg1[])
size(arg4[])-1 == orig(size(arg4[]))
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent one of { 0, 4 }
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
return == -1
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.DefineIntegerMethod(org.KonohaScript.KNameSpace):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace == null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix has only one value
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable has only one value
arg0.ImportedSymbolTable has only one value
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.DefineIntegerMethod(org.KonohaScript.KNameSpace):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace == null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix has only one value
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable has only one value
arg0.ImportedSymbolTable has only one value
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.IndentToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1 has only one value
arg1.toString == "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}"
arg2 one of { 17, 38, 67 }
arg3 has only one value
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg3[]) one of { 7, 17, 33 }
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.IndentToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
size(arg3[])-1 == orig(size(arg3[]))
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1.toString == "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}"
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
return one of { 19, 40, 68 }
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.LoadDefaultSyntax(org.KonohaScript.KNameSpace):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace == null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix == null
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable == null
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.LoadDefaultSyntax(org.KonohaScript.KNameSpace):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace == null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix has only one value
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable has only one value
arg0.ImportedSymbolTable has only one value
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.MergeOperatorMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent == 0
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1 has only one value
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 == 13
arg4 has only one value
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.MergeOperatorMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT247
arg1[] == orig(arg1[])
arg4[] == orig(arg4[])
return one of { 3, 12 }
orig(arg2) one of { 2, 11 }
orig(size(arg1[])) one of { 15, 23 }
orig(size(arg4[])) one of { 15, 23 }
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.MergeOperatorMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT254
size(arg1[])-1 == orig(size(arg1[]))
size(arg4[])-1 == orig(size(arg4[]))
return one of { 2, 11 }
orig(arg1[].getClass().getName()) one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
orig(arg2) one of { 1, 10 }
orig(arg4[].getClass().getName()) one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.MergeOperatorMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.TopLevel == orig(arg0.TopLevel)
arg0.SkipIndent == orig(arg0.SkipIndent)
arg0.LastIndent == orig(arg0.LastIndent)
arg0.ns == orig(arg0.ns)
arg0.ns.KonohaContext == orig(arg0.ns.KonohaContext)
arg0.ns.ParentNameSpace == orig(arg0.ns.ParentNameSpace)
arg0.ns.ImportedNameSpaceList == orig(arg0.ns.ImportedNameSpaceList)
arg0.ns.DefinedTokenMatrix == orig(arg0.ns.DefinedTokenMatrix)
arg0.ns.ImportedTokenMatrix == orig(arg0.ns.ImportedTokenMatrix)
arg0.ns.ImportedTokenMatrix.getClass().getName() == orig(arg0.ns.ImportedTokenMatrix.getClass().getName())
arg0.ns.ImportedTokenMatrix[] == orig(arg0.ns.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ns.DefinedSymbolTable == orig(arg0.ns.DefinedSymbolTable)
arg0.ns.ImportedSymbolTable == orig(arg0.ns.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
(return one of { 2, 11 })  <==>  (orig(arg1[].getClass().getName()) one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] })
(return one of { 2, 11 })  <==>  (orig(arg2) one of { 1, 10 })
(return one of { 2, 11 })  <==>  (orig(arg4[].getClass().getName()) one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] })
(return one of { 2, 11 })  <==>  (size(arg1[])-1 == orig(size(arg1[])))
(return one of { 2, 11 })  <==>  (size(arg4[])-1 == orig(size(arg4[])))
(return one of { 3, 12 })  <==>  (orig(arg1[].getClass().getName()) one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] })
(return one of { 3, 12 })  <==>  (orig(arg2) one of { 2, 11 })
(return one of { 3, 12 })  <==>  (orig(arg4[].getClass().getName()) one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] })
(return one of { 3, 12 })  <==>  (orig(size(arg1[])) one of { 15, 23 })
(return one of { 3, 12 })  <==>  (orig(size(arg4[])) one of { 15, 23 })
(return one of { 3, 12 })  ==>  (arg1[] == orig(arg1[]))
(return one of { 3, 12 })  ==>  (arg4[] == orig(arg4[]))
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent == 0
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.MiniKonoha():::EXIT
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.NumberLiteralToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1 has only one value
arg1.toString == "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}"
arg3 has only one value
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.NumberLiteralToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
size(arg3[])-1 == orig(size(arg3[]))
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1.toString == "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}"
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.OpenBraceMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent == 0
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 38
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg2 == 6
arg3 == 35
arg4 has only one value
arg4[] contains no nulls and has only one value, of length 38
arg4[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ns.ImportedTokenMatrix[]) == 41
size(arg1[]) == 38
size(arg4[]) == 38
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.OpenBraceMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.TopLevel == orig(arg0.TopLevel)
arg0.SkipIndent == orig(arg0.SkipIndent)
arg0.LastIndent == orig(arg0.LastIndent)
arg0.ns == orig(arg0.ns)
arg0.ns.KonohaContext == orig(arg0.ns.KonohaContext)
arg0.ns.ParentNameSpace == orig(arg0.ns.ParentNameSpace)
arg0.ns.ImportedNameSpaceList == orig(arg0.ns.ImportedNameSpaceList)
arg0.ns.DefinedTokenMatrix == orig(arg0.ns.DefinedTokenMatrix)
arg0.ns.ImportedTokenMatrix == orig(arg0.ns.ImportedTokenMatrix)
arg0.ns.ImportedTokenMatrix.getClass().getName() == orig(arg0.ns.ImportedTokenMatrix.getClass().getName())
arg0.ns.ImportedTokenMatrix[] == orig(arg0.ns.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ns.DefinedSymbolTable == orig(arg0.ns.DefinedSymbolTable)
arg0.ns.ImportedSymbolTable == orig(arg0.ns.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
size(arg1[])-1 == orig(size(arg1[]))
size(arg4[])-1 == orig(size(arg4[]))
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent == 0
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[] contains no nulls and has only one value, of length 39
arg4[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
return == 35
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.OpenParenthesisMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent one of { 0, 4 }
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1 has only one value
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
arg3 == 35
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ns.ImportedTokenMatrix[]) == 41
size(arg1[]) one of { 37, 38 }
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.OpenParenthesisMacro(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.TopLevel == orig(arg0.TopLevel)
arg0.SkipIndent == orig(arg0.SkipIndent)
arg0.LastIndent == orig(arg0.LastIndent)
arg0.ns == orig(arg0.ns)
arg0.ns.KonohaContext == orig(arg0.ns.KonohaContext)
arg0.ns.ParentNameSpace == orig(arg0.ns.ParentNameSpace)
arg0.ns.ImportedNameSpaceList == orig(arg0.ns.ImportedNameSpaceList)
arg0.ns.DefinedTokenMatrix == orig(arg0.ns.DefinedTokenMatrix)
arg0.ns.ImportedTokenMatrix == orig(arg0.ns.ImportedTokenMatrix)
arg0.ns.ImportedTokenMatrix.getClass().getName() == orig(arg0.ns.ImportedTokenMatrix.getClass().getName())
arg0.ns.ImportedTokenMatrix[] == orig(arg0.ns.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ns.DefinedSymbolTable == orig(arg0.ns.DefinedSymbolTable)
arg0.ns.ImportedSymbolTable == orig(arg0.ns.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
size(arg4[])-1 == orig(size(arg4[]))
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent one of { 0, 4 }
arg0.ns has only one value
arg0.ns.KonohaContext has only one value
arg0.ns.ParentNameSpace has only one value
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1[] contains no nulls and has only one value, of length 38
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseMethodDecl(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::ENTER
arg0 has only one value
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Type"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod == null
arg0.Syntax.ParentSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken has only one value
arg0.KeyToken.uline == 1000
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "int"
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg2 == 35
arg3 == 39
arg4 == 8
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg1[]) == 39
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseMethodDecl(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT436
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseMethodDecl(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.Parent == orig(arg0.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.PreviousNode == orig(arg0.PreviousNode)
arg0.NextNode == orig(arg0.NextNode)
arg0.NodeNameSpace == orig(arg0.NodeNameSpace)
arg0.NodeNameSpace.KonohaContext == orig(arg0.NodeNameSpace.KonohaContext)
arg0.NodeNameSpace.ParentNameSpace == orig(arg0.NodeNameSpace.ParentNameSpace)
arg0.NodeNameSpace.ImportedNameSpaceList == orig(arg0.NodeNameSpace.ImportedNameSpaceList)
arg0.NodeNameSpace.DefinedTokenMatrix == orig(arg0.NodeNameSpace.DefinedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix == orig(arg0.NodeNameSpace.ImportedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.NodeNameSpace.ImportedTokenMatrix[] == orig(arg0.NodeNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.NodeNameSpace.DefinedSymbolTable == orig(arg0.NodeNameSpace.DefinedSymbolTable)
arg0.NodeNameSpace.ImportedSymbolTable == orig(arg0.NodeNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.Syntax.TypeObject == orig(arg0.Syntax.TypeObject)
arg0.Syntax.TypeMethod == orig(arg0.Syntax.TypeMethod)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
arg0.KeyToken.uline == orig(arg0.KeyToken.uline)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.NodeList == orig(arg0.NodeList)
arg1[] == orig(arg1[])
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace == null
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Error"
arg0.Syntax.SyntaxFlag == 27200
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod == null
arg0.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken has only one value
arg0.KeyToken.uline == 1000
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "fibo"
arg0.KeyToken.flag == 1
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == java.lang.String.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
return == -1
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseSymbol(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::ENTER
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Symbol"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod == null
arg0.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken.uline == 2
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 24
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 == 24
arg4 == 0
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg1[]) == 24
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseSymbol(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.Parent == orig(arg0.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.PreviousNode == orig(arg0.PreviousNode)
arg0.NextNode == orig(arg0.NextNode)
arg0.NodeNameSpace == orig(arg0.NodeNameSpace)
arg0.NodeNameSpace.KonohaContext == orig(arg0.NodeNameSpace.KonohaContext)
arg0.NodeNameSpace.ParentNameSpace == orig(arg0.NodeNameSpace.ParentNameSpace)
arg0.NodeNameSpace.ImportedNameSpaceList == orig(arg0.NodeNameSpace.ImportedNameSpaceList)
arg0.NodeNameSpace.DefinedTokenMatrix == orig(arg0.NodeNameSpace.DefinedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix == orig(arg0.NodeNameSpace.ImportedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.NodeNameSpace.ImportedTokenMatrix[] == orig(arg0.NodeNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.NodeNameSpace.DefinedSymbolTable == orig(arg0.NodeNameSpace.DefinedSymbolTable)
arg0.NodeNameSpace.ImportedSymbolTable == orig(arg0.NodeNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.Syntax == orig(arg0.Syntax)
arg0.Syntax.PackageNameSpace == orig(arg0.Syntax.PackageNameSpace)
arg0.Syntax.SyntaxName == orig(arg0.Syntax.SyntaxName)
arg0.Syntax.SyntaxName.toString == orig(arg0.Syntax.SyntaxName.toString)
arg0.Syntax.SyntaxFlag == orig(arg0.Syntax.SyntaxFlag)
arg0.Syntax.ParseObject == orig(arg0.Syntax.ParseObject)
arg0.Syntax.ParseObject.getClass().getName() == orig(arg0.Syntax.ParseObject.getClass().getName())
arg0.Syntax.ParseMethod == orig(arg0.Syntax.ParseMethod)
arg0.Syntax.TypeObject == orig(arg0.Syntax.TypeObject)
arg0.Syntax.TypeMethod == orig(arg0.Syntax.TypeMethod)
arg0.Syntax.ParentSyntax == orig(arg0.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
arg0.KeyToken == orig(arg0.KeyToken)
arg0.KeyToken.uline == orig(arg0.KeyToken.uline)
arg0.KeyToken.ParsedText == orig(arg0.KeyToken.ParsedText)
arg0.KeyToken.ParsedText.toString == orig(arg0.KeyToken.ParsedText.toString)
arg0.KeyToken.flag == orig(arg0.KeyToken.flag)
arg0.KeyToken.ResolvedSyntax == orig(arg0.KeyToken.ResolvedSyntax)
arg0.KeyToken.ResolvedObject == orig(arg0.KeyToken.ResolvedObject)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.NodeList == orig(arg0.NodeList)
arg1[] == orig(arg1[])
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Symbol"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod == null
arg0.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken.uline == 2
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1[] contains no nulls and has only one value, of length 24
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseVarDecl(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::ENTER
arg0 has only one value
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Type"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod has only one value
arg0.Syntax.ParentSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken has only one value
arg0.KeyToken.uline == 1000
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "int"
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg2 == 35
arg3 == 39
arg4 == 8
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg1[]) == 39
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseVarDecl(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT411
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseVarDecl(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.Parent == orig(arg0.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.PreviousNode == orig(arg0.PreviousNode)
arg0.NextNode == orig(arg0.NextNode)
arg0.NodeNameSpace == orig(arg0.NodeNameSpace)
arg0.NodeNameSpace.KonohaContext == orig(arg0.NodeNameSpace.KonohaContext)
arg0.NodeNameSpace.ParentNameSpace == orig(arg0.NodeNameSpace.ParentNameSpace)
arg0.NodeNameSpace.ImportedNameSpaceList == orig(arg0.NodeNameSpace.ImportedNameSpaceList)
arg0.NodeNameSpace.DefinedTokenMatrix == orig(arg0.NodeNameSpace.DefinedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix == orig(arg0.NodeNameSpace.ImportedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.NodeNameSpace.ImportedTokenMatrix[] == orig(arg0.NodeNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.NodeNameSpace.DefinedSymbolTable == orig(arg0.NodeNameSpace.DefinedSymbolTable)
arg0.NodeNameSpace.ImportedSymbolTable == orig(arg0.NodeNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.Syntax == orig(arg0.Syntax)
arg0.Syntax.PackageNameSpace == orig(arg0.Syntax.PackageNameSpace)
arg0.Syntax.SyntaxName == orig(arg0.Syntax.SyntaxName)
arg0.Syntax.SyntaxName.toString == orig(arg0.Syntax.SyntaxName.toString)
arg0.Syntax.SyntaxFlag == orig(arg0.Syntax.SyntaxFlag)
arg0.Syntax.ParseObject == orig(arg0.Syntax.ParseObject)
arg0.Syntax.ParseObject.getClass().getName() == orig(arg0.Syntax.ParseObject.getClass().getName())
arg0.Syntax.ParseMethod == orig(arg0.Syntax.ParseMethod)
arg0.Syntax.TypeObject == orig(arg0.Syntax.TypeObject)
arg0.Syntax.TypeMethod == orig(arg0.Syntax.TypeMethod)
arg0.Syntax.ParentSyntax == orig(arg0.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
arg0.KeyToken == orig(arg0.KeyToken)
arg0.KeyToken.uline == orig(arg0.KeyToken.uline)
arg0.KeyToken.ParsedText == orig(arg0.KeyToken.ParsedText)
arg0.KeyToken.ParsedText.toString == orig(arg0.KeyToken.ParsedText.toString)
arg0.KeyToken.flag == orig(arg0.KeyToken.flag)
arg0.KeyToken.ResolvedSyntax == orig(arg0.KeyToken.ResolvedSyntax)
arg0.KeyToken.ResolvedObject == orig(arg0.KeyToken.ResolvedObject)
arg0.KeyToken.ResolvedObject.getClass().getName() == orig(arg0.KeyToken.ResolvedObject.getClass().getName())
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg1[] == orig(arg1[])
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Type"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod has only one value
arg0.Syntax.ParentSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken has only one value
arg0.KeyToken.uline == 1000
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "int"
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList has only one value
arg0.NodeList[] contains no nulls and has only one value, of length 1
arg0.NodeList[] elements has only one value
arg0.NodeList[].getClass().getName() == [org.KonohaScript.KToken]
arg0.NodeList[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
return == -1
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.NodeList[]) == 1
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseVarDeclIteration(org.KonohaScript.UntypedNode, org.KonohaScript.KToken, java.util.ArrayList, int, int, int):::ENTER
arg0 has only one value
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Type"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod has only one value
arg0.Syntax.ParentSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken has only one value
arg0.KeyToken.uline == 1000
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "int"
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1 has only one value
arg1.uline == 1000
arg1.ParsedText has only one value
arg1.ParsedText.toString == "int"
arg1.flag == 0
arg1.ResolvedSyntax has only one value
arg1.ResolvedSyntax.PackageNameSpace has only one value
arg1.ResolvedSyntax.SyntaxName has only one value
arg1.ResolvedSyntax.SyntaxName.toString == "$Type"
arg1.ResolvedSyntax.SyntaxFlag == 1
arg1.ResolvedSyntax.ParseObject has only one value
arg1.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.ResolvedSyntax.ParseMethod has only one value
arg1.ResolvedSyntax.TypeObject == null
arg1.ResolvedSyntax.TypeMethod has only one value
arg1.ResolvedSyntax.ParentSyntax has only one value
arg1.ResolvedObject has only one value
arg1.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
arg2 has only one value
arg2[] contains no nulls and has only one value, of length 39
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 == 36
arg4 == 39
arg5 == 8
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg2[]) == 39
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseVarDeclIteration(org.KonohaScript.UntypedNode, org.KonohaScript.KToken, java.util.ArrayList, int, int, int):::EXIT396
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.ParseVarDeclIteration(org.KonohaScript.UntypedNode, org.KonohaScript.KToken, java.util.ArrayList, int, int, int):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.Parent == orig(arg0.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.PreviousNode == orig(arg0.PreviousNode)
arg0.NextNode == orig(arg0.NextNode)
arg0.NodeNameSpace == orig(arg0.NodeNameSpace)
arg0.NodeNameSpace.KonohaContext == orig(arg0.NodeNameSpace.KonohaContext)
arg0.NodeNameSpace.ParentNameSpace == orig(arg0.NodeNameSpace.ParentNameSpace)
arg0.NodeNameSpace.ImportedNameSpaceList == orig(arg0.NodeNameSpace.ImportedNameSpaceList)
arg0.NodeNameSpace.DefinedTokenMatrix == orig(arg0.NodeNameSpace.DefinedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix == orig(arg0.NodeNameSpace.ImportedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.NodeNameSpace.ImportedTokenMatrix[] == orig(arg0.NodeNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.NodeNameSpace.DefinedSymbolTable == orig(arg0.NodeNameSpace.DefinedSymbolTable)
arg0.NodeNameSpace.ImportedSymbolTable == orig(arg0.NodeNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.Syntax == orig(arg0.Syntax)
arg0.Syntax.PackageNameSpace == orig(arg0.Syntax.PackageNameSpace)
arg0.Syntax.SyntaxName == orig(arg0.Syntax.SyntaxName)
arg0.Syntax.SyntaxName.toString == orig(arg0.Syntax.SyntaxName.toString)
arg0.Syntax.SyntaxFlag == orig(arg0.Syntax.SyntaxFlag)
arg0.Syntax.ParseObject == orig(arg0.Syntax.ParseObject)
arg0.Syntax.ParseObject.getClass().getName() == orig(arg0.Syntax.ParseObject.getClass().getName())
arg0.Syntax.ParseMethod == orig(arg0.Syntax.ParseMethod)
arg0.Syntax.TypeObject == orig(arg0.Syntax.TypeObject)
arg0.Syntax.TypeMethod == orig(arg0.Syntax.TypeMethod)
arg0.Syntax.ParentSyntax == orig(arg0.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
arg0.KeyToken == orig(arg0.KeyToken)
arg0.KeyToken.uline == orig(arg0.KeyToken.uline)
arg0.KeyToken.ParsedText == orig(arg0.KeyToken.ParsedText)
arg0.KeyToken.ParsedText.toString == orig(arg0.KeyToken.ParsedText.toString)
arg0.KeyToken.flag == orig(arg0.KeyToken.flag)
arg0.KeyToken.ResolvedSyntax == orig(arg0.KeyToken.ResolvedSyntax)
arg0.KeyToken.ResolvedObject == orig(arg0.KeyToken.ResolvedObject)
arg0.KeyToken.ResolvedObject.getClass().getName() == orig(arg0.KeyToken.ResolvedObject.getClass().getName())
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg1.uline == orig(arg1.uline)
arg1.ParsedText == orig(arg1.ParsedText)
arg1.ParsedText.toString == orig(arg1.ParsedText.toString)
arg1.flag == orig(arg1.flag)
arg1.ResolvedSyntax == orig(arg1.ResolvedSyntax)
arg1.ResolvedSyntax.PackageNameSpace == orig(arg1.ResolvedSyntax.PackageNameSpace)
arg1.ResolvedSyntax.SyntaxName == orig(arg1.ResolvedSyntax.SyntaxName)
arg1.ResolvedSyntax.SyntaxName.toString == orig(arg1.ResolvedSyntax.SyntaxName.toString)
arg1.ResolvedSyntax.SyntaxFlag == orig(arg1.ResolvedSyntax.SyntaxFlag)
arg1.ResolvedSyntax.ParseObject == orig(arg1.ResolvedSyntax.ParseObject)
arg1.ResolvedSyntax.ParseObject.getClass().getName() == orig(arg1.ResolvedSyntax.ParseObject.getClass().getName())
arg1.ResolvedSyntax.ParseMethod == orig(arg1.ResolvedSyntax.ParseMethod)
arg1.ResolvedSyntax.TypeObject == orig(arg1.ResolvedSyntax.TypeObject)
arg1.ResolvedSyntax.TypeMethod == orig(arg1.ResolvedSyntax.TypeMethod)
arg1.ResolvedSyntax.ParentSyntax == orig(arg1.ResolvedSyntax.ParentSyntax)
arg1.ResolvedObject == orig(arg1.ResolvedObject)
arg1.ResolvedObject.getClass().getName() == orig(arg1.ResolvedObject.getClass().getName())
arg2[] == orig(arg2[])
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "$Type"
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod has only one value
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod has only one value
arg0.Syntax.ParentSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg0.KeyToken has only one value
arg0.KeyToken.uline == 1000
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "int"
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList has only one value
arg0.NodeList[] contains no nulls and has only one value, of length 1
arg0.NodeList[] elements has only one value
arg0.NodeList[].getClass().getName() == [org.KonohaScript.KToken]
arg0.NodeList[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1.uline == 1000
arg1.ParsedText has only one value
arg1.ParsedText.toString == "int"
arg1.flag == 0
arg1.ResolvedSyntax has only one value
arg1.ResolvedSyntax.PackageNameSpace has only one value
arg1.ResolvedSyntax.SyntaxName has only one value
arg1.ResolvedSyntax.SyntaxName.toString == "$Type"
arg1.ResolvedSyntax.SyntaxFlag == 1
arg1.ResolvedSyntax.ParseObject has only one value
arg1.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.ResolvedSyntax.ParseMethod has only one value
arg1.ResolvedSyntax.TypeObject == null
arg1.ResolvedSyntax.TypeMethod has only one value
arg1.ResolvedSyntax.ParentSyntax has only one value
arg1.ResolvedObject has only one value
arg1.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
arg2[] contains no nulls and has only one value, of length 39
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
return == -1
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.NodeList[]) == 1
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.SingleSymbolToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::ENTER
arg0 has only one value
arg0 != null
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg0.ImportedSymbolTable != null
arg1 != null
arg1.toString one of { "a == b + C; D + e == F", "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}" }
arg3 != null
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.SingleSymbolToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
size(arg3[])-1 == orig(size(arg3[]))
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg0.ImportedSymbolTable != null
arg1.toString one of { "a == b + C; D + e == F", "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}" }
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.SymbolToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::ENTER
arg0 != null
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedSymbolTable != null
arg1 != null
arg2 >= 0
arg3 != null
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.SymbolToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
size(arg3[])-1 == orig(size(arg3[]))
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedSymbolTable != null
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.WhiteSpaceToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::ENTER
arg0 != null
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedSymbolTable != null
arg1 != null
arg1.toString one of { "a == b + C; D + e == F", "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}", "int int x" }
arg3 != null
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg3[]) >= 1
===========================================================================
org.KonohaScript.GrammarSet.MiniKonoha.WhiteSpaceToken(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
arg3[] == orig(arg3[])
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedSymbolTable != null
arg1.toString one of { "a == b + C; D + e == F", "int fibo(int n) {\n\tif(n < 3) return 1;\n\treturn fibo(n-1)+fibo(n-2);\n}", "int int x" }
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KClass:::OBJECT
this.KonohaContext has only one value
this.KonohaContext != null
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.KonohaContext has only one value
this.KonohaContext.RootNameSpace.KonohaContext != null
this.KonohaContext.RootNameSpace.ParentNameSpace == null
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable has only one value
this.KonohaContext.SymbolTable != null
this.KonohaContext.SymbolTable.ClassList has only one value
this.KonohaContext.SymbolTable.ClassList != null
this.KonohaContext.SymbolTable.ClassList[] == []
this.KonohaContext.SymbolTable.ClassList[].getClass().getName() == []
this.KonohaContext.SymbolTable.ClassNameMap has only one value
this.KonohaContext.SymbolTable.ClassNameMap != null
this.KonohaContext.SymbolTable.PackageList has only one value
this.KonohaContext.SymbolTable.PackageList != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[] elements has only one value
this.KonohaContext.SymbolTable.PackageList[] elements != null
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
this.KonohaContext.SymbolTable.PackageMap has only one value
this.KonohaContext.SymbolTable.PackageMap != null
this.KonohaContext.SymbolTable.FileIdList has only one value
this.KonohaContext.SymbolTable.FileIdList != null
this.KonohaContext.SymbolTable.FileIdList[] == []
this.KonohaContext.SymbolTable.FileIdList[].getClass().getName() == []
this.KonohaContext.SymbolTable.FileIdMap has only one value
this.KonohaContext.SymbolTable.FileIdMap != null
this.KonohaContext.SymbolTable.SymbolList has only one value
this.KonohaContext.SymbolTable.SymbolList != null
this.KonohaContext.SymbolTable.SymbolList[] == []
this.KonohaContext.SymbolTable.SymbolList[].getClass().getName() == []
this.KonohaContext.SymbolTable.SymbolMap has only one value
this.KonohaContext.SymbolTable.SymbolMap != null
this.KonohaContext.SymbolTable.ParamList has only one value
this.KonohaContext.SymbolTable.ParamList != null
this.KonohaContext.SymbolTable.ParamList[] == []
this.KonohaContext.SymbolTable.ParamList[].getClass().getName() == []
this.KonohaContext.SymbolTable.ParamMap has only one value
this.KonohaContext.SymbolTable.ParamMap != null
this.KonohaContext.SymbolTable.SignatureList has only one value
this.KonohaContext.SymbolTable.SignatureList != null
this.KonohaContext.SymbolTable.SignatureList[] == []
this.KonohaContext.SymbolTable.SignatureList[].getClass().getName() == []
this.KonohaContext.SymbolTable.SignatureMap has only one value
this.KonohaContext.SymbolTable.SignatureMap != null
this.KonohaContext.VoidType.KonohaContext has only one value
this.KonohaContext.VoidType.KonohaContext != null
this.KonohaContext.VoidType.Package == null
this.KonohaContext.VoidType.ClassFlag == 0
this.KonohaContext.VoidType.ShortClassName has only one value
this.KonohaContext.VoidType.ShortClassName != null
this.KonohaContext.VoidType.ShortClassName.toString == "Void"
this.KonohaContext.VoidType.BaseClass has only one value
this.KonohaContext.VoidType.BaseClass != null
this.KonohaContext.VoidType.SuperClass has only one value
this.KonohaContext.VoidType.SuperClass != null
this.KonohaContext.VoidType.ClassParam == null
this.KonohaContext.VoidType.SearchSimilarClass == null
this.KonohaContext.VoidType.ClassMethodList has only one value
this.KonohaContext.VoidType.ClassMethodList != null
this.KonohaContext.VoidType.ClassMethodList[] == []
this.KonohaContext.VoidType.ClassMethodList[].getClass().getName() == []
this.KonohaContext.VoidType.SearchSuperMethodClass == null
this.KonohaContext.VoidType.DefaultNullValue == null
this.KonohaContext.VoidType.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList != null
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
this.KonohaContext.VoidType.HostedClassInfo has only one value
this.KonohaContext.VoidType.HostedClassInfo != null
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
this.KonohaContext.BooleanType.KonohaContext has only one value
this.KonohaContext.BooleanType.KonohaContext != null
this.KonohaContext.BooleanType.Package == null
this.KonohaContext.BooleanType.ClassFlag == 0
this.KonohaContext.BooleanType.ShortClassName has only one value
this.KonohaContext.BooleanType.ShortClassName != null
this.KonohaContext.BooleanType.ShortClassName.toString == "Boolean"
this.KonohaContext.BooleanType.BaseClass has only one value
this.KonohaContext.BooleanType.BaseClass != null
this.KonohaContext.BooleanType.SuperClass has only one value
this.KonohaContext.BooleanType.SuperClass != null
this.KonohaContext.BooleanType.ClassParam == null
this.KonohaContext.BooleanType.SearchSimilarClass == null
this.KonohaContext.BooleanType.ClassMethodList has only one value
this.KonohaContext.BooleanType.ClassMethodList != null
this.KonohaContext.BooleanType.ClassMethodList[] == []
this.KonohaContext.BooleanType.ClassMethodList[].getClass().getName() == []
this.KonohaContext.BooleanType.SearchSuperMethodClass == null
this.KonohaContext.BooleanType.DefaultNullValue == null
this.KonohaContext.BooleanType.LocalSpec == null
this.KonohaContext.BooleanType.HostedClassInfo has only one value
this.KonohaContext.BooleanType.HostedClassInfo != null
this.Package == null
this.ClassFlag == 0
this.ShortClassName != null
this.BaseClass != null
this.BaseClass.KonohaContext has only one value
this.BaseClass.KonohaContext != null
this.BaseClass.KonohaContext.RootNameSpace has only one value
this.BaseClass.KonohaContext.RootNameSpace != null
this.BaseClass.KonohaContext.DefaultNameSpace == null
this.BaseClass.KonohaContext.SymbolTable has only one value
this.BaseClass.KonohaContext.SymbolTable != null
this.BaseClass.Package == null
this.BaseClass.ClassFlag == 0
this.BaseClass.ShortClassName != null
this.BaseClass.BaseClass != null
this.BaseClass.BaseClass.KonohaContext has only one value
this.BaseClass.BaseClass.KonohaContext != null
this.BaseClass.BaseClass.Package == null
this.BaseClass.BaseClass.ClassFlag == 0
this.BaseClass.BaseClass.ShortClassName != null
this.BaseClass.BaseClass.BaseClass != null
this.BaseClass.BaseClass.ClassParam == null
this.BaseClass.BaseClass.SearchSimilarClass == null
this.BaseClass.BaseClass.ClassMethodList != null
this.BaseClass.BaseClass.ClassMethodList[] elements != null
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
this.BaseClass.BaseClass.SearchSuperMethodClass == null
this.BaseClass.BaseClass.DefaultNullValue == null
this.BaseClass.BaseClass.LocalSpec == null
this.BaseClass.SuperClass.KonohaContext has only one value
this.BaseClass.SuperClass.KonohaContext != null
this.BaseClass.SuperClass.Package == null
this.BaseClass.SuperClass.ClassFlag == 0
this.BaseClass.SuperClass.ShortClassName != null
this.BaseClass.SuperClass.ShortClassName.toString one of { "Number", "Object" }
this.BaseClass.SuperClass.BaseClass != null
this.BaseClass.SuperClass.ClassParam == null
this.BaseClass.SuperClass.SearchSimilarClass == null
this.BaseClass.SuperClass.ClassMethodList has only one value
this.BaseClass.SuperClass.ClassMethodList != null
this.BaseClass.SuperClass.ClassMethodList[] == []
this.BaseClass.SuperClass.ClassMethodList[].getClass().getName() == []
this.BaseClass.SuperClass.SearchSuperMethodClass == null
this.BaseClass.SuperClass.DefaultNullValue == null
this.BaseClass.SuperClass.LocalSpec == null
this.BaseClass.SuperClass.HostedClassInfo != null
this.BaseClass.ClassParam == null
this.BaseClass.SearchSimilarClass == null
this.BaseClass.ClassMethodList != null
this.BaseClass.ClassMethodList[] elements != null
this.BaseClass.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
this.BaseClass.SearchSuperMethodClass == null
this.BaseClass.DefaultNullValue == null
this.BaseClass.LocalSpec == null
this.SuperClass.KonohaContext has only one value
this.SuperClass.KonohaContext != null
this.SuperClass.KonohaContext.RootNameSpace has only one value
this.SuperClass.KonohaContext.RootNameSpace != null
this.SuperClass.KonohaContext.DefaultNameSpace == null
this.SuperClass.KonohaContext.SymbolTable has only one value
this.SuperClass.KonohaContext.SymbolTable != null
this.SuperClass.Package == null
this.SuperClass.ClassFlag == 0
this.SuperClass.ShortClassName != null
this.SuperClass.ShortClassName.toString one of { "Number", "Object" }
this.SuperClass.BaseClass != null
this.SuperClass.BaseClass.KonohaContext has only one value
this.SuperClass.BaseClass.KonohaContext != null
this.SuperClass.BaseClass.Package == null
this.SuperClass.BaseClass.ClassFlag == 0
this.SuperClass.BaseClass.ShortClassName != null
this.SuperClass.BaseClass.ShortClassName.toString one of { "Number", "Object" }
this.SuperClass.BaseClass.BaseClass != null
this.SuperClass.BaseClass.ClassParam == null
this.SuperClass.BaseClass.SearchSimilarClass == null
this.SuperClass.BaseClass.ClassMethodList has only one value
this.SuperClass.BaseClass.ClassMethodList != null
this.SuperClass.BaseClass.ClassMethodList[] == []
this.SuperClass.BaseClass.ClassMethodList[].getClass().getName() == []
this.SuperClass.BaseClass.SearchSuperMethodClass == null
this.SuperClass.BaseClass.DefaultNullValue == null
this.SuperClass.BaseClass.LocalSpec == null
this.SuperClass.BaseClass.HostedClassInfo != null
this.SuperClass.SuperClass.KonohaContext has only one value
this.SuperClass.SuperClass.KonohaContext != null
this.SuperClass.SuperClass.Package == null
this.SuperClass.SuperClass.ClassFlag == 0
this.SuperClass.SuperClass.ShortClassName has only one value
this.SuperClass.SuperClass.ShortClassName != null
this.SuperClass.SuperClass.ShortClassName.toString == "Object"
this.SuperClass.SuperClass.BaseClass has only one value
this.SuperClass.SuperClass.BaseClass != null
this.SuperClass.SuperClass.SuperClass == null
this.SuperClass.SuperClass.ClassParam == null
this.SuperClass.SuperClass.SearchSimilarClass == null
this.SuperClass.SuperClass.ClassMethodList has only one value
this.SuperClass.SuperClass.ClassMethodList != null
this.SuperClass.SuperClass.ClassMethodList[] == []
this.SuperClass.SuperClass.ClassMethodList[].getClass().getName() == []
this.SuperClass.SuperClass.SearchSuperMethodClass == null
this.SuperClass.SuperClass.DefaultNullValue == null
this.SuperClass.SuperClass.LocalSpec == null
this.SuperClass.SuperClass.HostedClassInfo has only one value
this.SuperClass.SuperClass.HostedClassInfo != null
this.SuperClass.ClassParam == null
this.SuperClass.SearchSimilarClass == null
this.SuperClass.ClassMethodList has only one value
this.SuperClass.ClassMethodList != null
this.SuperClass.ClassMethodList[] == []
this.SuperClass.ClassMethodList[].getClass().getName() == []
this.SuperClass.SearchSuperMethodClass == null
this.SuperClass.DefaultNullValue == null
this.SuperClass.LocalSpec == null
this.SuperClass.HostedClassInfo != null
this.ClassParam == null
this.SearchSimilarClass == null
this.ClassMethodList != null
this.ClassMethodList[] elements != null
this.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
this.SearchSuperMethodClass == null
this.DefaultNullValue == null
this.LocalSpec == null
size(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[]) == 41
size(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[]) == 41
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KClass.CreateMethods(java.lang.String):::ENTER
this has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ShortClassName has only one value
this.ShortClassName.toString == "Integer"
this.BaseClass has only one value
this.BaseClass.KonohaContext.VoidType has only one value
this.BaseClass.KonohaContext.BooleanType has only one value
this.BaseClass.ShortClassName has only one value
this.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.ShortClassName has only one value
this.BaseClass.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.SuperClass has only one value
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.BaseClass.HostedClassInfo has only one value
this.BaseClass.SuperClass has only one value
this.BaseClass.SuperClass.ShortClassName has only one value
this.BaseClass.SuperClass.ShortClassName.toString == "Number"
this.BaseClass.SuperClass.BaseClass has only one value
this.BaseClass.SuperClass.SuperClass has only one value
this.BaseClass.SuperClass.HostedClassInfo has only one value
this.BaseClass.ClassMethodList has only one value
this.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.HostedClassInfo has only one value
this.SuperClass has only one value
this.SuperClass.KonohaContext.VoidType has only one value
this.SuperClass.KonohaContext.BooleanType has only one value
this.SuperClass.ShortClassName has only one value
this.SuperClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass has only one value
this.SuperClass.BaseClass.ShortClassName has only one value
this.SuperClass.BaseClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass.BaseClass has only one value
this.SuperClass.BaseClass.SuperClass has only one value
this.SuperClass.BaseClass.HostedClassInfo has only one value
this.SuperClass.SuperClass has only one value
this.SuperClass.HostedClassInfo has only one value
this.ClassMethodList has only one value
this.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.HostedClassInfo has only one value
arg0 has only one value
arg0.toString == "+"
size(this.BaseClass.BaseClass.ClassMethodList[]) == 4
size(this.BaseClass.ClassMethodList[]) == 4
size(this.ClassMethodList[]) == 4
===========================================================================
org.KonohaScript.KClass.CreateMethods(java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.Package == orig(this.Package)
this.ClassFlag == orig(this.ClassFlag)
this.ShortClassName == orig(this.ShortClassName)
this.ShortClassName.toString == orig(this.ShortClassName.toString)
this.BaseClass == orig(this.BaseClass)
this.BaseClass.KonohaContext == orig(this.BaseClass.KonohaContext)
this.BaseClass.KonohaContext.RootNameSpace == orig(this.BaseClass.KonohaContext.RootNameSpace)
this.BaseClass.KonohaContext.DefaultNameSpace == orig(this.BaseClass.KonohaContext.DefaultNameSpace)
this.BaseClass.KonohaContext.SymbolTable == orig(this.BaseClass.KonohaContext.SymbolTable)
this.BaseClass.KonohaContext.VoidType == orig(this.BaseClass.KonohaContext.VoidType)
this.BaseClass.KonohaContext.BooleanType == orig(this.BaseClass.KonohaContext.BooleanType)
this.BaseClass.Package == orig(this.BaseClass.Package)
this.BaseClass.ClassFlag == orig(this.BaseClass.ClassFlag)
this.BaseClass.ShortClassName == orig(this.BaseClass.ShortClassName)
this.BaseClass.ShortClassName.toString == orig(this.BaseClass.ShortClassName.toString)
this.BaseClass.BaseClass == orig(this.BaseClass.BaseClass)
this.BaseClass.BaseClass.KonohaContext == orig(this.BaseClass.BaseClass.KonohaContext)
this.BaseClass.BaseClass.Package == orig(this.BaseClass.BaseClass.Package)
this.BaseClass.BaseClass.ClassFlag == orig(this.BaseClass.BaseClass.ClassFlag)
this.BaseClass.BaseClass.ShortClassName == orig(this.BaseClass.BaseClass.ShortClassName)
this.BaseClass.BaseClass.ShortClassName.toString == orig(this.BaseClass.BaseClass.ShortClassName.toString)
this.BaseClass.BaseClass.BaseClass == orig(this.BaseClass.BaseClass.BaseClass)
this.BaseClass.BaseClass.SuperClass == orig(this.BaseClass.BaseClass.SuperClass)
this.BaseClass.BaseClass.ClassParam == orig(this.BaseClass.BaseClass.ClassParam)
this.BaseClass.BaseClass.SearchSimilarClass == orig(this.BaseClass.BaseClass.SearchSimilarClass)
this.BaseClass.BaseClass.ClassMethodList == orig(this.BaseClass.BaseClass.ClassMethodList)
this.BaseClass.BaseClass.ClassMethodList[] == orig(this.BaseClass.BaseClass.ClassMethodList[])
this.BaseClass.BaseClass.SearchSuperMethodClass == orig(this.BaseClass.BaseClass.SearchSuperMethodClass)
this.BaseClass.BaseClass.DefaultNullValue == orig(this.BaseClass.BaseClass.DefaultNullValue)
this.BaseClass.BaseClass.LocalSpec == orig(this.BaseClass.BaseClass.LocalSpec)
this.BaseClass.BaseClass.HostedClassInfo == orig(this.BaseClass.BaseClass.HostedClassInfo)
this.BaseClass.SuperClass == orig(this.BaseClass.SuperClass)
this.BaseClass.SuperClass.KonohaContext == orig(this.BaseClass.SuperClass.KonohaContext)
this.BaseClass.SuperClass.Package == orig(this.BaseClass.SuperClass.Package)
this.BaseClass.SuperClass.ClassFlag == orig(this.BaseClass.SuperClass.ClassFlag)
this.BaseClass.SuperClass.ShortClassName == orig(this.BaseClass.SuperClass.ShortClassName)
this.BaseClass.SuperClass.ShortClassName.toString == orig(this.BaseClass.SuperClass.ShortClassName.toString)
this.BaseClass.SuperClass.BaseClass == orig(this.BaseClass.SuperClass.BaseClass)
this.BaseClass.SuperClass.SuperClass == orig(this.BaseClass.SuperClass.SuperClass)
this.BaseClass.SuperClass.ClassParam == orig(this.BaseClass.SuperClass.ClassParam)
this.BaseClass.SuperClass.SearchSimilarClass == orig(this.BaseClass.SuperClass.SearchSimilarClass)
this.BaseClass.SuperClass.ClassMethodList == orig(this.BaseClass.SuperClass.ClassMethodList)
this.BaseClass.SuperClass.ClassMethodList[] == orig(this.BaseClass.SuperClass.ClassMethodList[])
this.BaseClass.SuperClass.SearchSuperMethodClass == orig(this.BaseClass.SuperClass.SearchSuperMethodClass)
this.BaseClass.SuperClass.DefaultNullValue == orig(this.BaseClass.SuperClass.DefaultNullValue)
this.BaseClass.SuperClass.LocalSpec == orig(this.BaseClass.SuperClass.LocalSpec)
this.BaseClass.SuperClass.HostedClassInfo == orig(this.BaseClass.SuperClass.HostedClassInfo)
this.BaseClass.ClassParam == orig(this.BaseClass.ClassParam)
this.BaseClass.SearchSimilarClass == orig(this.BaseClass.SearchSimilarClass)
this.BaseClass.ClassMethodList == orig(this.BaseClass.ClassMethodList)
this.BaseClass.ClassMethodList[] == orig(this.BaseClass.ClassMethodList[])
this.BaseClass.SearchSuperMethodClass == orig(this.BaseClass.SearchSuperMethodClass)
this.BaseClass.DefaultNullValue == orig(this.BaseClass.DefaultNullValue)
this.BaseClass.LocalSpec == orig(this.BaseClass.LocalSpec)
this.BaseClass.HostedClassInfo == orig(this.BaseClass.HostedClassInfo)
this.SuperClass == orig(this.SuperClass)
this.SuperClass.KonohaContext == orig(this.SuperClass.KonohaContext)
this.SuperClass.KonohaContext.RootNameSpace == orig(this.SuperClass.KonohaContext.RootNameSpace)
this.SuperClass.KonohaContext.DefaultNameSpace == orig(this.SuperClass.KonohaContext.DefaultNameSpace)
this.SuperClass.KonohaContext.SymbolTable == orig(this.SuperClass.KonohaContext.SymbolTable)
this.SuperClass.KonohaContext.VoidType == orig(this.SuperClass.KonohaContext.VoidType)
this.SuperClass.KonohaContext.BooleanType == orig(this.SuperClass.KonohaContext.BooleanType)
this.SuperClass.Package == orig(this.SuperClass.Package)
this.SuperClass.ClassFlag == orig(this.SuperClass.ClassFlag)
this.SuperClass.ShortClassName == orig(this.SuperClass.ShortClassName)
this.SuperClass.ShortClassName.toString == orig(this.SuperClass.ShortClassName.toString)
this.SuperClass.BaseClass == orig(this.SuperClass.BaseClass)
this.SuperClass.BaseClass.KonohaContext == orig(this.SuperClass.BaseClass.KonohaContext)
this.SuperClass.BaseClass.Package == orig(this.SuperClass.BaseClass.Package)
this.SuperClass.BaseClass.ClassFlag == orig(this.SuperClass.BaseClass.ClassFlag)
this.SuperClass.BaseClass.ShortClassName == orig(this.SuperClass.BaseClass.ShortClassName)
this.SuperClass.BaseClass.ShortClassName.toString == orig(this.SuperClass.BaseClass.ShortClassName.toString)
this.SuperClass.BaseClass.BaseClass == orig(this.SuperClass.BaseClass.BaseClass)
this.SuperClass.BaseClass.SuperClass == orig(this.SuperClass.BaseClass.SuperClass)
this.SuperClass.BaseClass.ClassParam == orig(this.SuperClass.BaseClass.ClassParam)
this.SuperClass.BaseClass.SearchSimilarClass == orig(this.SuperClass.BaseClass.SearchSimilarClass)
this.SuperClass.BaseClass.ClassMethodList == orig(this.SuperClass.BaseClass.ClassMethodList)
this.SuperClass.BaseClass.ClassMethodList[] == orig(this.SuperClass.BaseClass.ClassMethodList[])
this.SuperClass.BaseClass.SearchSuperMethodClass == orig(this.SuperClass.BaseClass.SearchSuperMethodClass)
this.SuperClass.BaseClass.DefaultNullValue == orig(this.SuperClass.BaseClass.DefaultNullValue)
this.SuperClass.BaseClass.LocalSpec == orig(this.SuperClass.BaseClass.LocalSpec)
this.SuperClass.BaseClass.HostedClassInfo == orig(this.SuperClass.BaseClass.HostedClassInfo)
this.SuperClass.SuperClass == orig(this.SuperClass.SuperClass)
this.SuperClass.SuperClass.KonohaContext == orig(this.SuperClass.SuperClass.KonohaContext)
this.SuperClass.SuperClass.Package == orig(this.SuperClass.SuperClass.Package)
this.SuperClass.SuperClass.ClassFlag == orig(this.SuperClass.SuperClass.ClassFlag)
this.SuperClass.SuperClass.ShortClassName == orig(this.SuperClass.SuperClass.ShortClassName)
this.SuperClass.SuperClass.ShortClassName.toString == orig(this.SuperClass.SuperClass.ShortClassName.toString)
this.SuperClass.SuperClass.BaseClass == orig(this.SuperClass.SuperClass.BaseClass)
this.SuperClass.SuperClass.SuperClass == orig(this.SuperClass.SuperClass.SuperClass)
this.SuperClass.SuperClass.ClassParam == orig(this.SuperClass.SuperClass.ClassParam)
this.SuperClass.SuperClass.SearchSimilarClass == orig(this.SuperClass.SuperClass.SearchSimilarClass)
this.SuperClass.SuperClass.ClassMethodList == orig(this.SuperClass.SuperClass.ClassMethodList)
this.SuperClass.SuperClass.ClassMethodList[] == orig(this.SuperClass.SuperClass.ClassMethodList[])
this.SuperClass.SuperClass.SearchSuperMethodClass == orig(this.SuperClass.SuperClass.SearchSuperMethodClass)
this.SuperClass.SuperClass.DefaultNullValue == orig(this.SuperClass.SuperClass.DefaultNullValue)
this.SuperClass.SuperClass.LocalSpec == orig(this.SuperClass.SuperClass.LocalSpec)
this.SuperClass.SuperClass.HostedClassInfo == orig(this.SuperClass.SuperClass.HostedClassInfo)
this.SuperClass.ClassParam == orig(this.SuperClass.ClassParam)
this.SuperClass.SearchSimilarClass == orig(this.SuperClass.SearchSimilarClass)
this.SuperClass.ClassMethodList == orig(this.SuperClass.ClassMethodList)
this.SuperClass.ClassMethodList[] == orig(this.SuperClass.ClassMethodList[])
this.SuperClass.SearchSuperMethodClass == orig(this.SuperClass.SearchSuperMethodClass)
this.SuperClass.DefaultNullValue == orig(this.SuperClass.DefaultNullValue)
this.SuperClass.LocalSpec == orig(this.SuperClass.LocalSpec)
this.SuperClass.HostedClassInfo == orig(this.SuperClass.HostedClassInfo)
this.ClassParam == orig(this.ClassParam)
this.SearchSimilarClass == orig(this.SearchSimilarClass)
this.ClassMethodList == orig(this.ClassMethodList)
this.ClassMethodList[] == orig(this.ClassMethodList[])
this.SearchSuperMethodClass == orig(this.SearchSuperMethodClass)
this.DefaultNullValue == orig(this.DefaultNullValue)
this.LocalSpec == orig(this.LocalSpec)
this.HostedClassInfo == orig(this.HostedClassInfo)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ShortClassName has only one value
this.ShortClassName.toString == "Integer"
this.BaseClass has only one value
this.BaseClass.KonohaContext.VoidType has only one value
this.BaseClass.KonohaContext.BooleanType has only one value
this.BaseClass.ShortClassName has only one value
this.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.ShortClassName has only one value
this.BaseClass.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.SuperClass has only one value
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.BaseClass.HostedClassInfo has only one value
this.BaseClass.SuperClass has only one value
this.BaseClass.SuperClass.ShortClassName has only one value
this.BaseClass.SuperClass.ShortClassName.toString == "Number"
this.BaseClass.SuperClass.BaseClass has only one value
this.BaseClass.SuperClass.SuperClass has only one value
this.BaseClass.SuperClass.HostedClassInfo has only one value
this.BaseClass.ClassMethodList has only one value
this.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.HostedClassInfo has only one value
this.SuperClass has only one value
this.SuperClass.KonohaContext.VoidType has only one value
this.SuperClass.KonohaContext.BooleanType has only one value
this.SuperClass.ShortClassName has only one value
this.SuperClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass has only one value
this.SuperClass.BaseClass.ShortClassName has only one value
this.SuperClass.BaseClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass.BaseClass has only one value
this.SuperClass.BaseClass.SuperClass has only one value
this.SuperClass.BaseClass.HostedClassInfo has only one value
this.SuperClass.SuperClass has only one value
this.SuperClass.HostedClassInfo has only one value
this.ClassMethodList has only one value
this.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.HostedClassInfo has only one value
arg0.toString == "+"
return == 0
size(this.BaseClass.BaseClass.ClassMethodList[]) == 4
size(this.BaseClass.ClassMethodList[]) == 4
size(this.ClassMethodList[]) == 4
===========================================================================
org.KonohaScript.KClass.DefineMethod(int, java.lang.String, org.KonohaScript.KParam, java.lang.Object, java.lang.String):::ENTER
this has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ShortClassName has only one value
this.ShortClassName.toString == "Integer"
this.BaseClass has only one value
this.BaseClass.KonohaContext.VoidType has only one value
this.BaseClass.KonohaContext.BooleanType has only one value
this.BaseClass.ShortClassName has only one value
this.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.ShortClassName has only one value
this.BaseClass.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.SuperClass has only one value
this.BaseClass.BaseClass.HostedClassInfo has only one value
this.BaseClass.SuperClass has only one value
this.BaseClass.SuperClass.ShortClassName has only one value
this.BaseClass.SuperClass.ShortClassName.toString == "Number"
this.BaseClass.SuperClass.BaseClass has only one value
this.BaseClass.SuperClass.SuperClass has only one value
this.BaseClass.SuperClass.HostedClassInfo has only one value
this.BaseClass.HostedClassInfo has only one value
this.SuperClass has only one value
this.SuperClass.KonohaContext.VoidType has only one value
this.SuperClass.KonohaContext.BooleanType has only one value
this.SuperClass.ShortClassName has only one value
this.SuperClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass has only one value
this.SuperClass.BaseClass.ShortClassName has only one value
this.SuperClass.BaseClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass.BaseClass has only one value
this.SuperClass.BaseClass.SuperClass has only one value
this.SuperClass.BaseClass.HostedClassInfo has only one value
this.SuperClass.SuperClass has only one value
this.SuperClass.HostedClassInfo has only one value
this.HostedClassInfo has only one value
arg0 == 40
arg1.toString one of { "+", "-" }
arg2.ReturnSize == 1
arg2.Types.getClass().getName() == org.KonohaScript.KClass[].class
arg2.Types[] elements has only one value
arg2.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
arg2.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
arg2.Types[].KonohaContext elements has only one value
arg2.Types[].Package elements == null
arg2.Types[].ClassFlag elements == 0
arg2.Types[].ClassFlag one of { [0], [0, 0] }
arg2.Types[].ShortClassName elements has only one value
arg2.Types[].ShortClassName.toString elements == "Integer"
arg2.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
arg2.Types[].BaseClass elements has only one value
arg2.Types[].SuperClass elements has only one value
arg2.Types[].ClassParam elements == null
arg2.Types[].SearchSimilarClass elements == null
arg2.Types[].ClassMethodList elements are equal
arg2.Types[].SearchSuperMethodClass elements == null
arg2.Types[].DefaultNullValue elements == null
arg2.Types[].DefaultNullValue.getClass().getName() elements == null
arg2.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
arg2.Types[].LocalSpec elements == null
arg2.Types[].LocalSpec.getClass().getName() elements == null
arg2.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
arg2.Types[].HostedClassInfo elements has only one value
arg3 has only one value
arg3.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
size(arg2.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KClass.DefineMethod(int, java.lang.String, org.KonohaScript.KParam, java.lang.Object, java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.Package == orig(this.Package)
this.ClassFlag == orig(this.ClassFlag)
this.ShortClassName == orig(this.ShortClassName)
this.ShortClassName.toString == orig(this.ShortClassName.toString)
this.BaseClass == orig(this.BaseClass)
this.BaseClass.KonohaContext == orig(this.BaseClass.KonohaContext)
this.BaseClass.KonohaContext.RootNameSpace == orig(this.BaseClass.KonohaContext.RootNameSpace)
this.BaseClass.KonohaContext.DefaultNameSpace == orig(this.BaseClass.KonohaContext.DefaultNameSpace)
this.BaseClass.KonohaContext.SymbolTable == orig(this.BaseClass.KonohaContext.SymbolTable)
this.BaseClass.KonohaContext.VoidType == orig(this.BaseClass.KonohaContext.VoidType)
this.BaseClass.KonohaContext.BooleanType == orig(this.BaseClass.KonohaContext.BooleanType)
this.BaseClass.Package == orig(this.BaseClass.Package)
this.BaseClass.ClassFlag == orig(this.BaseClass.ClassFlag)
this.BaseClass.ShortClassName == orig(this.BaseClass.ShortClassName)
this.BaseClass.ShortClassName.toString == orig(this.BaseClass.ShortClassName.toString)
this.BaseClass.BaseClass == orig(this.BaseClass.BaseClass)
this.BaseClass.BaseClass.KonohaContext == orig(this.BaseClass.BaseClass.KonohaContext)
this.BaseClass.BaseClass.Package == orig(this.BaseClass.BaseClass.Package)
this.BaseClass.BaseClass.ClassFlag == orig(this.BaseClass.BaseClass.ClassFlag)
this.BaseClass.BaseClass.ShortClassName == orig(this.BaseClass.BaseClass.ShortClassName)
this.BaseClass.BaseClass.ShortClassName.toString == orig(this.BaseClass.BaseClass.ShortClassName.toString)
this.BaseClass.BaseClass.BaseClass == orig(this.BaseClass.BaseClass.BaseClass)
this.BaseClass.BaseClass.SuperClass == orig(this.BaseClass.BaseClass.SuperClass)
this.BaseClass.BaseClass.ClassParam == orig(this.BaseClass.BaseClass.ClassParam)
this.BaseClass.BaseClass.SearchSimilarClass == orig(this.BaseClass.BaseClass.SearchSimilarClass)
this.BaseClass.BaseClass.SearchSuperMethodClass == orig(this.BaseClass.BaseClass.SearchSuperMethodClass)
this.BaseClass.BaseClass.DefaultNullValue == orig(this.BaseClass.BaseClass.DefaultNullValue)
this.BaseClass.BaseClass.LocalSpec == orig(this.BaseClass.BaseClass.LocalSpec)
this.BaseClass.BaseClass.HostedClassInfo == orig(this.BaseClass.BaseClass.HostedClassInfo)
this.BaseClass.SuperClass == orig(this.BaseClass.SuperClass)
this.BaseClass.SuperClass.KonohaContext == orig(this.BaseClass.SuperClass.KonohaContext)
this.BaseClass.SuperClass.Package == orig(this.BaseClass.SuperClass.Package)
this.BaseClass.SuperClass.ClassFlag == orig(this.BaseClass.SuperClass.ClassFlag)
this.BaseClass.SuperClass.ShortClassName == orig(this.BaseClass.SuperClass.ShortClassName)
this.BaseClass.SuperClass.ShortClassName.toString == orig(this.BaseClass.SuperClass.ShortClassName.toString)
this.BaseClass.SuperClass.BaseClass == orig(this.BaseClass.SuperClass.BaseClass)
this.BaseClass.SuperClass.SuperClass == orig(this.BaseClass.SuperClass.SuperClass)
this.BaseClass.SuperClass.ClassParam == orig(this.BaseClass.SuperClass.ClassParam)
this.BaseClass.SuperClass.SearchSimilarClass == orig(this.BaseClass.SuperClass.SearchSimilarClass)
this.BaseClass.SuperClass.ClassMethodList == orig(this.BaseClass.SuperClass.ClassMethodList)
this.BaseClass.SuperClass.ClassMethodList[] == orig(this.BaseClass.SuperClass.ClassMethodList[])
this.BaseClass.SuperClass.SearchSuperMethodClass == orig(this.BaseClass.SuperClass.SearchSuperMethodClass)
this.BaseClass.SuperClass.DefaultNullValue == orig(this.BaseClass.SuperClass.DefaultNullValue)
this.BaseClass.SuperClass.LocalSpec == orig(this.BaseClass.SuperClass.LocalSpec)
this.BaseClass.SuperClass.HostedClassInfo == orig(this.BaseClass.SuperClass.HostedClassInfo)
this.BaseClass.ClassParam == orig(this.BaseClass.ClassParam)
this.BaseClass.SearchSimilarClass == orig(this.BaseClass.SearchSimilarClass)
this.BaseClass.SearchSuperMethodClass == orig(this.BaseClass.SearchSuperMethodClass)
this.BaseClass.DefaultNullValue == orig(this.BaseClass.DefaultNullValue)
this.BaseClass.LocalSpec == orig(this.BaseClass.LocalSpec)
this.BaseClass.HostedClassInfo == orig(this.BaseClass.HostedClassInfo)
this.SuperClass == orig(this.SuperClass)
this.SuperClass.KonohaContext == orig(this.SuperClass.KonohaContext)
this.SuperClass.KonohaContext.RootNameSpace == orig(this.SuperClass.KonohaContext.RootNameSpace)
this.SuperClass.KonohaContext.DefaultNameSpace == orig(this.SuperClass.KonohaContext.DefaultNameSpace)
this.SuperClass.KonohaContext.SymbolTable == orig(this.SuperClass.KonohaContext.SymbolTable)
this.SuperClass.KonohaContext.VoidType == orig(this.SuperClass.KonohaContext.VoidType)
this.SuperClass.KonohaContext.BooleanType == orig(this.SuperClass.KonohaContext.BooleanType)
this.SuperClass.Package == orig(this.SuperClass.Package)
this.SuperClass.ClassFlag == orig(this.SuperClass.ClassFlag)
this.SuperClass.ShortClassName == orig(this.SuperClass.ShortClassName)
this.SuperClass.ShortClassName.toString == orig(this.SuperClass.ShortClassName.toString)
this.SuperClass.BaseClass == orig(this.SuperClass.BaseClass)
this.SuperClass.BaseClass.KonohaContext == orig(this.SuperClass.BaseClass.KonohaContext)
this.SuperClass.BaseClass.Package == orig(this.SuperClass.BaseClass.Package)
this.SuperClass.BaseClass.ClassFlag == orig(this.SuperClass.BaseClass.ClassFlag)
this.SuperClass.BaseClass.ShortClassName == orig(this.SuperClass.BaseClass.ShortClassName)
this.SuperClass.BaseClass.ShortClassName.toString == orig(this.SuperClass.BaseClass.ShortClassName.toString)
this.SuperClass.BaseClass.BaseClass == orig(this.SuperClass.BaseClass.BaseClass)
this.SuperClass.BaseClass.SuperClass == orig(this.SuperClass.BaseClass.SuperClass)
this.SuperClass.BaseClass.ClassParam == orig(this.SuperClass.BaseClass.ClassParam)
this.SuperClass.BaseClass.SearchSimilarClass == orig(this.SuperClass.BaseClass.SearchSimilarClass)
this.SuperClass.BaseClass.ClassMethodList == orig(this.SuperClass.BaseClass.ClassMethodList)
this.SuperClass.BaseClass.ClassMethodList[] == orig(this.SuperClass.BaseClass.ClassMethodList[])
this.SuperClass.BaseClass.SearchSuperMethodClass == orig(this.SuperClass.BaseClass.SearchSuperMethodClass)
this.SuperClass.BaseClass.DefaultNullValue == orig(this.SuperClass.BaseClass.DefaultNullValue)
this.SuperClass.BaseClass.LocalSpec == orig(this.SuperClass.BaseClass.LocalSpec)
this.SuperClass.BaseClass.HostedClassInfo == orig(this.SuperClass.BaseClass.HostedClassInfo)
this.SuperClass.SuperClass == orig(this.SuperClass.SuperClass)
this.SuperClass.SuperClass.KonohaContext == orig(this.SuperClass.SuperClass.KonohaContext)
this.SuperClass.SuperClass.Package == orig(this.SuperClass.SuperClass.Package)
this.SuperClass.SuperClass.ClassFlag == orig(this.SuperClass.SuperClass.ClassFlag)
this.SuperClass.SuperClass.ShortClassName == orig(this.SuperClass.SuperClass.ShortClassName)
this.SuperClass.SuperClass.ShortClassName.toString == orig(this.SuperClass.SuperClass.ShortClassName.toString)
this.SuperClass.SuperClass.BaseClass == orig(this.SuperClass.SuperClass.BaseClass)
this.SuperClass.SuperClass.SuperClass == orig(this.SuperClass.SuperClass.SuperClass)
this.SuperClass.SuperClass.ClassParam == orig(this.SuperClass.SuperClass.ClassParam)
this.SuperClass.SuperClass.SearchSimilarClass == orig(this.SuperClass.SuperClass.SearchSimilarClass)
this.SuperClass.SuperClass.ClassMethodList == orig(this.SuperClass.SuperClass.ClassMethodList)
this.SuperClass.SuperClass.ClassMethodList[] == orig(this.SuperClass.SuperClass.ClassMethodList[])
this.SuperClass.SuperClass.SearchSuperMethodClass == orig(this.SuperClass.SuperClass.SearchSuperMethodClass)
this.SuperClass.SuperClass.DefaultNullValue == orig(this.SuperClass.SuperClass.DefaultNullValue)
this.SuperClass.SuperClass.LocalSpec == orig(this.SuperClass.SuperClass.LocalSpec)
this.SuperClass.SuperClass.HostedClassInfo == orig(this.SuperClass.SuperClass.HostedClassInfo)
this.SuperClass.ClassParam == orig(this.SuperClass.ClassParam)
this.SuperClass.SearchSimilarClass == orig(this.SuperClass.SearchSimilarClass)
this.SuperClass.ClassMethodList == orig(this.SuperClass.ClassMethodList)
this.SuperClass.ClassMethodList[] == orig(this.SuperClass.ClassMethodList[])
this.SuperClass.SearchSuperMethodClass == orig(this.SuperClass.SearchSuperMethodClass)
this.SuperClass.DefaultNullValue == orig(this.SuperClass.DefaultNullValue)
this.SuperClass.LocalSpec == orig(this.SuperClass.LocalSpec)
this.SuperClass.HostedClassInfo == orig(this.SuperClass.HostedClassInfo)
this.ClassParam == orig(this.ClassParam)
this.SearchSimilarClass == orig(this.SearchSimilarClass)
this.SearchSuperMethodClass == orig(this.SearchSuperMethodClass)
this.DefaultNullValue == orig(this.DefaultNullValue)
this.LocalSpec == orig(this.LocalSpec)
this.HostedClassInfo == orig(this.HostedClassInfo)
arg1.toString == orig(arg1.toString)
arg2.ReturnSize == orig(arg2.ReturnSize)
arg2.Types == orig(arg2.Types)
arg2.Types.getClass().getName() == orig(arg2.Types.getClass().getName())
arg2.Types[] == orig(arg2.Types[])
arg2.Types[].KonohaContext == orig(arg2.Types[].KonohaContext)
arg2.Types[].Package == orig(arg2.Types[].Package)
arg2.Types[].ClassFlag == orig(arg2.Types[].ClassFlag)
arg2.Types[].ShortClassName == orig(arg2.Types[].ShortClassName)
arg2.Types[].BaseClass == orig(arg2.Types[].BaseClass)
arg2.Types[].SuperClass == orig(arg2.Types[].SuperClass)
arg2.Types[].ClassParam == orig(arg2.Types[].ClassParam)
arg2.Types[].SearchSimilarClass == orig(arg2.Types[].SearchSimilarClass)
arg2.Types[].SearchSuperMethodClass == orig(arg2.Types[].SearchSuperMethodClass)
arg2.Types[].DefaultNullValue == orig(arg2.Types[].DefaultNullValue)
arg2.Types[].LocalSpec == orig(arg2.Types[].LocalSpec)
arg2.Types[].HostedClassInfo == orig(arg2.Types[].HostedClassInfo)
arg4.toString == orig(arg4.toString)
size(this.BaseClass.BaseClass.ClassMethodList[])-1 == orig(size(this.BaseClass.BaseClass.ClassMethodList[]))
size(this.BaseClass.ClassMethodList[])-1 == orig(size(this.BaseClass.ClassMethodList[]))
size(this.ClassMethodList[])-1 == orig(size(this.ClassMethodList[]))
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ShortClassName has only one value
this.ShortClassName.toString == "Integer"
this.BaseClass has only one value
this.BaseClass.KonohaContext.VoidType has only one value
this.BaseClass.KonohaContext.BooleanType has only one value
this.BaseClass.ShortClassName has only one value
this.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.ShortClassName has only one value
this.BaseClass.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.SuperClass has only one value
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.HostedClassInfo has only one value
this.BaseClass.SuperClass has only one value
this.BaseClass.SuperClass.ShortClassName has only one value
this.BaseClass.SuperClass.ShortClassName.toString == "Number"
this.BaseClass.SuperClass.BaseClass has only one value
this.BaseClass.SuperClass.SuperClass has only one value
this.BaseClass.SuperClass.HostedClassInfo has only one value
this.BaseClass.ClassMethodList has only one value
this.BaseClass.HostedClassInfo has only one value
this.SuperClass has only one value
this.SuperClass.KonohaContext.VoidType has only one value
this.SuperClass.KonohaContext.BooleanType has only one value
this.SuperClass.ShortClassName has only one value
this.SuperClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass has only one value
this.SuperClass.BaseClass.ShortClassName has only one value
this.SuperClass.BaseClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass.BaseClass has only one value
this.SuperClass.BaseClass.SuperClass has only one value
this.SuperClass.BaseClass.HostedClassInfo has only one value
this.SuperClass.SuperClass has only one value
this.SuperClass.HostedClassInfo has only one value
this.ClassMethodList has only one value
this.HostedClassInfo has only one value
arg1.toString one of { "+", "-" }
arg2.ReturnSize == 1
arg2.Types.getClass().getName() == org.KonohaScript.KClass[].class
arg2.Types[] elements has only one value
arg2.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
arg2.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
arg2.Types[].KonohaContext elements has only one value
arg2.Types[].Package elements == null
arg2.Types[].ClassFlag elements == 0
arg2.Types[].ClassFlag one of { [0], [0, 0] }
arg2.Types[].ShortClassName elements has only one value
arg2.Types[].ShortClassName.toString elements == "Integer"
arg2.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
arg2.Types[].BaseClass elements has only one value
arg2.Types[].SuperClass elements has only one value
arg2.Types[].ClassParam elements == null
arg2.Types[].SearchSimilarClass elements == null
arg2.Types[].ClassMethodList elements has only one value
arg2.Types[].SearchSuperMethodClass elements == null
arg2.Types[].DefaultNullValue elements == null
arg2.Types[].DefaultNullValue.getClass().getName() elements == null
arg2.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
arg2.Types[].LocalSpec elements == null
arg2.Types[].LocalSpec.getClass().getName() elements == null
arg2.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
arg2.Types[].HostedClassInfo elements has only one value
size(arg2.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KClass.KClass(org.KonohaScript.Konoha, java.lang.Class):::ENTER
arg0 has only one value
arg0.RootNameSpace has only one value
arg0.RootNameSpace.KonohaContext has only one value
arg0.RootNameSpace.ParentNameSpace == null
arg0.RootNameSpace.ImportedNameSpaceList == null
arg0.RootNameSpace.DefinedTokenMatrix == null
arg0.RootNameSpace.ImportedTokenMatrix == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType.KonohaContext has only one value
arg0.VoidType.Package == null
arg0.VoidType.ClassFlag == 0
arg0.VoidType.ShortClassName has only one value
arg0.VoidType.ShortClassName.toString == "Void"
arg0.VoidType.BaseClass has only one value
arg0.VoidType.SuperClass has only one value
arg0.VoidType.ClassParam == null
arg0.VoidType.SearchSimilarClass == null
arg0.VoidType.ClassMethodList has only one value
arg0.VoidType.ClassMethodList[] == []
arg0.VoidType.ClassMethodList[].getClass().getName() == []
arg0.VoidType.SearchSuperMethodClass == null
arg0.VoidType.DefaultNullValue == null
arg0.VoidType.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
arg0.VoidType.HostedClassInfo has only one value
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
arg0.BooleanType.KonohaContext has only one value
arg0.BooleanType.Package == null
arg0.BooleanType.ClassFlag == 0
arg0.BooleanType.ShortClassName has only one value
arg0.BooleanType.ShortClassName.toString == "Boolean"
arg0.BooleanType.BaseClass has only one value
arg0.BooleanType.SuperClass has only one value
arg0.BooleanType.ClassParam == null
arg0.BooleanType.SearchSimilarClass == null
arg0.BooleanType.ClassMethodList has only one value
arg0.BooleanType.ClassMethodList[] == []
arg0.BooleanType.ClassMethodList[].getClass().getName() == []
arg0.BooleanType.SearchSuperMethodClass == null
arg0.BooleanType.DefaultNullValue == null
arg0.BooleanType.LocalSpec == null
arg0.BooleanType.HostedClassInfo has only one value
size(arg0.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KClass.KClass(org.KonohaScript.Konoha, java.lang.Class):::EXIT
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
arg0.RootNameSpace == orig(arg0.RootNameSpace)
arg0.RootNameSpace.KonohaContext == orig(arg0.RootNameSpace.KonohaContext)
arg0.RootNameSpace.ParentNameSpace == orig(arg0.RootNameSpace.ParentNameSpace)
arg0.RootNameSpace.ImportedNameSpaceList == orig(arg0.RootNameSpace.ImportedNameSpaceList)
arg0.RootNameSpace.DefinedTokenMatrix == orig(arg0.RootNameSpace.DefinedTokenMatrix)
arg0.RootNameSpace.ImportedTokenMatrix == orig(arg0.RootNameSpace.ImportedTokenMatrix)
arg0.RootNameSpace.DefinedSymbolTable == orig(arg0.RootNameSpace.DefinedSymbolTable)
arg0.RootNameSpace.ImportedSymbolTable == orig(arg0.RootNameSpace.ImportedSymbolTable)
arg0.DefaultNameSpace == orig(arg0.DefaultNameSpace)
arg0.SymbolTable == orig(arg0.SymbolTable)
arg0.SymbolTable.ClassList == orig(arg0.SymbolTable.ClassList)
arg0.SymbolTable.ClassList[] == orig(arg0.SymbolTable.ClassList[])
arg0.SymbolTable.ClassNameMap == orig(arg0.SymbolTable.ClassNameMap)
arg0.SymbolTable.PackageList == orig(arg0.SymbolTable.PackageList)
arg0.SymbolTable.PackageList[] == orig(arg0.SymbolTable.PackageList[])
arg0.SymbolTable.PackageMap == orig(arg0.SymbolTable.PackageMap)
arg0.SymbolTable.FileIdList == orig(arg0.SymbolTable.FileIdList)
arg0.SymbolTable.FileIdList[] == orig(arg0.SymbolTable.FileIdList[])
arg0.SymbolTable.FileIdMap == orig(arg0.SymbolTable.FileIdMap)
arg0.SymbolTable.SymbolList == orig(arg0.SymbolTable.SymbolList)
arg0.SymbolTable.SymbolList[] == orig(arg0.SymbolTable.SymbolList[])
arg0.SymbolTable.SymbolMap == orig(arg0.SymbolTable.SymbolMap)
arg0.SymbolTable.ParamList == orig(arg0.SymbolTable.ParamList)
arg0.SymbolTable.ParamList[] == orig(arg0.SymbolTable.ParamList[])
arg0.SymbolTable.ParamMap == orig(arg0.SymbolTable.ParamMap)
arg0.SymbolTable.SignatureList == orig(arg0.SymbolTable.SignatureList)
arg0.SymbolTable.SignatureList[] == orig(arg0.SymbolTable.SignatureList[])
arg0.SymbolTable.SignatureMap == orig(arg0.SymbolTable.SignatureMap)
arg0.VoidType == orig(arg0.VoidType)
arg0.VoidType.KonohaContext == orig(arg0.VoidType.KonohaContext)
arg0.VoidType.Package == orig(arg0.VoidType.Package)
arg0.VoidType.ClassFlag == orig(arg0.VoidType.ClassFlag)
arg0.VoidType.ShortClassName == orig(arg0.VoidType.ShortClassName)
arg0.VoidType.ShortClassName.toString == orig(arg0.VoidType.ShortClassName.toString)
arg0.VoidType.BaseClass == orig(arg0.VoidType.BaseClass)
arg0.VoidType.SuperClass == orig(arg0.VoidType.SuperClass)
arg0.VoidType.ClassParam == orig(arg0.VoidType.ClassParam)
arg0.VoidType.SearchSimilarClass == orig(arg0.VoidType.SearchSimilarClass)
arg0.VoidType.ClassMethodList == orig(arg0.VoidType.ClassMethodList)
arg0.VoidType.ClassMethodList[] == orig(arg0.VoidType.ClassMethodList[])
arg0.VoidType.SearchSuperMethodClass == orig(arg0.VoidType.SearchSuperMethodClass)
arg0.VoidType.DefaultNullValue == orig(arg0.VoidType.DefaultNullValue)
arg0.VoidType.LocalSpec == orig(arg0.VoidType.LocalSpec)
arg0.VoidType.HostedClassInfo == orig(arg0.VoidType.HostedClassInfo)
arg0.BooleanType == orig(arg0.BooleanType)
arg0.BooleanType.KonohaContext == orig(arg0.BooleanType.KonohaContext)
arg0.BooleanType.Package == orig(arg0.BooleanType.Package)
arg0.BooleanType.ClassFlag == orig(arg0.BooleanType.ClassFlag)
arg0.BooleanType.ShortClassName == orig(arg0.BooleanType.ShortClassName)
arg0.BooleanType.ShortClassName.toString == orig(arg0.BooleanType.ShortClassName.toString)
arg0.BooleanType.BaseClass == orig(arg0.BooleanType.BaseClass)
arg0.BooleanType.SuperClass == orig(arg0.BooleanType.SuperClass)
arg0.BooleanType.ClassParam == orig(arg0.BooleanType.ClassParam)
arg0.BooleanType.SearchSimilarClass == orig(arg0.BooleanType.SearchSimilarClass)
arg0.BooleanType.ClassMethodList == orig(arg0.BooleanType.ClassMethodList)
arg0.BooleanType.ClassMethodList[] == orig(arg0.BooleanType.ClassMethodList[])
arg0.BooleanType.SearchSuperMethodClass == orig(arg0.BooleanType.SearchSuperMethodClass)
arg0.BooleanType.DefaultNullValue == orig(arg0.BooleanType.DefaultNullValue)
arg0.BooleanType.LocalSpec == orig(arg0.BooleanType.LocalSpec)
arg0.BooleanType.HostedClassInfo == orig(arg0.BooleanType.HostedClassInfo)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == null
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.ClassMethodList[] == []
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() == []
this.BaseClass.ClassMethodList has only one value
this.BaseClass.ClassMethodList[] == []
this.BaseClass.ClassMethodList[].getClass().getName() == []
this.ClassMethodList has only one value
this.ClassMethodList[] == []
this.ClassMethodList[].getClass().getName() == []
arg0.RootNameSpace has only one value
arg0.RootNameSpace.KonohaContext has only one value
arg0.RootNameSpace.ParentNameSpace == null
arg0.RootNameSpace.ImportedNameSpaceList == null
arg0.RootNameSpace.DefinedTokenMatrix == null
arg0.RootNameSpace.ImportedTokenMatrix == null
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType.KonohaContext has only one value
arg0.VoidType.Package == null
arg0.VoidType.ClassFlag == 0
arg0.VoidType.ShortClassName has only one value
arg0.VoidType.ShortClassName.toString == "Void"
arg0.VoidType.BaseClass has only one value
arg0.VoidType.SuperClass has only one value
arg0.VoidType.ClassParam == null
arg0.VoidType.SearchSimilarClass == null
arg0.VoidType.ClassMethodList has only one value
arg0.VoidType.ClassMethodList[] == []
arg0.VoidType.ClassMethodList[].getClass().getName() == []
arg0.VoidType.SearchSuperMethodClass == null
arg0.VoidType.DefaultNullValue == null
arg0.VoidType.LocalSpec == null
arg0.VoidType.HostedClassInfo has only one value
arg0.BooleanType.KonohaContext has only one value
arg0.BooleanType.Package == null
arg0.BooleanType.ClassFlag == 0
arg0.BooleanType.ShortClassName has only one value
arg0.BooleanType.ShortClassName.toString == "Boolean"
arg0.BooleanType.BaseClass has only one value
arg0.BooleanType.SuperClass has only one value
arg0.BooleanType.ClassParam == null
arg0.BooleanType.SearchSimilarClass == null
arg0.BooleanType.ClassMethodList has only one value
arg0.BooleanType.ClassMethodList[] == []
arg0.BooleanType.ClassMethodList[].getClass().getName() == []
arg0.BooleanType.SearchSuperMethodClass == null
arg0.BooleanType.DefaultNullValue == null
arg0.BooleanType.LocalSpec == null
arg0.BooleanType.HostedClassInfo has only one value
size(arg0.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KClass.KClass(org.KonohaScript.Konoha, org.KonohaScript.KPackage, int, java.lang.String, java.lang.Object):::ENTER
arg0 has only one value
arg0.RootNameSpace has only one value
arg0.RootNameSpace.KonohaContext has only one value
arg0.RootNameSpace.ParentNameSpace == null
arg0.RootNameSpace.ImportedNameSpaceList == null
arg0.RootNameSpace.DefinedTokenMatrix == null
arg0.RootNameSpace.ImportedTokenMatrix == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType.KonohaContext has only one value
arg0.VoidType.Package == null
arg0.VoidType.ClassFlag == 0
arg0.VoidType.ShortClassName has only one value
arg0.VoidType.ShortClassName.toString == "Void"
arg0.VoidType.BaseClass has only one value
arg0.VoidType.SuperClass has only one value
arg0.VoidType.ClassParam == null
arg0.VoidType.SearchSimilarClass == null
arg0.VoidType.ClassMethodList has only one value
arg0.VoidType.ClassMethodList[] == []
arg0.VoidType.ClassMethodList[].getClass().getName() == []
arg0.VoidType.SearchSuperMethodClass == null
arg0.VoidType.DefaultNullValue == null
arg0.VoidType.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
arg0.VoidType.HostedClassInfo has only one value
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
arg0.BooleanType.KonohaContext has only one value
arg0.BooleanType.Package == null
arg0.BooleanType.ClassFlag == 0
arg0.BooleanType.ShortClassName has only one value
arg0.BooleanType.ShortClassName.toString == "Boolean"
arg0.BooleanType.BaseClass has only one value
arg0.BooleanType.SuperClass has only one value
arg0.BooleanType.ClassParam == null
arg0.BooleanType.SearchSimilarClass == null
arg0.BooleanType.ClassMethodList has only one value
arg0.BooleanType.ClassMethodList[] == []
arg0.BooleanType.ClassMethodList[].getClass().getName() == []
arg0.BooleanType.SearchSuperMethodClass == null
arg0.BooleanType.DefaultNullValue == null
arg0.BooleanType.LocalSpec == null
arg0.BooleanType.HostedClassInfo has only one value
arg1 == null
arg2 == 0
arg4 == null
size(arg0.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KClass.KClass(org.KonohaScript.Konoha, org.KonohaScript.KPackage, int, java.lang.String, java.lang.Object):::EXIT
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
arg0.RootNameSpace == orig(arg0.RootNameSpace)
arg0.RootNameSpace.KonohaContext == orig(arg0.RootNameSpace.KonohaContext)
arg0.RootNameSpace.ParentNameSpace == orig(arg0.RootNameSpace.ParentNameSpace)
arg0.RootNameSpace.ImportedNameSpaceList == orig(arg0.RootNameSpace.ImportedNameSpaceList)
arg0.RootNameSpace.DefinedTokenMatrix == orig(arg0.RootNameSpace.DefinedTokenMatrix)
arg0.RootNameSpace.ImportedTokenMatrix == orig(arg0.RootNameSpace.ImportedTokenMatrix)
arg0.RootNameSpace.DefinedSymbolTable == orig(arg0.RootNameSpace.DefinedSymbolTable)
arg0.RootNameSpace.ImportedSymbolTable == orig(arg0.RootNameSpace.ImportedSymbolTable)
arg0.DefaultNameSpace == orig(arg0.DefaultNameSpace)
arg0.SymbolTable == orig(arg0.SymbolTable)
arg0.SymbolTable.ClassList == orig(arg0.SymbolTable.ClassList)
arg0.SymbolTable.ClassList[] == orig(arg0.SymbolTable.ClassList[])
arg0.SymbolTable.ClassNameMap == orig(arg0.SymbolTable.ClassNameMap)
arg0.SymbolTable.PackageList == orig(arg0.SymbolTable.PackageList)
arg0.SymbolTable.PackageList[] == orig(arg0.SymbolTable.PackageList[])
arg0.SymbolTable.PackageMap == orig(arg0.SymbolTable.PackageMap)
arg0.SymbolTable.FileIdList == orig(arg0.SymbolTable.FileIdList)
arg0.SymbolTable.FileIdList[] == orig(arg0.SymbolTable.FileIdList[])
arg0.SymbolTable.FileIdMap == orig(arg0.SymbolTable.FileIdMap)
arg0.SymbolTable.SymbolList == orig(arg0.SymbolTable.SymbolList)
arg0.SymbolTable.SymbolList[] == orig(arg0.SymbolTable.SymbolList[])
arg0.SymbolTable.SymbolMap == orig(arg0.SymbolTable.SymbolMap)
arg0.SymbolTable.ParamList == orig(arg0.SymbolTable.ParamList)
arg0.SymbolTable.ParamList[] == orig(arg0.SymbolTable.ParamList[])
arg0.SymbolTable.ParamMap == orig(arg0.SymbolTable.ParamMap)
arg0.SymbolTable.SignatureList == orig(arg0.SymbolTable.SignatureList)
arg0.SymbolTable.SignatureList[] == orig(arg0.SymbolTable.SignatureList[])
arg0.SymbolTable.SignatureMap == orig(arg0.SymbolTable.SignatureMap)
arg0.VoidType == orig(arg0.VoidType)
arg0.VoidType.KonohaContext == orig(arg0.VoidType.KonohaContext)
arg0.VoidType.Package == orig(arg0.VoidType.Package)
arg0.VoidType.ClassFlag == orig(arg0.VoidType.ClassFlag)
arg0.VoidType.ShortClassName == orig(arg0.VoidType.ShortClassName)
arg0.VoidType.ShortClassName.toString == orig(arg0.VoidType.ShortClassName.toString)
arg0.VoidType.BaseClass == orig(arg0.VoidType.BaseClass)
arg0.VoidType.SuperClass == orig(arg0.VoidType.SuperClass)
arg0.VoidType.ClassParam == orig(arg0.VoidType.ClassParam)
arg0.VoidType.SearchSimilarClass == orig(arg0.VoidType.SearchSimilarClass)
arg0.VoidType.ClassMethodList == orig(arg0.VoidType.ClassMethodList)
arg0.VoidType.ClassMethodList[] == orig(arg0.VoidType.ClassMethodList[])
arg0.VoidType.SearchSuperMethodClass == orig(arg0.VoidType.SearchSuperMethodClass)
arg0.VoidType.DefaultNullValue == orig(arg0.VoidType.DefaultNullValue)
arg0.VoidType.LocalSpec == orig(arg0.VoidType.LocalSpec)
arg0.VoidType.HostedClassInfo == orig(arg0.VoidType.HostedClassInfo)
arg0.BooleanType == orig(arg0.BooleanType)
arg0.BooleanType.KonohaContext == orig(arg0.BooleanType.KonohaContext)
arg0.BooleanType.Package == orig(arg0.BooleanType.Package)
arg0.BooleanType.ClassFlag == orig(arg0.BooleanType.ClassFlag)
arg0.BooleanType.ShortClassName == orig(arg0.BooleanType.ShortClassName)
arg0.BooleanType.ShortClassName.toString == orig(arg0.BooleanType.ShortClassName.toString)
arg0.BooleanType.BaseClass == orig(arg0.BooleanType.BaseClass)
arg0.BooleanType.SuperClass == orig(arg0.BooleanType.SuperClass)
arg0.BooleanType.ClassParam == orig(arg0.BooleanType.ClassParam)
arg0.BooleanType.SearchSimilarClass == orig(arg0.BooleanType.SearchSimilarClass)
arg0.BooleanType.ClassMethodList == orig(arg0.BooleanType.ClassMethodList)
arg0.BooleanType.ClassMethodList[] == orig(arg0.BooleanType.ClassMethodList[])
arg0.BooleanType.SearchSuperMethodClass == orig(arg0.BooleanType.SearchSuperMethodClass)
arg0.BooleanType.DefaultNullValue == orig(arg0.BooleanType.DefaultNullValue)
arg0.BooleanType.LocalSpec == orig(arg0.BooleanType.LocalSpec)
arg0.BooleanType.HostedClassInfo == orig(arg0.BooleanType.HostedClassInfo)
arg3.toString == orig(arg3.toString)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == null
this.BaseClass.BaseClass.SuperClass == null
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.ClassMethodList[] == []
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() == []
this.BaseClass.BaseClass.HostedClassInfo == null
this.BaseClass.SuperClass == null
this.BaseClass.ClassMethodList has only one value
this.BaseClass.ClassMethodList[] == []
this.BaseClass.ClassMethodList[].getClass().getName() == []
this.BaseClass.HostedClassInfo == null
this.SuperClass == null
this.ClassMethodList has only one value
this.ClassMethodList[] == []
this.ClassMethodList[].getClass().getName() == []
this.HostedClassInfo == null
arg0.RootNameSpace has only one value
arg0.RootNameSpace.KonohaContext has only one value
arg0.RootNameSpace.ParentNameSpace == null
arg0.RootNameSpace.ImportedNameSpaceList == null
arg0.RootNameSpace.DefinedTokenMatrix == null
arg0.RootNameSpace.ImportedTokenMatrix == null
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType.KonohaContext has only one value
arg0.VoidType.Package == null
arg0.VoidType.ClassFlag == 0
arg0.VoidType.ShortClassName has only one value
arg0.VoidType.ShortClassName.toString == "Void"
arg0.VoidType.BaseClass has only one value
arg0.VoidType.SuperClass has only one value
arg0.VoidType.ClassParam == null
arg0.VoidType.SearchSimilarClass == null
arg0.VoidType.ClassMethodList has only one value
arg0.VoidType.ClassMethodList[] == []
arg0.VoidType.ClassMethodList[].getClass().getName() == []
arg0.VoidType.SearchSuperMethodClass == null
arg0.VoidType.DefaultNullValue == null
arg0.VoidType.LocalSpec == null
arg0.VoidType.HostedClassInfo has only one value
arg0.BooleanType.KonohaContext has only one value
arg0.BooleanType.Package == null
arg0.BooleanType.ClassFlag == 0
arg0.BooleanType.ShortClassName has only one value
arg0.BooleanType.ShortClassName.toString == "Boolean"
arg0.BooleanType.BaseClass has only one value
arg0.BooleanType.SuperClass has only one value
arg0.BooleanType.ClassParam == null
arg0.BooleanType.SearchSimilarClass == null
arg0.BooleanType.ClassMethodList has only one value
arg0.BooleanType.ClassMethodList[] == []
arg0.BooleanType.ClassMethodList[].getClass().getName() == []
arg0.BooleanType.SearchSuperMethodClass == null
arg0.BooleanType.DefaultNullValue == null
arg0.BooleanType.LocalSpec == null
arg0.BooleanType.HostedClassInfo has only one value
size(arg0.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KClass.LookupMethod(java.lang.String, int):::ENTER
this has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ShortClassName has only one value
this.ShortClassName.toString == "Integer"
this.BaseClass has only one value
this.BaseClass.KonohaContext.VoidType has only one value
this.BaseClass.KonohaContext.BooleanType has only one value
this.BaseClass.ShortClassName has only one value
this.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.ShortClassName has only one value
this.BaseClass.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.SuperClass has only one value
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.BaseClass.HostedClassInfo has only one value
this.BaseClass.SuperClass has only one value
this.BaseClass.SuperClass.ShortClassName has only one value
this.BaseClass.SuperClass.ShortClassName.toString == "Number"
this.BaseClass.SuperClass.BaseClass has only one value
this.BaseClass.SuperClass.SuperClass has only one value
this.BaseClass.SuperClass.HostedClassInfo has only one value
this.BaseClass.ClassMethodList has only one value
this.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.HostedClassInfo has only one value
this.SuperClass has only one value
this.SuperClass.KonohaContext.VoidType has only one value
this.SuperClass.KonohaContext.BooleanType has only one value
this.SuperClass.ShortClassName has only one value
this.SuperClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass has only one value
this.SuperClass.BaseClass.ShortClassName has only one value
this.SuperClass.BaseClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass.BaseClass has only one value
this.SuperClass.BaseClass.SuperClass has only one value
this.SuperClass.BaseClass.HostedClassInfo has only one value
this.SuperClass.SuperClass has only one value
this.SuperClass.HostedClassInfo has only one value
this.ClassMethodList has only one value
this.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.HostedClassInfo has only one value
arg0 has only one value
arg0.toString == "+"
arg1 one of { 0, 1, 2 }
size(this.BaseClass.BaseClass.ClassMethodList[]) == 4
size(this.BaseClass.ClassMethodList[]) == 4
size(this.ClassMethodList[]) == 4
===========================================================================
org.KonohaScript.KClass.LookupMethod(java.lang.String, int):::EXIT146
orig(arg1) one of { 0, 1 }
===========================================================================
org.KonohaScript.KClass.LookupMethod(java.lang.String, int):::EXIT161
return == null
orig(arg1) == 2
===========================================================================
org.KonohaScript.KClass.LookupMethod(java.lang.String, int):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.Package == orig(this.Package)
this.ClassFlag == orig(this.ClassFlag)
this.ShortClassName == orig(this.ShortClassName)
this.ShortClassName.toString == orig(this.ShortClassName.toString)
this.BaseClass == orig(this.BaseClass)
this.BaseClass.KonohaContext == orig(this.BaseClass.KonohaContext)
this.BaseClass.KonohaContext.RootNameSpace == orig(this.BaseClass.KonohaContext.RootNameSpace)
this.BaseClass.KonohaContext.DefaultNameSpace == orig(this.BaseClass.KonohaContext.DefaultNameSpace)
this.BaseClass.KonohaContext.SymbolTable == orig(this.BaseClass.KonohaContext.SymbolTable)
this.BaseClass.KonohaContext.VoidType == orig(this.BaseClass.KonohaContext.VoidType)
this.BaseClass.KonohaContext.BooleanType == orig(this.BaseClass.KonohaContext.BooleanType)
this.BaseClass.Package == orig(this.BaseClass.Package)
this.BaseClass.ClassFlag == orig(this.BaseClass.ClassFlag)
this.BaseClass.ShortClassName == orig(this.BaseClass.ShortClassName)
this.BaseClass.ShortClassName.toString == orig(this.BaseClass.ShortClassName.toString)
this.BaseClass.BaseClass == orig(this.BaseClass.BaseClass)
this.BaseClass.BaseClass.KonohaContext == orig(this.BaseClass.BaseClass.KonohaContext)
this.BaseClass.BaseClass.Package == orig(this.BaseClass.BaseClass.Package)
this.BaseClass.BaseClass.ClassFlag == orig(this.BaseClass.BaseClass.ClassFlag)
this.BaseClass.BaseClass.ShortClassName == orig(this.BaseClass.BaseClass.ShortClassName)
this.BaseClass.BaseClass.ShortClassName.toString == orig(this.BaseClass.BaseClass.ShortClassName.toString)
this.BaseClass.BaseClass.BaseClass == orig(this.BaseClass.BaseClass.BaseClass)
this.BaseClass.BaseClass.SuperClass == orig(this.BaseClass.BaseClass.SuperClass)
this.BaseClass.BaseClass.ClassParam == orig(this.BaseClass.BaseClass.ClassParam)
this.BaseClass.BaseClass.SearchSimilarClass == orig(this.BaseClass.BaseClass.SearchSimilarClass)
this.BaseClass.BaseClass.ClassMethodList == orig(this.BaseClass.BaseClass.ClassMethodList)
this.BaseClass.BaseClass.ClassMethodList[] == orig(this.BaseClass.BaseClass.ClassMethodList[])
this.BaseClass.BaseClass.SearchSuperMethodClass == orig(this.BaseClass.BaseClass.SearchSuperMethodClass)
this.BaseClass.BaseClass.DefaultNullValue == orig(this.BaseClass.BaseClass.DefaultNullValue)
this.BaseClass.BaseClass.LocalSpec == orig(this.BaseClass.BaseClass.LocalSpec)
this.BaseClass.BaseClass.HostedClassInfo == orig(this.BaseClass.BaseClass.HostedClassInfo)
this.BaseClass.SuperClass == orig(this.BaseClass.SuperClass)
this.BaseClass.SuperClass.KonohaContext == orig(this.BaseClass.SuperClass.KonohaContext)
this.BaseClass.SuperClass.Package == orig(this.BaseClass.SuperClass.Package)
this.BaseClass.SuperClass.ClassFlag == orig(this.BaseClass.SuperClass.ClassFlag)
this.BaseClass.SuperClass.ShortClassName == orig(this.BaseClass.SuperClass.ShortClassName)
this.BaseClass.SuperClass.ShortClassName.toString == orig(this.BaseClass.SuperClass.ShortClassName.toString)
this.BaseClass.SuperClass.BaseClass == orig(this.BaseClass.SuperClass.BaseClass)
this.BaseClass.SuperClass.SuperClass == orig(this.BaseClass.SuperClass.SuperClass)
this.BaseClass.SuperClass.ClassParam == orig(this.BaseClass.SuperClass.ClassParam)
this.BaseClass.SuperClass.SearchSimilarClass == orig(this.BaseClass.SuperClass.SearchSimilarClass)
this.BaseClass.SuperClass.ClassMethodList == orig(this.BaseClass.SuperClass.ClassMethodList)
this.BaseClass.SuperClass.ClassMethodList[] == orig(this.BaseClass.SuperClass.ClassMethodList[])
this.BaseClass.SuperClass.SearchSuperMethodClass == orig(this.BaseClass.SuperClass.SearchSuperMethodClass)
this.BaseClass.SuperClass.DefaultNullValue == orig(this.BaseClass.SuperClass.DefaultNullValue)
this.BaseClass.SuperClass.LocalSpec == orig(this.BaseClass.SuperClass.LocalSpec)
this.BaseClass.SuperClass.HostedClassInfo == orig(this.BaseClass.SuperClass.HostedClassInfo)
this.BaseClass.ClassParam == orig(this.BaseClass.ClassParam)
this.BaseClass.SearchSimilarClass == orig(this.BaseClass.SearchSimilarClass)
this.BaseClass.ClassMethodList == orig(this.BaseClass.ClassMethodList)
this.BaseClass.ClassMethodList[] == orig(this.BaseClass.ClassMethodList[])
this.BaseClass.SearchSuperMethodClass == orig(this.BaseClass.SearchSuperMethodClass)
this.BaseClass.DefaultNullValue == orig(this.BaseClass.DefaultNullValue)
this.BaseClass.LocalSpec == orig(this.BaseClass.LocalSpec)
this.BaseClass.HostedClassInfo == orig(this.BaseClass.HostedClassInfo)
this.SuperClass == orig(this.SuperClass)
this.SuperClass.KonohaContext == orig(this.SuperClass.KonohaContext)
this.SuperClass.KonohaContext.RootNameSpace == orig(this.SuperClass.KonohaContext.RootNameSpace)
this.SuperClass.KonohaContext.DefaultNameSpace == orig(this.SuperClass.KonohaContext.DefaultNameSpace)
this.SuperClass.KonohaContext.SymbolTable == orig(this.SuperClass.KonohaContext.SymbolTable)
this.SuperClass.KonohaContext.VoidType == orig(this.SuperClass.KonohaContext.VoidType)
this.SuperClass.KonohaContext.BooleanType == orig(this.SuperClass.KonohaContext.BooleanType)
this.SuperClass.Package == orig(this.SuperClass.Package)
this.SuperClass.ClassFlag == orig(this.SuperClass.ClassFlag)
this.SuperClass.ShortClassName == orig(this.SuperClass.ShortClassName)
this.SuperClass.ShortClassName.toString == orig(this.SuperClass.ShortClassName.toString)
this.SuperClass.BaseClass == orig(this.SuperClass.BaseClass)
this.SuperClass.BaseClass.KonohaContext == orig(this.SuperClass.BaseClass.KonohaContext)
this.SuperClass.BaseClass.Package == orig(this.SuperClass.BaseClass.Package)
this.SuperClass.BaseClass.ClassFlag == orig(this.SuperClass.BaseClass.ClassFlag)
this.SuperClass.BaseClass.ShortClassName == orig(this.SuperClass.BaseClass.ShortClassName)
this.SuperClass.BaseClass.ShortClassName.toString == orig(this.SuperClass.BaseClass.ShortClassName.toString)
this.SuperClass.BaseClass.BaseClass == orig(this.SuperClass.BaseClass.BaseClass)
this.SuperClass.BaseClass.SuperClass == orig(this.SuperClass.BaseClass.SuperClass)
this.SuperClass.BaseClass.ClassParam == orig(this.SuperClass.BaseClass.ClassParam)
this.SuperClass.BaseClass.SearchSimilarClass == orig(this.SuperClass.BaseClass.SearchSimilarClass)
this.SuperClass.BaseClass.ClassMethodList == orig(this.SuperClass.BaseClass.ClassMethodList)
this.SuperClass.BaseClass.ClassMethodList[] == orig(this.SuperClass.BaseClass.ClassMethodList[])
this.SuperClass.BaseClass.SearchSuperMethodClass == orig(this.SuperClass.BaseClass.SearchSuperMethodClass)
this.SuperClass.BaseClass.DefaultNullValue == orig(this.SuperClass.BaseClass.DefaultNullValue)
this.SuperClass.BaseClass.LocalSpec == orig(this.SuperClass.BaseClass.LocalSpec)
this.SuperClass.BaseClass.HostedClassInfo == orig(this.SuperClass.BaseClass.HostedClassInfo)
this.SuperClass.SuperClass == orig(this.SuperClass.SuperClass)
this.SuperClass.SuperClass.KonohaContext == orig(this.SuperClass.SuperClass.KonohaContext)
this.SuperClass.SuperClass.Package == orig(this.SuperClass.SuperClass.Package)
this.SuperClass.SuperClass.ClassFlag == orig(this.SuperClass.SuperClass.ClassFlag)
this.SuperClass.SuperClass.ShortClassName == orig(this.SuperClass.SuperClass.ShortClassName)
this.SuperClass.SuperClass.ShortClassName.toString == orig(this.SuperClass.SuperClass.ShortClassName.toString)
this.SuperClass.SuperClass.BaseClass == orig(this.SuperClass.SuperClass.BaseClass)
this.SuperClass.SuperClass.SuperClass == orig(this.SuperClass.SuperClass.SuperClass)
this.SuperClass.SuperClass.ClassParam == orig(this.SuperClass.SuperClass.ClassParam)
this.SuperClass.SuperClass.SearchSimilarClass == orig(this.SuperClass.SuperClass.SearchSimilarClass)
this.SuperClass.SuperClass.ClassMethodList == orig(this.SuperClass.SuperClass.ClassMethodList)
this.SuperClass.SuperClass.ClassMethodList[] == orig(this.SuperClass.SuperClass.ClassMethodList[])
this.SuperClass.SuperClass.SearchSuperMethodClass == orig(this.SuperClass.SuperClass.SearchSuperMethodClass)
this.SuperClass.SuperClass.DefaultNullValue == orig(this.SuperClass.SuperClass.DefaultNullValue)
this.SuperClass.SuperClass.LocalSpec == orig(this.SuperClass.SuperClass.LocalSpec)
this.SuperClass.SuperClass.HostedClassInfo == orig(this.SuperClass.SuperClass.HostedClassInfo)
this.SuperClass.ClassParam == orig(this.SuperClass.ClassParam)
this.SuperClass.SearchSimilarClass == orig(this.SuperClass.SearchSimilarClass)
this.SuperClass.ClassMethodList == orig(this.SuperClass.ClassMethodList)
this.SuperClass.ClassMethodList[] == orig(this.SuperClass.ClassMethodList[])
this.SuperClass.SearchSuperMethodClass == orig(this.SuperClass.SearchSuperMethodClass)
this.SuperClass.DefaultNullValue == orig(this.SuperClass.DefaultNullValue)
this.SuperClass.LocalSpec == orig(this.SuperClass.LocalSpec)
this.SuperClass.HostedClassInfo == orig(this.SuperClass.HostedClassInfo)
this.ClassParam == orig(this.ClassParam)
this.SearchSimilarClass == orig(this.SearchSimilarClass)
this.ClassMethodList == orig(this.ClassMethodList)
this.ClassMethodList[] == orig(this.ClassMethodList[])
this.SearchSuperMethodClass == orig(this.SearchSuperMethodClass)
this.DefaultNullValue == orig(this.DefaultNullValue)
this.LocalSpec == orig(this.LocalSpec)
this.HostedClassInfo == orig(this.HostedClassInfo)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ShortClassName has only one value
this.ShortClassName.toString == "Integer"
this.BaseClass has only one value
this.BaseClass.KonohaContext.VoidType has only one value
this.BaseClass.KonohaContext.BooleanType has only one value
this.BaseClass.ShortClassName has only one value
this.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.ShortClassName has only one value
this.BaseClass.BaseClass.ShortClassName.toString == "Integer"
this.BaseClass.BaseClass.BaseClass has only one value
this.BaseClass.BaseClass.SuperClass has only one value
this.BaseClass.BaseClass.ClassMethodList has only one value
this.BaseClass.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.BaseClass.HostedClassInfo has only one value
this.BaseClass.SuperClass has only one value
this.BaseClass.SuperClass.ShortClassName has only one value
this.BaseClass.SuperClass.ShortClassName.toString == "Number"
this.BaseClass.SuperClass.BaseClass has only one value
this.BaseClass.SuperClass.SuperClass has only one value
this.BaseClass.SuperClass.HostedClassInfo has only one value
this.BaseClass.ClassMethodList has only one value
this.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.BaseClass.HostedClassInfo has only one value
this.SuperClass has only one value
this.SuperClass.KonohaContext.VoidType has only one value
this.SuperClass.KonohaContext.BooleanType has only one value
this.SuperClass.ShortClassName has only one value
this.SuperClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass has only one value
this.SuperClass.BaseClass.ShortClassName has only one value
this.SuperClass.BaseClass.ShortClassName.toString == "Number"
this.SuperClass.BaseClass.BaseClass has only one value
this.SuperClass.BaseClass.SuperClass has only one value
this.SuperClass.BaseClass.HostedClassInfo has only one value
this.SuperClass.SuperClass has only one value
this.SuperClass.HostedClassInfo has only one value
this.ClassMethodList has only one value
this.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.HostedClassInfo has only one value
arg0.toString == "+"
return.MethodFlag == 40
return.ClassInfo has only one value
return.ClassInfo.KonohaContext has only one value
return.ClassInfo.Package == null
return.ClassInfo.ClassFlag == 0
return.ClassInfo.ShortClassName has only one value
return.ClassInfo.ShortClassName.toString == "Integer"
return.ClassInfo.BaseClass has only one value
return.ClassInfo.SuperClass has only one value
return.ClassInfo.ClassParam == null
return.ClassInfo.SearchSimilarClass == null
return.ClassInfo.ClassMethodList has only one value
return.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
return.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
return.ClassInfo.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
return.ClassInfo.SearchSuperMethodClass == null
return.ClassInfo.DefaultNullValue == null
return.ClassInfo.LocalSpec == null
return.ClassInfo.HostedClassInfo has only one value
return.MethodName has only one value
return.MethodName.toString == "+"
return.Param.ReturnSize == 1
return.Param.Types.getClass().getName() == org.KonohaScript.KClass[].class
return.Param.Types[] elements has only one value
return.Param.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
return.Param.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
return.Param.Types[].KonohaContext elements has only one value
return.Param.Types[].Package elements == null
return.Param.Types[].ClassFlag elements == 0
return.Param.Types[].ClassFlag one of { [0], [0, 0] }
return.Param.Types[].ShortClassName elements has only one value
return.Param.Types[].ShortClassName.toString elements == "Integer"
return.Param.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
return.Param.Types[].BaseClass elements has only one value
return.Param.Types[].SuperClass elements has only one value
return.Param.Types[].ClassParam elements == null
return.Param.Types[].SearchSimilarClass elements == null
return.Param.Types[].ClassMethodList elements has only one value
return.Param.Types[].SearchSuperMethodClass elements == null
return.Param.Types[].DefaultNullValue elements == null
return.Param.Types[].DefaultNullValue.getClass().getName() elements == null
return.Param.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
return.Param.Types[].LocalSpec elements == null
return.Param.Types[].LocalSpec.getClass().getName() elements == null
return.Param.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
return.Param.Types[].HostedClassInfo elements has only one value
size(this.BaseClass.BaseClass.ClassMethodList[]) == 4
size(this.BaseClass.ClassMethodList[]) == 4
size(this.ClassMethodList[]) == 4
size(return.ClassInfo.ClassMethodList[]) == 4
size(return.Param.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KFunc:::OBJECT
this.callee has only one value
this.callee != null
this.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.method != null
this.prev == null
===========================================================================
org.KonohaScript.KFunc.Duplicate():::ENTER
===========================================================================
org.KonohaScript.KFunc.Duplicate():::EXIT80
===========================================================================
org.KonohaScript.KFunc.Duplicate():::EXIT
this.callee == orig(this.callee)
this.callee.getClass().getName() == orig(this.callee.getClass().getName())
this.method == orig(this.method)
this.prev == orig(this.prev)
return != null
return.callee has only one value
return.callee != null
return.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.method != null
return.prev == null
===========================================================================
org.KonohaScript.KFunc.EqualsMethod(java.lang.reflect.Method, java.lang.reflect.Method):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.KonohaScript.KFunc.EqualsMethod(java.lang.reflect.Method, java.lang.reflect.Method):::EXIT62
===========================================================================
org.KonohaScript.KFunc.EqualsMethod(java.lang.reflect.Method, java.lang.reflect.Method):::EXIT62;condition="return == true"
===========================================================================
org.KonohaScript.KFunc.EqualsMethod(java.lang.reflect.Method, java.lang.reflect.Method):::EXIT
return == true
===========================================================================
org.KonohaScript.KFunc.EqualsMethod(java.lang.reflect.Method, java.lang.reflect.Method):::EXIT;condition="return == true"
===========================================================================
org.KonohaScript.KFunc.InvokeMacroFunc(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0 != null
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent one of { 0, 4 }
arg0.ns has only one value
arg0.ns != null
arg0.ns.KonohaContext has only one value
arg0.ns.KonohaContext != null
arg0.ns.ParentNameSpace has only one value
arg0.ns.ParentNameSpace != null
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix != null
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
arg0.ns.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1 != null
arg1[] elements != null
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 one of { 13, 35 }
arg4 != null
arg4[] elements != null
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KFunc.InvokeMacroFunc(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT113
===========================================================================
org.KonohaScript.KFunc.InvokeMacroFunc(org.KonohaScript.LexicalConverter, java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
this.callee == orig(this.callee)
this.callee.getClass().getName() == orig(this.callee.getClass().getName())
this.method == orig(this.method)
this.prev == orig(this.prev)
arg0.TopLevel == orig(arg0.TopLevel)
arg0.SkipIndent == orig(arg0.SkipIndent)
arg0.LastIndent == orig(arg0.LastIndent)
arg0.ns == orig(arg0.ns)
arg0.ns.KonohaContext == orig(arg0.ns.KonohaContext)
arg0.ns.ParentNameSpace == orig(arg0.ns.ParentNameSpace)
arg0.ns.ImportedNameSpaceList == orig(arg0.ns.ImportedNameSpaceList)
arg0.ns.DefinedTokenMatrix == orig(arg0.ns.DefinedTokenMatrix)
arg0.ns.ImportedTokenMatrix == orig(arg0.ns.ImportedTokenMatrix)
arg0.ns.ImportedTokenMatrix.getClass().getName() == orig(arg0.ns.ImportedTokenMatrix.getClass().getName())
arg0.ns.ImportedTokenMatrix[] == orig(arg0.ns.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ns.DefinedSymbolTable == orig(arg0.ns.DefinedSymbolTable)
arg0.ns.ImportedSymbolTable == orig(arg0.ns.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
arg0.TopLevel == true
arg0.SkipIndent == false
arg0.LastIndent one of { 0, 4 }
arg0.ns has only one value
arg0.ns != null
arg0.ns.KonohaContext has only one value
arg0.ns.KonohaContext != null
arg0.ns.ParentNameSpace has only one value
arg0.ns.ParentNameSpace != null
arg0.ns.ImportedNameSpaceList == null
arg0.ns.DefinedTokenMatrix == null
arg0.ns.ImportedTokenMatrix has only one value
arg0.ns.ImportedTokenMatrix != null
arg0.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ns.ImportedTokenMatrix[] has only one value, of length 41
arg0.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ns.DefinedSymbolTable == null
arg0.ns.ImportedSymbolTable has only one value
arg0.ns.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
arg1[] elements != null
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4[] elements != null
arg4[].getClass().getName() elements == org.KonohaScript.KToken.class
return >= -1
size(arg0.ns.ImportedTokenMatrix[]) == 41
size(arg1[])-1 <= orig(size(arg1[]))
size(arg1[])-1 >= orig(size(arg1[]))-1
size(arg4[])-1 <= orig(size(arg4[]))
size(arg4[])-1 >= orig(size(arg4[]))-1
===========================================================================
org.KonohaScript.KFunc.InvokeTokenFunc(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::ENTER
arg0 != null
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedSymbolTable != null
arg1 != null
arg2 >= 0
arg3 != null
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KFunc.InvokeTokenFunc(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT95
===========================================================================
org.KonohaScript.KFunc.InvokeTokenFunc(org.KonohaScript.KNameSpace, java.lang.String, int, java.util.ArrayList):::EXIT
this.callee == orig(this.callee)
this.callee.getClass().getName() == orig(this.callee.getClass().getName())
this.method == orig(this.method)
this.prev == orig(this.prev)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedSymbolTable != null
arg3[] elements != null
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg3[])-1 <= orig(size(arg3[]))
size(arg3[])-1 >= orig(size(arg3[]))-1
===========================================================================
org.KonohaScript.KFunc.KFunc(java.lang.Object, java.lang.String, org.KonohaScript.KFunc):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg2 == null
===========================================================================
org.KonohaScript.KFunc.KFunc(java.lang.Object, java.lang.String, org.KonohaScript.KFunc):::EXIT
arg1.toString == orig(arg1.toString)
===========================================================================
org.KonohaScript.KFunc.KFunc(java.lang.Object, java.lang.reflect.Method, org.KonohaScript.KFunc):::ENTER
arg0 has only one value
arg0 != null
arg0.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1 != null
arg2 == null
===========================================================================
org.KonohaScript.KFunc.KFunc(java.lang.Object, java.lang.reflect.Method, org.KonohaScript.KFunc):::EXIT
===========================================================================
org.KonohaScript.KFunc.LookupMethod(java.lang.Object, java.lang.String):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.KonohaScript.KFunc.LookupMethod(java.lang.Object, java.lang.String):::EXIT40
return != null
===========================================================================
org.KonohaScript.KFunc.LookupMethod(java.lang.Object, java.lang.String):::EXIT44
return == null
orig(arg0) has only one value
orig(arg0.getClass().getName()) == org.KonohaScript.GrammarSet.MiniKonoha.class
===========================================================================
org.KonohaScript.KFunc.LookupMethod(java.lang.Object, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
(return == null)  ==>  (orig(arg0) has only one value)
(return == null)  ==>  (orig(arg0.getClass().getName()) == org.KonohaScript.GrammarSet.MiniKonoha.class)
===========================================================================
org.KonohaScript.KFunc.NewFunc(java.lang.Object, java.lang.String, org.KonohaScript.KFunc):::ENTER
arg0 has only one value
arg0 != null
arg0.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1 != null
arg2.callee has only one value
arg2.callee != null
arg2.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg2.method != null
arg2.prev == null
===========================================================================
org.KonohaScript.KFunc.NewFunc(java.lang.Object, java.lang.String, org.KonohaScript.KFunc):::EXIT69
orig(arg2) != null
===========================================================================
org.KonohaScript.KFunc.NewFunc(java.lang.Object, java.lang.String, org.KonohaScript.KFunc):::EXIT71
orig(arg2) == null
===========================================================================
org.KonohaScript.KFunc.NewFunc(java.lang.Object, java.lang.String, org.KonohaScript.KFunc):::EXIT
arg1.toString == orig(arg1.toString)
arg2.callee == orig(arg2.callee)
arg2.callee.getClass().getName() == orig(arg2.callee.getClass().getName())
arg2.method == orig(arg2.method)
arg2.prev == orig(arg2.prev)
(orig(arg2) != null)  ==>  (arg2.callee != null)
(orig(arg2) != null)  ==>  (arg2.callee has only one value)
(orig(arg2) != null)  ==>  (arg2.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class)
(orig(arg2) != null)  ==>  (arg2.method != null)
(orig(arg2) != null)  ==>  (arg2.prev == null)
arg2.callee has only one value
arg2.callee != null
arg2.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg2.method != null
arg2.prev == null
return != null
return.callee has only one value
return.callee != null
return.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.method != null
return.prev == null
===========================================================================
org.KonohaScript.KKeyIdMap:::OBJECT
this has only one value
===========================================================================
org.KonohaScript.KKeyIdMap.KKeyIdMap():::EXIT
===========================================================================
org.KonohaScript.KMethod:::OBJECT
this.MethodFlag == 40
this.ClassInfo has only one value
this.ClassInfo != null
this.ClassInfo.KonohaContext has only one value
this.ClassInfo.KonohaContext != null
this.ClassInfo.KonohaContext.RootNameSpace has only one value
this.ClassInfo.KonohaContext.RootNameSpace != null
this.ClassInfo.KonohaContext.DefaultNameSpace == null
this.ClassInfo.KonohaContext.SymbolTable has only one value
this.ClassInfo.KonohaContext.SymbolTable != null
this.ClassInfo.KonohaContext.VoidType has only one value
this.ClassInfo.KonohaContext.VoidType != null
this.ClassInfo.KonohaContext.BooleanType has only one value
this.ClassInfo.KonohaContext.BooleanType != null
this.ClassInfo.Package == null
this.ClassInfo.ClassFlag == 0
this.ClassInfo.ShortClassName has only one value
this.ClassInfo.ShortClassName != null
this.ClassInfo.ShortClassName.toString == "Integer"
this.ClassInfo.BaseClass has only one value
this.ClassInfo.BaseClass != null
this.ClassInfo.BaseClass.KonohaContext has only one value
this.ClassInfo.BaseClass.KonohaContext != null
this.ClassInfo.BaseClass.Package == null
this.ClassInfo.BaseClass.ClassFlag == 0
this.ClassInfo.BaseClass.ShortClassName has only one value
this.ClassInfo.BaseClass.ShortClassName != null
this.ClassInfo.BaseClass.ShortClassName.toString == "Integer"
this.ClassInfo.BaseClass.BaseClass has only one value
this.ClassInfo.BaseClass.BaseClass != null
this.ClassInfo.BaseClass.SuperClass has only one value
this.ClassInfo.BaseClass.SuperClass != null
this.ClassInfo.BaseClass.ClassParam == null
this.ClassInfo.BaseClass.SearchSimilarClass == null
this.ClassInfo.BaseClass.ClassMethodList != null
this.ClassInfo.BaseClass.ClassMethodList[] elements != null
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
this.ClassInfo.BaseClass.SearchSuperMethodClass == null
this.ClassInfo.BaseClass.DefaultNullValue == null
this.ClassInfo.BaseClass.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList != null
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
this.ClassInfo.BaseClass.HostedClassInfo has only one value
this.ClassInfo.BaseClass.HostedClassInfo != null
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
this.ClassInfo.SuperClass has only one value
this.ClassInfo.SuperClass != null
this.ClassInfo.SuperClass.KonohaContext has only one value
this.ClassInfo.SuperClass.KonohaContext != null
this.ClassInfo.SuperClass.Package == null
this.ClassInfo.SuperClass.ClassFlag == 0
this.ClassInfo.SuperClass.ShortClassName has only one value
this.ClassInfo.SuperClass.ShortClassName != null
this.ClassInfo.SuperClass.ShortClassName.toString == "Number"
this.ClassInfo.SuperClass.BaseClass has only one value
this.ClassInfo.SuperClass.BaseClass != null
this.ClassInfo.SuperClass.SuperClass has only one value
this.ClassInfo.SuperClass.SuperClass != null
this.ClassInfo.SuperClass.ClassParam == null
this.ClassInfo.SuperClass.SearchSimilarClass == null
this.ClassInfo.SuperClass.ClassMethodList has only one value
this.ClassInfo.SuperClass.ClassMethodList != null
this.ClassInfo.SuperClass.ClassMethodList[] == []
this.ClassInfo.SuperClass.ClassMethodList[].getClass().getName() == []
this.ClassInfo.SuperClass.SearchSuperMethodClass == null
this.ClassInfo.SuperClass.DefaultNullValue == null
this.ClassInfo.SuperClass.LocalSpec == null
this.ClassInfo.SuperClass.HostedClassInfo has only one value
this.ClassInfo.SuperClass.HostedClassInfo != null
this.ClassInfo.ClassParam == null
this.ClassInfo.SearchSimilarClass == null
this.ClassInfo.ClassMethodList != null
this.ClassInfo.ClassMethodList[] elements != null
this.ClassInfo.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
this.ClassInfo.SearchSuperMethodClass == null
this.ClassInfo.DefaultNullValue == null
this.ClassInfo.LocalSpec == null
this.ClassInfo.HostedClassInfo has only one value
this.ClassInfo.HostedClassInfo != null
this.MethodName != null
this.MethodName.toString one of { "+", "-" }
this.Param != null
this.Param.ReturnSize == 1
this.Param.Types != null
this.Param.Types.getClass().getName() == org.KonohaScript.KClass[].class
this.Param.Types[] elements has only one value
this.Param.Types[] elements != null
this.Param.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
this.Param.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
this.Param.Types[].KonohaContext elements has only one value
this.Param.Types[].KonohaContext elements != null
this.Param.Types[].Package elements == null
this.Param.Types[].ClassFlag elements == 0
this.Param.Types[].ClassFlag one of { [0], [0, 0] }
this.Param.Types[].ShortClassName elements has only one value
this.Param.Types[].ShortClassName elements != null
this.Param.Types[].ShortClassName.toString elements == "Integer"
this.Param.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
this.Param.Types[].BaseClass elements has only one value
this.Param.Types[].BaseClass elements != null
this.Param.Types[].SuperClass elements has only one value
this.Param.Types[].SuperClass elements != null
this.Param.Types[].ClassParam elements == null
this.Param.Types[].SearchSimilarClass elements == null
this.Param.Types[].ClassMethodList elements != null
this.Param.Types[].ClassMethodList elements are equal
this.Param.Types[].SearchSuperMethodClass elements == null
this.Param.Types[].DefaultNullValue elements == null
this.Param.Types[].DefaultNullValue.getClass().getName() elements == null
this.Param.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
this.Param.Types[].LocalSpec elements == null
this.Param.Types[].LocalSpec.getClass().getName() elements == null
this.Param.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
this.Param.Types[].HostedClassInfo elements has only one value
this.Param.Types[].HostedClassInfo elements != null
this.MethodRef != null
size(this.Param.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KMethod.Eval(java.lang.Object[]):::ENTER
this has only one value
this.ClassInfo.BaseClass.ClassMethodList has only one value
this.ClassInfo.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.ClassInfo.ClassMethodList has only one value
this.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.MethodName has only one value
this.MethodName.toString == "+"
this.Param has only one value
this.Param.Types has only one value
this.Param.Types[] contains no nulls and has only one value, of length 2
this.Param.Types[].getClass().getName() == [org.KonohaScript.KClass, org.KonohaScript.KClass]
this.Param.Types[].KonohaContext contains no nulls and has only one value, of length 2
this.Param.Types[].Package contains only nulls and has only one value, of length 2
this.Param.Types[].ClassFlag == [0, 0]
this.Param.Types[].ShortClassName contains no nulls and has only one value, of length 2
this.Param.Types[].ShortClassName.toString == [Integer, Integer]
this.Param.Types[].BaseClass contains no nulls and has only one value, of length 2
this.Param.Types[].SuperClass contains no nulls and has only one value, of length 2
this.Param.Types[].ClassParam contains only nulls and has only one value, of length 2
this.Param.Types[].SearchSimilarClass contains only nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList contains no nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList elements has only one value
this.Param.Types[].SearchSuperMethodClass contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue.getClass().getName() == [null, null]
this.Param.Types[].LocalSpec contains only nulls and has only one value, of length 2
this.Param.Types[].LocalSpec.getClass().getName() == [null, null]
this.Param.Types[].HostedClassInfo contains no nulls and has only one value, of length 2
this.MethodRef has only one value
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 2
size(this.ClassInfo.BaseClass.ClassMethodList[]) == 4
size(this.ClassInfo.ClassMethodList[]) == 4
size(this.Param.Types[]) == 2
size(arg0[]) == 2
===========================================================================
org.KonohaScript.KMethod.Eval(java.lang.Object[]):::EXIT77
===========================================================================
org.KonohaScript.KMethod.Eval(java.lang.Object[]):::EXIT
this.MethodFlag == orig(this.MethodFlag)
this.ClassInfo == orig(this.ClassInfo)
this.ClassInfo.KonohaContext == orig(this.ClassInfo.KonohaContext)
this.ClassInfo.KonohaContext.RootNameSpace == orig(this.ClassInfo.KonohaContext.RootNameSpace)
this.ClassInfo.KonohaContext.DefaultNameSpace == orig(this.ClassInfo.KonohaContext.DefaultNameSpace)
this.ClassInfo.KonohaContext.SymbolTable == orig(this.ClassInfo.KonohaContext.SymbolTable)
this.ClassInfo.KonohaContext.VoidType == orig(this.ClassInfo.KonohaContext.VoidType)
this.ClassInfo.KonohaContext.BooleanType == orig(this.ClassInfo.KonohaContext.BooleanType)
this.ClassInfo.Package == orig(this.ClassInfo.Package)
this.ClassInfo.ClassFlag == orig(this.ClassInfo.ClassFlag)
this.ClassInfo.ShortClassName == orig(this.ClassInfo.ShortClassName)
this.ClassInfo.ShortClassName.toString == orig(this.ClassInfo.ShortClassName.toString)
this.ClassInfo.BaseClass == orig(this.ClassInfo.BaseClass)
this.ClassInfo.BaseClass.KonohaContext == orig(this.ClassInfo.BaseClass.KonohaContext)
this.ClassInfo.BaseClass.Package == orig(this.ClassInfo.BaseClass.Package)
this.ClassInfo.BaseClass.ClassFlag == orig(this.ClassInfo.BaseClass.ClassFlag)
this.ClassInfo.BaseClass.ShortClassName == orig(this.ClassInfo.BaseClass.ShortClassName)
this.ClassInfo.BaseClass.ShortClassName.toString == orig(this.ClassInfo.BaseClass.ShortClassName.toString)
this.ClassInfo.BaseClass.BaseClass == orig(this.ClassInfo.BaseClass.BaseClass)
this.ClassInfo.BaseClass.SuperClass == orig(this.ClassInfo.BaseClass.SuperClass)
this.ClassInfo.BaseClass.ClassParam == orig(this.ClassInfo.BaseClass.ClassParam)
this.ClassInfo.BaseClass.SearchSimilarClass == orig(this.ClassInfo.BaseClass.SearchSimilarClass)
this.ClassInfo.BaseClass.ClassMethodList == orig(this.ClassInfo.BaseClass.ClassMethodList)
this.ClassInfo.BaseClass.ClassMethodList[] == orig(this.ClassInfo.BaseClass.ClassMethodList[])
this.ClassInfo.BaseClass.SearchSuperMethodClass == orig(this.ClassInfo.BaseClass.SearchSuperMethodClass)
this.ClassInfo.BaseClass.DefaultNullValue == orig(this.ClassInfo.BaseClass.DefaultNullValue)
this.ClassInfo.BaseClass.LocalSpec == orig(this.ClassInfo.BaseClass.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.ClassInfo.BaseClass.HostedClassInfo == orig(this.ClassInfo.BaseClass.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.ClassInfo.SuperClass == orig(this.ClassInfo.SuperClass)
this.ClassInfo.SuperClass.KonohaContext == orig(this.ClassInfo.SuperClass.KonohaContext)
this.ClassInfo.SuperClass.Package == orig(this.ClassInfo.SuperClass.Package)
this.ClassInfo.SuperClass.ClassFlag == orig(this.ClassInfo.SuperClass.ClassFlag)
this.ClassInfo.SuperClass.ShortClassName == orig(this.ClassInfo.SuperClass.ShortClassName)
this.ClassInfo.SuperClass.ShortClassName.toString == orig(this.ClassInfo.SuperClass.ShortClassName.toString)
this.ClassInfo.SuperClass.BaseClass == orig(this.ClassInfo.SuperClass.BaseClass)
this.ClassInfo.SuperClass.SuperClass == orig(this.ClassInfo.SuperClass.SuperClass)
this.ClassInfo.SuperClass.ClassParam == orig(this.ClassInfo.SuperClass.ClassParam)
this.ClassInfo.SuperClass.SearchSimilarClass == orig(this.ClassInfo.SuperClass.SearchSimilarClass)
this.ClassInfo.SuperClass.ClassMethodList == orig(this.ClassInfo.SuperClass.ClassMethodList)
this.ClassInfo.SuperClass.ClassMethodList[] == orig(this.ClassInfo.SuperClass.ClassMethodList[])
this.ClassInfo.SuperClass.SearchSuperMethodClass == orig(this.ClassInfo.SuperClass.SearchSuperMethodClass)
this.ClassInfo.SuperClass.DefaultNullValue == orig(this.ClassInfo.SuperClass.DefaultNullValue)
this.ClassInfo.SuperClass.LocalSpec == orig(this.ClassInfo.SuperClass.LocalSpec)
this.ClassInfo.SuperClass.HostedClassInfo == orig(this.ClassInfo.SuperClass.HostedClassInfo)
this.ClassInfo.ClassParam == orig(this.ClassInfo.ClassParam)
this.ClassInfo.SearchSimilarClass == orig(this.ClassInfo.SearchSimilarClass)
this.ClassInfo.ClassMethodList == orig(this.ClassInfo.ClassMethodList)
this.ClassInfo.ClassMethodList[] == orig(this.ClassInfo.ClassMethodList[])
this.ClassInfo.SearchSuperMethodClass == orig(this.ClassInfo.SearchSuperMethodClass)
this.ClassInfo.DefaultNullValue == orig(this.ClassInfo.DefaultNullValue)
this.ClassInfo.LocalSpec == orig(this.ClassInfo.LocalSpec)
this.ClassInfo.HostedClassInfo == orig(this.ClassInfo.HostedClassInfo)
this.MethodName == orig(this.MethodName)
this.MethodName.toString == orig(this.MethodName.toString)
this.Param == orig(this.Param)
this.Param.ReturnSize == orig(this.Param.ReturnSize)
this.Param.Types == orig(this.Param.Types)
this.Param.Types.getClass().getName() == orig(this.Param.Types.getClass().getName())
this.Param.Types[] == orig(this.Param.Types[])
this.Param.Types[].KonohaContext == orig(this.Param.Types[].KonohaContext)
this.Param.Types[].Package == orig(this.Param.Types[].Package)
this.Param.Types[].ClassFlag == orig(this.Param.Types[].ClassFlag)
this.Param.Types[].ShortClassName == orig(this.Param.Types[].ShortClassName)
this.Param.Types[].BaseClass == orig(this.Param.Types[].BaseClass)
this.Param.Types[].SuperClass == orig(this.Param.Types[].SuperClass)
this.Param.Types[].ClassParam == orig(this.Param.Types[].ClassParam)
this.Param.Types[].SearchSimilarClass == orig(this.Param.Types[].SearchSimilarClass)
this.Param.Types[].ClassMethodList == orig(this.Param.Types[].ClassMethodList)
this.Param.Types[].SearchSuperMethodClass == orig(this.Param.Types[].SearchSuperMethodClass)
this.Param.Types[].DefaultNullValue == orig(this.Param.Types[].DefaultNullValue)
this.Param.Types[].LocalSpec == orig(this.Param.Types[].LocalSpec)
this.Param.Types[].HostedClassInfo == orig(this.Param.Types[].HostedClassInfo)
this.MethodRef == orig(this.MethodRef)
arg0[] == orig(arg0[])
this.ClassInfo.BaseClass.ClassMethodList has only one value
this.ClassInfo.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.ClassInfo.ClassMethodList has only one value
this.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.MethodName has only one value
this.MethodName.toString == "+"
this.Param has only one value
this.Param.Types has only one value
this.Param.Types[] contains no nulls and has only one value, of length 2
this.Param.Types[].getClass().getName() == [org.KonohaScript.KClass, org.KonohaScript.KClass]
this.Param.Types[].KonohaContext contains no nulls and has only one value, of length 2
this.Param.Types[].Package contains only nulls and has only one value, of length 2
this.Param.Types[].ClassFlag == [0, 0]
this.Param.Types[].ShortClassName contains no nulls and has only one value, of length 2
this.Param.Types[].ShortClassName.toString == [Integer, Integer]
this.Param.Types[].BaseClass contains no nulls and has only one value, of length 2
this.Param.Types[].SuperClass contains no nulls and has only one value, of length 2
this.Param.Types[].ClassParam contains only nulls and has only one value, of length 2
this.Param.Types[].SearchSimilarClass contains only nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList contains no nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList elements has only one value
this.Param.Types[].SearchSuperMethodClass contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue.getClass().getName() == [null, null]
this.Param.Types[].LocalSpec contains only nulls and has only one value, of length 2
this.Param.Types[].LocalSpec.getClass().getName() == [null, null]
this.Param.Types[].HostedClassInfo contains no nulls and has only one value, of length 2
this.MethodRef has only one value
arg0[] contains no nulls and has only one value, of length 2
return has only one value
return.getClass().getName() == java.lang.Integer.class
size(this.ClassInfo.BaseClass.ClassMethodList[]) == 4
size(this.ClassInfo.ClassMethodList[]) == 4
size(this.Param.Types[]) == 2
===========================================================================
org.KonohaScript.KMethod.IsStaticInvocation():::ENTER
this has only one value
this.ClassInfo.BaseClass.ClassMethodList has only one value
this.ClassInfo.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.ClassInfo.ClassMethodList has only one value
this.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.MethodName has only one value
this.MethodName.toString == "+"
this.Param has only one value
this.Param.Types has only one value
this.Param.Types[] contains no nulls and has only one value, of length 2
this.Param.Types[].getClass().getName() == [org.KonohaScript.KClass, org.KonohaScript.KClass]
this.Param.Types[].KonohaContext contains no nulls and has only one value, of length 2
this.Param.Types[].Package contains only nulls and has only one value, of length 2
this.Param.Types[].ClassFlag == [0, 0]
this.Param.Types[].ShortClassName contains no nulls and has only one value, of length 2
this.Param.Types[].ShortClassName.toString == [Integer, Integer]
this.Param.Types[].BaseClass contains no nulls and has only one value, of length 2
this.Param.Types[].SuperClass contains no nulls and has only one value, of length 2
this.Param.Types[].ClassParam contains only nulls and has only one value, of length 2
this.Param.Types[].SearchSimilarClass contains only nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList contains no nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList elements has only one value
this.Param.Types[].SearchSuperMethodClass contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue.getClass().getName() == [null, null]
this.Param.Types[].LocalSpec contains only nulls and has only one value, of length 2
this.Param.Types[].LocalSpec.getClass().getName() == [null, null]
this.Param.Types[].HostedClassInfo contains no nulls and has only one value, of length 2
this.MethodRef has only one value
size(this.ClassInfo.BaseClass.ClassMethodList[]) == 4
size(this.ClassInfo.ClassMethodList[]) == 4
size(this.Param.Types[]) == 2
===========================================================================
org.KonohaScript.KMethod.IsStaticInvocation():::EXIT
this.MethodFlag == orig(this.MethodFlag)
this.ClassInfo == orig(this.ClassInfo)
this.ClassInfo.KonohaContext == orig(this.ClassInfo.KonohaContext)
this.ClassInfo.KonohaContext.RootNameSpace == orig(this.ClassInfo.KonohaContext.RootNameSpace)
this.ClassInfo.KonohaContext.DefaultNameSpace == orig(this.ClassInfo.KonohaContext.DefaultNameSpace)
this.ClassInfo.KonohaContext.SymbolTable == orig(this.ClassInfo.KonohaContext.SymbolTable)
this.ClassInfo.KonohaContext.VoidType == orig(this.ClassInfo.KonohaContext.VoidType)
this.ClassInfo.KonohaContext.BooleanType == orig(this.ClassInfo.KonohaContext.BooleanType)
this.ClassInfo.Package == orig(this.ClassInfo.Package)
this.ClassInfo.ClassFlag == orig(this.ClassInfo.ClassFlag)
this.ClassInfo.ShortClassName == orig(this.ClassInfo.ShortClassName)
this.ClassInfo.ShortClassName.toString == orig(this.ClassInfo.ShortClassName.toString)
this.ClassInfo.BaseClass == orig(this.ClassInfo.BaseClass)
this.ClassInfo.BaseClass.KonohaContext == orig(this.ClassInfo.BaseClass.KonohaContext)
this.ClassInfo.BaseClass.Package == orig(this.ClassInfo.BaseClass.Package)
this.ClassInfo.BaseClass.ClassFlag == orig(this.ClassInfo.BaseClass.ClassFlag)
this.ClassInfo.BaseClass.ShortClassName == orig(this.ClassInfo.BaseClass.ShortClassName)
this.ClassInfo.BaseClass.ShortClassName.toString == orig(this.ClassInfo.BaseClass.ShortClassName.toString)
this.ClassInfo.BaseClass.BaseClass == orig(this.ClassInfo.BaseClass.BaseClass)
this.ClassInfo.BaseClass.SuperClass == orig(this.ClassInfo.BaseClass.SuperClass)
this.ClassInfo.BaseClass.ClassParam == orig(this.ClassInfo.BaseClass.ClassParam)
this.ClassInfo.BaseClass.SearchSimilarClass == orig(this.ClassInfo.BaseClass.SearchSimilarClass)
this.ClassInfo.BaseClass.ClassMethodList == orig(this.ClassInfo.BaseClass.ClassMethodList)
this.ClassInfo.BaseClass.ClassMethodList[] == orig(this.ClassInfo.BaseClass.ClassMethodList[])
this.ClassInfo.BaseClass.SearchSuperMethodClass == orig(this.ClassInfo.BaseClass.SearchSuperMethodClass)
this.ClassInfo.BaseClass.DefaultNullValue == orig(this.ClassInfo.BaseClass.DefaultNullValue)
this.ClassInfo.BaseClass.LocalSpec == orig(this.ClassInfo.BaseClass.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.ClassInfo.BaseClass.HostedClassInfo == orig(this.ClassInfo.BaseClass.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.ClassInfo.SuperClass == orig(this.ClassInfo.SuperClass)
this.ClassInfo.SuperClass.KonohaContext == orig(this.ClassInfo.SuperClass.KonohaContext)
this.ClassInfo.SuperClass.Package == orig(this.ClassInfo.SuperClass.Package)
this.ClassInfo.SuperClass.ClassFlag == orig(this.ClassInfo.SuperClass.ClassFlag)
this.ClassInfo.SuperClass.ShortClassName == orig(this.ClassInfo.SuperClass.ShortClassName)
this.ClassInfo.SuperClass.ShortClassName.toString == orig(this.ClassInfo.SuperClass.ShortClassName.toString)
this.ClassInfo.SuperClass.BaseClass == orig(this.ClassInfo.SuperClass.BaseClass)
this.ClassInfo.SuperClass.SuperClass == orig(this.ClassInfo.SuperClass.SuperClass)
this.ClassInfo.SuperClass.ClassParam == orig(this.ClassInfo.SuperClass.ClassParam)
this.ClassInfo.SuperClass.SearchSimilarClass == orig(this.ClassInfo.SuperClass.SearchSimilarClass)
this.ClassInfo.SuperClass.ClassMethodList == orig(this.ClassInfo.SuperClass.ClassMethodList)
this.ClassInfo.SuperClass.ClassMethodList[] == orig(this.ClassInfo.SuperClass.ClassMethodList[])
this.ClassInfo.SuperClass.SearchSuperMethodClass == orig(this.ClassInfo.SuperClass.SearchSuperMethodClass)
this.ClassInfo.SuperClass.DefaultNullValue == orig(this.ClassInfo.SuperClass.DefaultNullValue)
this.ClassInfo.SuperClass.LocalSpec == orig(this.ClassInfo.SuperClass.LocalSpec)
this.ClassInfo.SuperClass.HostedClassInfo == orig(this.ClassInfo.SuperClass.HostedClassInfo)
this.ClassInfo.ClassParam == orig(this.ClassInfo.ClassParam)
this.ClassInfo.SearchSimilarClass == orig(this.ClassInfo.SearchSimilarClass)
this.ClassInfo.ClassMethodList == orig(this.ClassInfo.ClassMethodList)
this.ClassInfo.ClassMethodList[] == orig(this.ClassInfo.ClassMethodList[])
this.ClassInfo.SearchSuperMethodClass == orig(this.ClassInfo.SearchSuperMethodClass)
this.ClassInfo.DefaultNullValue == orig(this.ClassInfo.DefaultNullValue)
this.ClassInfo.LocalSpec == orig(this.ClassInfo.LocalSpec)
this.ClassInfo.HostedClassInfo == orig(this.ClassInfo.HostedClassInfo)
this.MethodName == orig(this.MethodName)
this.MethodName.toString == orig(this.MethodName.toString)
this.Param == orig(this.Param)
this.Param.ReturnSize == orig(this.Param.ReturnSize)
this.Param.Types == orig(this.Param.Types)
this.Param.Types.getClass().getName() == orig(this.Param.Types.getClass().getName())
this.Param.Types[] == orig(this.Param.Types[])
this.Param.Types[].KonohaContext == orig(this.Param.Types[].KonohaContext)
this.Param.Types[].Package == orig(this.Param.Types[].Package)
this.Param.Types[].ClassFlag == orig(this.Param.Types[].ClassFlag)
this.Param.Types[].ShortClassName == orig(this.Param.Types[].ShortClassName)
this.Param.Types[].BaseClass == orig(this.Param.Types[].BaseClass)
this.Param.Types[].SuperClass == orig(this.Param.Types[].SuperClass)
this.Param.Types[].ClassParam == orig(this.Param.Types[].ClassParam)
this.Param.Types[].SearchSimilarClass == orig(this.Param.Types[].SearchSimilarClass)
this.Param.Types[].ClassMethodList == orig(this.Param.Types[].ClassMethodList)
this.Param.Types[].SearchSuperMethodClass == orig(this.Param.Types[].SearchSuperMethodClass)
this.Param.Types[].DefaultNullValue == orig(this.Param.Types[].DefaultNullValue)
this.Param.Types[].LocalSpec == orig(this.Param.Types[].LocalSpec)
this.Param.Types[].HostedClassInfo == orig(this.Param.Types[].HostedClassInfo)
this.MethodRef == orig(this.MethodRef)
this.ClassInfo.BaseClass.ClassMethodList has only one value
this.ClassInfo.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.ClassInfo.ClassMethodList has only one value
this.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.MethodName has only one value
this.MethodName.toString == "+"
this.Param has only one value
this.Param.Types has only one value
this.Param.Types[] contains no nulls and has only one value, of length 2
this.Param.Types[].getClass().getName() == [org.KonohaScript.KClass, org.KonohaScript.KClass]
this.Param.Types[].KonohaContext contains no nulls and has only one value, of length 2
this.Param.Types[].Package contains only nulls and has only one value, of length 2
this.Param.Types[].ClassFlag == [0, 0]
this.Param.Types[].ShortClassName contains no nulls and has only one value, of length 2
this.Param.Types[].ShortClassName.toString == [Integer, Integer]
this.Param.Types[].BaseClass contains no nulls and has only one value, of length 2
this.Param.Types[].SuperClass contains no nulls and has only one value, of length 2
this.Param.Types[].ClassParam contains only nulls and has only one value, of length 2
this.Param.Types[].SearchSimilarClass contains only nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList contains no nulls and has only one value, of length 2
this.Param.Types[].ClassMethodList elements has only one value
this.Param.Types[].SearchSuperMethodClass contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue contains only nulls and has only one value, of length 2
this.Param.Types[].DefaultNullValue.getClass().getName() == [null, null]
this.Param.Types[].LocalSpec contains only nulls and has only one value, of length 2
this.Param.Types[].LocalSpec.getClass().getName() == [null, null]
this.Param.Types[].HostedClassInfo contains no nulls and has only one value, of length 2
this.MethodRef has only one value
return == true
size(this.ClassInfo.BaseClass.ClassMethodList[]) == 4
size(this.ClassInfo.ClassMethodList[]) == 4
size(this.Param.Types[]) == 2
===========================================================================
org.KonohaScript.KMethod.IsStaticInvocation():::EXIT;condition="return == true"
===========================================================================
org.KonohaScript.KMethod.KMethod(int, org.KonohaScript.KClass, java.lang.String, org.KonohaScript.KParam, java.lang.reflect.Method):::ENTER
arg0 == 40
arg1 has only one value
arg1.KonohaContext has only one value
arg1.KonohaContext.RootNameSpace has only one value
arg1.KonohaContext.DefaultNameSpace == null
arg1.KonohaContext.SymbolTable has only one value
arg1.KonohaContext.VoidType has only one value
arg1.KonohaContext.BooleanType has only one value
arg1.Package == null
arg1.ClassFlag == 0
arg1.ShortClassName has only one value
arg1.ShortClassName.toString == "Integer"
arg1.BaseClass has only one value
arg1.BaseClass.KonohaContext has only one value
arg1.BaseClass.Package == null
arg1.BaseClass.ClassFlag == 0
arg1.BaseClass.ShortClassName has only one value
arg1.BaseClass.ShortClassName.toString == "Integer"
arg1.BaseClass.BaseClass has only one value
arg1.BaseClass.SuperClass has only one value
arg1.BaseClass.ClassParam == null
arg1.BaseClass.SearchSimilarClass == null
arg1.BaseClass.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
arg1.BaseClass.SearchSuperMethodClass == null
arg1.BaseClass.DefaultNullValue == null
arg1.BaseClass.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
arg1.BaseClass.HostedClassInfo has only one value
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
arg1.SuperClass has only one value
arg1.SuperClass.KonohaContext has only one value
arg1.SuperClass.Package == null
arg1.SuperClass.ClassFlag == 0
arg1.SuperClass.ShortClassName has only one value
arg1.SuperClass.ShortClassName.toString == "Number"
arg1.SuperClass.BaseClass has only one value
arg1.SuperClass.SuperClass has only one value
arg1.SuperClass.ClassParam == null
arg1.SuperClass.SearchSimilarClass == null
arg1.SuperClass.ClassMethodList has only one value
arg1.SuperClass.ClassMethodList[] == []
arg1.SuperClass.ClassMethodList[].getClass().getName() == []
arg1.SuperClass.SearchSuperMethodClass == null
arg1.SuperClass.DefaultNullValue == null
arg1.SuperClass.LocalSpec == null
arg1.SuperClass.HostedClassInfo has only one value
arg1.ClassParam == null
arg1.SearchSimilarClass == null
arg1.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
arg1.SearchSuperMethodClass == null
arg1.DefaultNullValue == null
arg1.LocalSpec == null
arg1.HostedClassInfo has only one value
arg2.toString one of { "+", "-" }
arg3.ReturnSize == 1
arg3.Types.getClass().getName() == org.KonohaScript.KClass[].class
arg3.Types[] elements has only one value
arg3.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
arg3.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
arg3.Types[].KonohaContext elements has only one value
arg3.Types[].Package elements == null
arg3.Types[].ClassFlag elements == 0
arg3.Types[].ClassFlag one of { [0], [0, 0] }
arg3.Types[].ShortClassName elements has only one value
arg3.Types[].ShortClassName.toString elements == "Integer"
arg3.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
arg3.Types[].BaseClass elements has only one value
arg3.Types[].SuperClass elements has only one value
arg3.Types[].ClassParam elements == null
arg3.Types[].SearchSimilarClass elements == null
arg3.Types[].ClassMethodList elements are equal
arg3.Types[].SearchSuperMethodClass elements == null
arg3.Types[].DefaultNullValue elements == null
arg3.Types[].DefaultNullValue.getClass().getName() elements == null
arg3.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
arg3.Types[].LocalSpec elements == null
arg3.Types[].LocalSpec.getClass().getName() elements == null
arg3.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
arg3.Types[].HostedClassInfo elements has only one value
size(arg3.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KMethod.KMethod(int, org.KonohaScript.KClass, java.lang.String, org.KonohaScript.KParam, java.lang.reflect.Method):::EXIT
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
arg1.KonohaContext == orig(arg1.KonohaContext)
arg1.KonohaContext.RootNameSpace == orig(arg1.KonohaContext.RootNameSpace)
arg1.KonohaContext.DefaultNameSpace == orig(arg1.KonohaContext.DefaultNameSpace)
arg1.KonohaContext.SymbolTable == orig(arg1.KonohaContext.SymbolTable)
arg1.KonohaContext.VoidType == orig(arg1.KonohaContext.VoidType)
arg1.KonohaContext.BooleanType == orig(arg1.KonohaContext.BooleanType)
arg1.Package == orig(arg1.Package)
arg1.ClassFlag == orig(arg1.ClassFlag)
arg1.ShortClassName == orig(arg1.ShortClassName)
arg1.ShortClassName.toString == orig(arg1.ShortClassName.toString)
arg1.BaseClass == orig(arg1.BaseClass)
arg1.BaseClass.KonohaContext == orig(arg1.BaseClass.KonohaContext)
arg1.BaseClass.Package == orig(arg1.BaseClass.Package)
arg1.BaseClass.ClassFlag == orig(arg1.BaseClass.ClassFlag)
arg1.BaseClass.ShortClassName == orig(arg1.BaseClass.ShortClassName)
arg1.BaseClass.ShortClassName.toString == orig(arg1.BaseClass.ShortClassName.toString)
arg1.BaseClass.BaseClass == orig(arg1.BaseClass.BaseClass)
arg1.BaseClass.SuperClass == orig(arg1.BaseClass.SuperClass)
arg1.BaseClass.ClassParam == orig(arg1.BaseClass.ClassParam)
arg1.BaseClass.SearchSimilarClass == orig(arg1.BaseClass.SearchSimilarClass)
arg1.BaseClass.ClassMethodList == orig(arg1.BaseClass.ClassMethodList)
arg1.BaseClass.ClassMethodList[] == orig(arg1.BaseClass.ClassMethodList[])
arg1.BaseClass.SearchSuperMethodClass == orig(arg1.BaseClass.SearchSuperMethodClass)
arg1.BaseClass.DefaultNullValue == orig(arg1.BaseClass.DefaultNullValue)
arg1.BaseClass.LocalSpec == orig(arg1.BaseClass.LocalSpec)
arg1.BaseClass.HostedClassInfo == orig(arg1.BaseClass.HostedClassInfo)
arg1.SuperClass == orig(arg1.SuperClass)
arg1.SuperClass.KonohaContext == orig(arg1.SuperClass.KonohaContext)
arg1.SuperClass.Package == orig(arg1.SuperClass.Package)
arg1.SuperClass.ClassFlag == orig(arg1.SuperClass.ClassFlag)
arg1.SuperClass.ShortClassName == orig(arg1.SuperClass.ShortClassName)
arg1.SuperClass.ShortClassName.toString == orig(arg1.SuperClass.ShortClassName.toString)
arg1.SuperClass.BaseClass == orig(arg1.SuperClass.BaseClass)
arg1.SuperClass.SuperClass == orig(arg1.SuperClass.SuperClass)
arg1.SuperClass.ClassParam == orig(arg1.SuperClass.ClassParam)
arg1.SuperClass.SearchSimilarClass == orig(arg1.SuperClass.SearchSimilarClass)
arg1.SuperClass.ClassMethodList == orig(arg1.SuperClass.ClassMethodList)
arg1.SuperClass.ClassMethodList[] == orig(arg1.SuperClass.ClassMethodList[])
arg1.SuperClass.SearchSuperMethodClass == orig(arg1.SuperClass.SearchSuperMethodClass)
arg1.SuperClass.DefaultNullValue == orig(arg1.SuperClass.DefaultNullValue)
arg1.SuperClass.LocalSpec == orig(arg1.SuperClass.LocalSpec)
arg1.SuperClass.HostedClassInfo == orig(arg1.SuperClass.HostedClassInfo)
arg1.ClassParam == orig(arg1.ClassParam)
arg1.SearchSimilarClass == orig(arg1.SearchSimilarClass)
arg1.ClassMethodList == orig(arg1.ClassMethodList)
arg1.ClassMethodList[] == orig(arg1.ClassMethodList[])
arg1.SearchSuperMethodClass == orig(arg1.SearchSuperMethodClass)
arg1.DefaultNullValue == orig(arg1.DefaultNullValue)
arg1.LocalSpec == orig(arg1.LocalSpec)
arg1.HostedClassInfo == orig(arg1.HostedClassInfo)
arg2.toString == orig(arg2.toString)
arg3.ReturnSize == orig(arg3.ReturnSize)
arg3.Types == orig(arg3.Types)
arg3.Types.getClass().getName() == orig(arg3.Types.getClass().getName())
arg3.Types[] == orig(arg3.Types[])
arg3.Types[].KonohaContext == orig(arg3.Types[].KonohaContext)
arg3.Types[].Package == orig(arg3.Types[].Package)
arg3.Types[].ClassFlag == orig(arg3.Types[].ClassFlag)
arg3.Types[].ShortClassName == orig(arg3.Types[].ShortClassName)
arg3.Types[].BaseClass == orig(arg3.Types[].BaseClass)
arg3.Types[].SuperClass == orig(arg3.Types[].SuperClass)
arg3.Types[].ClassParam == orig(arg3.Types[].ClassParam)
arg3.Types[].SearchSimilarClass == orig(arg3.Types[].SearchSimilarClass)
arg3.Types[].ClassMethodList == orig(arg3.Types[].ClassMethodList)
arg3.Types[].SearchSuperMethodClass == orig(arg3.Types[].SearchSuperMethodClass)
arg3.Types[].DefaultNullValue == orig(arg3.Types[].DefaultNullValue)
arg3.Types[].LocalSpec == orig(arg3.Types[].LocalSpec)
arg3.Types[].HostedClassInfo == orig(arg3.Types[].HostedClassInfo)
arg1.KonohaContext has only one value
arg1.KonohaContext.RootNameSpace has only one value
arg1.KonohaContext.DefaultNameSpace == null
arg1.KonohaContext.SymbolTable has only one value
arg1.KonohaContext.VoidType has only one value
arg1.KonohaContext.BooleanType has only one value
arg1.Package == null
arg1.ClassFlag == 0
arg1.ShortClassName has only one value
arg1.ShortClassName.toString == "Integer"
arg1.BaseClass has only one value
arg1.BaseClass.KonohaContext has only one value
arg1.BaseClass.Package == null
arg1.BaseClass.ClassFlag == 0
arg1.BaseClass.ShortClassName has only one value
arg1.BaseClass.ShortClassName.toString == "Integer"
arg1.BaseClass.BaseClass has only one value
arg1.BaseClass.SuperClass has only one value
arg1.BaseClass.ClassParam == null
arg1.BaseClass.SearchSimilarClass == null
arg1.BaseClass.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
arg1.BaseClass.SearchSuperMethodClass == null
arg1.BaseClass.DefaultNullValue == null
arg1.BaseClass.LocalSpec == null
arg1.BaseClass.HostedClassInfo has only one value
arg1.SuperClass has only one value
arg1.SuperClass.KonohaContext has only one value
arg1.SuperClass.Package == null
arg1.SuperClass.ClassFlag == 0
arg1.SuperClass.ShortClassName has only one value
arg1.SuperClass.ShortClassName.toString == "Number"
arg1.SuperClass.BaseClass has only one value
arg1.SuperClass.SuperClass has only one value
arg1.SuperClass.ClassParam == null
arg1.SuperClass.SearchSimilarClass == null
arg1.SuperClass.ClassMethodList has only one value
arg1.SuperClass.ClassMethodList[] == []
arg1.SuperClass.ClassMethodList[].getClass().getName() == []
arg1.SuperClass.SearchSuperMethodClass == null
arg1.SuperClass.DefaultNullValue == null
arg1.SuperClass.LocalSpec == null
arg1.SuperClass.HostedClassInfo has only one value
arg1.ClassParam == null
arg1.SearchSimilarClass == null
arg1.ClassMethodList[].getClass().getName() elements == org.KonohaScript.KMethod.class
arg1.SearchSuperMethodClass == null
arg1.DefaultNullValue == null
arg1.LocalSpec == null
arg1.HostedClassInfo has only one value
arg2.toString one of { "+", "-" }
arg3.ReturnSize == 1
arg3.Types.getClass().getName() == org.KonohaScript.KClass[].class
arg3.Types[] elements has only one value
arg3.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
arg3.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
arg3.Types[].KonohaContext elements has only one value
arg3.Types[].Package elements == null
arg3.Types[].ClassFlag elements == 0
arg3.Types[].ClassFlag one of { [0], [0, 0] }
arg3.Types[].ShortClassName elements has only one value
arg3.Types[].ShortClassName.toString elements == "Integer"
arg3.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
arg3.Types[].BaseClass elements has only one value
arg3.Types[].SuperClass elements has only one value
arg3.Types[].ClassParam elements == null
arg3.Types[].SearchSimilarClass elements == null
arg3.Types[].ClassMethodList elements are equal
arg3.Types[].SearchSuperMethodClass elements == null
arg3.Types[].DefaultNullValue elements == null
arg3.Types[].DefaultNullValue.getClass().getName() elements == null
arg3.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
arg3.Types[].LocalSpec elements == null
arg3.Types[].LocalSpec.getClass().getName() elements == null
arg3.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
arg3.Types[].HostedClassInfo elements has only one value
size(arg3.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::ENTER
this.ClassInfo.BaseClass.ClassMethodList has only one value
this.ClassInfo.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.ClassInfo.ClassMethodList has only one value
this.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.Param.Types[].ClassMethodList elements has only one value
arg0 has only one value
arg0.toString == "+"
arg1 one of { 0, 1, 2 }
size(this.ClassInfo.BaseClass.ClassMethodList[]) == 4
size(this.ClassInfo.ClassMethodList[]) == 4
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT55
this.MethodName has only one value
this.MethodName.toString == "+"
return == true
orig(arg1) one of { 0, 1 }
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT55;condition="return == true"
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT58
return == false
orig(arg1) one of { 1, 2 }
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT58;condition="not(return == true)"
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT
this.MethodFlag == orig(this.MethodFlag)
this.ClassInfo == orig(this.ClassInfo)
this.ClassInfo.KonohaContext == orig(this.ClassInfo.KonohaContext)
this.ClassInfo.KonohaContext.RootNameSpace == orig(this.ClassInfo.KonohaContext.RootNameSpace)
this.ClassInfo.KonohaContext.DefaultNameSpace == orig(this.ClassInfo.KonohaContext.DefaultNameSpace)
this.ClassInfo.KonohaContext.SymbolTable == orig(this.ClassInfo.KonohaContext.SymbolTable)
this.ClassInfo.KonohaContext.VoidType == orig(this.ClassInfo.KonohaContext.VoidType)
this.ClassInfo.KonohaContext.BooleanType == orig(this.ClassInfo.KonohaContext.BooleanType)
this.ClassInfo.Package == orig(this.ClassInfo.Package)
this.ClassInfo.ClassFlag == orig(this.ClassInfo.ClassFlag)
this.ClassInfo.ShortClassName == orig(this.ClassInfo.ShortClassName)
this.ClassInfo.ShortClassName.toString == orig(this.ClassInfo.ShortClassName.toString)
this.ClassInfo.BaseClass == orig(this.ClassInfo.BaseClass)
this.ClassInfo.BaseClass.KonohaContext == orig(this.ClassInfo.BaseClass.KonohaContext)
this.ClassInfo.BaseClass.Package == orig(this.ClassInfo.BaseClass.Package)
this.ClassInfo.BaseClass.ClassFlag == orig(this.ClassInfo.BaseClass.ClassFlag)
this.ClassInfo.BaseClass.ShortClassName == orig(this.ClassInfo.BaseClass.ShortClassName)
this.ClassInfo.BaseClass.ShortClassName.toString == orig(this.ClassInfo.BaseClass.ShortClassName.toString)
this.ClassInfo.BaseClass.BaseClass == orig(this.ClassInfo.BaseClass.BaseClass)
this.ClassInfo.BaseClass.SuperClass == orig(this.ClassInfo.BaseClass.SuperClass)
this.ClassInfo.BaseClass.ClassParam == orig(this.ClassInfo.BaseClass.ClassParam)
this.ClassInfo.BaseClass.SearchSimilarClass == orig(this.ClassInfo.BaseClass.SearchSimilarClass)
this.ClassInfo.BaseClass.ClassMethodList == orig(this.ClassInfo.BaseClass.ClassMethodList)
this.ClassInfo.BaseClass.ClassMethodList[] == orig(this.ClassInfo.BaseClass.ClassMethodList[])
this.ClassInfo.BaseClass.SearchSuperMethodClass == orig(this.ClassInfo.BaseClass.SearchSuperMethodClass)
this.ClassInfo.BaseClass.DefaultNullValue == orig(this.ClassInfo.BaseClass.DefaultNullValue)
this.ClassInfo.BaseClass.LocalSpec == orig(this.ClassInfo.BaseClass.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.ClassInfo.BaseClass.HostedClassInfo == orig(this.ClassInfo.BaseClass.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.ClassInfo.SuperClass == orig(this.ClassInfo.SuperClass)
this.ClassInfo.SuperClass.KonohaContext == orig(this.ClassInfo.SuperClass.KonohaContext)
this.ClassInfo.SuperClass.Package == orig(this.ClassInfo.SuperClass.Package)
this.ClassInfo.SuperClass.ClassFlag == orig(this.ClassInfo.SuperClass.ClassFlag)
this.ClassInfo.SuperClass.ShortClassName == orig(this.ClassInfo.SuperClass.ShortClassName)
this.ClassInfo.SuperClass.ShortClassName.toString == orig(this.ClassInfo.SuperClass.ShortClassName.toString)
this.ClassInfo.SuperClass.BaseClass == orig(this.ClassInfo.SuperClass.BaseClass)
this.ClassInfo.SuperClass.SuperClass == orig(this.ClassInfo.SuperClass.SuperClass)
this.ClassInfo.SuperClass.ClassParam == orig(this.ClassInfo.SuperClass.ClassParam)
this.ClassInfo.SuperClass.SearchSimilarClass == orig(this.ClassInfo.SuperClass.SearchSimilarClass)
this.ClassInfo.SuperClass.ClassMethodList == orig(this.ClassInfo.SuperClass.ClassMethodList)
this.ClassInfo.SuperClass.ClassMethodList[] == orig(this.ClassInfo.SuperClass.ClassMethodList[])
this.ClassInfo.SuperClass.SearchSuperMethodClass == orig(this.ClassInfo.SuperClass.SearchSuperMethodClass)
this.ClassInfo.SuperClass.DefaultNullValue == orig(this.ClassInfo.SuperClass.DefaultNullValue)
this.ClassInfo.SuperClass.LocalSpec == orig(this.ClassInfo.SuperClass.LocalSpec)
this.ClassInfo.SuperClass.HostedClassInfo == orig(this.ClassInfo.SuperClass.HostedClassInfo)
this.ClassInfo.ClassParam == orig(this.ClassInfo.ClassParam)
this.ClassInfo.SearchSimilarClass == orig(this.ClassInfo.SearchSimilarClass)
this.ClassInfo.ClassMethodList == orig(this.ClassInfo.ClassMethodList)
this.ClassInfo.ClassMethodList[] == orig(this.ClassInfo.ClassMethodList[])
this.ClassInfo.SearchSuperMethodClass == orig(this.ClassInfo.SearchSuperMethodClass)
this.ClassInfo.DefaultNullValue == orig(this.ClassInfo.DefaultNullValue)
this.ClassInfo.LocalSpec == orig(this.ClassInfo.LocalSpec)
this.ClassInfo.HostedClassInfo == orig(this.ClassInfo.HostedClassInfo)
this.MethodName == orig(this.MethodName)
this.MethodName.toString == orig(this.MethodName.toString)
this.Param == orig(this.Param)
this.Param.ReturnSize == orig(this.Param.ReturnSize)
this.Param.Types == orig(this.Param.Types)
this.Param.Types.getClass().getName() == orig(this.Param.Types.getClass().getName())
this.Param.Types[] == orig(this.Param.Types[])
this.Param.Types[].KonohaContext == orig(this.Param.Types[].KonohaContext)
this.Param.Types[].Package == orig(this.Param.Types[].Package)
this.Param.Types[].ClassFlag == orig(this.Param.Types[].ClassFlag)
this.Param.Types[].ShortClassName == orig(this.Param.Types[].ShortClassName)
this.Param.Types[].BaseClass == orig(this.Param.Types[].BaseClass)
this.Param.Types[].SuperClass == orig(this.Param.Types[].SuperClass)
this.Param.Types[].ClassParam == orig(this.Param.Types[].ClassParam)
this.Param.Types[].SearchSimilarClass == orig(this.Param.Types[].SearchSimilarClass)
this.Param.Types[].ClassMethodList == orig(this.Param.Types[].ClassMethodList)
this.Param.Types[].SearchSuperMethodClass == orig(this.Param.Types[].SearchSuperMethodClass)
this.Param.Types[].DefaultNullValue == orig(this.Param.Types[].DefaultNullValue)
this.Param.Types[].LocalSpec == orig(this.Param.Types[].LocalSpec)
this.Param.Types[].HostedClassInfo == orig(this.Param.Types[].HostedClassInfo)
this.MethodRef == orig(this.MethodRef)
arg0.toString == orig(arg0.toString)
(return == false)  ==>  (orig(arg1) one of { 1, 2 })
(return == false)  ==>  (this.MethodName.toString one of { "+", "-" })
(return == true)  ==>  (orig(arg1) one of { 0, 1 })
(return == true)  ==>  (this.MethodName has only one value)
(return == true)  ==>  (this.MethodName.toString == "+")
this.ClassInfo.BaseClass.ClassMethodList has only one value
this.ClassInfo.BaseClass.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.BaseClass.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.ClassInfo.ClassMethodList has only one value
this.ClassInfo.ClassMethodList[] contains no nulls and has only one value, of length 4
this.ClassInfo.ClassMethodList[].getClass().getName() == [org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod, org.KonohaScript.KMethod]
this.Param.Types[].ClassMethodList elements has only one value
arg0.toString == "+"
size(this.ClassInfo.BaseClass.ClassMethodList[]) == 4
size(this.ClassInfo.ClassMethodList[]) == 4
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT;condition="return == true"
this.MethodName has only one value
this.MethodName.toString == "+"
return == true
orig(arg1) one of { 0, 1 }
===========================================================================
org.KonohaScript.KMethod.Match(java.lang.String, int):::EXIT;condition="not(return == true)"
return == false
orig(arg1) one of { 1, 2 }
===========================================================================
org.KonohaScript.KNameSpace:::OBJECT
this.KonohaContext has only one value
this.KonohaContext != null
this.KonohaContext.RootNameSpace.KonohaContext has only one value
this.KonohaContext.RootNameSpace.KonohaContext != null
this.KonohaContext.RootNameSpace.ParentNameSpace == null
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.KonohaContext.DefaultNameSpace.KonohaContext has only one value
this.KonohaContext.DefaultNameSpace.KonohaContext != null
this.KonohaContext.DefaultNameSpace.ParentNameSpace has only one value
this.KonohaContext.DefaultNameSpace.ParentNameSpace != null
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == null
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == null
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix != null
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == null
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable has only one value
this.KonohaContext.SymbolTable != null
this.KonohaContext.SymbolTable.ClassList has only one value
this.KonohaContext.SymbolTable.ClassList != null
this.KonohaContext.SymbolTable.ClassList[] == []
this.KonohaContext.SymbolTable.ClassList[].getClass().getName() == []
this.KonohaContext.SymbolTable.ClassNameMap has only one value
this.KonohaContext.SymbolTable.ClassNameMap != null
this.KonohaContext.SymbolTable.PackageList has only one value
this.KonohaContext.SymbolTable.PackageList != null
this.KonohaContext.SymbolTable.PackageList[] elements has only one value
this.KonohaContext.SymbolTable.PackageList[] elements != null
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() one of { [], [org.KonohaScript.KPackage] }
this.KonohaContext.SymbolTable.PackageMap has only one value
this.KonohaContext.SymbolTable.PackageMap != null
this.KonohaContext.SymbolTable.FileIdList has only one value
this.KonohaContext.SymbolTable.FileIdList != null
this.KonohaContext.SymbolTable.FileIdList[] == []
this.KonohaContext.SymbolTable.FileIdList[].getClass().getName() == []
this.KonohaContext.SymbolTable.FileIdMap has only one value
this.KonohaContext.SymbolTable.FileIdMap != null
this.KonohaContext.SymbolTable.SymbolList has only one value
this.KonohaContext.SymbolTable.SymbolList != null
this.KonohaContext.SymbolTable.SymbolList[] == []
this.KonohaContext.SymbolTable.SymbolList[].getClass().getName() == []
this.KonohaContext.SymbolTable.SymbolMap has only one value
this.KonohaContext.SymbolTable.SymbolMap != null
this.KonohaContext.SymbolTable.ParamList has only one value
this.KonohaContext.SymbolTable.ParamList != null
this.KonohaContext.SymbolTable.ParamList[] == []
this.KonohaContext.SymbolTable.ParamList[].getClass().getName() == []
this.KonohaContext.SymbolTable.ParamMap has only one value
this.KonohaContext.SymbolTable.ParamMap != null
this.KonohaContext.SymbolTable.SignatureList has only one value
this.KonohaContext.SymbolTable.SignatureList != null
this.KonohaContext.SymbolTable.SignatureList[] == []
this.KonohaContext.SymbolTable.SignatureList[].getClass().getName() == []
this.KonohaContext.SymbolTable.SignatureMap has only one value
this.KonohaContext.SymbolTable.SignatureMap != null
this.KonohaContext.VoidType.KonohaContext has only one value
this.KonohaContext.VoidType.KonohaContext != null
this.KonohaContext.VoidType.Package == null
this.KonohaContext.VoidType.ClassFlag == 0
this.KonohaContext.VoidType.ShortClassName has only one value
this.KonohaContext.VoidType.ShortClassName != null
this.KonohaContext.VoidType.ShortClassName.toString == "Void"
this.KonohaContext.VoidType.BaseClass has only one value
this.KonohaContext.VoidType.BaseClass != null
this.KonohaContext.VoidType.SuperClass has only one value
this.KonohaContext.VoidType.SuperClass != null
this.KonohaContext.VoidType.ClassParam == null
this.KonohaContext.VoidType.SearchSimilarClass == null
this.KonohaContext.VoidType.ClassMethodList has only one value
this.KonohaContext.VoidType.ClassMethodList != null
this.KonohaContext.VoidType.ClassMethodList[] == []
this.KonohaContext.VoidType.ClassMethodList[].getClass().getName() == []
this.KonohaContext.VoidType.SearchSuperMethodClass == null
this.KonohaContext.VoidType.DefaultNullValue == null
this.KonohaContext.VoidType.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList != null
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
this.KonohaContext.VoidType.HostedClassInfo has only one value
this.KonohaContext.VoidType.HostedClassInfo != null
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
this.KonohaContext.BooleanType.KonohaContext has only one value
this.KonohaContext.BooleanType.KonohaContext != null
this.KonohaContext.BooleanType.Package == null
this.KonohaContext.BooleanType.ClassFlag == 0
this.KonohaContext.BooleanType.ShortClassName has only one value
this.KonohaContext.BooleanType.ShortClassName != null
this.KonohaContext.BooleanType.ShortClassName.toString == "Boolean"
this.KonohaContext.BooleanType.BaseClass has only one value
this.KonohaContext.BooleanType.BaseClass != null
this.KonohaContext.BooleanType.SuperClass has only one value
this.KonohaContext.BooleanType.SuperClass != null
this.KonohaContext.BooleanType.ClassParam == null
this.KonohaContext.BooleanType.SearchSimilarClass == null
this.KonohaContext.BooleanType.ClassMethodList has only one value
this.KonohaContext.BooleanType.ClassMethodList != null
this.KonohaContext.BooleanType.ClassMethodList[] == []
this.KonohaContext.BooleanType.ClassMethodList[].getClass().getName() == []
this.KonohaContext.BooleanType.SearchSuperMethodClass == null
this.KonohaContext.BooleanType.DefaultNullValue == null
this.KonohaContext.BooleanType.LocalSpec == null
this.KonohaContext.BooleanType.HostedClassInfo has only one value
this.KonohaContext.BooleanType.HostedClassInfo != null
this.ParentNameSpace.KonohaContext has only one value
this.ParentNameSpace.KonohaContext != null
this.ParentNameSpace.KonohaContext.RootNameSpace has only one value
this.ParentNameSpace.KonohaContext.RootNameSpace != null
this.ParentNameSpace.KonohaContext.SymbolTable has only one value
this.ParentNameSpace.KonohaContext.SymbolTable != null
this.ParentNameSpace.KonohaContext.VoidType has only one value
this.ParentNameSpace.KonohaContext.VoidType != null
this.ParentNameSpace.KonohaContext.BooleanType has only one value
this.ParentNameSpace.KonohaContext.BooleanType != null
this.ParentNameSpace.ParentNameSpace == null
this.ParentNameSpace.ImportedNameSpaceList == null
this.ParentNameSpace.DefinedTokenMatrix has only one value
this.ParentNameSpace.DefinedTokenMatrix != null
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ParentNameSpace.ImportedTokenMatrix has only one value
this.ParentNameSpace.ImportedTokenMatrix != null
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ParentNameSpace.DefinedSymbolTable has only one value
this.ParentNameSpace.DefinedSymbolTable != null
this.ParentNameSpace.ImportedSymbolTable has only one value
this.ParentNameSpace.ImportedSymbolTable != null
this.ImportedNameSpaceList == null
this.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.DefinedTokenMatrix[].prev.callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedTokenMatrix[].prev.callee.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ImportedTokenMatrix[].prev.callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[].prev.callee.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
size(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[]) == 41
size(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[]) == 41
size(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[]) == 41
size(this.KonohaContext.SymbolTable.PackageList[]) one of { 0, 1 }
size(this.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(this.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(this.DefinedTokenMatrix[]) == 41
size(this.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KNameSpace.AddMacroFunc(java.lang.String, java.lang.Object, java.lang.String):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.ImportedSymbolTable has only one value
arg1 has only one value
arg1.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.AddMacroFunc(java.lang.String, java.lang.Object, java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.ImportedSymbolTable has only one value
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.AddSyntax(org.KonohaScript.KSyntax):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
arg0 != null
arg0.PackageNameSpace == null
arg0.SyntaxName != null
arg0.SyntaxFlag >= 1
arg0.ParseObject has only one value
arg0.ParseObject != null
arg0.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.TypeObject == null
arg0.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject != null
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName != null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject != null
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod != null
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName != null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject != null
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod != null
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName != null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject != null
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod != null
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject != null
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName != null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject != null
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod != null
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.AddSyntax(org.KonohaScript.KSyntax):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.SyntaxName == orig(arg0.SyntaxName)
arg0.SyntaxName.toString == orig(arg0.SyntaxName.toString)
arg0.SyntaxFlag == orig(arg0.SyntaxFlag)
arg0.ParseObject == orig(arg0.ParseObject)
arg0.ParseObject.getClass().getName() == orig(arg0.ParseObject.getClass().getName())
arg0.ParseMethod == orig(arg0.ParseMethod)
arg0.TypeObject == orig(arg0.TypeObject)
arg0.TypeMethod == orig(arg0.TypeMethod)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
arg0.PackageNameSpace has only one value
arg0.PackageNameSpace != null
arg0.PackageNameSpace.KonohaContext has only one value
arg0.PackageNameSpace.KonohaContext != null
arg0.PackageNameSpace.ParentNameSpace == null
arg0.PackageNameSpace.ImportedNameSpaceList == null
arg0.PackageNameSpace.DefinedTokenMatrix has only one value
arg0.PackageNameSpace.DefinedTokenMatrix != null
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.ImportedTokenMatrix has only one value
arg0.PackageNameSpace.ImportedTokenMatrix != null
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.DefinedSymbolTable has only one value
arg0.PackageNameSpace.DefinedSymbolTable != null
arg0.PackageNameSpace.ImportedSymbolTable has only one value
arg0.PackageNameSpace.ImportedSymbolTable != null
arg0.SyntaxName != null
arg0.SyntaxFlag >= 1
arg0.ParseObject has only one value
arg0.ParseObject != null
arg0.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.TypeObject == null
arg0.ParentSyntax.PackageNameSpace has only one value
arg0.ParentSyntax.SyntaxName has only one value
arg0.ParentSyntax.SyntaxName.toString == "$Type"
arg0.ParentSyntax.SyntaxFlag == 1
arg0.ParentSyntax.ParseObject has only one value
arg0.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ParentSyntax.TypeObject == null
arg0.ParentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject != null
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName != null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject != null
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod != null
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName != null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject != null
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod != null
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName != null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject != null
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod != null
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject != null
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName != null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject != null
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod != null
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
size(arg0.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KNameSpace.AddTokenFunc(java.lang.String, java.lang.Object, java.lang.String):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace == null
this.DefinedSymbolTable has only one value
this.ImportedSymbolTable has only one value
arg1 has only one value
arg1.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.AddTokenFunc(java.lang.String, java.lang.Object, java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[].prev.callee.getClass().getName() == orig(this.DefinedTokenMatrix[].prev.callee.getClass().getName())
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[].prev.callee.getClass().getName() == orig(this.ImportedTokenMatrix[].prev.callee.getClass().getName())
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
size(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[]) == orig(size(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[]))
size(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[]) == orig(size(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[]))
size(this.DefinedTokenMatrix[]) == orig(size(this.DefinedTokenMatrix[]))
size(this.ImportedTokenMatrix[]) == orig(size(this.ImportedTokenMatrix[]))
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.ImportedTokenMatrix has only one value
this.DefinedSymbolTable has only one value
this.ImportedSymbolTable has only one value
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
this.DefinedTokenMatrix[].prev.callee.getClass().getName() == orig(this.DefinedTokenMatrix[].prev.callee.getClass().getName()) (elementwise)
this.ImportedTokenMatrix[].prev.callee.getClass().getName() == orig(this.ImportedTokenMatrix[].prev.callee.getClass().getName()) (elementwise)
===========================================================================
org.KonohaScript.KNameSpace.DefineSymbol(java.lang.String, java.lang.Object):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0 != null
arg1 != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.DefineSymbol(java.lang.String, java.lang.Object):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.DefineSyntax(java.lang.String, int, java.lang.Object, java.lang.String, java.lang.String):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
arg0 != null
arg1 >= 1
arg2 has only one value
arg2 != null
arg2.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.DefineSyntax(java.lang.String, int, java.lang.Object, java.lang.String, java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
arg3.toString == orig(arg3.toString)
arg4.toString == orig(arg4.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.Eval(java.lang.String, long):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
this.ImportedSymbolTable has only one value
arg0 has only one value
arg0.toString == "a == b + C; D + e == F"
arg1 == 2
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.Eval(java.lang.String, long):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
this.ImportedSymbolTable has only one value
arg0.toString == "a == b + C; D + e == F"
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetDefinedTokenFunc(int):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetDefinedTokenFunc(int):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
return != null
return.callee has only one value
return.callee != null
return.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.method != null
return.prev == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetMacroFunc(java.lang.String):::ENTER
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedSymbolTable != null
arg0 != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetMacroFunc(java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedSymbolTable != null
return.callee has only one value
return.callee != null
return.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.method != null
return.prev == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetSourcePosition(long):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
this.ImportedSymbolTable has only one value
arg0 == 1000
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetSourcePosition(long):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
this.ImportedSymbolTable has only one value
return has only one value
return.toString == "(eval:1000)"
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetSymbol(java.lang.String):::ENTER
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedSymbolTable != null
arg0 != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetSymbol(java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedSymbolTable != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetSyntax(java.lang.String):::ENTER
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedSymbolTable != null
arg0 != null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetSyntax(java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix != null
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedSymbolTable != null
return.PackageNameSpace has only one value
return.PackageNameSpace != null
return.PackageNameSpace.KonohaContext has only one value
return.PackageNameSpace.KonohaContext != null
return.PackageNameSpace.ParentNameSpace == null
return.PackageNameSpace.ImportedNameSpaceList == null
return.PackageNameSpace.DefinedTokenMatrix has only one value
return.PackageNameSpace.DefinedTokenMatrix != null
return.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
return.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.PackageNameSpace.ImportedTokenMatrix has only one value
return.PackageNameSpace.ImportedTokenMatrix != null
return.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
return.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.PackageNameSpace.DefinedSymbolTable has only one value
return.PackageNameSpace.DefinedSymbolTable != null
return.PackageNameSpace.ImportedSymbolTable has only one value
return.PackageNameSpace.ImportedSymbolTable != null
return.SyntaxName != null
return.SyntaxFlag one of { 1, 1601, 12802 }
return.ParseObject has only one value
return.ParseObject != null
return.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.TypeObject == null
return.ParentSyntax.PackageNameSpace has only one value
return.ParentSyntax.SyntaxName has only one value
return.ParentSyntax.SyntaxName.toString == "$Type"
return.ParentSyntax.SyntaxFlag == 1
return.ParentSyntax.ParseObject has only one value
return.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.ParentSyntax.TypeObject == null
return.ParentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject != null
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName != null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject != null
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod != null
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName != null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject != null
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod != null
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName != null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject != null
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod != null
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject != null
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName != null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject != null
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod != null
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
size(return.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(return.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KNameSpace.GetTokenFunc(int):::ENTER
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.ImportedTokenMatrix != null
this.ImportedSymbolTable != null
arg0 >= 2
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.GetTokenFunc(int):::EXIT98
===========================================================================
org.KonohaScript.KNameSpace.GetTokenFunc(int):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
size(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[]) == orig(size(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[]))
size(this.ImportedTokenMatrix[]) == orig(size(this.ImportedTokenMatrix[]))
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace != null
this.ImportedTokenMatrix != null
this.ImportedSymbolTable != null
return != null
return.callee has only one value
return.callee != null
return.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.method != null
return.prev == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.KNameSpace(org.KonohaScript.Konoha, org.KonohaScript.KNameSpace):::ENTER
arg0 has only one value
arg0.RootNameSpace.KonohaContext has only one value
arg0.RootNameSpace.ParentNameSpace == null
arg0.RootNameSpace.ImportedNameSpaceList == null
arg0.RootNameSpace.DefinedTokenMatrix has only one value
arg0.RootNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.RootNameSpace.ImportedTokenMatrix has only one value
arg0.RootNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.RootNameSpace.DefinedSymbolTable has only one value
arg0.RootNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageList[].getClass().getName() one of { [], [org.KonohaScript.KPackage] }
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType.KonohaContext has only one value
arg0.VoidType.Package == null
arg0.VoidType.ClassFlag == 0
arg0.VoidType.ShortClassName has only one value
arg0.VoidType.ShortClassName.toString == "Void"
arg0.VoidType.BaseClass has only one value
arg0.VoidType.SuperClass has only one value
arg0.VoidType.ClassParam == null
arg0.VoidType.SearchSimilarClass == null
arg0.VoidType.ClassMethodList has only one value
arg0.VoidType.ClassMethodList[] == []
arg0.VoidType.ClassMethodList[].getClass().getName() == []
arg0.VoidType.SearchSuperMethodClass == null
arg0.VoidType.DefaultNullValue == null
arg0.VoidType.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
arg0.VoidType.HostedClassInfo has only one value
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
arg0.BooleanType.KonohaContext has only one value
arg0.BooleanType.Package == null
arg0.BooleanType.ClassFlag == 0
arg0.BooleanType.ShortClassName has only one value
arg0.BooleanType.ShortClassName.toString == "Boolean"
arg0.BooleanType.BaseClass has only one value
arg0.BooleanType.SuperClass has only one value
arg0.BooleanType.ClassParam == null
arg0.BooleanType.SearchSimilarClass == null
arg0.BooleanType.ClassMethodList has only one value
arg0.BooleanType.ClassMethodList[] == []
arg0.BooleanType.ClassMethodList[].getClass().getName() == []
arg0.BooleanType.SearchSuperMethodClass == null
arg0.BooleanType.DefaultNullValue == null
arg0.BooleanType.LocalSpec == null
arg0.BooleanType.HostedClassInfo has only one value
arg1.KonohaContext has only one value
arg1.KonohaContext.RootNameSpace has only one value
arg1.KonohaContext.DefaultNameSpace == null
arg1.KonohaContext.SymbolTable has only one value
arg1.KonohaContext.VoidType has only one value
arg1.KonohaContext.BooleanType has only one value
arg1.ParentNameSpace == null
arg1.ImportedNameSpaceList == null
arg1.DefinedTokenMatrix has only one value
arg1.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.DefinedTokenMatrix[] has only one value, of length 41
arg1.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.ImportedTokenMatrix has only one value
arg1.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.ImportedTokenMatrix[] has only one value, of length 41
arg1.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.DefinedSymbolTable has only one value
arg1.ImportedSymbolTable has only one value
size(arg0.RootNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.RootNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.SymbolTable.PackageList[]) one of { 0, 1 }
size(arg1.DefinedTokenMatrix[]) == 41
size(arg1.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KNameSpace.KNameSpace(org.KonohaScript.Konoha, org.KonohaScript.KNameSpace):::EXIT
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
arg0.RootNameSpace == orig(arg0.RootNameSpace)
arg0.RootNameSpace.KonohaContext == orig(arg0.RootNameSpace.KonohaContext)
arg0.RootNameSpace.ParentNameSpace == orig(arg0.RootNameSpace.ParentNameSpace)
arg0.RootNameSpace.ImportedNameSpaceList == orig(arg0.RootNameSpace.ImportedNameSpaceList)
arg0.RootNameSpace.DefinedTokenMatrix == orig(arg0.RootNameSpace.DefinedTokenMatrix)
arg0.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.RootNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.RootNameSpace.DefinedTokenMatrix[] == orig(arg0.RootNameSpace.DefinedTokenMatrix[])
arg0.RootNameSpace.ImportedTokenMatrix == orig(arg0.RootNameSpace.ImportedTokenMatrix)
arg0.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.RootNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.RootNameSpace.ImportedTokenMatrix[] == orig(arg0.RootNameSpace.ImportedTokenMatrix[])
arg0.RootNameSpace.DefinedSymbolTable == orig(arg0.RootNameSpace.DefinedSymbolTable)
arg0.RootNameSpace.ImportedSymbolTable == orig(arg0.RootNameSpace.ImportedSymbolTable)
arg0.DefaultNameSpace == orig(arg0.DefaultNameSpace)
arg0.SymbolTable == orig(arg0.SymbolTable)
arg0.SymbolTable.ClassList == orig(arg0.SymbolTable.ClassList)
arg0.SymbolTable.ClassList[] == orig(arg0.SymbolTable.ClassList[])
arg0.SymbolTable.ClassNameMap == orig(arg0.SymbolTable.ClassNameMap)
arg0.SymbolTable.PackageList == orig(arg0.SymbolTable.PackageList)
arg0.SymbolTable.PackageList[] == orig(arg0.SymbolTable.PackageList[])
arg0.SymbolTable.PackageMap == orig(arg0.SymbolTable.PackageMap)
arg0.SymbolTable.FileIdList == orig(arg0.SymbolTable.FileIdList)
arg0.SymbolTable.FileIdList[] == orig(arg0.SymbolTable.FileIdList[])
arg0.SymbolTable.FileIdMap == orig(arg0.SymbolTable.FileIdMap)
arg0.SymbolTable.SymbolList == orig(arg0.SymbolTable.SymbolList)
arg0.SymbolTable.SymbolList[] == orig(arg0.SymbolTable.SymbolList[])
arg0.SymbolTable.SymbolMap == orig(arg0.SymbolTable.SymbolMap)
arg0.SymbolTable.ParamList == orig(arg0.SymbolTable.ParamList)
arg0.SymbolTable.ParamList[] == orig(arg0.SymbolTable.ParamList[])
arg0.SymbolTable.ParamMap == orig(arg0.SymbolTable.ParamMap)
arg0.SymbolTable.SignatureList == orig(arg0.SymbolTable.SignatureList)
arg0.SymbolTable.SignatureList[] == orig(arg0.SymbolTable.SignatureList[])
arg0.SymbolTable.SignatureMap == orig(arg0.SymbolTable.SignatureMap)
arg0.VoidType == orig(arg0.VoidType)
arg0.VoidType.KonohaContext == orig(arg0.VoidType.KonohaContext)
arg0.VoidType.Package == orig(arg0.VoidType.Package)
arg0.VoidType.ClassFlag == orig(arg0.VoidType.ClassFlag)
arg0.VoidType.ShortClassName == orig(arg0.VoidType.ShortClassName)
arg0.VoidType.ShortClassName.toString == orig(arg0.VoidType.ShortClassName.toString)
arg0.VoidType.BaseClass == orig(arg0.VoidType.BaseClass)
arg0.VoidType.SuperClass == orig(arg0.VoidType.SuperClass)
arg0.VoidType.ClassParam == orig(arg0.VoidType.ClassParam)
arg0.VoidType.SearchSimilarClass == orig(arg0.VoidType.SearchSimilarClass)
arg0.VoidType.ClassMethodList == orig(arg0.VoidType.ClassMethodList)
arg0.VoidType.ClassMethodList[] == orig(arg0.VoidType.ClassMethodList[])
arg0.VoidType.SearchSuperMethodClass == orig(arg0.VoidType.SearchSuperMethodClass)
arg0.VoidType.DefaultNullValue == orig(arg0.VoidType.DefaultNullValue)
arg0.VoidType.LocalSpec == orig(arg0.VoidType.LocalSpec)
arg0.VoidType.HostedClassInfo == orig(arg0.VoidType.HostedClassInfo)
arg0.BooleanType == orig(arg0.BooleanType)
arg0.BooleanType.KonohaContext == orig(arg0.BooleanType.KonohaContext)
arg0.BooleanType.Package == orig(arg0.BooleanType.Package)
arg0.BooleanType.ClassFlag == orig(arg0.BooleanType.ClassFlag)
arg0.BooleanType.ShortClassName == orig(arg0.BooleanType.ShortClassName)
arg0.BooleanType.ShortClassName.toString == orig(arg0.BooleanType.ShortClassName.toString)
arg0.BooleanType.BaseClass == orig(arg0.BooleanType.BaseClass)
arg0.BooleanType.SuperClass == orig(arg0.BooleanType.SuperClass)
arg0.BooleanType.ClassParam == orig(arg0.BooleanType.ClassParam)
arg0.BooleanType.SearchSimilarClass == orig(arg0.BooleanType.SearchSimilarClass)
arg0.BooleanType.ClassMethodList == orig(arg0.BooleanType.ClassMethodList)
arg0.BooleanType.ClassMethodList[] == orig(arg0.BooleanType.ClassMethodList[])
arg0.BooleanType.SearchSuperMethodClass == orig(arg0.BooleanType.SearchSuperMethodClass)
arg0.BooleanType.DefaultNullValue == orig(arg0.BooleanType.DefaultNullValue)
arg0.BooleanType.LocalSpec == orig(arg0.BooleanType.LocalSpec)
arg0.BooleanType.HostedClassInfo == orig(arg0.BooleanType.HostedClassInfo)
arg1.KonohaContext == orig(arg1.KonohaContext)
arg1.KonohaContext.RootNameSpace == orig(arg1.KonohaContext.RootNameSpace)
arg1.KonohaContext.DefaultNameSpace == orig(arg1.KonohaContext.DefaultNameSpace)
arg1.KonohaContext.SymbolTable == orig(arg1.KonohaContext.SymbolTable)
arg1.KonohaContext.VoidType == orig(arg1.KonohaContext.VoidType)
arg1.KonohaContext.BooleanType == orig(arg1.KonohaContext.BooleanType)
arg1.ParentNameSpace == orig(arg1.ParentNameSpace)
arg1.ImportedNameSpaceList == orig(arg1.ImportedNameSpaceList)
arg1.DefinedTokenMatrix == orig(arg1.DefinedTokenMatrix)
arg1.DefinedTokenMatrix.getClass().getName() == orig(arg1.DefinedTokenMatrix.getClass().getName())
arg1.DefinedTokenMatrix[] == orig(arg1.DefinedTokenMatrix[])
arg1.ImportedTokenMatrix == orig(arg1.ImportedTokenMatrix)
arg1.ImportedTokenMatrix.getClass().getName() == orig(arg1.ImportedTokenMatrix.getClass().getName())
arg1.ImportedTokenMatrix[] == orig(arg1.ImportedTokenMatrix[])
arg1.DefinedSymbolTable == orig(arg1.DefinedSymbolTable)
arg1.ImportedSymbolTable == orig(arg1.ImportedSymbolTable)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace == null
this.ParentNameSpace.KonohaContext.DefaultNameSpace == null
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
arg0.RootNameSpace.KonohaContext has only one value
arg0.RootNameSpace.ParentNameSpace == null
arg0.RootNameSpace.ImportedNameSpaceList == null
arg0.RootNameSpace.DefinedTokenMatrix has only one value
arg0.RootNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.RootNameSpace.ImportedTokenMatrix has only one value
arg0.RootNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.RootNameSpace.DefinedSymbolTable has only one value
arg0.RootNameSpace.ImportedSymbolTable has only one value
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageList[].getClass().getName() one of { [], [org.KonohaScript.KPackage] }
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType.KonohaContext has only one value
arg0.VoidType.Package == null
arg0.VoidType.ClassFlag == 0
arg0.VoidType.ShortClassName has only one value
arg0.VoidType.ShortClassName.toString == "Void"
arg0.VoidType.BaseClass has only one value
arg0.VoidType.SuperClass has only one value
arg0.VoidType.ClassParam == null
arg0.VoidType.SearchSimilarClass == null
arg0.VoidType.ClassMethodList has only one value
arg0.VoidType.ClassMethodList[] == []
arg0.VoidType.ClassMethodList[].getClass().getName() == []
arg0.VoidType.SearchSuperMethodClass == null
arg0.VoidType.DefaultNullValue == null
arg0.VoidType.LocalSpec == null
arg0.VoidType.HostedClassInfo has only one value
arg0.BooleanType.KonohaContext has only one value
arg0.BooleanType.Package == null
arg0.BooleanType.ClassFlag == 0
arg0.BooleanType.ShortClassName has only one value
arg0.BooleanType.ShortClassName.toString == "Boolean"
arg0.BooleanType.BaseClass has only one value
arg0.BooleanType.SuperClass has only one value
arg0.BooleanType.ClassParam == null
arg0.BooleanType.SearchSimilarClass == null
arg0.BooleanType.ClassMethodList has only one value
arg0.BooleanType.ClassMethodList[] == []
arg0.BooleanType.ClassMethodList[].getClass().getName() == []
arg0.BooleanType.SearchSuperMethodClass == null
arg0.BooleanType.DefaultNullValue == null
arg0.BooleanType.LocalSpec == null
arg0.BooleanType.HostedClassInfo has only one value
arg1.KonohaContext has only one value
arg1.KonohaContext.RootNameSpace has only one value
arg1.KonohaContext.DefaultNameSpace == null
arg1.KonohaContext.SymbolTable has only one value
arg1.KonohaContext.VoidType has only one value
arg1.KonohaContext.BooleanType has only one value
arg1.ParentNameSpace == null
arg1.ImportedNameSpaceList == null
arg1.DefinedTokenMatrix has only one value
arg1.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.DefinedTokenMatrix[] has only one value, of length 41
arg1.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.ImportedTokenMatrix has only one value
arg1.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.ImportedTokenMatrix[] has only one value, of length 41
arg1.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.DefinedSymbolTable has only one value
arg1.ImportedSymbolTable has only one value
size(arg0.RootNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.RootNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.SymbolTable.PackageList[]) one of { 0, 1 }
size(arg1.DefinedTokenMatrix[]) == 41
size(arg1.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KNameSpace.LookupTypeInfo(java.lang.Class):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.ParentNameSpace == null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.LookupTypeInfo(java.lang.Class):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == orig(org.KonohaScript.KClass.EmptyMethodList[].getClass().getName())
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.ParentNameSpace == null
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.KonohaContext has only one value
return.KonohaContext.RootNameSpace has only one value
return.KonohaContext.DefaultNameSpace == null
return.KonohaContext.SymbolTable has only one value
return.Package == null
return.ClassFlag == 0
return.BaseClass.KonohaContext has only one value
return.BaseClass.Package == null
return.BaseClass.ClassFlag == 0
return.BaseClass.ClassParam == null
return.BaseClass.SearchSimilarClass == null
return.BaseClass.ClassMethodList has only one value
return.BaseClass.ClassMethodList[] == []
return.BaseClass.ClassMethodList[].getClass().getName() == []
return.BaseClass.SearchSuperMethodClass == null
return.BaseClass.DefaultNullValue == null
return.BaseClass.LocalSpec == null
return.SuperClass.KonohaContext has only one value
return.SuperClass.Package == null
return.SuperClass.ClassFlag == 0
return.SuperClass.ShortClassName.toString one of { "Number", "Object" }
return.SuperClass.ClassParam == null
return.SuperClass.SearchSimilarClass == null
return.SuperClass.ClassMethodList has only one value
return.SuperClass.ClassMethodList[] == []
return.SuperClass.ClassMethodList[].getClass().getName() == []
return.SuperClass.SearchSuperMethodClass == null
return.SuperClass.DefaultNullValue == null
return.SuperClass.LocalSpec == null
return.ClassParam == null
return.SearchSimilarClass == null
return.ClassMethodList has only one value
return.ClassMethodList[] == []
return.ClassMethodList[].getClass().getName() == []
return.SearchSuperMethodClass == null
return.DefaultNullValue == null
return.LocalSpec == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
org.KonohaScript.KClass.EmptyMethodList[] is the reverse of orig(org.KonohaScript.KClass.EmptyMethodList[])
===========================================================================
org.KonohaScript.KNameSpace.MergeFunc(org.KonohaScript.KFunc, org.KonohaScript.KFunc):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
arg0 == null
arg1 != null
arg1.callee has only one value
arg1.callee != null
arg1.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.method != null
arg1.prev == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.MergeFunc(org.KonohaScript.KFunc, org.KonohaScript.KFunc):::EXIT72
===========================================================================
org.KonohaScript.KNameSpace.MergeFunc(org.KonohaScript.KFunc, org.KonohaScript.KFunc):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg1.callee == orig(arg1.callee)
arg1.callee.getClass().getName() == orig(arg1.callee.getClass().getName())
arg1.method == orig(arg1.method)
arg1.prev == orig(arg1.prev)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace != null
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix != null
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix != null
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.DefinedSymbolTable != null
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable != null
this.KonohaContext.DefaultNameSpace == null
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.VoidType != null
this.KonohaContext.BooleanType has only one value
this.KonohaContext.BooleanType != null
this.ParentNameSpace == null
this.DefinedTokenMatrix has only one value
this.DefinedTokenMatrix != null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix != null
this.DefinedSymbolTable has only one value
this.DefinedSymbolTable != null
this.ImportedSymbolTable has only one value
this.ImportedSymbolTable != null
arg1.callee has only one value
arg1.callee != null
arg1.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.method != null
arg1.prev == null
return != null
return.callee has only one value
return.callee != null
return.callee.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.method != null
return.prev == null
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.Message(int, org.KonohaScript.KToken, java.lang.String):::ENTER
this has only one value
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
this.ImportedSymbolTable has only one value
arg0 == 0
arg1 has only one value
arg1.uline == 1000
arg1.ParsedText has only one value
arg1.ParsedText.toString == "fibo"
arg1.flag == 0
arg1.ResolvedSyntax has only one value
arg1.ResolvedSyntax.PackageNameSpace has only one value
arg1.ResolvedSyntax.SyntaxName has only one value
arg1.ResolvedSyntax.SyntaxName.toString == "$Symbol"
arg1.ResolvedSyntax.SyntaxFlag == 1
arg1.ResolvedSyntax.ParseObject has only one value
arg1.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.ResolvedSyntax.ParseMethod has only one value
arg1.ResolvedSyntax.TypeObject == null
arg1.ResolvedSyntax.TypeMethod == null
arg1.ResolvedSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg1.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg2 has only one value
arg2.toString == "() is expected after fibo"
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.Message(int, org.KonohaScript.KToken, java.lang.String):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg1.uline == orig(arg1.uline)
arg1.ParsedText == orig(arg1.ParsedText)
arg1.ParsedText.toString == orig(arg1.ParsedText.toString)
arg1.ResolvedSyntax.TypeObject == orig(arg1.ResolvedSyntax.TypeObject)
arg1.ResolvedSyntax.TypeMethod == orig(arg1.ResolvedSyntax.TypeMethod)
arg1.ResolvedSyntax.ParentSyntax == orig(arg1.ResolvedSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.DefaultNameSpace has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix == null
this.ImportedTokenMatrix has only one value
this.ImportedTokenMatrix[] has only one value, of length 41
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefinedSymbolTable == null
this.ImportedSymbolTable has only one value
arg1.uline == 1000
arg1.ParsedText has only one value
arg1.ParsedText.toString == "fibo"
arg1.flag == 1
arg1.ResolvedSyntax has only one value
arg1.ResolvedSyntax.PackageNameSpace == null
arg1.ResolvedSyntax.SyntaxName has only one value
arg1.ResolvedSyntax.SyntaxName.toString == "$Error"
arg1.ResolvedSyntax.SyntaxFlag == 27200
arg1.ResolvedSyntax.ParseObject has only one value
arg1.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
arg1.ResolvedSyntax.ParseMethod has only one value
arg1.ResolvedSyntax.TypeObject == null
arg1.ResolvedSyntax.TypeMethod == null
arg1.ResolvedSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg1.ResolvedObject has only one value
arg1.ResolvedObject.getClass().getName() == java.lang.String.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.PreProcess(java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1 == 0
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.PreProcess(java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.Tokenize(java.lang.String, long):::ENTER
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1 one of { 0, 2, 1000 }
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KNameSpace.Tokenize(java.lang.String, long):::EXIT
this.KonohaContext == orig(this.KonohaContext)
this.KonohaContext.RootNameSpace == orig(this.KonohaContext.RootNameSpace)
this.KonohaContext.RootNameSpace.KonohaContext == orig(this.KonohaContext.RootNameSpace.KonohaContext)
this.KonohaContext.RootNameSpace.ParentNameSpace == orig(this.KonohaContext.RootNameSpace.ParentNameSpace)
this.KonohaContext.RootNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.RootNameSpace.ImportedNameSpaceList)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix)
this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.DefinedTokenMatrix[])
this.KonohaContext.RootNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix)
this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.RootNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.KonohaContext.RootNameSpace.DefinedSymbolTable == orig(this.KonohaContext.RootNameSpace.DefinedSymbolTable)
this.KonohaContext.RootNameSpace.ImportedSymbolTable == orig(this.KonohaContext.RootNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.KonohaContext.DefaultNameSpace == orig(this.KonohaContext.DefaultNameSpace)
this.KonohaContext.DefaultNameSpace.KonohaContext == orig(this.KonohaContext.DefaultNameSpace.KonohaContext)
this.KonohaContext.DefaultNameSpace.ParentNameSpace == orig(this.KonohaContext.DefaultNameSpace.ParentNameSpace)
this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList == orig(this.KonohaContext.DefaultNameSpace.ImportedNameSpaceList)
this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.DefinedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix)
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix.getClass().getName())
this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.KonohaContext.DefaultNameSpace.ImportedTokenMatrix[])
this.KonohaContext.DefaultNameSpace.DefinedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.DefinedSymbolTable)
this.KonohaContext.DefaultNameSpace.ImportedSymbolTable == orig(this.KonohaContext.DefaultNameSpace.ImportedSymbolTable)
this.KonohaContext.SymbolTable == orig(this.KonohaContext.SymbolTable)
this.KonohaContext.SymbolTable.ClassList == orig(this.KonohaContext.SymbolTable.ClassList)
this.KonohaContext.SymbolTable.ClassList[] == orig(this.KonohaContext.SymbolTable.ClassList[])
this.KonohaContext.SymbolTable.ClassNameMap == orig(this.KonohaContext.SymbolTable.ClassNameMap)
this.KonohaContext.SymbolTable.PackageList == orig(this.KonohaContext.SymbolTable.PackageList)
this.KonohaContext.SymbolTable.PackageList[] == orig(this.KonohaContext.SymbolTable.PackageList[])
this.KonohaContext.SymbolTable.PackageMap == orig(this.KonohaContext.SymbolTable.PackageMap)
this.KonohaContext.SymbolTable.FileIdList == orig(this.KonohaContext.SymbolTable.FileIdList)
this.KonohaContext.SymbolTable.FileIdList[] == orig(this.KonohaContext.SymbolTable.FileIdList[])
this.KonohaContext.SymbolTable.FileIdMap == orig(this.KonohaContext.SymbolTable.FileIdMap)
this.KonohaContext.SymbolTable.SymbolList == orig(this.KonohaContext.SymbolTable.SymbolList)
this.KonohaContext.SymbolTable.SymbolList[] == orig(this.KonohaContext.SymbolTable.SymbolList[])
this.KonohaContext.SymbolTable.SymbolMap == orig(this.KonohaContext.SymbolTable.SymbolMap)
this.KonohaContext.SymbolTable.ParamList == orig(this.KonohaContext.SymbolTable.ParamList)
this.KonohaContext.SymbolTable.ParamList[] == orig(this.KonohaContext.SymbolTable.ParamList[])
this.KonohaContext.SymbolTable.ParamMap == orig(this.KonohaContext.SymbolTable.ParamMap)
this.KonohaContext.SymbolTable.SignatureList == orig(this.KonohaContext.SymbolTable.SignatureList)
this.KonohaContext.SymbolTable.SignatureList[] == orig(this.KonohaContext.SymbolTable.SignatureList[])
this.KonohaContext.SymbolTable.SignatureMap == orig(this.KonohaContext.SymbolTable.SignatureMap)
this.KonohaContext.VoidType == orig(this.KonohaContext.VoidType)
this.KonohaContext.VoidType.KonohaContext == orig(this.KonohaContext.VoidType.KonohaContext)
this.KonohaContext.VoidType.Package == orig(this.KonohaContext.VoidType.Package)
this.KonohaContext.VoidType.ClassFlag == orig(this.KonohaContext.VoidType.ClassFlag)
this.KonohaContext.VoidType.ShortClassName == orig(this.KonohaContext.VoidType.ShortClassName)
this.KonohaContext.VoidType.ShortClassName.toString == orig(this.KonohaContext.VoidType.ShortClassName.toString)
this.KonohaContext.VoidType.BaseClass == orig(this.KonohaContext.VoidType.BaseClass)
this.KonohaContext.VoidType.SuperClass == orig(this.KonohaContext.VoidType.SuperClass)
this.KonohaContext.VoidType.ClassParam == orig(this.KonohaContext.VoidType.ClassParam)
this.KonohaContext.VoidType.SearchSimilarClass == orig(this.KonohaContext.VoidType.SearchSimilarClass)
this.KonohaContext.VoidType.ClassMethodList == orig(this.KonohaContext.VoidType.ClassMethodList)
this.KonohaContext.VoidType.ClassMethodList[] == orig(this.KonohaContext.VoidType.ClassMethodList[])
this.KonohaContext.VoidType.SearchSuperMethodClass == orig(this.KonohaContext.VoidType.SearchSuperMethodClass)
this.KonohaContext.VoidType.DefaultNullValue == orig(this.KonohaContext.VoidType.DefaultNullValue)
this.KonohaContext.VoidType.LocalSpec == orig(this.KonohaContext.VoidType.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
this.KonohaContext.VoidType.HostedClassInfo == orig(this.KonohaContext.VoidType.HostedClassInfo)
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.KonohaContext.BooleanType == orig(this.KonohaContext.BooleanType)
this.KonohaContext.BooleanType.KonohaContext == orig(this.KonohaContext.BooleanType.KonohaContext)
this.KonohaContext.BooleanType.Package == orig(this.KonohaContext.BooleanType.Package)
this.KonohaContext.BooleanType.ClassFlag == orig(this.KonohaContext.BooleanType.ClassFlag)
this.KonohaContext.BooleanType.ShortClassName == orig(this.KonohaContext.BooleanType.ShortClassName)
this.KonohaContext.BooleanType.ShortClassName.toString == orig(this.KonohaContext.BooleanType.ShortClassName.toString)
this.KonohaContext.BooleanType.BaseClass == orig(this.KonohaContext.BooleanType.BaseClass)
this.KonohaContext.BooleanType.SuperClass == orig(this.KonohaContext.BooleanType.SuperClass)
this.KonohaContext.BooleanType.ClassParam == orig(this.KonohaContext.BooleanType.ClassParam)
this.KonohaContext.BooleanType.SearchSimilarClass == orig(this.KonohaContext.BooleanType.SearchSimilarClass)
this.KonohaContext.BooleanType.ClassMethodList == orig(this.KonohaContext.BooleanType.ClassMethodList)
this.KonohaContext.BooleanType.ClassMethodList[] == orig(this.KonohaContext.BooleanType.ClassMethodList[])
this.KonohaContext.BooleanType.SearchSuperMethodClass == orig(this.KonohaContext.BooleanType.SearchSuperMethodClass)
this.KonohaContext.BooleanType.DefaultNullValue == orig(this.KonohaContext.BooleanType.DefaultNullValue)
this.KonohaContext.BooleanType.LocalSpec == orig(this.KonohaContext.BooleanType.LocalSpec)
this.KonohaContext.BooleanType.HostedClassInfo == orig(this.KonohaContext.BooleanType.HostedClassInfo)
this.ParentNameSpace == orig(this.ParentNameSpace)
this.ParentNameSpace.KonohaContext == orig(this.ParentNameSpace.KonohaContext)
this.ParentNameSpace.KonohaContext.RootNameSpace == orig(this.ParentNameSpace.KonohaContext.RootNameSpace)
this.ParentNameSpace.KonohaContext.DefaultNameSpace == orig(this.ParentNameSpace.KonohaContext.DefaultNameSpace)
this.ParentNameSpace.KonohaContext.SymbolTable == orig(this.ParentNameSpace.KonohaContext.SymbolTable)
this.ParentNameSpace.KonohaContext.VoidType == orig(this.ParentNameSpace.KonohaContext.VoidType)
this.ParentNameSpace.KonohaContext.BooleanType == orig(this.ParentNameSpace.KonohaContext.BooleanType)
this.ParentNameSpace.ParentNameSpace == orig(this.ParentNameSpace.ParentNameSpace)
this.ParentNameSpace.ImportedNameSpaceList == orig(this.ParentNameSpace.ImportedNameSpaceList)
this.ParentNameSpace.DefinedTokenMatrix == orig(this.ParentNameSpace.DefinedTokenMatrix)
this.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ParentNameSpace.DefinedTokenMatrix[])
this.ParentNameSpace.ImportedTokenMatrix == orig(this.ParentNameSpace.ImportedTokenMatrix)
this.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ParentNameSpace.ImportedTokenMatrix[])
this.ParentNameSpace.DefinedSymbolTable == orig(this.ParentNameSpace.DefinedSymbolTable)
this.ParentNameSpace.ImportedSymbolTable == orig(this.ParentNameSpace.ImportedSymbolTable)
this.ImportedNameSpaceList == orig(this.ImportedNameSpaceList)
this.DefinedTokenMatrix == orig(this.DefinedTokenMatrix)
this.DefinedTokenMatrix.getClass().getName() == orig(this.DefinedTokenMatrix.getClass().getName())
this.DefinedTokenMatrix[] == orig(this.DefinedTokenMatrix[])
this.ImportedTokenMatrix == orig(this.ImportedTokenMatrix)
this.ImportedTokenMatrix.getClass().getName() == orig(this.ImportedTokenMatrix.getClass().getName())
this.ImportedTokenMatrix[] == orig(this.ImportedTokenMatrix[])
this.DefinedSymbolTable == orig(this.DefinedSymbolTable)
this.ImportedSymbolTable == orig(this.ImportedSymbolTable)
arg0.toString == orig(arg0.toString)
this.KonohaContext.RootNameSpace has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix has only one value
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.KonohaContext.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.KonohaContext.RootNameSpace.DefinedSymbolTable has only one value
this.KonohaContext.RootNameSpace.ImportedSymbolTable has only one value
this.KonohaContext.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.KonohaContext.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.KonohaContext.VoidType has only one value
this.KonohaContext.BooleanType has only one value
this.ParentNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefinedTokenMatrix[] has only one value, of length 41
this.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return[].getClass().getName() elements == org.KonohaScript.KToken.class
size(this.KonohaContext.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KPackage:::OBJECT
this has only one value
this.PackageName has only one value
this.PackageName.toString == "Konoha"
this.PackageNameSpace has only one value
this.PackageNameSpace.KonohaContext has only one value
this.PackageNameSpace.KonohaContext.RootNameSpace == null
this.PackageNameSpace.KonohaContext.DefaultNameSpace == null
this.PackageNameSpace.KonohaContext.SymbolTable has only one value
this.PackageNameSpace.KonohaContext.VoidType == null
this.PackageNameSpace.KonohaContext.BooleanType == null
this.PackageNameSpace.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.PackageNameSpace.ImportedNameSpaceList == null
this.PackageNameSpace.DefinedTokenMatrix == null
this.PackageNameSpace.ImportedTokenMatrix == null
this.PackageNameSpace.DefinedSymbolTable == null
this.PackageNameSpace.ImportedSymbolTable == null
this.kickoutFileId == 0
===========================================================================
org.KonohaScript.KPackage.KPackage(org.KonohaScript.Konoha, int, java.lang.String):::ENTER
arg0 has only one value
arg0.RootNameSpace == null
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] == []
arg0.SymbolTable.PackageList[].getClass().getName() == []
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType == null
arg0.BooleanType == null
arg1 == 0
arg2 has only one value
arg2.toString == "Konoha"
===========================================================================
org.KonohaScript.KPackage.KPackage(org.KonohaScript.Konoha, int, java.lang.String):::EXIT
arg0.RootNameSpace == orig(arg0.RootNameSpace)
arg0.DefaultNameSpace == orig(arg0.DefaultNameSpace)
arg0.SymbolTable == orig(arg0.SymbolTable)
arg0.SymbolTable.ClassList == orig(arg0.SymbolTable.ClassList)
arg0.SymbolTable.ClassList[] == orig(arg0.SymbolTable.ClassList[])
arg0.SymbolTable.ClassNameMap == orig(arg0.SymbolTable.ClassNameMap)
arg0.SymbolTable.PackageList == orig(arg0.SymbolTable.PackageList)
arg0.SymbolTable.PackageList[] == orig(arg0.SymbolTable.PackageList[])
arg0.SymbolTable.PackageMap == orig(arg0.SymbolTable.PackageMap)
arg0.SymbolTable.FileIdList == orig(arg0.SymbolTable.FileIdList)
arg0.SymbolTable.FileIdList[] == orig(arg0.SymbolTable.FileIdList[])
arg0.SymbolTable.FileIdMap == orig(arg0.SymbolTable.FileIdMap)
arg0.SymbolTable.SymbolList == orig(arg0.SymbolTable.SymbolList)
arg0.SymbolTable.SymbolList[] == orig(arg0.SymbolTable.SymbolList[])
arg0.SymbolTable.SymbolMap == orig(arg0.SymbolTable.SymbolMap)
arg0.SymbolTable.ParamList == orig(arg0.SymbolTable.ParamList)
arg0.SymbolTable.ParamList[] == orig(arg0.SymbolTable.ParamList[])
arg0.SymbolTable.ParamMap == orig(arg0.SymbolTable.ParamMap)
arg0.SymbolTable.SignatureList == orig(arg0.SymbolTable.SignatureList)
arg0.SymbolTable.SignatureList[] == orig(arg0.SymbolTable.SignatureList[])
arg0.SymbolTable.SignatureMap == orig(arg0.SymbolTable.SignatureMap)
arg0.VoidType == orig(arg0.VoidType)
arg0.BooleanType == orig(arg0.BooleanType)
arg2.toString == orig(arg2.toString)
arg0.RootNameSpace == null
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] == []
arg0.SymbolTable.PackageList[].getClass().getName() == []
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType == null
arg0.BooleanType == null
arg2.toString == "Konoha"
===========================================================================
org.KonohaScript.KParam:::CLASS
===========================================================================
org.KonohaScript.KParam:::OBJECT
this.ReturnSize == 1
this.Types != null
this.Types.getClass().getName() == org.KonohaScript.KClass[].class
this.Types[] elements has only one value
this.Types[] elements != null
this.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
this.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
this.Types[].KonohaContext elements has only one value
this.Types[].KonohaContext elements != null
this.Types[].KonohaContext.RootNameSpace elements has only one value
this.Types[].KonohaContext.RootNameSpace elements != null
this.Types[].KonohaContext.DefaultNameSpace elements == null
this.Types[].KonohaContext.SymbolTable elements has only one value
this.Types[].KonohaContext.SymbolTable elements != null
this.Types[].KonohaContext.VoidType elements has only one value
this.Types[].KonohaContext.VoidType elements != null
this.Types[].KonohaContext.BooleanType elements has only one value
this.Types[].KonohaContext.BooleanType elements != null
this.Types[].Package elements == null
this.Types[].ClassFlag elements == 0
this.Types[].ClassFlag one of { [0], [0, 0] }
this.Types[].ShortClassName elements has only one value
this.Types[].ShortClassName elements != null
this.Types[].ShortClassName.toString elements == "Integer"
this.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
this.Types[].BaseClass elements has only one value
this.Types[].BaseClass elements != null
this.Types[].BaseClass.KonohaContext elements has only one value
this.Types[].BaseClass.KonohaContext elements != null
this.Types[].BaseClass.Package elements == null
this.Types[].BaseClass.ClassFlag elements == 0
this.Types[].BaseClass.ClassFlag one of { [0], [0, 0] }
this.Types[].BaseClass.ShortClassName elements has only one value
this.Types[].BaseClass.ShortClassName elements != null
this.Types[].BaseClass.ShortClassName.toString elements == "Integer"
this.Types[].BaseClass.ShortClassName.toString one of { [Integer], [Integer, Integer] }
this.Types[].BaseClass.BaseClass elements has only one value
this.Types[].BaseClass.BaseClass elements != null
this.Types[].BaseClass.SuperClass elements has only one value
this.Types[].BaseClass.SuperClass elements != null
this.Types[].BaseClass.ClassParam elements == null
this.Types[].BaseClass.SearchSimilarClass elements == null
this.Types[].BaseClass.ClassMethodList elements != null
this.Types[].BaseClass.ClassMethodList elements are equal
this.Types[].BaseClass.SearchSuperMethodClass elements == null
this.Types[].BaseClass.DefaultNullValue elements == null
this.Types[].BaseClass.DefaultNullValue.getClass().getName() elements == null
this.Types[].BaseClass.DefaultNullValue.getClass().getName() one of { [null], [null, null] }
this.Types[].BaseClass.LocalSpec elements == null
this.Types[].BaseClass.LocalSpec.getClass().getName() elements == null
this.Types[].BaseClass.LocalSpec.getClass().getName() one of { [null], [null, null] }
this.Types[].BaseClass.HostedClassInfo elements has only one value
this.Types[].BaseClass.HostedClassInfo elements != null
this.Types[].SuperClass elements has only one value
this.Types[].SuperClass elements != null
this.Types[].SuperClass.KonohaContext elements has only one value
this.Types[].SuperClass.KonohaContext elements != null
this.Types[].SuperClass.Package elements == null
this.Types[].SuperClass.ClassFlag elements == 0
this.Types[].SuperClass.ClassFlag one of { [0], [0, 0] }
this.Types[].SuperClass.ShortClassName elements has only one value
this.Types[].SuperClass.ShortClassName elements != null
this.Types[].SuperClass.ShortClassName.toString elements == "Number"
this.Types[].SuperClass.ShortClassName.toString one of { [Number], [Number, Number] }
this.Types[].SuperClass.BaseClass elements has only one value
this.Types[].SuperClass.BaseClass elements != null
this.Types[].SuperClass.SuperClass elements has only one value
this.Types[].SuperClass.SuperClass elements != null
this.Types[].SuperClass.ClassParam elements == null
this.Types[].SuperClass.SearchSimilarClass elements == null
this.Types[].SuperClass.ClassMethodList elements has only one value
this.Types[].SuperClass.ClassMethodList elements != null
this.Types[].SuperClass.SearchSuperMethodClass elements == null
this.Types[].SuperClass.DefaultNullValue elements == null
this.Types[].SuperClass.DefaultNullValue.getClass().getName() elements == null
this.Types[].SuperClass.DefaultNullValue.getClass().getName() one of { [null], [null, null] }
this.Types[].SuperClass.LocalSpec elements == null
this.Types[].SuperClass.LocalSpec.getClass().getName() elements == null
this.Types[].SuperClass.LocalSpec.getClass().getName() one of { [null], [null, null] }
this.Types[].SuperClass.HostedClassInfo elements has only one value
this.Types[].SuperClass.HostedClassInfo elements != null
this.Types[].ClassParam elements == null
this.Types[].ClassParam.Types.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.Types[].ClassParam.Types.getClass().getName() one of { [daikon.chicory.NonsensicalObject], [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
this.Types[].SearchSimilarClass elements == null
this.Types[].SearchSimilarClass.DefaultNullValue.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.Types[].SearchSimilarClass.DefaultNullValue.getClass().getName() one of { [daikon.chicory.NonsensicalObject], [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
this.Types[].SearchSimilarClass.LocalSpec.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.Types[].SearchSimilarClass.LocalSpec.getClass().getName() one of { [daikon.chicory.NonsensicalObject], [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
this.Types[].ClassMethodList elements != null
this.Types[].ClassMethodList elements are equal
this.Types[].SearchSuperMethodClass elements == null
this.Types[].SearchSuperMethodClass.DefaultNullValue.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.Types[].SearchSuperMethodClass.DefaultNullValue.getClass().getName() one of { [daikon.chicory.NonsensicalObject], [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
this.Types[].SearchSuperMethodClass.LocalSpec.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.Types[].SearchSuperMethodClass.LocalSpec.getClass().getName() one of { [daikon.chicory.NonsensicalObject], [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
this.Types[].DefaultNullValue elements == null
this.Types[].DefaultNullValue.getClass().getName() elements == null
this.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
this.Types[].LocalSpec elements == null
this.Types[].LocalSpec.getClass().getName() elements == null
this.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
this.Types[].HostedClassInfo elements has only one value
this.Types[].HostedClassInfo elements != null
size(this.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KParam.GetParamSize():::ENTER
this.Types[].BaseClass.ClassMethodList elements has only one value
this.Types[].ClassMethodList elements has only one value
===========================================================================
org.KonohaScript.KParam.GetParamSize():::EXIT
this.ReturnSize == orig(this.ReturnSize)
this.Types == orig(this.Types)
this.Types.getClass().getName() == orig(this.Types.getClass().getName())
this.Types[] == orig(this.Types[])
this.Types[].KonohaContext == orig(this.Types[].KonohaContext)
this.Types[].KonohaContext.RootNameSpace == orig(this.Types[].KonohaContext.RootNameSpace)
this.Types[].KonohaContext.DefaultNameSpace == orig(this.Types[].KonohaContext.DefaultNameSpace)
this.Types[].KonohaContext.SymbolTable == orig(this.Types[].KonohaContext.SymbolTable)
this.Types[].KonohaContext.VoidType == orig(this.Types[].KonohaContext.VoidType)
this.Types[].KonohaContext.BooleanType == orig(this.Types[].KonohaContext.BooleanType)
this.Types[].Package == orig(this.Types[].Package)
this.Types[].ClassFlag == orig(this.Types[].ClassFlag)
this.Types[].ShortClassName == orig(this.Types[].ShortClassName)
this.Types[].BaseClass == orig(this.Types[].BaseClass)
this.Types[].BaseClass.KonohaContext == orig(this.Types[].BaseClass.KonohaContext)
this.Types[].BaseClass.Package == orig(this.Types[].BaseClass.Package)
this.Types[].BaseClass.ClassFlag == orig(this.Types[].BaseClass.ClassFlag)
this.Types[].BaseClass.ShortClassName == orig(this.Types[].BaseClass.ShortClassName)
this.Types[].BaseClass.BaseClass == orig(this.Types[].BaseClass.BaseClass)
this.Types[].BaseClass.SuperClass == orig(this.Types[].BaseClass.SuperClass)
this.Types[].BaseClass.ClassParam == orig(this.Types[].BaseClass.ClassParam)
this.Types[].BaseClass.SearchSimilarClass == orig(this.Types[].BaseClass.SearchSimilarClass)
this.Types[].BaseClass.ClassMethodList == orig(this.Types[].BaseClass.ClassMethodList)
this.Types[].BaseClass.SearchSuperMethodClass == orig(this.Types[].BaseClass.SearchSuperMethodClass)
this.Types[].BaseClass.DefaultNullValue == orig(this.Types[].BaseClass.DefaultNullValue)
this.Types[].BaseClass.LocalSpec == orig(this.Types[].BaseClass.LocalSpec)
this.Types[].BaseClass.HostedClassInfo == orig(this.Types[].BaseClass.HostedClassInfo)
this.Types[].SuperClass == orig(this.Types[].SuperClass)
this.Types[].SuperClass.KonohaContext == orig(this.Types[].SuperClass.KonohaContext)
this.Types[].SuperClass.Package == orig(this.Types[].SuperClass.Package)
this.Types[].SuperClass.ClassFlag == orig(this.Types[].SuperClass.ClassFlag)
this.Types[].SuperClass.ShortClassName == orig(this.Types[].SuperClass.ShortClassName)
this.Types[].SuperClass.BaseClass == orig(this.Types[].SuperClass.BaseClass)
this.Types[].SuperClass.SuperClass == orig(this.Types[].SuperClass.SuperClass)
this.Types[].SuperClass.ClassParam == orig(this.Types[].SuperClass.ClassParam)
this.Types[].SuperClass.SearchSimilarClass == orig(this.Types[].SuperClass.SearchSimilarClass)
this.Types[].SuperClass.ClassMethodList == orig(this.Types[].SuperClass.ClassMethodList)
this.Types[].SuperClass.SearchSuperMethodClass == orig(this.Types[].SuperClass.SearchSuperMethodClass)
this.Types[].SuperClass.DefaultNullValue == orig(this.Types[].SuperClass.DefaultNullValue)
this.Types[].SuperClass.LocalSpec == orig(this.Types[].SuperClass.LocalSpec)
this.Types[].SuperClass.HostedClassInfo == orig(this.Types[].SuperClass.HostedClassInfo)
this.Types[].ClassParam == orig(this.Types[].ClassParam)
this.Types[].SearchSimilarClass == orig(this.Types[].SearchSimilarClass)
this.Types[].ClassMethodList == orig(this.Types[].ClassMethodList)
this.Types[].SearchSuperMethodClass == orig(this.Types[].SearchSuperMethodClass)
this.Types[].DefaultNullValue == orig(this.Types[].DefaultNullValue)
this.Types[].LocalSpec == orig(this.Types[].LocalSpec)
this.Types[].HostedClassInfo == orig(this.Types[].HostedClassInfo)
this.Types[].BaseClass.ClassMethodList elements has only one value
this.Types[].ClassMethodList elements has only one value
return one of { 0, 1 }
===========================================================================
org.KonohaScript.KParam.KParam(int, org.KonohaScript.KClass[]):::ENTER
arg0 one of { 1, 2 }
arg1.getClass().getName() == org.KonohaScript.KClass[].class
arg1[].BaseClass.DefaultNullValue.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].BaseClass.LocalSpec.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].SuperClass.DefaultNullValue.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].SuperClass.LocalSpec.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].ClassParam.Types.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].ClassParam.Types.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSimilarClass.DefaultNullValue.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSimilarClass.DefaultNullValue.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSimilarClass.LocalSpec.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSimilarClass.LocalSpec.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSuperMethodClass.DefaultNullValue.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSuperMethodClass.DefaultNullValue.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSuperMethodClass.LocalSpec.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSuperMethodClass.LocalSpec.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].DefaultNullValue.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].LocalSpec.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
size(arg1[]) == 16
===========================================================================
org.KonohaScript.KParam.KParam(int, org.KonohaScript.KClass[]):::EXIT
arg1[] == orig(arg1[])
this.Types[].BaseClass.ClassMethodList elements has only one value
this.Types[].ClassMethodList elements has only one value
arg1[].BaseClass.DefaultNullValue.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].BaseClass.LocalSpec.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].SuperClass.DefaultNullValue.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].SuperClass.LocalSpec.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].ClassParam.Types.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].ClassParam.Types.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSimilarClass.DefaultNullValue.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSimilarClass.DefaultNullValue.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSimilarClass.LocalSpec.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSimilarClass.LocalSpec.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSuperMethodClass.DefaultNullValue.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSuperMethodClass.DefaultNullValue.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].SearchSuperMethodClass.LocalSpec.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1[].SearchSuperMethodClass.LocalSpec.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
arg1[].DefaultNullValue.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
arg1[].LocalSpec.getClass().getName() one of { [null, null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [null, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject] }
===========================================================================
org.KonohaScript.KParam.ParseOf(org.KonohaScript.KNameSpace, java.lang.String):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace == null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix has only one value
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable has only one value
arg0.ImportedSymbolTable has only one value
arg1.toString one of { "int", "int int x" }
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KParam.ParseOf(org.KonohaScript.KNameSpace, java.lang.String):::EXIT
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace == null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix has only one value
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable has only one value
arg0.ImportedSymbolTable has only one value
arg1.toString one of { "int", "int int x" }
return.ReturnSize == 1
return.Types.getClass().getName() == org.KonohaScript.KClass[].class
return.Types[] elements has only one value
return.Types[].getClass().getName() elements == org.KonohaScript.KClass.class
return.Types[].getClass().getName() one of { [org.KonohaScript.KClass], [org.KonohaScript.KClass, org.KonohaScript.KClass] }
return.Types[].KonohaContext elements has only one value
return.Types[].Package elements == null
return.Types[].ClassFlag elements == 0
return.Types[].ClassFlag one of { [0], [0, 0] }
return.Types[].ShortClassName elements has only one value
return.Types[].ShortClassName.toString elements == "Integer"
return.Types[].ShortClassName.toString one of { [Integer], [Integer, Integer] }
return.Types[].BaseClass elements has only one value
return.Types[].SuperClass elements has only one value
return.Types[].ClassParam elements == null
return.Types[].SearchSimilarClass elements == null
return.Types[].ClassMethodList elements has only one value
return.Types[].SearchSuperMethodClass elements == null
return.Types[].DefaultNullValue elements == null
return.Types[].DefaultNullValue.getClass().getName() elements == null
return.Types[].DefaultNullValue.getClass().getName() one of { [null], [null, null] }
return.Types[].LocalSpec elements == null
return.Types[].LocalSpec.getClass().getName() elements == null
return.Types[].LocalSpec.getClass().getName() one of { [null], [null, null] }
return.Types[].HostedClassInfo elements has only one value
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(return.Types[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.KParamMap:::OBJECT
===========================================================================
org.KonohaScript.KParamMap.KParamMap():::EXIT
===========================================================================
org.KonohaScript.KSymbolTable:::OBJECT
this has only one value
this.ClassList has only one value
this.ClassList[] == []
this.ClassList[].getClass().getName() == []
this.ClassNameMap has only one value
this.PackageList has only one value
this.PackageList[] elements has only one value
this.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
this.PackageList[].getClass().getName() one of { [], [org.KonohaScript.KPackage] }
this.PackageMap has only one value
this.FileIdList has only one value
this.FileIdList[] == []
this.FileIdList[].getClass().getName() == []
this.FileIdMap has only one value
this.SymbolList has only one value
this.SymbolList[] == []
this.SymbolList[].getClass().getName() == []
this.SymbolMap has only one value
this.ParamList has only one value
this.ParamList[] == []
this.ParamList[].getClass().getName() == []
this.ParamMap has only one value
this.SignatureList has only one value
this.SignatureList[] == []
this.SignatureList[].getClass().getName() == []
this.SignatureMap has only one value
size(this.PackageList[]) one of { 0, 1 }
===========================================================================
org.KonohaScript.KSymbolTable.Init(org.KonohaScript.Konoha):::ENTER
this.PackageList[] == []
this.PackageList[].getClass().getName() == []
arg0 has only one value
arg0.RootNameSpace == null
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] == []
arg0.SymbolTable.PackageList[].getClass().getName() == []
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType == null
arg0.BooleanType == null
===========================================================================
org.KonohaScript.KSymbolTable.Init(org.KonohaScript.Konoha):::EXIT
this.ClassList == orig(this.ClassList)
this.ClassList[] == orig(this.ClassList[])
this.ClassNameMap == orig(this.ClassNameMap)
this.PackageList == orig(this.PackageList)
this.PackageMap == orig(this.PackageMap)
this.FileIdList == orig(this.FileIdList)
this.FileIdList[] == orig(this.FileIdList[])
this.FileIdMap == orig(this.FileIdMap)
this.SymbolList == orig(this.SymbolList)
this.SymbolList[] == orig(this.SymbolList[])
this.SymbolMap == orig(this.SymbolMap)
this.ParamList == orig(this.ParamList)
this.ParamList[] == orig(this.ParamList[])
this.ParamMap == orig(this.ParamMap)
this.SignatureList == orig(this.SignatureList)
this.SignatureList[] == orig(this.SignatureList[])
this.SignatureMap == orig(this.SignatureMap)
arg0.RootNameSpace == orig(arg0.RootNameSpace)
arg0.DefaultNameSpace == orig(arg0.DefaultNameSpace)
arg0.SymbolTable == orig(arg0.SymbolTable)
arg0.SymbolTable.ClassList == orig(arg0.SymbolTable.ClassList)
arg0.SymbolTable.ClassList[] == orig(arg0.SymbolTable.ClassList[])
arg0.SymbolTable.ClassNameMap == orig(arg0.SymbolTable.ClassNameMap)
arg0.SymbolTable.PackageList == orig(arg0.SymbolTable.PackageList)
arg0.SymbolTable.PackageMap == orig(arg0.SymbolTable.PackageMap)
arg0.SymbolTable.FileIdList == orig(arg0.SymbolTable.FileIdList)
arg0.SymbolTable.FileIdList[] == orig(arg0.SymbolTable.FileIdList[])
arg0.SymbolTable.FileIdMap == orig(arg0.SymbolTable.FileIdMap)
arg0.SymbolTable.SymbolList == orig(arg0.SymbolTable.SymbolList)
arg0.SymbolTable.SymbolList[] == orig(arg0.SymbolTable.SymbolList[])
arg0.SymbolTable.SymbolMap == orig(arg0.SymbolTable.SymbolMap)
arg0.SymbolTable.ParamList == orig(arg0.SymbolTable.ParamList)
arg0.SymbolTable.ParamList[] == orig(arg0.SymbolTable.ParamList[])
arg0.SymbolTable.ParamMap == orig(arg0.SymbolTable.ParamMap)
arg0.SymbolTable.SignatureList == orig(arg0.SymbolTable.SignatureList)
arg0.SymbolTable.SignatureList[] == orig(arg0.SymbolTable.SignatureList[])
arg0.SymbolTable.SignatureMap == orig(arg0.SymbolTable.SignatureMap)
arg0.VoidType == orig(arg0.VoidType)
arg0.BooleanType == orig(arg0.BooleanType)
size(this.PackageList[])-1 == orig(size(this.PackageList[]))
size(arg0.SymbolTable.PackageList[])-1 == orig(size(arg0.SymbolTable.PackageList[]))
this.PackageList[] contains no nulls and has only one value, of length 1
this.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.RootNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType == null
arg0.BooleanType == null
size(this.PackageList[]) == 1
size(arg0.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KSymbolTable.KSymbolTable():::EXIT
this.PackageList[] == []
this.PackageList[].getClass().getName() == []
===========================================================================
org.KonohaScript.KSymbolTable.NewPackage(org.KonohaScript.Konoha, java.lang.String):::ENTER
this.PackageList[] == []
this.PackageList[].getClass().getName() == []
arg0 has only one value
arg0.RootNameSpace == null
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] == []
arg0.SymbolTable.PackageList[].getClass().getName() == []
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType == null
arg0.BooleanType == null
arg1 has only one value
arg1.toString == "Konoha"
===========================================================================
org.KonohaScript.KSymbolTable.NewPackage(org.KonohaScript.Konoha, java.lang.String):::EXIT
this.ClassList == orig(this.ClassList)
this.ClassList[] == orig(this.ClassList[])
this.ClassNameMap == orig(this.ClassNameMap)
this.PackageList == orig(this.PackageList)
this.PackageMap == orig(this.PackageMap)
this.FileIdList == orig(this.FileIdList)
this.FileIdList[] == orig(this.FileIdList[])
this.FileIdMap == orig(this.FileIdMap)
this.SymbolList == orig(this.SymbolList)
this.SymbolList[] == orig(this.SymbolList[])
this.SymbolMap == orig(this.SymbolMap)
this.ParamList == orig(this.ParamList)
this.ParamList[] == orig(this.ParamList[])
this.ParamMap == orig(this.ParamMap)
this.SignatureList == orig(this.SignatureList)
this.SignatureList[] == orig(this.SignatureList[])
this.SignatureMap == orig(this.SignatureMap)
arg0.RootNameSpace == orig(arg0.RootNameSpace)
arg0.DefaultNameSpace == orig(arg0.DefaultNameSpace)
arg0.SymbolTable == orig(arg0.SymbolTable)
arg0.SymbolTable.ClassList == orig(arg0.SymbolTable.ClassList)
arg0.SymbolTable.ClassList[] == orig(arg0.SymbolTable.ClassList[])
arg0.SymbolTable.ClassNameMap == orig(arg0.SymbolTable.ClassNameMap)
arg0.SymbolTable.PackageList == orig(arg0.SymbolTable.PackageList)
arg0.SymbolTable.PackageMap == orig(arg0.SymbolTable.PackageMap)
arg0.SymbolTable.FileIdList == orig(arg0.SymbolTable.FileIdList)
arg0.SymbolTable.FileIdList[] == orig(arg0.SymbolTable.FileIdList[])
arg0.SymbolTable.FileIdMap == orig(arg0.SymbolTable.FileIdMap)
arg0.SymbolTable.SymbolList == orig(arg0.SymbolTable.SymbolList)
arg0.SymbolTable.SymbolList[] == orig(arg0.SymbolTable.SymbolList[])
arg0.SymbolTable.SymbolMap == orig(arg0.SymbolTable.SymbolMap)
arg0.SymbolTable.ParamList == orig(arg0.SymbolTable.ParamList)
arg0.SymbolTable.ParamList[] == orig(arg0.SymbolTable.ParamList[])
arg0.SymbolTable.ParamMap == orig(arg0.SymbolTable.ParamMap)
arg0.SymbolTable.SignatureList == orig(arg0.SymbolTable.SignatureList)
arg0.SymbolTable.SignatureList[] == orig(arg0.SymbolTable.SignatureList[])
arg0.SymbolTable.SignatureMap == orig(arg0.SymbolTable.SignatureMap)
arg0.VoidType == orig(arg0.VoidType)
arg0.BooleanType == orig(arg0.BooleanType)
arg1.toString == orig(arg1.toString)
size(this.PackageList[])-1 == orig(size(this.PackageList[]))
size(arg0.SymbolTable.PackageList[])-1 == orig(size(arg0.SymbolTable.PackageList[]))
this.PackageList[] contains no nulls and has only one value, of length 1
this.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.RootNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.DefaultNameSpace == null
arg0.SymbolTable has only one value
arg0.SymbolTable.ClassList has only one value
arg0.SymbolTable.ClassList[] == []
arg0.SymbolTable.ClassList[].getClass().getName() == []
arg0.SymbolTable.ClassNameMap has only one value
arg0.SymbolTable.PackageList has only one value
arg0.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
arg0.SymbolTable.PackageList[] elements has only one value
arg0.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
arg0.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
arg0.SymbolTable.PackageMap has only one value
arg0.SymbolTable.FileIdList has only one value
arg0.SymbolTable.FileIdList[] == []
arg0.SymbolTable.FileIdList[].getClass().getName() == []
arg0.SymbolTable.FileIdMap has only one value
arg0.SymbolTable.SymbolList has only one value
arg0.SymbolTable.SymbolList[] == []
arg0.SymbolTable.SymbolList[].getClass().getName() == []
arg0.SymbolTable.SymbolMap has only one value
arg0.SymbolTable.ParamList has only one value
arg0.SymbolTable.ParamList[] == []
arg0.SymbolTable.ParamList[].getClass().getName() == []
arg0.SymbolTable.ParamMap has only one value
arg0.SymbolTable.SignatureList has only one value
arg0.SymbolTable.SignatureList[] == []
arg0.SymbolTable.SignatureList[].getClass().getName() == []
arg0.SymbolTable.SignatureMap has only one value
arg0.VoidType == null
arg0.BooleanType == null
arg1.toString == "Konoha"
return has only one value
return.PackageName has only one value
return.PackageName.toString == "Konoha"
return.PackageNameSpace has only one value
return.PackageNameSpace.KonohaContext has only one value
return.PackageNameSpace.ParentNameSpace == null
return.PackageNameSpace.ImportedNameSpaceList == null
return.PackageNameSpace.DefinedTokenMatrix == null
return.PackageNameSpace.ImportedTokenMatrix == null
return.PackageNameSpace.DefinedSymbolTable == null
return.PackageNameSpace.ImportedSymbolTable == null
return.kickoutFileId == 0
size(this.PackageList[]) == 1
size(arg0.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.KSyntax:::OBJECT
this.PackageNameSpace.KonohaContext has only one value
this.PackageNameSpace.KonohaContext != null
this.PackageNameSpace.KonohaContext.RootNameSpace has only one value
this.PackageNameSpace.KonohaContext.RootNameSpace != null
this.PackageNameSpace.KonohaContext.DefaultNameSpace has only one value
this.PackageNameSpace.KonohaContext.DefaultNameSpace != null
this.PackageNameSpace.KonohaContext.SymbolTable has only one value
this.PackageNameSpace.KonohaContext.SymbolTable != null
this.PackageNameSpace.KonohaContext.VoidType has only one value
this.PackageNameSpace.KonohaContext.VoidType != null
this.PackageNameSpace.KonohaContext.BooleanType has only one value
this.PackageNameSpace.KonohaContext.BooleanType != null
this.PackageNameSpace.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.PackageNameSpace.ImportedNameSpaceList == null
this.PackageNameSpace.DefinedTokenMatrix has only one value
this.PackageNameSpace.DefinedTokenMatrix != null
this.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.PackageNameSpace.ImportedTokenMatrix has only one value
this.PackageNameSpace.ImportedTokenMatrix != null
this.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.PackageNameSpace.DefinedSymbolTable has only one value
this.PackageNameSpace.DefinedSymbolTable != null
this.PackageNameSpace.ImportedSymbolTable has only one value
this.PackageNameSpace.ImportedSymbolTable != null
this.SyntaxName != null
this.SyntaxFlag >= 1
this.ParseObject != null
this.TypeObject == null
this.ParentSyntax.PackageNameSpace has only one value
this.ParentSyntax.PackageNameSpace.KonohaContext has only one value
this.ParentSyntax.PackageNameSpace.ParentNameSpace == null
this.ParentSyntax.PackageNameSpace.ImportedNameSpaceList == null
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix has only one value
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix has only one value
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ParentSyntax.PackageNameSpace.DefinedSymbolTable has only one value
this.ParentSyntax.PackageNameSpace.ImportedSymbolTable has only one value
this.ParentSyntax.SyntaxName has only one value
this.ParentSyntax.SyntaxName.toString == "$Type"
this.ParentSyntax.SyntaxFlag == 1
this.ParentSyntax.ParseObject has only one value
this.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ParentSyntax.TypeObject == null
this.ParentSyntax.TypeMethod == null
this.ParentSyntax.ParentSyntax.PackageNameSpace has only one value
this.ParentSyntax.ParentSyntax.SyntaxName has only one value
this.ParentSyntax.ParentSyntax.SyntaxName.toString == "$Type"
this.ParentSyntax.ParentSyntax.SyntaxFlag == 1
this.ParentSyntax.ParentSyntax.ParseObject has only one value
this.ParentSyntax.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ParentSyntax.ParentSyntax.ParseMethod == null
this.ParentSyntax.ParentSyntax.TypeObject == null
this.ParentSyntax.ParentSyntax.TypeMethod == null
this.ParentSyntax.ParentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject != null
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName != null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject != null
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod != null
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName != null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject != null
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod != null
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName != null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject != null
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod != null
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject != null
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName != null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject != null
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod != null
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
size(this.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(this.PackageNameSpace.ImportedTokenMatrix[]) == 41
size(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KSyntax.InvokeParseFunc(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::ENTER
this.PackageNameSpace has only one value
this.SyntaxName.toString one of { "$Symbol", "$Type" }
this.SyntaxFlag == 1
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName.toString one of { "$Symbol", "$Type" }
arg0.Syntax.SyntaxFlag == 1
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.TypeObject == null
arg0.KeyToken.uline one of { 2, 1000 }
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList == null
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
arg3 one of { 24, 39 }
arg4 one of { 0, 8 }
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg1[]) one of { 24, 39 }
===========================================================================
org.KonohaScript.KSyntax.InvokeParseFunc(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT102
===========================================================================
org.KonohaScript.KSyntax.InvokeParseFunc(org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT
this.PackageNameSpace == orig(this.PackageNameSpace)
this.PackageNameSpace.KonohaContext == orig(this.PackageNameSpace.KonohaContext)
this.PackageNameSpace.KonohaContext.RootNameSpace == orig(this.PackageNameSpace.KonohaContext.RootNameSpace)
this.PackageNameSpace.KonohaContext.DefaultNameSpace == orig(this.PackageNameSpace.KonohaContext.DefaultNameSpace)
this.PackageNameSpace.KonohaContext.SymbolTable == orig(this.PackageNameSpace.KonohaContext.SymbolTable)
this.PackageNameSpace.KonohaContext.VoidType == orig(this.PackageNameSpace.KonohaContext.VoidType)
this.PackageNameSpace.KonohaContext.BooleanType == orig(this.PackageNameSpace.KonohaContext.BooleanType)
this.PackageNameSpace.ParentNameSpace == orig(this.PackageNameSpace.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.PackageNameSpace.ImportedNameSpaceList == orig(this.PackageNameSpace.ImportedNameSpaceList)
this.PackageNameSpace.DefinedTokenMatrix == orig(this.PackageNameSpace.DefinedTokenMatrix)
this.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.PackageNameSpace.DefinedTokenMatrix[] == orig(this.PackageNameSpace.DefinedTokenMatrix[])
this.PackageNameSpace.ImportedTokenMatrix == orig(this.PackageNameSpace.ImportedTokenMatrix)
this.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.PackageNameSpace.ImportedTokenMatrix[] == orig(this.PackageNameSpace.ImportedTokenMatrix[])
this.PackageNameSpace.DefinedSymbolTable == orig(this.PackageNameSpace.DefinedSymbolTable)
this.PackageNameSpace.ImportedSymbolTable == orig(this.PackageNameSpace.ImportedSymbolTable)
this.SyntaxName == orig(this.SyntaxName)
this.SyntaxName.toString == orig(this.SyntaxName.toString)
this.SyntaxFlag == orig(this.SyntaxFlag)
this.ParseObject == orig(this.ParseObject)
this.ParseObject.getClass().getName() == orig(this.ParseObject.getClass().getName())
this.ParseMethod == orig(this.ParseMethod)
this.TypeObject == orig(this.TypeObject)
this.TypeMethod == orig(this.TypeMethod)
this.ParentSyntax == orig(this.ParentSyntax)
this.ParentSyntax.PackageNameSpace == orig(this.ParentSyntax.PackageNameSpace)
this.ParentSyntax.PackageNameSpace.KonohaContext == orig(this.ParentSyntax.PackageNameSpace.KonohaContext)
this.ParentSyntax.PackageNameSpace.ParentNameSpace == orig(this.ParentSyntax.PackageNameSpace.ParentNameSpace)
this.ParentSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ParentSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[])
this.ParentSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ParentSyntax.PackageNameSpace.DefinedSymbolTable)
this.ParentSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ParentSyntax.PackageNameSpace.ImportedSymbolTable)
this.ParentSyntax.SyntaxName == orig(this.ParentSyntax.SyntaxName)
this.ParentSyntax.SyntaxName.toString == orig(this.ParentSyntax.SyntaxName.toString)
this.ParentSyntax.SyntaxFlag == orig(this.ParentSyntax.SyntaxFlag)
this.ParentSyntax.ParseObject == orig(this.ParentSyntax.ParseObject)
this.ParentSyntax.ParseObject.getClass().getName() == orig(this.ParentSyntax.ParseObject.getClass().getName())
this.ParentSyntax.ParseMethod == orig(this.ParentSyntax.ParseMethod)
this.ParentSyntax.TypeObject == orig(this.ParentSyntax.TypeObject)
this.ParentSyntax.TypeMethod == orig(this.ParentSyntax.TypeMethod)
this.ParentSyntax.ParentSyntax == orig(this.ParentSyntax.ParentSyntax)
this.ParentSyntax.ParentSyntax.PackageNameSpace == orig(this.ParentSyntax.ParentSyntax.PackageNameSpace)
this.ParentSyntax.ParentSyntax.SyntaxName == orig(this.ParentSyntax.ParentSyntax.SyntaxName)
this.ParentSyntax.ParentSyntax.SyntaxName.toString == orig(this.ParentSyntax.ParentSyntax.SyntaxName.toString)
this.ParentSyntax.ParentSyntax.SyntaxFlag == orig(this.ParentSyntax.ParentSyntax.SyntaxFlag)
this.ParentSyntax.ParentSyntax.ParseObject == orig(this.ParentSyntax.ParentSyntax.ParseObject)
this.ParentSyntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.ParentSyntax.ParentSyntax.ParseObject.getClass().getName())
this.ParentSyntax.ParentSyntax.ParseMethod == orig(this.ParentSyntax.ParentSyntax.ParseMethod)
this.ParentSyntax.ParentSyntax.TypeObject == orig(this.ParentSyntax.ParentSyntax.TypeObject)
this.ParentSyntax.ParentSyntax.TypeMethod == orig(this.ParentSyntax.ParentSyntax.TypeMethod)
this.ParentSyntax.ParentSyntax.ParentSyntax == orig(this.ParentSyntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
arg0.Parent == orig(arg0.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.PreviousNode == orig(arg0.PreviousNode)
arg0.NextNode == orig(arg0.NextNode)
arg0.NodeNameSpace == orig(arg0.NodeNameSpace)
arg0.NodeNameSpace.KonohaContext == orig(arg0.NodeNameSpace.KonohaContext)
arg0.NodeNameSpace.ParentNameSpace == orig(arg0.NodeNameSpace.ParentNameSpace)
arg0.NodeNameSpace.ImportedNameSpaceList == orig(arg0.NodeNameSpace.ImportedNameSpaceList)
arg0.NodeNameSpace.DefinedTokenMatrix == orig(arg0.NodeNameSpace.DefinedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix == orig(arg0.NodeNameSpace.ImportedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.NodeNameSpace.ImportedTokenMatrix[] == orig(arg0.NodeNameSpace.ImportedTokenMatrix[])
arg0.NodeNameSpace.DefinedSymbolTable == orig(arg0.NodeNameSpace.DefinedSymbolTable)
arg0.NodeNameSpace.ImportedSymbolTable == orig(arg0.NodeNameSpace.ImportedSymbolTable)
arg0.Syntax.TypeObject == orig(arg0.Syntax.TypeObject)
arg0.Syntax.TypeMethod == orig(arg0.Syntax.TypeMethod)
arg0.KeyToken.uline == orig(arg0.KeyToken.uline)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg1[] == orig(arg1[])
this.PackageNameSpace has only one value
this.SyntaxName.toString one of { "$Symbol", "$Type" }
this.SyntaxFlag == 1
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
arg0.PreviousNode == null
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
arg0.Syntax.SyntaxName.toString one of { "$Error", "$Symbol", "$Type" }
arg0.Syntax.SyntaxFlag one of { 1, 27200 }
arg0.Syntax.TypeObject == null
arg0.KeyToken.uline one of { 2, 1000 }
arg0.KeyToken.flag one of { 0, 1 }
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg0.NodeList[] contains no nulls and has only one value, of length 1
arg0.NodeList[] elements has only one value
arg0.NodeList[].getClass().getName() == [org.KonohaScript.KToken]
arg0.NodeList[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.NodeList[]) == 1
arg0.Syntax.SyntaxName.toString <= orig(arg0.Syntax.SyntaxName.toString)
arg0.Syntax.SyntaxFlag >= orig(arg0.Syntax.SyntaxFlag)
arg0.KeyToken.ParsedText.toString <= orig(arg0.KeyToken.ParsedText.toString)
arg0.KeyToken.flag >= orig(arg0.KeyToken.flag)
===========================================================================
org.KonohaScript.KSyntax.IsBinaryOperator():::ENTER
this.PackageNameSpace has only one value
this.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.SyntaxFlag one of { 1, 8003, 12802 }
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.TypeMethod == null
this.ParentSyntax == null
===========================================================================
org.KonohaScript.KSyntax.IsBinaryOperator():::EXIT
this.PackageNameSpace == orig(this.PackageNameSpace)
this.PackageNameSpace.KonohaContext == orig(this.PackageNameSpace.KonohaContext)
this.PackageNameSpace.KonohaContext.RootNameSpace == orig(this.PackageNameSpace.KonohaContext.RootNameSpace)
this.PackageNameSpace.KonohaContext.DefaultNameSpace == orig(this.PackageNameSpace.KonohaContext.DefaultNameSpace)
this.PackageNameSpace.KonohaContext.SymbolTable == orig(this.PackageNameSpace.KonohaContext.SymbolTable)
this.PackageNameSpace.KonohaContext.VoidType == orig(this.PackageNameSpace.KonohaContext.VoidType)
this.PackageNameSpace.KonohaContext.BooleanType == orig(this.PackageNameSpace.KonohaContext.BooleanType)
this.PackageNameSpace.ParentNameSpace == orig(this.PackageNameSpace.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.PackageNameSpace.ImportedNameSpaceList == orig(this.PackageNameSpace.ImportedNameSpaceList)
this.PackageNameSpace.DefinedTokenMatrix == orig(this.PackageNameSpace.DefinedTokenMatrix)
this.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.PackageNameSpace.DefinedTokenMatrix[] == orig(this.PackageNameSpace.DefinedTokenMatrix[])
this.PackageNameSpace.ImportedTokenMatrix == orig(this.PackageNameSpace.ImportedTokenMatrix)
this.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.PackageNameSpace.ImportedTokenMatrix[] == orig(this.PackageNameSpace.ImportedTokenMatrix[])
this.PackageNameSpace.DefinedSymbolTable == orig(this.PackageNameSpace.DefinedSymbolTable)
this.PackageNameSpace.ImportedSymbolTable == orig(this.PackageNameSpace.ImportedSymbolTable)
this.SyntaxName == orig(this.SyntaxName)
this.SyntaxName.toString == orig(this.SyntaxName.toString)
this.SyntaxFlag == orig(this.SyntaxFlag)
this.ParseObject == orig(this.ParseObject)
this.ParseObject.getClass().getName() == orig(this.ParseObject.getClass().getName())
this.ParseMethod == orig(this.ParseMethod)
this.TypeObject == orig(this.TypeObject)
this.TypeMethod == orig(this.TypeMethod)
this.ParentSyntax == orig(this.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
(this.SyntaxName.toString == "$Symbol")  <==>  (return == false)
(this.SyntaxName.toString == "$Symbol")  <==>  (this.ParseMethod has only one value)
(this.SyntaxName.toString == "$Symbol")  <==>  (this.SyntaxFlag == 1)
(this.SyntaxName.toString == "$Symbol")  ==>  (orig(this) has only one value)
(this.SyntaxName.toString == "$Symbol")  ==>  (this.SyntaxName has only one value)
(this.SyntaxName.toString one of { "+", "==" })  <==>  (return == true)
(this.SyntaxName.toString one of { "+", "==" })  <==>  (this.SyntaxFlag one of { 8003, 12802 })
this.PackageNameSpace has only one value
this.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.SyntaxFlag one of { 1, 8003, 12802 }
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.TypeMethod == null
this.ParentSyntax == null
===========================================================================
org.KonohaScript.KSyntax.IsBinaryOperator():::EXIT;condition="return == true"
this.SyntaxName.toString one of { "+", "==" }
this.SyntaxFlag one of { 8003, 12802 }
return == true
===========================================================================
org.KonohaScript.KSyntax.IsBinaryOperator():::EXIT;condition="not(return == true)"
this.SyntaxName has only one value
this.SyntaxName.toString == "$Symbol"
this.SyntaxFlag == 1
this.ParseMethod has only one value
return == false
orig(this) has only one value
===========================================================================
org.KonohaScript.KSyntax.IsDelim():::ENTER
this.PackageNameSpace has only one value
this.PackageNameSpace != null
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ParentSyntax.ParseMethod has only one value
this.ParentSyntax.ParentSyntax has only one value
===========================================================================
org.KonohaScript.KSyntax.IsDelim():::EXIT
this.PackageNameSpace == orig(this.PackageNameSpace)
this.PackageNameSpace.KonohaContext == orig(this.PackageNameSpace.KonohaContext)
this.PackageNameSpace.KonohaContext.RootNameSpace == orig(this.PackageNameSpace.KonohaContext.RootNameSpace)
this.PackageNameSpace.KonohaContext.DefaultNameSpace == orig(this.PackageNameSpace.KonohaContext.DefaultNameSpace)
this.PackageNameSpace.KonohaContext.SymbolTable == orig(this.PackageNameSpace.KonohaContext.SymbolTable)
this.PackageNameSpace.KonohaContext.VoidType == orig(this.PackageNameSpace.KonohaContext.VoidType)
this.PackageNameSpace.KonohaContext.BooleanType == orig(this.PackageNameSpace.KonohaContext.BooleanType)
this.PackageNameSpace.ParentNameSpace == orig(this.PackageNameSpace.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.PackageNameSpace.ImportedNameSpaceList == orig(this.PackageNameSpace.ImportedNameSpaceList)
this.PackageNameSpace.DefinedTokenMatrix == orig(this.PackageNameSpace.DefinedTokenMatrix)
this.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.PackageNameSpace.DefinedTokenMatrix[] == orig(this.PackageNameSpace.DefinedTokenMatrix[])
this.PackageNameSpace.ImportedTokenMatrix == orig(this.PackageNameSpace.ImportedTokenMatrix)
this.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.PackageNameSpace.ImportedTokenMatrix[] == orig(this.PackageNameSpace.ImportedTokenMatrix[])
this.PackageNameSpace.DefinedSymbolTable == orig(this.PackageNameSpace.DefinedSymbolTable)
this.PackageNameSpace.ImportedSymbolTable == orig(this.PackageNameSpace.ImportedSymbolTable)
this.SyntaxName == orig(this.SyntaxName)
this.SyntaxName.toString == orig(this.SyntaxName.toString)
this.SyntaxFlag == orig(this.SyntaxFlag)
this.ParseObject == orig(this.ParseObject)
this.ParseObject.getClass().getName() == orig(this.ParseObject.getClass().getName())
this.ParseMethod == orig(this.ParseMethod)
this.TypeObject == orig(this.TypeObject)
this.TypeMethod == orig(this.TypeMethod)
this.ParentSyntax == orig(this.ParentSyntax)
this.ParentSyntax.PackageNameSpace == orig(this.ParentSyntax.PackageNameSpace)
this.ParentSyntax.PackageNameSpace.KonohaContext == orig(this.ParentSyntax.PackageNameSpace.KonohaContext)
this.ParentSyntax.PackageNameSpace.ParentNameSpace == orig(this.ParentSyntax.PackageNameSpace.ParentNameSpace)
this.ParentSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ParentSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[])
this.ParentSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ParentSyntax.PackageNameSpace.DefinedSymbolTable)
this.ParentSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ParentSyntax.PackageNameSpace.ImportedSymbolTable)
this.ParentSyntax.SyntaxName == orig(this.ParentSyntax.SyntaxName)
this.ParentSyntax.SyntaxName.toString == orig(this.ParentSyntax.SyntaxName.toString)
this.ParentSyntax.SyntaxFlag == orig(this.ParentSyntax.SyntaxFlag)
this.ParentSyntax.ParseObject == orig(this.ParentSyntax.ParseObject)
this.ParentSyntax.ParseObject.getClass().getName() == orig(this.ParentSyntax.ParseObject.getClass().getName())
this.ParentSyntax.ParseMethod == orig(this.ParentSyntax.ParseMethod)
this.ParentSyntax.TypeObject == orig(this.ParentSyntax.TypeObject)
this.ParentSyntax.TypeMethod == orig(this.ParentSyntax.TypeMethod)
this.ParentSyntax.ParentSyntax == orig(this.ParentSyntax.ParentSyntax)
this.ParentSyntax.ParentSyntax.PackageNameSpace == orig(this.ParentSyntax.ParentSyntax.PackageNameSpace)
this.ParentSyntax.ParentSyntax.SyntaxName == orig(this.ParentSyntax.ParentSyntax.SyntaxName)
this.ParentSyntax.ParentSyntax.SyntaxName.toString == orig(this.ParentSyntax.ParentSyntax.SyntaxName.toString)
this.ParentSyntax.ParentSyntax.SyntaxFlag == orig(this.ParentSyntax.ParentSyntax.SyntaxFlag)
this.ParentSyntax.ParentSyntax.ParseObject == orig(this.ParentSyntax.ParentSyntax.ParseObject)
this.ParentSyntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.ParentSyntax.ParentSyntax.ParseObject.getClass().getName())
this.ParentSyntax.ParentSyntax.ParseMethod == orig(this.ParentSyntax.ParentSyntax.ParseMethod)
this.ParentSyntax.ParentSyntax.TypeObject == orig(this.ParentSyntax.ParentSyntax.TypeObject)
this.ParentSyntax.ParentSyntax.TypeMethod == orig(this.ParentSyntax.ParentSyntax.TypeMethod)
this.ParentSyntax.ParentSyntax.ParentSyntax == orig(this.ParentSyntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace has only one value)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.DefinedSymbolTable has only one value)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix has only one value)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject])
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null])
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedNameSpaceList == null)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedSymbolTable has only one value)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix has only one value)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject])
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null])
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.KonohaContext has only one value)
(return == false)  ==>  (this.ParentSyntax.PackageNameSpace.ParentNameSpace == null)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax has only one value)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.PackageNameSpace has only one value)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.ParentSyntax == null)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.ParseMethod == null)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.ParseObject has only one value)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.SyntaxName has only one value)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.SyntaxName.toString == "$Type")
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.TypeMethod == null)
(return == false)  ==>  (this.ParentSyntax.ParentSyntax.TypeObject == null)
(return == false)  ==>  (this.ParentSyntax.ParseMethod has only one value)
(return == false)  ==>  (this.ParentSyntax.ParseObject has only one value)
(return == false)  ==>  (this.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class)
(return == false)  ==>  (this.ParentSyntax.SyntaxName has only one value)
(return == false)  ==>  (this.ParentSyntax.SyntaxName.toString == "$Type")
(return == false)  ==>  (this.ParentSyntax.TypeMethod == null)
(return == false)  ==>  (this.ParentSyntax.TypeObject == null)
(return == false)  ==>  (this.SyntaxFlag >= 1)
(this.SyntaxFlag == 32000)  <==>  (return == true)
(this.SyntaxFlag == 32000)  ==>  (orig(this) has only one value)
(this.SyntaxFlag == 32000)  ==>  (this.ParentSyntax == null)
(this.SyntaxFlag == 32000)  ==>  (this.ParseMethod == null)
(this.SyntaxFlag == 32000)  ==>  (this.SyntaxName has only one value)
(this.SyntaxFlag == 32000)  ==>  (this.SyntaxName.toString == ";")
(this.SyntaxFlag == 32000)  ==>  (this.TypeMethod == null)
this.PackageNameSpace has only one value
this.PackageNameSpace != null
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ParentSyntax.ParseMethod has only one value
this.ParentSyntax.ParentSyntax has only one value
===========================================================================
org.KonohaScript.KSyntax.IsDelim():::EXIT;condition="return == true"
this.SyntaxName has only one value
this.SyntaxName.toString == ";"
this.SyntaxFlag == 32000
this.ParseMethod == null
this.TypeMethod == null
this.ParentSyntax == null
return == true
orig(this) has only one value
===========================================================================
org.KonohaScript.KSyntax.IsDelim():::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.KonohaScript.KSyntax.IsLeftJoin(org.KonohaScript.KSyntax):::ENTER
this.PackageNameSpace has only one value
this.SyntaxName.toString one of { "+", "==" }
this.SyntaxFlag one of { 8003, 12802 }
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.TypeMethod == null
this.ParentSyntax == null
arg0.PackageNameSpace has only one value
arg0.PackageNameSpace.KonohaContext has only one value
arg0.PackageNameSpace.ParentNameSpace == null
arg0.PackageNameSpace.ImportedNameSpaceList == null
arg0.PackageNameSpace.DefinedTokenMatrix has only one value
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.ImportedTokenMatrix has only one value
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.DefinedSymbolTable has only one value
arg0.PackageNameSpace.ImportedSymbolTable has only one value
arg0.SyntaxName.toString one of { "+", "==" }
arg0.SyntaxFlag one of { 8003, 12802 }
arg0.ParseObject has only one value
arg0.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.TypeObject == null
arg0.TypeMethod == null
arg0.ParentSyntax == null
size(arg0.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KSyntax.IsLeftJoin(org.KonohaScript.KSyntax):::EXIT
this.PackageNameSpace == orig(this.PackageNameSpace)
this.PackageNameSpace.KonohaContext == orig(this.PackageNameSpace.KonohaContext)
this.PackageNameSpace.KonohaContext.RootNameSpace == orig(this.PackageNameSpace.KonohaContext.RootNameSpace)
this.PackageNameSpace.KonohaContext.DefaultNameSpace == orig(this.PackageNameSpace.KonohaContext.DefaultNameSpace)
this.PackageNameSpace.KonohaContext.SymbolTable == orig(this.PackageNameSpace.KonohaContext.SymbolTable)
this.PackageNameSpace.KonohaContext.VoidType == orig(this.PackageNameSpace.KonohaContext.VoidType)
this.PackageNameSpace.KonohaContext.BooleanType == orig(this.PackageNameSpace.KonohaContext.BooleanType)
this.PackageNameSpace.ParentNameSpace == orig(this.PackageNameSpace.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.PackageNameSpace.ImportedNameSpaceList == orig(this.PackageNameSpace.ImportedNameSpaceList)
this.PackageNameSpace.DefinedTokenMatrix == orig(this.PackageNameSpace.DefinedTokenMatrix)
this.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.PackageNameSpace.DefinedTokenMatrix[] == orig(this.PackageNameSpace.DefinedTokenMatrix[])
this.PackageNameSpace.ImportedTokenMatrix == orig(this.PackageNameSpace.ImportedTokenMatrix)
this.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.PackageNameSpace.ImportedTokenMatrix[] == orig(this.PackageNameSpace.ImportedTokenMatrix[])
this.PackageNameSpace.DefinedSymbolTable == orig(this.PackageNameSpace.DefinedSymbolTable)
this.PackageNameSpace.ImportedSymbolTable == orig(this.PackageNameSpace.ImportedSymbolTable)
this.SyntaxName == orig(this.SyntaxName)
this.SyntaxName.toString == orig(this.SyntaxName.toString)
this.SyntaxFlag == orig(this.SyntaxFlag)
this.ParseObject == orig(this.ParseObject)
this.ParseObject.getClass().getName() == orig(this.ParseObject.getClass().getName())
this.ParseMethod == orig(this.ParseMethod)
this.TypeObject == orig(this.TypeObject)
this.TypeMethod == orig(this.TypeMethod)
this.ParentSyntax == orig(this.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
arg0.PackageNameSpace == orig(arg0.PackageNameSpace)
arg0.PackageNameSpace.KonohaContext == orig(arg0.PackageNameSpace.KonohaContext)
arg0.PackageNameSpace.ParentNameSpace == orig(arg0.PackageNameSpace.ParentNameSpace)
arg0.PackageNameSpace.ImportedNameSpaceList == orig(arg0.PackageNameSpace.ImportedNameSpaceList)
arg0.PackageNameSpace.DefinedTokenMatrix == orig(arg0.PackageNameSpace.DefinedTokenMatrix)
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.PackageNameSpace.DefinedTokenMatrix[] == orig(arg0.PackageNameSpace.DefinedTokenMatrix[])
arg0.PackageNameSpace.ImportedTokenMatrix == orig(arg0.PackageNameSpace.ImportedTokenMatrix)
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.PackageNameSpace.ImportedTokenMatrix[] == orig(arg0.PackageNameSpace.ImportedTokenMatrix[])
arg0.PackageNameSpace.DefinedSymbolTable == orig(arg0.PackageNameSpace.DefinedSymbolTable)
arg0.PackageNameSpace.ImportedSymbolTable == orig(arg0.PackageNameSpace.ImportedSymbolTable)
arg0.SyntaxName == orig(arg0.SyntaxName)
arg0.SyntaxName.toString == orig(arg0.SyntaxName.toString)
arg0.SyntaxFlag == orig(arg0.SyntaxFlag)
arg0.ParseObject == orig(arg0.ParseObject)
arg0.ParseObject.getClass().getName() == orig(arg0.ParseObject.getClass().getName())
arg0.ParseMethod == orig(arg0.ParseMethod)
arg0.TypeObject == orig(arg0.TypeObject)
arg0.TypeMethod == orig(arg0.TypeMethod)
arg0.ParentSyntax == orig(arg0.ParentSyntax)
(this.SyntaxName.toString == "+")  <==>  (arg0.ParseMethod == null)
(this.SyntaxName.toString == "+")  <==>  (arg0.SyntaxFlag == 12802)
(this.SyntaxName.toString == "+")  <==>  (arg0.SyntaxName.toString == "==")
(this.SyntaxName.toString == "+")  <==>  (return == true)
(this.SyntaxName.toString == "+")  <==>  (this.ParseMethod has only one value)
(this.SyntaxName.toString == "+")  <==>  (this.SyntaxFlag == 8003)
(this.SyntaxName.toString == "==")  <==>  (arg0.ParseMethod has only one value)
(this.SyntaxName.toString == "==")  <==>  (arg0.SyntaxFlag == 8003)
(this.SyntaxName.toString == "==")  <==>  (arg0.SyntaxName.toString == "+")
(this.SyntaxName.toString == "==")  <==>  (return == false)
(this.SyntaxName.toString == "==")  <==>  (this.ParseMethod == null)
(this.SyntaxName.toString == "==")  <==>  (this.SyntaxFlag == 12802)
this.PackageNameSpace has only one value
this.SyntaxName.toString one of { "+", "==" }
this.SyntaxFlag one of { 8003, 12802 }
this.ParseObject has only one value
this.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.TypeMethod == null
this.ParentSyntax == null
arg0.PackageNameSpace has only one value
arg0.PackageNameSpace.KonohaContext has only one value
arg0.PackageNameSpace.ParentNameSpace == null
arg0.PackageNameSpace.ImportedNameSpaceList == null
arg0.PackageNameSpace.DefinedTokenMatrix has only one value
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.ImportedTokenMatrix has only one value
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.DefinedSymbolTable has only one value
arg0.PackageNameSpace.ImportedSymbolTable has only one value
arg0.SyntaxName.toString one of { "+", "==" }
arg0.SyntaxFlag one of { 8003, 12802 }
arg0.ParseObject has only one value
arg0.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.TypeObject == null
arg0.TypeMethod == null
arg0.ParentSyntax == null
size(arg0.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KSyntax.IsLeftJoin(org.KonohaScript.KSyntax):::EXIT;condition="return == true"
this.SyntaxName has only one value
this.SyntaxName.toString == "+"
this.SyntaxFlag == 8003
this.ParseMethod has only one value
arg0.SyntaxName has only one value
arg0.SyntaxName.toString == "=="
arg0.SyntaxFlag == 12802
arg0.ParseMethod == null
return == true
orig(this) has only one value
orig(arg0) has only one value
===========================================================================
org.KonohaScript.KSyntax.IsLeftJoin(org.KonohaScript.KSyntax):::EXIT;condition="not(return == true)"
this.SyntaxName has only one value
this.SyntaxName.toString == "=="
this.SyntaxFlag == 12802
this.ParseMethod == null
arg0.SyntaxName has only one value
arg0.SyntaxName.toString == "+"
arg0.SyntaxFlag == 8003
arg0.ParseMethod has only one value
return == false
orig(this) has only one value
orig(arg0) has only one value
===========================================================================
org.KonohaScript.KSyntax.KSyntax(java.lang.String, int, java.lang.Object, java.lang.String, java.lang.String):::ENTER
arg0 != null
arg1 >= 1
arg2 != null
===========================================================================
org.KonohaScript.KSyntax.KSyntax(java.lang.String, int, java.lang.Object, java.lang.String, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg3.toString == orig(arg3.toString)
arg4.toString == orig(arg4.toString)
this.PackageNameSpace == null
this.ParentSyntax == null
===========================================================================
org.KonohaScript.KToken:::CLASS
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab != null
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
===========================================================================
org.KonohaScript.KToken:::OBJECT
this.uline >= 0
this.ParsedText != null
this.flag one of { 0, 1, 2 }
this.ResolvedSyntax.PackageNameSpace.KonohaContext has only one value
this.ResolvedSyntax.PackageNameSpace.KonohaContext != null
this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == null
this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == null
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix has only one value
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix != null
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix has only one value
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix != null
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable has only one value
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable != null
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable has only one value
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.ResolvedSyntax.SyntaxName != null
this.ResolvedSyntax.SyntaxFlag >= 1
this.ResolvedSyntax.ParseObject != null
this.ResolvedSyntax.TypeObject == null
this.ResolvedSyntax.ParentSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.ParentSyntax.PackageNameSpace != null
this.ResolvedSyntax.ParentSyntax.SyntaxName has only one value
this.ResolvedSyntax.ParentSyntax.SyntaxName != null
this.ResolvedSyntax.ParentSyntax.SyntaxName.toString == "$Type"
this.ResolvedSyntax.ParentSyntax.SyntaxFlag == 1
this.ResolvedSyntax.ParentSyntax.ParseObject has only one value
this.ResolvedSyntax.ParentSyntax.ParseObject != null
this.ResolvedSyntax.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParentSyntax.ParseMethod has only one value
this.ResolvedSyntax.ParentSyntax.ParseMethod != null
this.ResolvedSyntax.ParentSyntax.TypeObject == null
this.ResolvedSyntax.ParentSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax.ParentSyntax has only one value
this.ResolvedSyntax.ParentSyntax.ParentSyntax != null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject != null
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName != null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject != null
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod != null
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName != null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject != null
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod != null
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName != null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject != null
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod != null
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject != null
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName != null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject != null
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod != null
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
size(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KToken.Dump(int):::ENTER
this.uline >= 2
this.flag one of { 0, 2 }
arg0 one of { 1, 2, 3 }
===========================================================================
org.KonohaScript.KToken.Dump(int):::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
this.flag == orig(this.flag)
this.ResolvedSyntax == orig(this.ResolvedSyntax)
this.ResolvedSyntax.PackageNameSpace == orig(this.ResolvedSyntax.PackageNameSpace)
this.ResolvedSyntax.PackageNameSpace.KonohaContext == orig(this.ResolvedSyntax.PackageNameSpace.KonohaContext)
this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == orig(this.ResolvedSyntax.PackageNameSpace.ParentNameSpace)
this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable)
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ResolvedSyntax.SyntaxName == orig(this.ResolvedSyntax.SyntaxName)
this.ResolvedSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.SyntaxName.toString)
this.ResolvedSyntax.SyntaxFlag == orig(this.ResolvedSyntax.SyntaxFlag)
this.ResolvedSyntax.ParseObject == orig(this.ResolvedSyntax.ParseObject)
this.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParseMethod == orig(this.ResolvedSyntax.ParseMethod)
this.ResolvedSyntax.TypeObject == orig(this.ResolvedSyntax.TypeObject)
this.ResolvedSyntax.TypeMethod == orig(this.ResolvedSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax)
this.ResolvedSyntax.ParentSyntax.PackageNameSpace == orig(this.ResolvedSyntax.ParentSyntax.PackageNameSpace)
this.ResolvedSyntax.ParentSyntax.SyntaxName == orig(this.ResolvedSyntax.ParentSyntax.SyntaxName)
this.ResolvedSyntax.ParentSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.ParentSyntax.SyntaxName.toString)
this.ResolvedSyntax.ParentSyntax.SyntaxFlag == orig(this.ResolvedSyntax.ParentSyntax.SyntaxFlag)
this.ResolvedSyntax.ParentSyntax.ParseObject == orig(this.ResolvedSyntax.ParentSyntax.ParseObject)
this.ResolvedSyntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParentSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParentSyntax.ParseMethod == orig(this.ResolvedSyntax.ParentSyntax.ParseMethod)
this.ResolvedSyntax.ParentSyntax.TypeObject == orig(this.ResolvedSyntax.ParentSyntax.TypeObject)
this.ResolvedSyntax.ParentSyntax.TypeMethod == orig(this.ResolvedSyntax.ParentSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.ResolvedObject == orig(this.ResolvedObject)
this.ResolvedObject.getClass().getName() == orig(this.ResolvedObject.getClass().getName())
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.uline >= 2
this.flag one of { 0, 2 }
===========================================================================
org.KonohaScript.KToken.DumpTokenList(int, java.lang.String, java.util.ArrayList, int, int):::ENTER
arg0 one of { 0, 2, 3 }
arg1.toString one of { "ParseNewNode2", "ParseVarDecl" }
arg2 != null
arg2[] elements != null
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 >= 0
===========================================================================
org.KonohaScript.KToken.DumpTokenList(int, java.lang.String, java.util.ArrayList, int, int):::EXIT
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg1.toString == orig(arg1.toString)
arg2[] == orig(arg2[])
arg1.toString one of { "ParseNewNode2", "ParseVarDecl" }
arg2[] elements != null
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
===========================================================================
org.KonohaScript.KToken.EqualsText(java.lang.String):::ENTER
this.flag one of { 0, 2 }
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "()"
this.ResolvedSyntax.SyntaxFlag == 1601
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod == null
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject.getClass().getName() == java.util.ArrayList.class
arg0 != null
===========================================================================
org.KonohaScript.KToken.EqualsText(java.lang.String):::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
this.flag == orig(this.flag)
this.ResolvedSyntax == orig(this.ResolvedSyntax)
this.ResolvedSyntax.PackageNameSpace == orig(this.ResolvedSyntax.PackageNameSpace)
this.ResolvedSyntax.PackageNameSpace.KonohaContext == orig(this.ResolvedSyntax.PackageNameSpace.KonohaContext)
this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == orig(this.ResolvedSyntax.PackageNameSpace.ParentNameSpace)
this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable)
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ResolvedSyntax.SyntaxName == orig(this.ResolvedSyntax.SyntaxName)
this.ResolvedSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.SyntaxName.toString)
this.ResolvedSyntax.SyntaxFlag == orig(this.ResolvedSyntax.SyntaxFlag)
this.ResolvedSyntax.ParseObject == orig(this.ResolvedSyntax.ParseObject)
this.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParseMethod == orig(this.ResolvedSyntax.ParseMethod)
this.ResolvedSyntax.TypeObject == orig(this.ResolvedSyntax.TypeObject)
this.ResolvedSyntax.TypeMethod == orig(this.ResolvedSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.ResolvedObject == orig(this.ResolvedObject)
this.ResolvedObject.getClass().getName() == orig(this.ResolvedObject.getClass().getName())
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.toString == orig(arg0.toString)
(this.flag == 0)  <==>  (return == true)
(this.flag == 0)  <==>  (this.ResolvedObject == null)
(this.flag == 0)  <==>  (this.ResolvedSyntax == null)
(this.flag == 2)  <==>  (return == false)
(this.flag == 2)  <==>  (this.ResolvedObject has only one value)
(this.flag == 2)  <==>  (this.ResolvedSyntax has only one value)
(this.flag == 2)  ==>  (arg0.toString one of { "()", ",", "=" })
(this.flag == 2)  ==>  (orig(this) has only one value)
(this.flag == 2)  ==>  (this.ParsedText has only one value)
(this.flag == 2)  ==>  (this.ParsedText.toString == "( ... )")
(this.flag == 2)  ==>  (this.ResolvedObject.getClass().getName() == java.util.ArrayList.class)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject])
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null])
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject])
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null])
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.KonohaContext has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParentSyntax == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParseMethod == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParseObject has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class)
(this.flag == 2)  ==>  (this.ResolvedSyntax.SyntaxName has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.SyntaxName.toString == "()")
(this.flag == 2)  ==>  (this.ResolvedSyntax.TypeMethod == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.TypeObject == null)
(this.flag == 2)  ==>  (this.uline == 1000)
this.flag one of { 0, 2 }
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "()"
this.ResolvedSyntax.SyntaxFlag == 1601
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod == null
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.KonohaScript.KToken.EqualsText(java.lang.String):::EXIT;condition="return == true"
this.flag == 0
this.ResolvedSyntax == null
this.ResolvedObject == null
return == true
===========================================================================
org.KonohaScript.KToken.EqualsText(java.lang.String):::EXIT;condition="not(return == true)"
this.uline == 1000
this.ParsedText has only one value
this.ParsedText.toString == "( ... )"
this.flag == 2
this.ResolvedSyntax has only one value
this.ResolvedObject has only one value
arg0.toString one of { "()", ",", "=" }
return == false
orig(this) has only one value
===========================================================================
org.KonohaScript.KToken.GetGroupList():::ENTER
this.uline one of { 1000, 1001, 1002 }
this.ParsedText.toString one of { "( ... )", "{ ... }" }
this.flag == 2
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "()"
this.ResolvedSyntax.SyntaxFlag == 1601
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod == null
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.KonohaScript.KToken.GetGroupList():::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
this.flag == orig(this.flag)
this.ResolvedSyntax == orig(this.ResolvedSyntax)
this.ResolvedSyntax.PackageNameSpace == orig(this.ResolvedSyntax.PackageNameSpace)
this.ResolvedSyntax.PackageNameSpace.KonohaContext == orig(this.ResolvedSyntax.PackageNameSpace.KonohaContext)
this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == orig(this.ResolvedSyntax.PackageNameSpace.ParentNameSpace)
this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable)
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ResolvedSyntax.SyntaxName == orig(this.ResolvedSyntax.SyntaxName)
this.ResolvedSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.SyntaxName.toString)
this.ResolvedSyntax.SyntaxFlag == orig(this.ResolvedSyntax.SyntaxFlag)
this.ResolvedSyntax.ParseObject == orig(this.ResolvedSyntax.ParseObject)
this.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParseMethod == orig(this.ResolvedSyntax.ParseMethod)
this.ResolvedSyntax.TypeObject == orig(this.ResolvedSyntax.TypeObject)
this.ResolvedSyntax.TypeMethod == orig(this.ResolvedSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.ResolvedObject == orig(this.ResolvedObject)
this.ResolvedObject.getClass().getName() == orig(this.ResolvedObject.getClass().getName())
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.uline one of { 1000, 1001, 1002 }
this.ParsedText.toString one of { "( ... )", "{ ... }" }
this.flag == 2
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "()"
this.ResolvedSyntax.SyntaxFlag == 1601
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod == null
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject.getClass().getName() == java.util.ArrayList.class
return[].getClass().getName() elements == org.KonohaScript.KToken.class
size(return[]) one of { 4, 5, 17 }
===========================================================================
org.KonohaScript.KToken.IsErrorToken():::ENTER
this has only one value
this.uline == 1000
this.ParsedText has only one value
this.ParsedText.toString == "fibo"
this.flag == 0
this.ResolvedSyntax has only one value
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "$Symbol"
this.ResolvedSyntax.SyntaxFlag == 1
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod has only one value
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject == null
===========================================================================
org.KonohaScript.KToken.IsErrorToken():::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
this.flag == orig(this.flag)
this.ResolvedSyntax == orig(this.ResolvedSyntax)
this.ResolvedSyntax.PackageNameSpace == orig(this.ResolvedSyntax.PackageNameSpace)
this.ResolvedSyntax.PackageNameSpace.KonohaContext == orig(this.ResolvedSyntax.PackageNameSpace.KonohaContext)
this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == orig(this.ResolvedSyntax.PackageNameSpace.ParentNameSpace)
this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable)
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ResolvedSyntax.SyntaxName == orig(this.ResolvedSyntax.SyntaxName)
this.ResolvedSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.SyntaxName.toString)
this.ResolvedSyntax.SyntaxFlag == orig(this.ResolvedSyntax.SyntaxFlag)
this.ResolvedSyntax.ParseObject == orig(this.ResolvedSyntax.ParseObject)
this.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParseMethod == orig(this.ResolvedSyntax.ParseMethod)
this.ResolvedSyntax.TypeObject == orig(this.ResolvedSyntax.TypeObject)
this.ResolvedSyntax.TypeMethod == orig(this.ResolvedSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.ResolvedObject == orig(this.ResolvedObject)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.uline == 1000
this.ParsedText has only one value
this.ParsedText.toString == "fibo"
this.flag == 0
this.ResolvedSyntax has only one value
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "$Symbol"
this.ResolvedSyntax.SyntaxFlag == 1
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod has only one value
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject == null
return == false
===========================================================================
org.KonohaScript.KToken.IsErrorToken():::EXIT;condition="not(return == true)"
===========================================================================
org.KonohaScript.KToken.IsGroupToken():::ENTER
this.uline >= 2
this.flag one of { 0, 2 }
===========================================================================
org.KonohaScript.KToken.IsGroupToken():::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
this.flag == orig(this.flag)
this.ResolvedSyntax == orig(this.ResolvedSyntax)
this.ResolvedSyntax.PackageNameSpace == orig(this.ResolvedSyntax.PackageNameSpace)
this.ResolvedSyntax.PackageNameSpace.KonohaContext == orig(this.ResolvedSyntax.PackageNameSpace.KonohaContext)
this.ResolvedSyntax.PackageNameSpace.ParentNameSpace == orig(this.ResolvedSyntax.PackageNameSpace.ParentNameSpace)
this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList == orig(this.ResolvedSyntax.PackageNameSpace.ImportedNameSpaceList)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.DefinedTokenMatrix[])
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix)
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.ResolvedSyntax.PackageNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.DefinedSymbolTable)
this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable == orig(this.ResolvedSyntax.PackageNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ResolvedSyntax.SyntaxName == orig(this.ResolvedSyntax.SyntaxName)
this.ResolvedSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.SyntaxName.toString)
this.ResolvedSyntax.SyntaxFlag == orig(this.ResolvedSyntax.SyntaxFlag)
this.ResolvedSyntax.ParseObject == orig(this.ResolvedSyntax.ParseObject)
this.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParseMethod == orig(this.ResolvedSyntax.ParseMethod)
this.ResolvedSyntax.TypeObject == orig(this.ResolvedSyntax.TypeObject)
this.ResolvedSyntax.TypeMethod == orig(this.ResolvedSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax)
this.ResolvedSyntax.ParentSyntax.PackageNameSpace == orig(this.ResolvedSyntax.ParentSyntax.PackageNameSpace)
this.ResolvedSyntax.ParentSyntax.SyntaxName == orig(this.ResolvedSyntax.ParentSyntax.SyntaxName)
this.ResolvedSyntax.ParentSyntax.SyntaxName.toString == orig(this.ResolvedSyntax.ParentSyntax.SyntaxName.toString)
this.ResolvedSyntax.ParentSyntax.SyntaxFlag == orig(this.ResolvedSyntax.ParentSyntax.SyntaxFlag)
this.ResolvedSyntax.ParentSyntax.ParseObject == orig(this.ResolvedSyntax.ParentSyntax.ParseObject)
this.ResolvedSyntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.ResolvedSyntax.ParentSyntax.ParseObject.getClass().getName())
this.ResolvedSyntax.ParentSyntax.ParseMethod == orig(this.ResolvedSyntax.ParentSyntax.ParseMethod)
this.ResolvedSyntax.ParentSyntax.TypeObject == orig(this.ResolvedSyntax.ParentSyntax.TypeObject)
this.ResolvedSyntax.ParentSyntax.TypeMethod == orig(this.ResolvedSyntax.ParentSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.ResolvedObject == orig(this.ResolvedObject)
this.ResolvedObject.getClass().getName() == orig(this.ResolvedObject.getClass().getName())
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
(this.flag == 0)  <==>  (return == false)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.PackageNameSpace has only one value)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.ParentSyntax has only one value)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.ParseMethod has only one value)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.ParseObject has only one value)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.SyntaxName has only one value)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.SyntaxName.toString == "$Type")
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.TypeMethod == null)
(this.flag == 0)  ==>  (this.ResolvedSyntax.ParentSyntax.TypeObject == null)
(this.flag == 0)  ==>  (this.ResolvedSyntax.SyntaxFlag >= 1)
(this.flag == 0)  ==>  (this.uline >= 2)
(this.flag == 2)  <==>  (return == true)
(this.flag == 2)  ==>  (this.ParsedText.toString one of { "( ... )", "{ ... }" })
(this.flag == 2)  ==>  (this.ResolvedObject != null)
(this.flag == 2)  ==>  (this.ResolvedObject.getClass().getName() == java.util.ArrayList.class)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace != null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.PackageNameSpace has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParentSyntax == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParseMethod == null)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParseObject has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class)
(this.flag == 2)  ==>  (this.ResolvedSyntax.SyntaxFlag == 1601)
(this.flag == 2)  ==>  (this.ResolvedSyntax.SyntaxName has only one value)
(this.flag == 2)  ==>  (this.ResolvedSyntax.SyntaxName.toString == "()")
(this.flag == 2)  ==>  (this.ResolvedSyntax.TypeMethod == null)
(this.flag == 2)  ==>  (this.uline one of { 1000, 1001, 1002 })
this.uline >= 2
this.flag one of { 0, 2 }
===========================================================================
org.KonohaScript.KToken.IsGroupToken():::EXIT;condition="return == true"
this.uline one of { 1000, 1001, 1002 }
this.ParsedText.toString one of { "( ... )", "{ ... }" }
this.flag == 2
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.PackageNameSpace != null
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "()"
this.ResolvedSyntax.SyntaxFlag == 1601
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod == null
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject != null
this.ResolvedObject.getClass().getName() == java.util.ArrayList.class
return == true
===========================================================================
org.KonohaScript.KToken.IsGroupToken():::EXIT;condition="not(return == true)"
this.flag == 0
return == false
===========================================================================
org.KonohaScript.KToken.KToken(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.KonohaScript.KToken.KToken(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.uline == 0
this.flag == 0
this.ResolvedSyntax == null
this.ResolvedObject == null
===========================================================================
org.KonohaScript.KToken.KToken(java.lang.String, long):::ENTER
arg0.toString one of { "( ... )", "{ ... }" }
arg1 one of { 1000, 1001, 1002 }
===========================================================================
org.KonohaScript.KToken.KToken(java.lang.String, long):::EXIT
arg0.toString == orig(arg0.toString)
this.uline one of { 1000, 1001, 1002 }
this.ParsedText.toString one of { "( ... )", "{ ... }" }
this.flag == 0
this.ResolvedSyntax == null
this.ResolvedObject == null
arg0.toString one of { "( ... )", "{ ... }" }
===========================================================================
org.KonohaScript.KToken.SetErrorMessage(java.lang.String):::ENTER
this has only one value
this.uline == 1000
this.ParsedText has only one value
this.ParsedText.toString == "fibo"
this.flag == 0
this.ResolvedSyntax has only one value
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "$Symbol"
this.ResolvedSyntax.SyntaxFlag == 1
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod has only one value
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject == null
arg0 has only one value
arg0.toString == "(error) (eval:1000) () is expected after fibo"
===========================================================================
org.KonohaScript.KToken.SetErrorMessage(java.lang.String):::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ResolvedSyntax.TypeObject == orig(this.ResolvedSyntax.TypeObject)
this.ResolvedSyntax.TypeMethod == orig(this.ResolvedSyntax.TypeMethod)
this.ResolvedSyntax.ParentSyntax == orig(this.ResolvedSyntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.toString == orig(arg0.toString)
this.uline == 1000
this.ParsedText has only one value
this.ParsedText.toString == "fibo"
this.flag == 1
this.ResolvedSyntax has only one value
this.ResolvedSyntax.PackageNameSpace == null
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "$Error"
this.ResolvedSyntax.SyntaxFlag == 27200
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
this.ResolvedSyntax.ParseMethod has only one value
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject has only one value
this.ResolvedObject.getClass().getName() == java.lang.String.class
arg0.toString == "(error) (eval:1000) () is expected after fibo"
return has only one value
return.toString == "(error) (eval:1000) () is expected after fibo"
===========================================================================
org.KonohaScript.KToken.SetGroup(org.KonohaScript.KSyntax, java.util.ArrayList):::ENTER
this.uline one of { 1000, 1001, 1002 }
this.ParsedText.toString one of { "( ... )", "{ ... }" }
this.flag == 0
this.ResolvedSyntax == null
this.ResolvedObject == null
arg0.PackageNameSpace has only one value
arg0.PackageNameSpace.KonohaContext has only one value
arg0.PackageNameSpace.ParentNameSpace == null
arg0.PackageNameSpace.ImportedNameSpaceList == null
arg0.PackageNameSpace.DefinedTokenMatrix has only one value
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.ImportedTokenMatrix has only one value
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.DefinedSymbolTable has only one value
arg0.PackageNameSpace.ImportedSymbolTable has only one value
arg0.SyntaxName has only one value
arg0.SyntaxName.toString == "()"
arg0.SyntaxFlag == 1601
arg0.ParseObject has only one value
arg0.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ParseMethod == null
arg0.TypeObject == null
arg0.TypeMethod == null
arg0.ParentSyntax == null
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.PackageNameSpace.ImportedTokenMatrix[]) == 41
size(arg1[]) one of { 4, 5, 17 }
===========================================================================
org.KonohaScript.KToken.SetGroup(org.KonohaScript.KSyntax, java.util.ArrayList):::EXIT
this.uline == orig(this.uline)
this.ParsedText == orig(this.ParsedText)
this.ParsedText.toString == orig(this.ParsedText.toString)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.PackageNameSpace == orig(arg0.PackageNameSpace)
arg0.PackageNameSpace.KonohaContext == orig(arg0.PackageNameSpace.KonohaContext)
arg0.PackageNameSpace.ParentNameSpace == orig(arg0.PackageNameSpace.ParentNameSpace)
arg0.PackageNameSpace.ImportedNameSpaceList == orig(arg0.PackageNameSpace.ImportedNameSpaceList)
arg0.PackageNameSpace.DefinedTokenMatrix == orig(arg0.PackageNameSpace.DefinedTokenMatrix)
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.PackageNameSpace.DefinedTokenMatrix[] == orig(arg0.PackageNameSpace.DefinedTokenMatrix[])
arg0.PackageNameSpace.ImportedTokenMatrix == orig(arg0.PackageNameSpace.ImportedTokenMatrix)
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.PackageNameSpace.ImportedTokenMatrix[] == orig(arg0.PackageNameSpace.ImportedTokenMatrix[])
arg0.PackageNameSpace.DefinedSymbolTable == orig(arg0.PackageNameSpace.DefinedSymbolTable)
arg0.PackageNameSpace.ImportedSymbolTable == orig(arg0.PackageNameSpace.ImportedSymbolTable)
arg0.SyntaxName == orig(arg0.SyntaxName)
arg0.SyntaxName.toString == orig(arg0.SyntaxName.toString)
arg0.SyntaxFlag == orig(arg0.SyntaxFlag)
arg0.ParseObject == orig(arg0.ParseObject)
arg0.ParseObject.getClass().getName() == orig(arg0.ParseObject.getClass().getName())
arg0.ParseMethod == orig(arg0.ParseMethod)
arg0.TypeObject == orig(arg0.TypeObject)
arg0.TypeMethod == orig(arg0.TypeMethod)
arg0.ParentSyntax == orig(arg0.ParentSyntax)
arg1[] == orig(arg1[])
this.uline one of { 1000, 1001, 1002 }
this.ParsedText.toString one of { "( ... )", "{ ... }" }
this.flag == 2
this.ResolvedSyntax.PackageNameSpace has only one value
this.ResolvedSyntax.SyntaxName has only one value
this.ResolvedSyntax.SyntaxName.toString == "()"
this.ResolvedSyntax.SyntaxFlag == 1601
this.ResolvedSyntax.ParseObject has only one value
this.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.ResolvedSyntax.ParseMethod == null
this.ResolvedSyntax.TypeMethod == null
this.ResolvedSyntax.ParentSyntax == null
this.ResolvedObject.getClass().getName() == java.util.ArrayList.class
arg0.PackageNameSpace has only one value
arg0.PackageNameSpace.KonohaContext has only one value
arg0.PackageNameSpace.ParentNameSpace == null
arg0.PackageNameSpace.ImportedNameSpaceList == null
arg0.PackageNameSpace.DefinedTokenMatrix has only one value
arg0.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.ImportedTokenMatrix has only one value
arg0.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.PackageNameSpace.DefinedSymbolTable has only one value
arg0.PackageNameSpace.ImportedSymbolTable has only one value
arg0.SyntaxName has only one value
arg0.SyntaxName.toString == "()"
arg0.SyntaxFlag == 1601
arg0.ParseObject has only one value
arg0.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ParseMethod == null
arg0.TypeObject == null
arg0.TypeMethod == null
arg0.ParentSyntax == null
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.KTokenizer:::OBJECT
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName()
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == this.ns.ImportedTokenMatrix.getClass().getName()
this.ns.DefinedTokenMatrix.getClass().getName() == this.ns.ImportedTokenMatrix.getClass().getName()
this.ns != null
this.ns.KonohaContext has only one value
this.ns.KonohaContext != null
this.ns.KonohaContext.RootNameSpace has only one value
this.ns.KonohaContext.RootNameSpace != null
this.ns.KonohaContext.SymbolTable has only one value
this.ns.KonohaContext.SymbolTable != null
this.ns.KonohaContext.VoidType has only one value
this.ns.KonohaContext.VoidType != null
this.ns.KonohaContext.BooleanType has only one value
this.ns.KonohaContext.BooleanType != null
this.ns.ParentNameSpace.KonohaContext has only one value
this.ns.ParentNameSpace.KonohaContext != null
this.ns.ParentNameSpace.ParentNameSpace == null
this.ns.ParentNameSpace.ImportedNameSpaceList == null
this.ns.ParentNameSpace.DefinedTokenMatrix has only one value
this.ns.ParentNameSpace.DefinedTokenMatrix != null
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.ns.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ns.ParentNameSpace.ImportedTokenMatrix has only one value
this.ns.ParentNameSpace.ImportedTokenMatrix != null
this.ns.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.ns.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
this.ns.ParentNameSpace.DefinedSymbolTable has only one value
this.ns.ParentNameSpace.DefinedSymbolTable != null
this.ns.ParentNameSpace.ImportedSymbolTable has only one value
this.ns.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.ns.ImportedNameSpaceList == null
this.ns.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.DefinedTokenMatrix[] has only one value, of length 41
this.ns.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ns.ImportedTokenMatrix != null
this.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ns.ImportedSymbolTable != null
this.SourceText != null
this.CurrentLine >= 0
this.SourceList != null
this.SourceList[] elements != null
this.SourceList[].getClass().getName() elements == org.KonohaScript.KToken.class
size(this.ns.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(this.ns.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(this.ns.DefinedTokenMatrix[]) == 41
size(this.ns.ImportedTokenMatrix[]) == 41
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in this.ns.DefinedTokenMatrix[].getClass().getName()
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in this.ns.DefinedTokenMatrix[].callee.getClass().getName()
this.ns.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.DefinedTokenMatrix[].getClass().getName()
this.ns.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName()
this.ns.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.ImportedTokenMatrix[].getClass().getName()
this.ns.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName()
===========================================================================
org.KonohaScript.KTokenizer.DispatchFunc(int, int):::ENTER
this.ns.DefinedTokenMatrix[].getClass().getName() == this.ns.ImportedTokenMatrix[].getClass().getName()
arg0 >= 2
arg1 >= 0
this.ns.ImportedTokenMatrix[arg0] != null
this.ns.DefinedTokenMatrix[] == this.ns.ImportedTokenMatrix[] (elementwise)
this.ns.ImportedTokenMatrix[arg0] in this.ns.DefinedTokenMatrix[]
this.ns.ImportedTokenMatrix[arg0-1] in this.ns.DefinedTokenMatrix[]
this.ns.DefinedTokenMatrix[arg0] in this.ns.ImportedTokenMatrix[]
this.ns.DefinedTokenMatrix[arg0-1] in this.ns.ImportedTokenMatrix[]
size(this.ns.DefinedTokenMatrix[])-1 % arg0 == 0
arg0 < size(this.ns.ImportedTokenMatrix[])-1
===========================================================================
org.KonohaScript.KTokenizer.DispatchFunc(int, int):::EXIT273
===========================================================================
org.KonohaScript.KTokenizer.DispatchFunc(int, int):::EXIT
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.DefinedTokenMatrix.getClass().getName() == orig(this.ns.DefinedTokenMatrix.getClass().getName())
this.ns.DefinedTokenMatrix[] == orig(this.ns.DefinedTokenMatrix[])
this.ns.DefinedTokenMatrix[].getClass().getName() == this.ns.ImportedTokenMatrix[].getClass().getName()
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
this.SourceText == orig(this.SourceText)
this.SourceText.toString == orig(this.SourceText.toString)
this.SourceList == orig(this.SourceList)
size(this.SourceList[]) >= 1
this.ns.ImportedTokenMatrix[orig(arg0)] != null
this.ns.DefinedTokenMatrix[] == this.ns.ImportedTokenMatrix[] (elementwise)
this.ns.ImportedTokenMatrix[orig(arg0)] in this.ns.DefinedTokenMatrix[]
this.ns.ImportedTokenMatrix[orig(arg0)-1] in this.ns.DefinedTokenMatrix[]
this.ns.DefinedTokenMatrix[orig(arg0)] in this.ns.ImportedTokenMatrix[]
this.ns.DefinedTokenMatrix[orig(arg0)-1] in this.ns.ImportedTokenMatrix[]
this.CurrentLine >= orig(this.CurrentLine)
size(this.ns.DefinedTokenMatrix[])-1 % orig(arg0) == 0
orig(arg0) < size(this.ns.ImportedTokenMatrix[])-1
size(this.SourceList[]) >= orig(size(this.SourceList[]))
size(this.SourceList[])-1 <= orig(size(this.SourceList[]))
size(this.SourceList[])-1 >= orig(size(this.SourceList[]))-1
===========================================================================
org.KonohaScript.KTokenizer.KTokenizer(org.KonohaScript.KNameSpace, java.lang.String, long):::ENTER
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == arg0.ImportedTokenMatrix.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() == arg0.ImportedTokenMatrix.getClass().getName()
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg2 one of { 0, 2, 1000 }
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in arg0.DefinedTokenMatrix[].getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in arg0.DefinedTokenMatrix[].callee.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName()
===========================================================================
org.KonohaScript.KTokenizer.KTokenizer(org.KonohaScript.KNameSpace, java.lang.String, long):::EXIT
this.ns == orig(arg0)
this.ns.KonohaContext == arg0.KonohaContext
this.ns.KonohaContext.RootNameSpace == arg0.KonohaContext.RootNameSpace
this.ns.KonohaContext.SymbolTable == arg0.KonohaContext.SymbolTable
this.ns.KonohaContext.VoidType == arg0.KonohaContext.VoidType
this.ns.KonohaContext.BooleanType == arg0.KonohaContext.BooleanType
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName()
this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName()
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.DefinedTokenMatrix == arg0.DefinedTokenMatrix
this.ns.DefinedTokenMatrix.getClass().getName() == arg0.DefinedTokenMatrix.getClass().getName()
this.ns.ImportedTokenMatrix == arg0.ImportedTokenMatrix
this.ns.ImportedTokenMatrix.getClass().getName() == arg0.ImportedTokenMatrix.getClass().getName()
this.ns.DefinedSymbolTable == arg0.DefinedSymbolTable
this.ns.ImportedSymbolTable == arg0.ImportedSymbolTable
this.SourceText == orig(arg1)
this.CurrentLine == orig(arg2)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == arg0.ImportedTokenMatrix.getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == arg0.ImportedTokenMatrix.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.toString == orig(arg1.toString)
this.CurrentLine one of { 0, 2, 1000 }
this.SourceList[] == []
this.SourceList[].getClass().getName() == []
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
arg0.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.DefinedTokenMatrix[].getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.ImportedTokenMatrix[].getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in this.ns.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in this.ns.DefinedTokenMatrix[].getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in this.ns.DefinedTokenMatrix[].callee.getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in arg0.DefinedTokenMatrix[].getClass().getName()
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() in arg0.DefinedTokenMatrix[].callee.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName()
arg0.DefinedTokenMatrix.getClass().getName() in arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName()
===========================================================================
org.KonohaScript.KTokenizer.StampLine(int):::ENTER
arg0 >= 0
size(this.SourceList[]) >= 1
===========================================================================
org.KonohaScript.KTokenizer.StampLine(int):::EXIT
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.DefinedTokenMatrix.getClass().getName() == orig(this.ns.DefinedTokenMatrix.getClass().getName())
this.ns.DefinedTokenMatrix[] == orig(this.ns.DefinedTokenMatrix[])
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
this.SourceText == orig(this.SourceText)
this.SourceText.toString == orig(this.SourceText.toString)
this.SourceList == orig(this.SourceList)
this.SourceList[] == orig(this.SourceList[])
return >= 1
size(this.SourceList[]) >= 1
this.CurrentLine >= orig(this.CurrentLine)
return >= orig(arg0)
===========================================================================
org.KonohaScript.KTokenizer.Tokenize():::ENTER
this.CurrentLine one of { 0, 2, 1000 }
this.SourceList[] == []
this.SourceList[].getClass().getName() == []
===========================================================================
org.KonohaScript.KTokenizer.Tokenize():::EXIT
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.DefinedTokenMatrix.getClass().getName() == orig(this.ns.DefinedTokenMatrix.getClass().getName())
this.ns.DefinedTokenMatrix[] == orig(this.ns.DefinedTokenMatrix[])
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
this.SourceText == orig(this.SourceText)
this.SourceText.toString == orig(this.SourceText.toString)
this.SourceList == return
return == orig(this.SourceList)
this.CurrentLine one of { 0, 2, 1003 }
return[].getClass().getName() elements == org.KonohaScript.KToken.class
===========================================================================
org.KonohaScript.KTokenizer.TokenizeFirstToken(java.util.ArrayList):::ENTER
this.SourceList == arg0
this.CurrentLine one of { 0, 2, 1000 }
this.SourceList[] == []
this.SourceList[].getClass().getName() == []
arg0[] == []
arg0[].getClass().getName() == []
===========================================================================
org.KonohaScript.KTokenizer.TokenizeFirstToken(java.util.ArrayList):::EXIT
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.DefinedTokenMatrix.getClass().getName() == orig(this.ns.DefinedTokenMatrix.getClass().getName())
this.ns.DefinedTokenMatrix[] == orig(this.ns.DefinedTokenMatrix[])
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
this.SourceText == orig(this.SourceText)
this.SourceText.toString == orig(this.SourceText.toString)
this.CurrentLine == orig(this.CurrentLine)
this.SourceList == orig(this.SourceList)
this.SourceList == orig(arg0)
this.SourceList[] == orig(this.SourceList[])
arg0[] == orig(arg0[])
this.CurrentLine one of { 0, 2, 1000 }
this.SourceList[] == []
this.SourceList[].getClass().getName() == []
arg0[] == []
arg0[].getClass().getName() == []
return == 0
===========================================================================
org.KonohaScript.Konoha:::OBJECT
this == this.RootNameSpace.KonohaContext
this == this.VoidType.KonohaContext
this == this.BooleanType.KonohaContext
this.RootNameSpace == this.RootNameSpace.KonohaContext.RootNameSpace
this.RootNameSpace == this.VoidType.KonohaContext.RootNameSpace
this.RootNameSpace == this.BooleanType.KonohaContext.RootNameSpace
this.RootNameSpace.KonohaContext == this.VoidType.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.KonohaContext
this.RootNameSpace.KonohaContext.SymbolTable == this.SymbolTable
this.RootNameSpace.KonohaContext.VoidType == this.VoidType
this.RootNameSpace.KonohaContext.BooleanType == this.BooleanType
this.RootNameSpace.DefinedTokenMatrix.getClass().getName() == this.DefaultNameSpace.ImportedTokenMatrix.getClass().getName()
this.SymbolTable == this.VoidType.KonohaContext.SymbolTable
this.SymbolTable == this.BooleanType.KonohaContext.SymbolTable
this.VoidType == this.VoidType.BaseClass
this.VoidType == this.BooleanType.KonohaContext.VoidType
this.VoidType.KonohaContext == this.VoidType.BaseClass.KonohaContext
this.VoidType.KonohaContext == this.VoidType.SuperClass.KonohaContext
this.VoidType.KonohaContext == this.BooleanType.KonohaContext
this.VoidType.KonohaContext.RootNameSpace == this.BooleanType.KonohaContext.RootNameSpace
this.VoidType.KonohaContext.SymbolTable == this.BooleanType.KonohaContext.SymbolTable
this.VoidType.KonohaContext.VoidType == this.VoidType.BaseClass
this.VoidType.KonohaContext.BooleanType == this.BooleanType
this.VoidType.KonohaContext.BooleanType == this.BooleanType.BaseClass
this.VoidType.ClassFlag == this.VoidType.BaseClass.ClassFlag
this.VoidType.ShortClassName == this.VoidType.BaseClass.ShortClassName
this.VoidType.BaseClass == this.VoidType.BaseClass.BaseClass
this.VoidType.BaseClass == this.BooleanType.KonohaContext.VoidType
this.VoidType.BaseClass.SuperClass == this.VoidType.SuperClass
this.VoidType.BaseClass.ClassMethodList == this.VoidType.ClassMethodList
this.VoidType.BaseClass.HostedClassInfo == this.VoidType.HostedClassInfo
this.VoidType.SuperClass == this.VoidType.SuperClass.BaseClass
this.VoidType.SuperClass == this.BooleanType.SuperClass
this.VoidType.SuperClass.ClassFlag == this.BooleanType.SuperClass.ClassFlag
this.VoidType.SuperClass.ShortClassName == this.BooleanType.SuperClass.ShortClassName
this.VoidType.SuperClass.ClassMethodList == this.VoidType.ClassMethodList
this.VoidType.SuperClass.HostedClassInfo == this.BooleanType.SuperClass.HostedClassInfo
this.VoidType.ClassMethodList == this.BooleanType.ClassMethodList
this.BooleanType == this.BooleanType.BaseClass
this.BooleanType.KonohaContext == this.BooleanType.BaseClass.KonohaContext
this.BooleanType.KonohaContext == this.BooleanType.SuperClass.KonohaContext
this.BooleanType.KonohaContext.BooleanType == this.BooleanType.BaseClass
this.BooleanType.ClassFlag == this.BooleanType.BaseClass.ClassFlag
this.BooleanType.ShortClassName == this.BooleanType.BaseClass.ShortClassName
this.BooleanType.BaseClass == this.BooleanType.BaseClass.BaseClass
this.BooleanType.BaseClass.SuperClass == this.BooleanType.SuperClass
this.BooleanType.BaseClass.ClassMethodList == this.BooleanType.ClassMethodList
this.BooleanType.BaseClass.HostedClassInfo == this.BooleanType.HostedClassInfo
this.BooleanType.SuperClass == this.BooleanType.SuperClass.BaseClass
this.BooleanType.SuperClass.ClassMethodList == this.BooleanType.ClassMethodList
this has only one value
this.RootNameSpace has only one value
this.RootNameSpace != null
this.RootNameSpace.KonohaContext has only one value
this.RootNameSpace.KonohaContext != null
this.RootNameSpace.ParentNameSpace == null
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.RootNameSpace.ImportedNameSpaceList == null
this.RootNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.RootNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.RootNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.RootNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.RootNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.RootNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.RootNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefaultNameSpace.KonohaContext has only one value
this.DefaultNameSpace.KonohaContext.RootNameSpace has only one value
this.DefaultNameSpace.KonohaContext.DefaultNameSpace has only one value
this.DefaultNameSpace.KonohaContext.SymbolTable has only one value
this.DefaultNameSpace.KonohaContext.VoidType has only one value
this.DefaultNameSpace.KonohaContext.BooleanType has only one value
this.DefaultNameSpace.ParentNameSpace has only one value
this.DefaultNameSpace.ParentNameSpace.KonohaContext has only one value
this.DefaultNameSpace.ParentNameSpace.ParentNameSpace == null
this.DefaultNameSpace.ParentNameSpace.ImportedNameSpaceList == null
this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix has only one value
this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix has only one value
this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefaultNameSpace.ParentNameSpace.DefinedSymbolTable has only one value
this.DefaultNameSpace.ParentNameSpace.ImportedSymbolTable has only one value
this.DefaultNameSpace.ImportedNameSpaceList == null
this.DefaultNameSpace.DefinedTokenMatrix == null
this.DefaultNameSpace.ImportedTokenMatrix has only one value
this.DefaultNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.DefaultNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.DefaultNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.DefaultNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.DefaultNameSpace.DefinedSymbolTable == null
this.DefaultNameSpace.ImportedSymbolTable has only one value
this.SymbolTable has only one value
this.SymbolTable != null
this.SymbolTable.ClassList has only one value
this.SymbolTable.ClassList != null
this.SymbolTable.ClassList[] == []
this.SymbolTable.ClassList[].getClass().getName() == []
this.SymbolTable.ClassNameMap has only one value
this.SymbolTable.ClassNameMap != null
this.SymbolTable.PackageList has only one value
this.SymbolTable.PackageList != null
this.SymbolTable.PackageList[] contains no nulls and has only one value, of length 1
this.SymbolTable.PackageList[] elements has only one value
this.SymbolTable.PackageList[] elements != null
this.SymbolTable.PackageList[].getClass().getName() == [org.KonohaScript.KPackage]
this.SymbolTable.PackageList[].getClass().getName() elements == org.KonohaScript.KPackage.class
this.SymbolTable.PackageMap has only one value
this.SymbolTable.PackageMap != null
this.SymbolTable.FileIdList has only one value
this.SymbolTable.FileIdList != null
this.SymbolTable.FileIdList[] == []
this.SymbolTable.FileIdList[].getClass().getName() == []
this.SymbolTable.FileIdMap has only one value
this.SymbolTable.FileIdMap != null
this.SymbolTable.SymbolList has only one value
this.SymbolTable.SymbolList != null
this.SymbolTable.SymbolList[] == []
this.SymbolTable.SymbolList[].getClass().getName() == []
this.SymbolTable.SymbolMap has only one value
this.SymbolTable.SymbolMap != null
this.SymbolTable.ParamList has only one value
this.SymbolTable.ParamList != null
this.SymbolTable.ParamList[] == []
this.SymbolTable.ParamList[].getClass().getName() == []
this.SymbolTable.ParamMap has only one value
this.SymbolTable.ParamMap != null
this.SymbolTable.SignatureList has only one value
this.SymbolTable.SignatureList != null
this.SymbolTable.SignatureList[] == []
this.SymbolTable.SignatureList[].getClass().getName() == []
this.SymbolTable.SignatureMap has only one value
this.SymbolTable.SignatureMap != null
this.VoidType.KonohaContext has only one value
this.VoidType.KonohaContext != null
this.VoidType.KonohaContext.RootNameSpace has only one value
this.VoidType.KonohaContext.RootNameSpace != null
this.VoidType.KonohaContext.SymbolTable has only one value
this.VoidType.KonohaContext.SymbolTable != null
this.VoidType.Package == null
this.VoidType.ClassFlag == 0
this.VoidType.ShortClassName has only one value
this.VoidType.ShortClassName != null
this.VoidType.ShortClassName.toString == "Void"
this.VoidType.BaseClass has only one value
this.VoidType.BaseClass != null
this.VoidType.BaseClass.Package == null
this.VoidType.BaseClass.ShortClassName.toString == "Void"
this.VoidType.BaseClass.ClassParam == null
this.VoidType.BaseClass.SearchSimilarClass == null
this.VoidType.BaseClass.ClassMethodList[] == []
this.VoidType.BaseClass.ClassMethodList[].getClass().getName() == []
this.VoidType.BaseClass.SearchSuperMethodClass == null
this.VoidType.BaseClass.DefaultNullValue == null
this.VoidType.BaseClass.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList has only one value
org.KonohaScript.KClass.EmptyMethodList != null
org.KonohaScript.KClass.EmptyMethodList[] == []
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == []
org.KonohaScript.KClass.VoidType == null
org.KonohaScript.KClass.ObjectType == null
org.KonohaScript.KClass.BooleanType == null
org.KonohaScript.KClass.IntType == null
org.KonohaScript.KClass.StringType == null
this.VoidType.SuperClass has only one value
this.VoidType.SuperClass != null
this.VoidType.SuperClass.Package == null
this.VoidType.SuperClass.ClassFlag == 0
this.VoidType.SuperClass.ShortClassName has only one value
this.VoidType.SuperClass.ShortClassName != null
this.VoidType.SuperClass.ShortClassName.toString == "Object"
this.VoidType.SuperClass.SuperClass == null
this.VoidType.SuperClass.ClassParam == null
this.VoidType.SuperClass.SearchSimilarClass == null
this.VoidType.SuperClass.ClassMethodList[] == []
this.VoidType.SuperClass.ClassMethodList[].getClass().getName() == []
this.VoidType.SuperClass.SearchSuperMethodClass == null
this.VoidType.SuperClass.DefaultNullValue == null
this.VoidType.SuperClass.LocalSpec == null
this.VoidType.SuperClass.HostedClassInfo has only one value
this.VoidType.SuperClass.HostedClassInfo != null
this.VoidType.ClassParam == null
this.VoidType.SearchSimilarClass == null
this.VoidType.ClassMethodList has only one value
this.VoidType.ClassMethodList != null
this.VoidType.ClassMethodList[] == []
this.VoidType.ClassMethodList[].getClass().getName() == []
this.VoidType.SearchSuperMethodClass == null
this.VoidType.DefaultNullValue == null
this.VoidType.LocalSpec == null
this.VoidType.HostedClassInfo has only one value
this.VoidType.HostedClassInfo != null
this.BooleanType.KonohaContext has only one value
this.BooleanType.KonohaContext != null
this.BooleanType.KonohaContext.RootNameSpace has only one value
this.BooleanType.KonohaContext.RootNameSpace != null
this.BooleanType.KonohaContext.SymbolTable has only one value
this.BooleanType.KonohaContext.SymbolTable != null
this.BooleanType.KonohaContext.VoidType has only one value
this.BooleanType.KonohaContext.VoidType != null
this.BooleanType.Package == null
this.BooleanType.ClassFlag == 0
this.BooleanType.ShortClassName has only one value
this.BooleanType.ShortClassName != null
this.BooleanType.ShortClassName.toString == "Boolean"
this.BooleanType.BaseClass has only one value
this.BooleanType.BaseClass != null
this.BooleanType.BaseClass.Package == null
this.BooleanType.BaseClass.ShortClassName.toString == "Boolean"
this.BooleanType.BaseClass.ClassParam == null
this.BooleanType.BaseClass.SearchSimilarClass == null
this.BooleanType.BaseClass.ClassMethodList[] == []
this.BooleanType.BaseClass.ClassMethodList[].getClass().getName() == []
this.BooleanType.BaseClass.SearchSuperMethodClass == null
this.BooleanType.BaseClass.DefaultNullValue == null
this.BooleanType.BaseClass.LocalSpec == null
this.BooleanType.SuperClass has only one value
this.BooleanType.SuperClass != null
this.BooleanType.SuperClass.Package == null
this.BooleanType.SuperClass.ClassFlag == 0
this.BooleanType.SuperClass.ShortClassName has only one value
this.BooleanType.SuperClass.ShortClassName != null
this.BooleanType.SuperClass.ShortClassName.toString == "Object"
this.BooleanType.SuperClass.SuperClass == null
this.BooleanType.SuperClass.ClassParam == null
this.BooleanType.SuperClass.SearchSimilarClass == null
this.BooleanType.SuperClass.ClassMethodList[] == []
this.BooleanType.SuperClass.ClassMethodList[].getClass().getName() == []
this.BooleanType.SuperClass.SearchSuperMethodClass == null
this.BooleanType.SuperClass.DefaultNullValue == null
this.BooleanType.SuperClass.LocalSpec == null
this.BooleanType.SuperClass.HostedClassInfo has only one value
this.BooleanType.SuperClass.HostedClassInfo != null
this.BooleanType.ClassParam == null
this.BooleanType.SearchSimilarClass == null
this.BooleanType.ClassMethodList has only one value
this.BooleanType.ClassMethodList != null
this.BooleanType.ClassMethodList[] == []
this.BooleanType.ClassMethodList[].getClass().getName() == []
this.BooleanType.SearchSuperMethodClass == null
this.BooleanType.DefaultNullValue == null
this.BooleanType.LocalSpec == null
this.BooleanType.HostedClassInfo has only one value
this.BooleanType.HostedClassInfo != null
size(this.RootNameSpace.DefinedTokenMatrix[]) == 41
size(this.RootNameSpace.ImportedTokenMatrix[]) == 41
size(this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(this.DefaultNameSpace.ImportedTokenMatrix[]) == 41
size(this.SymbolTable.PackageList[]) == 1
===========================================================================
org.KonohaScript.Konoha.Eval(java.lang.String, long):::ENTER
this.RootNameSpace.KonohaContext == this.VoidType.BaseClass.KonohaContext
this.RootNameSpace.KonohaContext == this.VoidType.SuperClass.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.BaseClass.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.SuperClass.KonohaContext
this.VoidType == this.VoidType.KonohaContext.VoidType
this.VoidType == this.VoidType.BaseClass.BaseClass
this.VoidType.SuperClass == this.BooleanType.BaseClass.SuperClass
this.VoidType.SuperClass == this.BooleanType.SuperClass.BaseClass
this.VoidType.ClassMethodList == this.BooleanType.BaseClass.ClassMethodList
this.VoidType.ClassMethodList == this.BooleanType.SuperClass.ClassMethodList
this.BooleanType == this.BooleanType.KonohaContext.BooleanType
this.BooleanType == this.BooleanType.BaseClass.BaseClass
this.RootNameSpace.KonohaContext.DefaultNameSpace has only one value
this.RootNameSpace.DefinedTokenMatrix has only one value
this.RootNameSpace.ImportedTokenMatrix has only one value
this.RootNameSpace.DefinedSymbolTable has only one value
this.RootNameSpace.ImportedSymbolTable has only one value
this.DefaultNameSpace has only one value
this.VoidType has only one value
this.VoidType.KonohaContext.DefaultNameSpace has only one value
this.BooleanType has only one value
this.BooleanType.KonohaContext.DefaultNameSpace has only one value
arg0 has only one value
arg0.toString == "a == b + C; D + e == F"
arg1 == 2
===========================================================================
org.KonohaScript.Konoha.Eval(java.lang.String, long):::EXIT
this.RootNameSpace == orig(this.RootNameSpace)
this.RootNameSpace == orig(this.RootNameSpace.KonohaContext.RootNameSpace)
this.RootNameSpace == orig(this.VoidType.KonohaContext.RootNameSpace)
this.RootNameSpace == orig(this.BooleanType.KonohaContext.RootNameSpace)
this.RootNameSpace.KonohaContext == this.VoidType.BaseClass.KonohaContext
this.RootNameSpace.KonohaContext == this.VoidType.SuperClass.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.BaseClass.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.SuperClass.KonohaContext
this.RootNameSpace.KonohaContext == orig(this)
this.RootNameSpace.KonohaContext == orig(this.RootNameSpace.KonohaContext)
this.RootNameSpace.KonohaContext == orig(this.VoidType.KonohaContext)
this.RootNameSpace.KonohaContext == orig(this.VoidType.BaseClass.KonohaContext)
this.RootNameSpace.KonohaContext == orig(this.VoidType.SuperClass.KonohaContext)
this.RootNameSpace.KonohaContext == orig(this.BooleanType.KonohaContext)
this.RootNameSpace.KonohaContext == orig(this.BooleanType.BaseClass.KonohaContext)
this.RootNameSpace.KonohaContext == orig(this.BooleanType.SuperClass.KonohaContext)
this.RootNameSpace.KonohaContext.DefaultNameSpace == orig(this.RootNameSpace.KonohaContext.DefaultNameSpace)
this.RootNameSpace.ParentNameSpace == orig(this.RootNameSpace.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.RootNameSpace.ImportedNameSpaceList == orig(this.RootNameSpace.ImportedNameSpaceList)
this.RootNameSpace.DefinedTokenMatrix == orig(this.RootNameSpace.DefinedTokenMatrix)
this.RootNameSpace.DefinedTokenMatrix[] == orig(this.RootNameSpace.DefinedTokenMatrix[])
this.RootNameSpace.ImportedTokenMatrix == orig(this.RootNameSpace.ImportedTokenMatrix)
this.RootNameSpace.ImportedTokenMatrix[] == orig(this.RootNameSpace.ImportedTokenMatrix[])
this.RootNameSpace.DefinedSymbolTable == orig(this.RootNameSpace.DefinedSymbolTable)
this.RootNameSpace.ImportedSymbolTable == orig(this.RootNameSpace.ImportedSymbolTable)
this.DefaultNameSpace == orig(this.DefaultNameSpace)
this.DefaultNameSpace.KonohaContext == orig(this.DefaultNameSpace.KonohaContext)
this.DefaultNameSpace.KonohaContext.RootNameSpace == orig(this.DefaultNameSpace.KonohaContext.RootNameSpace)
this.DefaultNameSpace.KonohaContext.DefaultNameSpace == orig(this.DefaultNameSpace.KonohaContext.DefaultNameSpace)
this.DefaultNameSpace.KonohaContext.SymbolTable == orig(this.DefaultNameSpace.KonohaContext.SymbolTable)
this.DefaultNameSpace.KonohaContext.VoidType == orig(this.DefaultNameSpace.KonohaContext.VoidType)
this.DefaultNameSpace.KonohaContext.BooleanType == orig(this.DefaultNameSpace.KonohaContext.BooleanType)
this.DefaultNameSpace.ParentNameSpace == orig(this.DefaultNameSpace.ParentNameSpace)
this.DefaultNameSpace.ParentNameSpace.KonohaContext == orig(this.DefaultNameSpace.ParentNameSpace.KonohaContext)
this.DefaultNameSpace.ParentNameSpace.ParentNameSpace == orig(this.DefaultNameSpace.ParentNameSpace.ParentNameSpace)
this.DefaultNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.DefaultNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.DefaultNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.DefaultNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.DefaultNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.DefaultNameSpace.ParentNameSpace.DefinedSymbolTable)
this.DefaultNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.DefaultNameSpace.ParentNameSpace.ImportedSymbolTable)
this.DefaultNameSpace.ImportedNameSpaceList == orig(this.DefaultNameSpace.ImportedNameSpaceList)
this.DefaultNameSpace.DefinedTokenMatrix == orig(this.DefaultNameSpace.DefinedTokenMatrix)
this.DefaultNameSpace.ImportedTokenMatrix == orig(this.DefaultNameSpace.ImportedTokenMatrix)
this.DefaultNameSpace.ImportedTokenMatrix[] == orig(this.DefaultNameSpace.ImportedTokenMatrix[])
this.DefaultNameSpace.DefinedSymbolTable == orig(this.DefaultNameSpace.DefinedSymbolTable)
this.DefaultNameSpace.ImportedSymbolTable == orig(this.DefaultNameSpace.ImportedSymbolTable)
this.SymbolTable == orig(this.RootNameSpace.KonohaContext.SymbolTable)
this.SymbolTable == orig(this.SymbolTable)
this.SymbolTable == orig(this.VoidType.KonohaContext.SymbolTable)
this.SymbolTable == orig(this.BooleanType.KonohaContext.SymbolTable)
this.SymbolTable.ClassList == orig(this.SymbolTable.ClassList)
this.SymbolTable.ClassList[] == orig(this.SymbolTable.ClassList[])
this.SymbolTable.ClassNameMap == orig(this.SymbolTable.ClassNameMap)
this.SymbolTable.PackageList == orig(this.SymbolTable.PackageList)
this.SymbolTable.PackageList[] == orig(this.SymbolTable.PackageList[])
this.SymbolTable.PackageMap == orig(this.SymbolTable.PackageMap)
this.SymbolTable.FileIdList == orig(this.SymbolTable.FileIdList)
this.SymbolTable.FileIdList[] == orig(this.SymbolTable.FileIdList[])
this.SymbolTable.FileIdMap == orig(this.SymbolTable.FileIdMap)
this.SymbolTable.SymbolList == orig(this.SymbolTable.SymbolList)
this.SymbolTable.SymbolList[] == orig(this.SymbolTable.SymbolList[])
this.SymbolTable.SymbolMap == orig(this.SymbolTable.SymbolMap)
this.SymbolTable.ParamList == orig(this.SymbolTable.ParamList)
this.SymbolTable.ParamList[] == orig(this.SymbolTable.ParamList[])
this.SymbolTable.ParamMap == orig(this.SymbolTable.ParamMap)
this.SymbolTable.SignatureList == orig(this.SymbolTable.SignatureList)
this.SymbolTable.SignatureList[] == orig(this.SymbolTable.SignatureList[])
this.SymbolTable.SignatureMap == orig(this.SymbolTable.SignatureMap)
this.VoidType == this.VoidType.KonohaContext.VoidType
this.VoidType == this.VoidType.BaseClass.BaseClass
this.VoidType == orig(this.RootNameSpace.KonohaContext.VoidType)
this.VoidType == orig(this.VoidType)
this.VoidType == orig(this.VoidType.KonohaContext.VoidType)
this.VoidType == orig(this.VoidType.BaseClass)
this.VoidType == orig(this.VoidType.BaseClass.BaseClass)
this.VoidType == orig(this.BooleanType.KonohaContext.VoidType)
this.VoidType.KonohaContext.DefaultNameSpace == orig(this.VoidType.KonohaContext.DefaultNameSpace)
this.VoidType.Package == orig(this.VoidType.Package)
this.VoidType.ClassFlag == orig(this.VoidType.ClassFlag)
this.VoidType.ClassFlag == orig(this.VoidType.BaseClass.ClassFlag)
this.VoidType.ShortClassName == orig(this.VoidType.ShortClassName)
this.VoidType.ShortClassName == orig(this.VoidType.BaseClass.ShortClassName)
this.VoidType.ShortClassName.toString == orig(this.VoidType.ShortClassName.toString)
this.VoidType.BaseClass.Package == orig(this.VoidType.BaseClass.Package)
this.VoidType.BaseClass.ShortClassName.toString == orig(this.VoidType.BaseClass.ShortClassName.toString)
this.VoidType.BaseClass.ClassParam == orig(this.VoidType.BaseClass.ClassParam)
this.VoidType.BaseClass.SearchSimilarClass == orig(this.VoidType.BaseClass.SearchSimilarClass)
this.VoidType.BaseClass.ClassMethodList[] == orig(this.VoidType.BaseClass.ClassMethodList[])
this.VoidType.BaseClass.SearchSuperMethodClass == orig(this.VoidType.BaseClass.SearchSuperMethodClass)
this.VoidType.BaseClass.DefaultNullValue == orig(this.VoidType.BaseClass.DefaultNullValue)
this.VoidType.BaseClass.LocalSpec == orig(this.VoidType.BaseClass.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.VoidType.SuperClass == this.BooleanType.BaseClass.SuperClass
this.VoidType.SuperClass == this.BooleanType.SuperClass.BaseClass
this.VoidType.SuperClass == orig(this.VoidType.BaseClass.SuperClass)
this.VoidType.SuperClass == orig(this.VoidType.SuperClass)
this.VoidType.SuperClass == orig(this.VoidType.SuperClass.BaseClass)
this.VoidType.SuperClass == orig(this.BooleanType.BaseClass.SuperClass)
this.VoidType.SuperClass == orig(this.BooleanType.SuperClass)
this.VoidType.SuperClass == orig(this.BooleanType.SuperClass.BaseClass)
this.VoidType.SuperClass.Package == orig(this.VoidType.SuperClass.Package)
this.VoidType.SuperClass.ClassFlag == orig(this.VoidType.SuperClass.ClassFlag)
this.VoidType.SuperClass.ClassFlag == orig(this.BooleanType.SuperClass.ClassFlag)
this.VoidType.SuperClass.ShortClassName == orig(this.VoidType.SuperClass.ShortClassName)
this.VoidType.SuperClass.ShortClassName == orig(this.BooleanType.SuperClass.ShortClassName)
this.VoidType.SuperClass.ShortClassName.toString == orig(this.VoidType.SuperClass.ShortClassName.toString)
this.VoidType.SuperClass.SuperClass == orig(this.VoidType.SuperClass.SuperClass)
this.VoidType.SuperClass.ClassParam == orig(this.VoidType.SuperClass.ClassParam)
this.VoidType.SuperClass.SearchSimilarClass == orig(this.VoidType.SuperClass.SearchSimilarClass)
this.VoidType.SuperClass.ClassMethodList[] == orig(this.VoidType.SuperClass.ClassMethodList[])
this.VoidType.SuperClass.SearchSuperMethodClass == orig(this.VoidType.SuperClass.SearchSuperMethodClass)
this.VoidType.SuperClass.DefaultNullValue == orig(this.VoidType.SuperClass.DefaultNullValue)
this.VoidType.SuperClass.LocalSpec == orig(this.VoidType.SuperClass.LocalSpec)
this.VoidType.SuperClass.HostedClassInfo == orig(this.VoidType.SuperClass.HostedClassInfo)
this.VoidType.SuperClass.HostedClassInfo == orig(this.BooleanType.SuperClass.HostedClassInfo)
this.VoidType.ClassParam == orig(this.VoidType.ClassParam)
this.VoidType.SearchSimilarClass == orig(this.VoidType.SearchSimilarClass)
this.VoidType.ClassMethodList == this.BooleanType.BaseClass.ClassMethodList
this.VoidType.ClassMethodList == this.BooleanType.SuperClass.ClassMethodList
this.VoidType.ClassMethodList == orig(this.VoidType.BaseClass.ClassMethodList)
this.VoidType.ClassMethodList == orig(this.VoidType.SuperClass.ClassMethodList)
this.VoidType.ClassMethodList == orig(this.VoidType.ClassMethodList)
this.VoidType.ClassMethodList == orig(this.BooleanType.BaseClass.ClassMethodList)
this.VoidType.ClassMethodList == orig(this.BooleanType.SuperClass.ClassMethodList)
this.VoidType.ClassMethodList == orig(this.BooleanType.ClassMethodList)
this.VoidType.ClassMethodList[] == orig(this.VoidType.ClassMethodList[])
this.VoidType.SearchSuperMethodClass == orig(this.VoidType.SearchSuperMethodClass)
this.VoidType.DefaultNullValue == orig(this.VoidType.DefaultNullValue)
this.VoidType.LocalSpec == orig(this.VoidType.LocalSpec)
this.VoidType.HostedClassInfo == orig(this.VoidType.BaseClass.HostedClassInfo)
this.VoidType.HostedClassInfo == orig(this.VoidType.HostedClassInfo)
this.BooleanType == this.BooleanType.KonohaContext.BooleanType
this.BooleanType == this.BooleanType.BaseClass.BaseClass
this.BooleanType == orig(this.RootNameSpace.KonohaContext.BooleanType)
this.BooleanType == orig(this.VoidType.KonohaContext.BooleanType)
this.BooleanType == orig(this.BooleanType)
this.BooleanType == orig(this.BooleanType.KonohaContext.BooleanType)
this.BooleanType == orig(this.BooleanType.BaseClass)
this.BooleanType == orig(this.BooleanType.BaseClass.BaseClass)
this.BooleanType.KonohaContext.DefaultNameSpace == orig(this.BooleanType.KonohaContext.DefaultNameSpace)
this.BooleanType.Package == orig(this.BooleanType.Package)
this.BooleanType.ClassFlag == orig(this.BooleanType.ClassFlag)
this.BooleanType.ClassFlag == orig(this.BooleanType.BaseClass.ClassFlag)
this.BooleanType.ShortClassName == orig(this.BooleanType.ShortClassName)
this.BooleanType.ShortClassName == orig(this.BooleanType.BaseClass.ShortClassName)
this.BooleanType.ShortClassName.toString == orig(this.BooleanType.ShortClassName.toString)
this.BooleanType.BaseClass.Package == orig(this.BooleanType.BaseClass.Package)
this.BooleanType.BaseClass.ShortClassName.toString == orig(this.BooleanType.BaseClass.ShortClassName.toString)
this.BooleanType.BaseClass.ClassParam == orig(this.BooleanType.BaseClass.ClassParam)
this.BooleanType.BaseClass.SearchSimilarClass == orig(this.BooleanType.BaseClass.SearchSimilarClass)
this.BooleanType.BaseClass.ClassMethodList[] == orig(this.BooleanType.BaseClass.ClassMethodList[])
this.BooleanType.BaseClass.SearchSuperMethodClass == orig(this.BooleanType.BaseClass.SearchSuperMethodClass)
this.BooleanType.BaseClass.DefaultNullValue == orig(this.BooleanType.BaseClass.DefaultNullValue)
this.BooleanType.BaseClass.LocalSpec == orig(this.BooleanType.BaseClass.LocalSpec)
this.BooleanType.SuperClass.Package == orig(this.BooleanType.SuperClass.Package)
this.BooleanType.SuperClass.ShortClassName.toString == orig(this.BooleanType.SuperClass.ShortClassName.toString)
this.BooleanType.SuperClass.SuperClass == orig(this.BooleanType.SuperClass.SuperClass)
this.BooleanType.SuperClass.ClassParam == orig(this.BooleanType.SuperClass.ClassParam)
this.BooleanType.SuperClass.SearchSimilarClass == orig(this.BooleanType.SuperClass.SearchSimilarClass)
this.BooleanType.SuperClass.ClassMethodList[] == orig(this.BooleanType.SuperClass.ClassMethodList[])
this.BooleanType.SuperClass.SearchSuperMethodClass == orig(this.BooleanType.SuperClass.SearchSuperMethodClass)
this.BooleanType.SuperClass.DefaultNullValue == orig(this.BooleanType.SuperClass.DefaultNullValue)
this.BooleanType.SuperClass.LocalSpec == orig(this.BooleanType.SuperClass.LocalSpec)
this.BooleanType.ClassParam == orig(this.BooleanType.ClassParam)
this.BooleanType.SearchSimilarClass == orig(this.BooleanType.SearchSimilarClass)
this.BooleanType.ClassMethodList[] == orig(this.BooleanType.ClassMethodList[])
this.BooleanType.SearchSuperMethodClass == orig(this.BooleanType.SearchSuperMethodClass)
this.BooleanType.DefaultNullValue == orig(this.BooleanType.DefaultNullValue)
this.BooleanType.LocalSpec == orig(this.BooleanType.LocalSpec)
this.BooleanType.HostedClassInfo == orig(this.BooleanType.BaseClass.HostedClassInfo)
this.BooleanType.HostedClassInfo == orig(this.BooleanType.HostedClassInfo)
arg0.toString == orig(arg0.toString)
this.RootNameSpace.KonohaContext.DefaultNameSpace has only one value
this.RootNameSpace.DefinedTokenMatrix has only one value
this.RootNameSpace.ImportedTokenMatrix has only one value
this.RootNameSpace.DefinedSymbolTable has only one value
this.RootNameSpace.ImportedSymbolTable has only one value
this.DefaultNameSpace has only one value
this.VoidType has only one value
this.VoidType.KonohaContext.DefaultNameSpace has only one value
this.BooleanType has only one value
this.BooleanType.KonohaContext.DefaultNameSpace has only one value
arg0.toString == "a == b + C; D + e == F"
===========================================================================
org.KonohaScript.Konoha.Konoha(org.KonohaScript.GrammarSet.MiniKonoha):::ENTER
arg0 has only one value
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == false
===========================================================================
org.KonohaScript.Konoha.Konoha(org.KonohaScript.GrammarSet.MiniKonoha):::EXIT
this.RootNameSpace.KonohaContext == this.VoidType.BaseClass.KonohaContext
this.RootNameSpace.KonohaContext == this.VoidType.SuperClass.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.BaseClass.KonohaContext
this.RootNameSpace.KonohaContext == this.BooleanType.SuperClass.KonohaContext
this.VoidType == this.VoidType.KonohaContext.VoidType
this.VoidType == this.VoidType.BaseClass.BaseClass
this.VoidType.SuperClass == this.BooleanType.BaseClass.SuperClass
this.VoidType.SuperClass == this.BooleanType.SuperClass.BaseClass
this.VoidType.ClassMethodList == this.BooleanType.BaseClass.ClassMethodList
this.VoidType.ClassMethodList == this.BooleanType.SuperClass.ClassMethodList
this.BooleanType == this.BooleanType.KonohaContext.BooleanType
this.BooleanType == this.BooleanType.BaseClass.BaseClass
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == orig(org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled)
this.RootNameSpace.KonohaContext.DefaultNameSpace has only one value
this.RootNameSpace.DefinedTokenMatrix has only one value
this.RootNameSpace.ImportedTokenMatrix has only one value
this.RootNameSpace.DefinedSymbolTable has only one value
this.RootNameSpace.ImportedSymbolTable has only one value
this.DefaultNameSpace has only one value
this.VoidType has only one value
this.VoidType.KonohaContext.DefaultNameSpace has only one value
this.BooleanType has only one value
this.BooleanType.KonohaContext.DefaultNameSpace has only one value
org.KonohaScript.GrammarSet.MiniKonoha.$assertionsDisabled == false
===========================================================================
org.KonohaScript.Konoha.LookupTypeInfo(java.lang.Class):::ENTER
org.KonohaScript.KClass.EmptyMethodList == this.VoidType.ClassMethodList
org.KonohaScript.KClass.EmptyMethodList == this.BooleanType.ClassMethodList
this.RootNameSpace.KonohaContext.DefaultNameSpace == null
this.DefaultNameSpace == null
this.VoidType.KonohaContext.DefaultNameSpace == null
this.BooleanType.KonohaContext.DefaultNameSpace == null
===========================================================================
org.KonohaScript.Konoha.LookupTypeInfo(java.lang.Class):::EXIT
this.RootNameSpace == return.KonohaContext.RootNameSpace
this.RootNameSpace == orig(this.RootNameSpace)
this.RootNameSpace == orig(this.RootNameSpace.KonohaContext.RootNameSpace)
this.RootNameSpace.KonohaContext == return.KonohaContext
this.RootNameSpace.KonohaContext.DefaultNameSpace == orig(this.RootNameSpace.KonohaContext.DefaultNameSpace)
this.RootNameSpace.ParentNameSpace == orig(this.RootNameSpace.ParentNameSpace)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.RootNameSpace.ImportedNameSpaceList == orig(this.RootNameSpace.ImportedNameSpaceList)
this.RootNameSpace.DefinedTokenMatrix == orig(this.RootNameSpace.DefinedTokenMatrix)
this.RootNameSpace.DefinedTokenMatrix[] == orig(this.RootNameSpace.DefinedTokenMatrix[])
this.RootNameSpace.ImportedTokenMatrix == orig(this.RootNameSpace.ImportedTokenMatrix)
this.RootNameSpace.ImportedTokenMatrix[] == orig(this.RootNameSpace.ImportedTokenMatrix[])
this.RootNameSpace.DefinedSymbolTable == orig(this.RootNameSpace.DefinedSymbolTable)
this.RootNameSpace.ImportedSymbolTable == orig(this.RootNameSpace.ImportedSymbolTable)
this.DefaultNameSpace == orig(this.DefaultNameSpace)
this.SymbolTable == return.KonohaContext.SymbolTable
this.SymbolTable == orig(this.RootNameSpace.KonohaContext.SymbolTable)
this.SymbolTable == orig(this.SymbolTable)
this.SymbolTable.ClassList == orig(this.SymbolTable.ClassList)
this.SymbolTable.ClassList[] == orig(this.SymbolTable.ClassList[])
this.SymbolTable.ClassNameMap == orig(this.SymbolTable.ClassNameMap)
this.SymbolTable.PackageList == orig(this.SymbolTable.PackageList)
this.SymbolTable.PackageList[] == orig(this.SymbolTable.PackageList[])
this.SymbolTable.PackageMap == orig(this.SymbolTable.PackageMap)
this.SymbolTable.FileIdList == orig(this.SymbolTable.FileIdList)
this.SymbolTable.FileIdList[] == orig(this.SymbolTable.FileIdList[])
this.SymbolTable.FileIdMap == orig(this.SymbolTable.FileIdMap)
this.SymbolTable.SymbolList == orig(this.SymbolTable.SymbolList)
this.SymbolTable.SymbolList[] == orig(this.SymbolTable.SymbolList[])
this.SymbolTable.SymbolMap == orig(this.SymbolTable.SymbolMap)
this.SymbolTable.ParamList == orig(this.SymbolTable.ParamList)
this.SymbolTable.ParamList[] == orig(this.SymbolTable.ParamList[])
this.SymbolTable.ParamMap == orig(this.SymbolTable.ParamMap)
this.SymbolTable.SignatureList == orig(this.SymbolTable.SignatureList)
this.SymbolTable.SignatureList[] == orig(this.SymbolTable.SignatureList[])
this.SymbolTable.SignatureMap == orig(this.SymbolTable.SignatureMap)
this.VoidType == return.KonohaContext.VoidType
this.VoidType == orig(this.RootNameSpace.KonohaContext.VoidType)
this.VoidType == orig(this.VoidType)
this.VoidType.KonohaContext == return.KonohaContext
this.VoidType.KonohaContext == return.SuperClass.KonohaContext
this.VoidType.KonohaContext == orig(this)
this.VoidType.KonohaContext == orig(this.VoidType.KonohaContext)
this.VoidType.KonohaContext == orig(this.VoidType.BaseClass.KonohaContext)
this.VoidType.KonohaContext == orig(this.VoidType.SuperClass.KonohaContext)
this.VoidType.KonohaContext.RootNameSpace == orig(this.VoidType.KonohaContext.RootNameSpace)
this.VoidType.KonohaContext.DefaultNameSpace == orig(this.VoidType.KonohaContext.DefaultNameSpace)
this.VoidType.KonohaContext.SymbolTable == orig(this.VoidType.KonohaContext.SymbolTable)
this.VoidType.KonohaContext.BooleanType == orig(this.VoidType.KonohaContext.BooleanType)
this.VoidType.Package == orig(this.VoidType.Package)
this.VoidType.ClassFlag == orig(this.VoidType.ClassFlag)
this.VoidType.ClassFlag == orig(this.VoidType.BaseClass.ClassFlag)
this.VoidType.ShortClassName == orig(this.VoidType.ShortClassName)
this.VoidType.ShortClassName == orig(this.VoidType.BaseClass.ShortClassName)
this.VoidType.ShortClassName.toString == orig(this.VoidType.ShortClassName.toString)
this.VoidType.BaseClass == orig(this.VoidType.KonohaContext.VoidType)
this.VoidType.BaseClass == orig(this.VoidType.BaseClass)
this.VoidType.BaseClass == orig(this.VoidType.BaseClass.BaseClass)
this.VoidType.BaseClass.Package == orig(this.VoidType.BaseClass.Package)
this.VoidType.BaseClass.ShortClassName.toString == orig(this.VoidType.BaseClass.ShortClassName.toString)
this.VoidType.BaseClass.ClassParam == orig(this.VoidType.BaseClass.ClassParam)
this.VoidType.BaseClass.SearchSimilarClass == orig(this.VoidType.BaseClass.SearchSimilarClass)
this.VoidType.BaseClass.ClassMethodList[] == orig(this.VoidType.BaseClass.ClassMethodList[])
this.VoidType.BaseClass.SearchSuperMethodClass == orig(this.VoidType.BaseClass.SearchSuperMethodClass)
this.VoidType.BaseClass.DefaultNullValue == orig(this.VoidType.BaseClass.DefaultNullValue)
this.VoidType.BaseClass.LocalSpec == orig(this.VoidType.BaseClass.LocalSpec)
org.KonohaScript.KClass.EmptyMethodList == this.VoidType.ClassMethodList
org.KonohaScript.KClass.EmptyMethodList == this.BooleanType.ClassMethodList
org.KonohaScript.KClass.EmptyMethodList == return.BaseClass.ClassMethodList
org.KonohaScript.KClass.EmptyMethodList == return.SuperClass.ClassMethodList
org.KonohaScript.KClass.EmptyMethodList == return.ClassMethodList
org.KonohaScript.KClass.EmptyMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
org.KonohaScript.KClass.EmptyMethodList[] == orig(org.KonohaScript.KClass.EmptyMethodList[])
org.KonohaScript.KClass.EmptyMethodList[].getClass().getName() == orig(org.KonohaScript.KClass.EmptyMethodList[].getClass().getName())
org.KonohaScript.KClass.VoidType == orig(org.KonohaScript.KClass.VoidType)
org.KonohaScript.KClass.ObjectType == orig(org.KonohaScript.KClass.ObjectType)
org.KonohaScript.KClass.BooleanType == orig(org.KonohaScript.KClass.BooleanType)
org.KonohaScript.KClass.IntType == orig(org.KonohaScript.KClass.IntType)
org.KonohaScript.KClass.StringType == orig(org.KonohaScript.KClass.StringType)
this.VoidType.SuperClass == orig(this.VoidType.BaseClass.SuperClass)
this.VoidType.SuperClass == orig(this.VoidType.SuperClass)
this.VoidType.SuperClass == orig(this.VoidType.SuperClass.BaseClass)
this.VoidType.SuperClass.Package == orig(this.VoidType.SuperClass.Package)
this.VoidType.SuperClass.ClassFlag == return.ClassFlag
this.VoidType.SuperClass.ClassFlag == return.SuperClass.ClassFlag
this.VoidType.SuperClass.ClassFlag == orig(this.VoidType.SuperClass.ClassFlag)
this.VoidType.SuperClass.ShortClassName == orig(this.VoidType.SuperClass.ShortClassName)
this.VoidType.SuperClass.ShortClassName.toString == orig(this.VoidType.SuperClass.ShortClassName.toString)
this.VoidType.SuperClass.SuperClass == orig(this.VoidType.SuperClass.SuperClass)
this.VoidType.SuperClass.ClassParam == orig(this.VoidType.SuperClass.ClassParam)
this.VoidType.SuperClass.SearchSimilarClass == orig(this.VoidType.SuperClass.SearchSimilarClass)
this.VoidType.SuperClass.ClassMethodList[] == orig(this.VoidType.SuperClass.ClassMethodList[])
this.VoidType.SuperClass.SearchSuperMethodClass == orig(this.VoidType.SuperClass.SearchSuperMethodClass)
this.VoidType.SuperClass.DefaultNullValue == orig(this.VoidType.SuperClass.DefaultNullValue)
this.VoidType.SuperClass.LocalSpec == orig(this.VoidType.SuperClass.LocalSpec)
this.VoidType.SuperClass.HostedClassInfo == orig(this.VoidType.SuperClass.HostedClassInfo)
this.VoidType.ClassParam == orig(this.VoidType.ClassParam)
this.VoidType.SearchSimilarClass == orig(this.VoidType.SearchSimilarClass)
this.VoidType.ClassMethodList == return.SuperClass.ClassMethodList
this.VoidType.ClassMethodList == orig(this.VoidType.BaseClass.ClassMethodList)
this.VoidType.ClassMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
this.VoidType.ClassMethodList == orig(this.VoidType.SuperClass.ClassMethodList)
this.VoidType.ClassMethodList == orig(this.VoidType.ClassMethodList)
this.VoidType.ClassMethodList[] == orig(this.VoidType.ClassMethodList[])
this.VoidType.SearchSuperMethodClass == orig(this.VoidType.SearchSuperMethodClass)
this.VoidType.DefaultNullValue == orig(this.VoidType.DefaultNullValue)
this.VoidType.LocalSpec == orig(this.VoidType.LocalSpec)
this.VoidType.HostedClassInfo == orig(this.VoidType.BaseClass.HostedClassInfo)
this.VoidType.HostedClassInfo == orig(this.VoidType.HostedClassInfo)
this.BooleanType == return.KonohaContext.BooleanType
this.BooleanType == orig(this.RootNameSpace.KonohaContext.BooleanType)
this.BooleanType == orig(this.BooleanType)
this.BooleanType.KonohaContext == return.KonohaContext
this.BooleanType.KonohaContext == return.SuperClass.KonohaContext
this.BooleanType.KonohaContext == orig(this)
this.BooleanType.KonohaContext == orig(this.BooleanType.KonohaContext)
this.BooleanType.KonohaContext == orig(this.BooleanType.BaseClass.KonohaContext)
this.BooleanType.KonohaContext == orig(this.BooleanType.SuperClass.KonohaContext)
this.BooleanType.KonohaContext.RootNameSpace == orig(this.BooleanType.KonohaContext.RootNameSpace)
this.BooleanType.KonohaContext.DefaultNameSpace == orig(this.BooleanType.KonohaContext.DefaultNameSpace)
this.BooleanType.KonohaContext.SymbolTable == orig(this.BooleanType.KonohaContext.SymbolTable)
this.BooleanType.KonohaContext.VoidType == orig(this.BooleanType.KonohaContext.VoidType)
this.BooleanType.Package == orig(this.BooleanType.Package)
this.BooleanType.ClassFlag == orig(this.BooleanType.ClassFlag)
this.BooleanType.ClassFlag == orig(this.BooleanType.BaseClass.ClassFlag)
this.BooleanType.ShortClassName == orig(this.BooleanType.ShortClassName)
this.BooleanType.ShortClassName == orig(this.BooleanType.BaseClass.ShortClassName)
this.BooleanType.ShortClassName.toString == orig(this.BooleanType.ShortClassName.toString)
this.BooleanType.BaseClass == orig(this.BooleanType.KonohaContext.BooleanType)
this.BooleanType.BaseClass == orig(this.BooleanType.BaseClass)
this.BooleanType.BaseClass == orig(this.BooleanType.BaseClass.BaseClass)
this.BooleanType.BaseClass.Package == orig(this.BooleanType.BaseClass.Package)
this.BooleanType.BaseClass.ShortClassName.toString == orig(this.BooleanType.BaseClass.ShortClassName.toString)
this.BooleanType.BaseClass.ClassParam == orig(this.BooleanType.BaseClass.ClassParam)
this.BooleanType.BaseClass.SearchSimilarClass == orig(this.BooleanType.BaseClass.SearchSimilarClass)
this.BooleanType.BaseClass.ClassMethodList[] == orig(this.BooleanType.BaseClass.ClassMethodList[])
this.BooleanType.BaseClass.SearchSuperMethodClass == orig(this.BooleanType.BaseClass.SearchSuperMethodClass)
this.BooleanType.BaseClass.DefaultNullValue == orig(this.BooleanType.BaseClass.DefaultNullValue)
this.BooleanType.BaseClass.LocalSpec == orig(this.BooleanType.BaseClass.LocalSpec)
this.BooleanType.SuperClass == orig(this.BooleanType.BaseClass.SuperClass)
this.BooleanType.SuperClass == orig(this.BooleanType.SuperClass)
this.BooleanType.SuperClass == orig(this.BooleanType.SuperClass.BaseClass)
this.BooleanType.SuperClass.Package == orig(this.BooleanType.SuperClass.Package)
this.BooleanType.SuperClass.ClassFlag == return.ClassFlag
this.BooleanType.SuperClass.ClassFlag == return.SuperClass.ClassFlag
this.BooleanType.SuperClass.ClassFlag == orig(this.BooleanType.SuperClass.ClassFlag)
this.BooleanType.SuperClass.ShortClassName == orig(this.BooleanType.SuperClass.ShortClassName)
this.BooleanType.SuperClass.ShortClassName.toString == orig(this.BooleanType.SuperClass.ShortClassName.toString)
this.BooleanType.SuperClass.SuperClass == orig(this.BooleanType.SuperClass.SuperClass)
this.BooleanType.SuperClass.ClassParam == orig(this.BooleanType.SuperClass.ClassParam)
this.BooleanType.SuperClass.SearchSimilarClass == orig(this.BooleanType.SuperClass.SearchSimilarClass)
this.BooleanType.SuperClass.ClassMethodList[] == orig(this.BooleanType.SuperClass.ClassMethodList[])
this.BooleanType.SuperClass.SearchSuperMethodClass == orig(this.BooleanType.SuperClass.SearchSuperMethodClass)
this.BooleanType.SuperClass.DefaultNullValue == orig(this.BooleanType.SuperClass.DefaultNullValue)
this.BooleanType.SuperClass.LocalSpec == orig(this.BooleanType.SuperClass.LocalSpec)
this.BooleanType.SuperClass.HostedClassInfo == orig(this.BooleanType.SuperClass.HostedClassInfo)
this.BooleanType.ClassParam == orig(this.BooleanType.ClassParam)
this.BooleanType.SearchSimilarClass == orig(this.BooleanType.SearchSimilarClass)
this.BooleanType.ClassMethodList == return.SuperClass.ClassMethodList
this.BooleanType.ClassMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
this.BooleanType.ClassMethodList == orig(this.BooleanType.BaseClass.ClassMethodList)
this.BooleanType.ClassMethodList == orig(this.BooleanType.SuperClass.ClassMethodList)
this.BooleanType.ClassMethodList == orig(this.BooleanType.ClassMethodList)
this.BooleanType.ClassMethodList[] == orig(this.BooleanType.ClassMethodList[])
this.BooleanType.SearchSuperMethodClass == orig(this.BooleanType.SearchSuperMethodClass)
this.BooleanType.DefaultNullValue == orig(this.BooleanType.DefaultNullValue)
this.BooleanType.LocalSpec == orig(this.BooleanType.LocalSpec)
this.BooleanType.HostedClassInfo == orig(this.BooleanType.BaseClass.HostedClassInfo)
this.BooleanType.HostedClassInfo == orig(this.BooleanType.HostedClassInfo)
return == return.BaseClass
return == return.BaseClass.BaseClass
return.KonohaContext == return.BaseClass.KonohaContext
return.KonohaContext == return.SuperClass.KonohaContext
return.KonohaContext == orig(this)
return.KonohaContext == orig(this.RootNameSpace.KonohaContext)
return.ClassFlag == return.BaseClass.ClassFlag
return.ClassFlag == return.SuperClass.ClassFlag
return.ShortClassName == return.BaseClass.ShortClassName
return.BaseClass.SuperClass == return.SuperClass
return.BaseClass.HostedClassInfo == return.HostedClassInfo
return.SuperClass == return.SuperClass.BaseClass
return.SuperClass.KonohaContext == orig(this)
return.SuperClass.ClassMethodList == orig(org.KonohaScript.KClass.EmptyMethodList)
return.HostedClassInfo == orig(arg0)
this.RootNameSpace.KonohaContext.DefaultNameSpace == null
this.DefaultNameSpace == null
this.VoidType.KonohaContext.DefaultNameSpace == null
this.BooleanType.KonohaContext.DefaultNameSpace == null
return.KonohaContext has only one value
return.KonohaContext.DefaultNameSpace == null
return.Package == null
return.ClassFlag == 0
return.BaseClass.Package == null
return.BaseClass.ClassParam == null
return.BaseClass.SearchSimilarClass == null
return.BaseClass.ClassMethodList[] == []
return.BaseClass.ClassMethodList[].getClass().getName() == []
return.BaseClass.SearchSuperMethodClass == null
return.BaseClass.DefaultNullValue == null
return.BaseClass.LocalSpec == null
return.SuperClass.KonohaContext has only one value
return.SuperClass.Package == null
return.SuperClass.ClassFlag == 0
return.SuperClass.ShortClassName.toString one of { "Number", "Object" }
return.SuperClass.ClassParam == null
return.SuperClass.SearchSimilarClass == null
return.SuperClass.ClassMethodList has only one value
return.SuperClass.ClassMethodList[] == []
return.SuperClass.ClassMethodList[].getClass().getName() == []
return.SuperClass.SearchSuperMethodClass == null
return.SuperClass.DefaultNullValue == null
return.SuperClass.LocalSpec == null
return.ClassParam == null
return.SearchSimilarClass == null
return.ClassMethodList[] == []
return.ClassMethodList[].getClass().getName() == []
return.SearchSuperMethodClass == null
return.DefaultNullValue == null
return.LocalSpec == null
org.KonohaScript.KClass.EmptyMethodList[] is the reverse of orig(org.KonohaScript.KClass.EmptyMethodList[])
===========================================================================
org.KonohaScript.KonohaChar:::CLASS
org.KonohaScript.KonohaChar.cMatrix has only one value
org.KonohaScript.KonohaChar.cMatrix != null
org.KonohaScript.KonohaChar.cMatrix[] == [0, 1, 1, 1, 1, 1, 1, 1, 1, 7, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 20, 18, 21, 22, 23, 24, 17, 9, 10, 25, 26, 27, 28, 29, 30, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 31, 32, 15, 33, 16, 34, 35, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 11, 38, 12, 39, 40, 19, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 13, 36, 14, 37, 1]
org.KonohaScript.KonohaChar.cMatrix[] elements >= 0
size(org.KonohaScript.KonohaChar.cMatrix[]) == 128
===========================================================================
org.KonohaScript.KonohaChar.JavaCharToKonohaChar(char):::ENTER
org.KonohaScript.KonohaChar.cMatrix[arg0] >= 2
org.KonohaScript.KonohaChar.cMatrix[arg0-1] >= 1
arg0 < size(org.KonohaScript.KonohaChar.cMatrix[])-1
===========================================================================
org.KonohaScript.KonohaChar.JavaCharToKonohaChar(char):::EXIT108
===========================================================================
org.KonohaScript.KonohaChar.JavaCharToKonohaChar(char):::EXIT
org.KonohaScript.KonohaChar.cMatrix == orig(org.KonohaScript.KonohaChar.cMatrix)
org.KonohaScript.KonohaChar.cMatrix[] == orig(org.KonohaScript.KonohaChar.cMatrix[])
return == org.KonohaScript.KonohaChar.cMatrix[orig(arg0)]
return == orig(org.KonohaScript.KonohaChar.cMatrix[post(arg0)])
return == orig(org.KonohaScript.KonohaChar.cMatrix[arg0])
return >= 2
org.KonohaScript.KonohaChar.cMatrix[orig(arg0)-1] >= 1
orig(arg0) < size(org.KonohaScript.KonohaChar.cMatrix[])-1
===========================================================================
org.KonohaScript.KonohaDebug:::CLASS
===========================================================================
org.KonohaScript.KonohaDebug.Indent(int, java.lang.String):::ENTER
arg0 >= 0
arg1 has only one value
arg1 != null
arg1.toString == "  "
===========================================================================
org.KonohaScript.KonohaDebug.Indent(int, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
arg1.toString == "  "
===========================================================================
org.KonohaScript.KonohaDebug.P(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.KonohaScript.KonohaDebug.P(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
org.KonohaScript.LexicalConverter:::CLASS
org.KonohaScript.LexicalConverter.$assertionsDisabled == false
===========================================================================
org.KonohaScript.LexicalConverter:::OBJECT
this.TopLevel == true
this.SkipIndent == false
this.LastIndent one of { 0, 4 }
this.ns != null
this.ns.KonohaContext has only one value
this.ns.KonohaContext != null
this.ns.KonohaContext.RootNameSpace has only one value
this.ns.KonohaContext.RootNameSpace != null
this.ns.KonohaContext.SymbolTable has only one value
this.ns.KonohaContext.SymbolTable != null
this.ns.KonohaContext.VoidType has only one value
this.ns.KonohaContext.VoidType != null
this.ns.KonohaContext.BooleanType has only one value
this.ns.KonohaContext.BooleanType != null
this.ns.ParentNameSpace.KonohaContext has only one value
this.ns.ParentNameSpace.KonohaContext != null
this.ns.ParentNameSpace.ParentNameSpace == null
this.ns.ParentNameSpace.ImportedNameSpaceList == null
this.ns.ParentNameSpace.DefinedTokenMatrix has only one value
this.ns.ParentNameSpace.DefinedTokenMatrix != null
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.ns.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ns.ParentNameSpace.ImportedTokenMatrix has only one value
this.ns.ParentNameSpace.ImportedTokenMatrix != null
this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.ns.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
this.ns.ParentNameSpace.DefinedSymbolTable has only one value
this.ns.ParentNameSpace.DefinedSymbolTable != null
this.ns.ParentNameSpace.ImportedSymbolTable has only one value
this.ns.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
this.ns.ImportedNameSpaceList == null
this.ns.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.DefinedTokenMatrix[] has only one value, of length 41
this.ns.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ns.ImportedTokenMatrix != null
this.ns.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.ns.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.ns.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.ns.ImportedSymbolTable != null
size(this.ns.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(this.ns.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(this.ns.DefinedTokenMatrix[]) == 41
size(this.ns.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.LexicalConverter.Do(java.util.ArrayList, int, int, java.util.ArrayList):::ENTER
arg0[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1 >= 0
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg3[]) >= 1
===========================================================================
org.KonohaScript.LexicalConverter.Do(java.util.ArrayList, int, int, java.util.ArrayList):::EXIT64
arg0[] == orig(arg0[])
this.ns has only one value
this.ns.KonohaContext.DefaultNameSpace has only one value
this.ns.ParentNameSpace has only one value
this.ns.DefinedTokenMatrix == null
this.ns.ImportedTokenMatrix has only one value
this.ns.ImportedTokenMatrix[] has only one value, of length 41
this.ns.DefinedSymbolTable == null
this.ns.ImportedSymbolTable has only one value
arg0[].getClass().getName() one of { [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken], [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken] }
orig(this) has only one value
orig(arg0) has only one value
orig(arg2) == 35
orig(arg3[].getClass().getName()) == [org.KonohaScript.KToken]
orig(size(arg0[])) one of { 37, 38 }
orig(size(arg3[])) == 1
===========================================================================
org.KonohaScript.LexicalConverter.Do(java.util.ArrayList, int, int, java.util.ArrayList):::EXIT79
this.LastIndent == 0
orig(arg1) == 0
===========================================================================
org.KonohaScript.LexicalConverter.Do(java.util.ArrayList, int, int, java.util.ArrayList):::EXIT
this.TopLevel == orig(this.TopLevel)
this.SkipIndent == orig(this.SkipIndent)
this.LastIndent == orig(this.LastIndent)
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.DefinedTokenMatrix.getClass().getName() == orig(this.ns.DefinedTokenMatrix.getClass().getName())
this.ns.DefinedTokenMatrix[] == orig(this.ns.DefinedTokenMatrix[])
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
(orig(arg1) == 0)  ==>  (this.LastIndent == 0)
(orig(arg1) == 0)  ==>  (this.ns.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class)
(orig(arg1) == 0)  ==>  (this.ns.DefinedTokenMatrix[] has only one value, of length 41)
(orig(arg1) == 0)  ==>  (this.ns.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject])
(orig(arg1) == 0)  ==>  (this.ns.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null])
arg0[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3[].getClass().getName() elements == org.KonohaScript.KToken.class
size(arg0[])-1 >= orig(size(arg0[]))-1
size(arg3[])-1 >= orig(size(arg3[]))
===========================================================================
org.KonohaScript.LexicalConverter.GetSyntax(java.lang.String):::ENTER
this.ns has only one value
this.ns.KonohaContext.DefaultNameSpace has only one value
this.ns.ParentNameSpace has only one value
this.ns.DefinedTokenMatrix == null
this.ns.ImportedTokenMatrix has only one value
this.ns.ImportedTokenMatrix[] has only one value, of length 41
this.ns.DefinedSymbolTable == null
this.ns.ImportedSymbolTable has only one value
===========================================================================
org.KonohaScript.LexicalConverter.GetSyntax(java.lang.String):::EXIT
this.TopLevel == orig(this.TopLevel)
this.SkipIndent == orig(this.SkipIndent)
this.LastIndent == orig(this.LastIndent)
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
arg0.toString == orig(arg0.toString)
this.ns has only one value
this.ns.KonohaContext.DefaultNameSpace has only one value
this.ns.ParentNameSpace has only one value
this.ns.DefinedTokenMatrix == null
this.ns.ImportedTokenMatrix has only one value
this.ns.ImportedTokenMatrix[] has only one value, of length 41
this.ns.DefinedSymbolTable == null
this.ns.ImportedSymbolTable has only one value
return.PackageNameSpace has only one value
return.PackageNameSpace.KonohaContext has only one value
return.PackageNameSpace.ParentNameSpace == null
return.PackageNameSpace.ImportedNameSpaceList == null
return.PackageNameSpace.DefinedTokenMatrix has only one value
return.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
return.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.PackageNameSpace.ImportedTokenMatrix has only one value
return.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
return.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.PackageNameSpace.DefinedSymbolTable has only one value
return.PackageNameSpace.ImportedSymbolTable has only one value
return.SyntaxName.toString one of { "()", "==" }
return.SyntaxFlag one of { 1601, 12802 }
return.ParseObject has only one value
return.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.ParseMethod == null
return.TypeObject == null
return.TypeMethod == null
return.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
size(return.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(return.PackageNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.LexicalConverter.Indent(java.lang.String):::ENTER
arg0.toString one of { "", "\t" }
===========================================================================
org.KonohaScript.LexicalConverter.Indent(java.lang.String):::EXIT
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "", "\t" }
return one of { 0, 4 }
===========================================================================
org.KonohaScript.LexicalConverter.LexicalConverter(org.KonohaScript.KNameSpace, boolean, boolean):::ENTER
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1 == true
arg2 == false
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.LexicalConverter.LexicalConverter(org.KonohaScript.KNameSpace, boolean, boolean):::EXIT
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.DefinedTokenMatrix.getClass().getName() == orig(arg0.DefinedTokenMatrix.getClass().getName())
arg0.DefinedTokenMatrix[] == orig(arg0.DefinedTokenMatrix[])
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
this.LastIndent == 0
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.DefinedTokenMatrix[] has only one value, of length 41
arg0.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.DefinedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.LexicalConverter.ResolveTokenSyntax(org.KonohaScript.KToken):::ENTER
arg0 != null
arg0.uline >= 0
arg0.ParsedText != null
arg0.flag == 0
arg0.ResolvedSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
arg0.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab != null
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
===========================================================================
org.KonohaScript.LexicalConverter.ResolveTokenSyntax(org.KonohaScript.KToken):::EXIT
this.TopLevel == orig(this.TopLevel)
this.SkipIndent == orig(this.SkipIndent)
this.LastIndent == orig(this.LastIndent)
this.ns == orig(this.ns)
this.ns.KonohaContext == orig(this.ns.KonohaContext)
this.ns.KonohaContext.RootNameSpace == orig(this.ns.KonohaContext.RootNameSpace)
this.ns.KonohaContext.DefaultNameSpace == orig(this.ns.KonohaContext.DefaultNameSpace)
this.ns.KonohaContext.SymbolTable == orig(this.ns.KonohaContext.SymbolTable)
this.ns.KonohaContext.VoidType == orig(this.ns.KonohaContext.VoidType)
this.ns.KonohaContext.BooleanType == orig(this.ns.KonohaContext.BooleanType)
this.ns.ParentNameSpace == orig(this.ns.ParentNameSpace)
this.ns.ParentNameSpace.KonohaContext == orig(this.ns.ParentNameSpace.KonohaContext)
this.ns.ParentNameSpace.ParentNameSpace == orig(this.ns.ParentNameSpace.ParentNameSpace)
this.ns.ParentNameSpace.ImportedNameSpaceList == orig(this.ns.ParentNameSpace.ImportedNameSpaceList)
this.ns.ParentNameSpace.DefinedTokenMatrix == orig(this.ns.ParentNameSpace.DefinedTokenMatrix)
this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.DefinedTokenMatrix[] == orig(this.ns.ParentNameSpace.DefinedTokenMatrix[])
this.ns.ParentNameSpace.ImportedTokenMatrix == orig(this.ns.ParentNameSpace.ImportedTokenMatrix)
this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.ns.ParentNameSpace.ImportedTokenMatrix[] == orig(this.ns.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
this.ns.ParentNameSpace.DefinedSymbolTable == orig(this.ns.ParentNameSpace.DefinedSymbolTable)
this.ns.ParentNameSpace.ImportedSymbolTable == orig(this.ns.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
this.ns.ImportedNameSpaceList == orig(this.ns.ImportedNameSpaceList)
this.ns.DefinedTokenMatrix == orig(this.ns.DefinedTokenMatrix)
this.ns.DefinedTokenMatrix.getClass().getName() == orig(this.ns.DefinedTokenMatrix.getClass().getName())
this.ns.DefinedTokenMatrix[] == orig(this.ns.DefinedTokenMatrix[])
this.ns.ImportedTokenMatrix == orig(this.ns.ImportedTokenMatrix)
this.ns.ImportedTokenMatrix.getClass().getName() == orig(this.ns.ImportedTokenMatrix.getClass().getName())
this.ns.ImportedTokenMatrix[] == orig(this.ns.ImportedTokenMatrix[])
this.ns.DefinedSymbolTable == orig(this.ns.DefinedSymbolTable)
this.ns.ImportedSymbolTable == orig(this.ns.ImportedSymbolTable)
org.KonohaScript.LexicalConverter.$assertionsDisabled == orig(org.KonohaScript.LexicalConverter.$assertionsDisabled)
arg0.uline == orig(arg0.uline)
arg0.ParsedText == orig(arg0.ParsedText)
arg0.ParsedText.toString == orig(arg0.ParsedText.toString)
arg0.flag == orig(arg0.flag)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.uline >= 0
arg0.ParsedText != null
arg0.flag == 0
arg0.ResolvedSyntax != null
arg0.ResolvedSyntax.PackageNameSpace has only one value
arg0.ResolvedSyntax.PackageNameSpace != null
arg0.ResolvedSyntax.SyntaxName != null
arg0.ResolvedSyntax.SyntaxFlag >= 1
arg0.ResolvedSyntax.ParseObject has only one value
arg0.ResolvedSyntax.ParseObject != null
arg0.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ResolvedSyntax.TypeObject == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab != null
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
===========================================================================
org.KonohaScript.UntypedNode:::CLASS
org.KonohaScript.UntypedNode.$assertionsDisabled == false
===========================================================================
org.KonohaScript.UntypedNode:::OBJECT
this.Parent == null
org.KonohaScript.UntypedNode.$assertionsDisabled == false
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
org.KonohaScript.KNameSpace.$assertionsDisabled == false
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab != null
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
this.PreviousNode.Parent == null
this.PreviousNode.PreviousNode == null
this.PreviousNode.NextNode has only one value
this.PreviousNode.NextNode.Parent == null
this.PreviousNode.NextNode.PreviousNode has only one value
this.PreviousNode.NextNode.NextNode == null
this.PreviousNode.NextNode.NodeNameSpace has only one value
this.PreviousNode.NextNode.Syntax has only one value
this.PreviousNode.NextNode.KeyToken has only one value
this.PreviousNode.NextNode.NodeList has only one value
this.PreviousNode.NextNode.NodeList[] contains no nulls and has only one value, of length 2
this.PreviousNode.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.PreviousNode.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
this.PreviousNode.NodeNameSpace has only one value
this.PreviousNode.NodeNameSpace.KonohaContext has only one value
this.PreviousNode.NodeNameSpace.ParentNameSpace has only one value
this.PreviousNode.NodeNameSpace.ImportedNameSpaceList == null
this.PreviousNode.NodeNameSpace.DefinedTokenMatrix == null
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix has only one value
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.PreviousNode.NodeNameSpace.DefinedSymbolTable == null
this.PreviousNode.NodeNameSpace.ImportedSymbolTable has only one value
this.PreviousNode.Syntax has only one value
this.PreviousNode.Syntax.PackageNameSpace has only one value
this.PreviousNode.Syntax.SyntaxName has only one value
this.PreviousNode.Syntax.SyntaxName.toString == "=="
this.PreviousNode.Syntax.SyntaxFlag == 12802
this.PreviousNode.Syntax.ParseObject has only one value
this.PreviousNode.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.PreviousNode.Syntax.ParseMethod == null
this.PreviousNode.Syntax.TypeObject == null
this.PreviousNode.Syntax.TypeMethod == null
this.PreviousNode.Syntax.ParentSyntax == null
this.PreviousNode.KeyToken has only one value
this.PreviousNode.KeyToken.uline == 2
this.PreviousNode.KeyToken.ParsedText has only one value
this.PreviousNode.KeyToken.ParsedText.toString == "=="
this.PreviousNode.KeyToken.flag == 0
this.PreviousNode.KeyToken.ResolvedSyntax has only one value
this.PreviousNode.KeyToken.ResolvedObject has only one value
this.PreviousNode.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
this.PreviousNode.NodeList has only one value
this.PreviousNode.NodeList[] contains no nulls and has only one value, of length 2
this.PreviousNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.PreviousNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
this.NextNode.Parent == null
this.NextNode.PreviousNode.Parent == null
this.NextNode.PreviousNode.PreviousNode == null
this.NextNode.PreviousNode.NextNode has only one value
this.NextNode.PreviousNode.NodeNameSpace has only one value
this.NextNode.PreviousNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.NextNode.PreviousNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
this.NextNode.NextNode == null
this.NextNode.NodeNameSpace has only one value
this.NextNode.NodeNameSpace.KonohaContext has only one value
this.NextNode.NodeNameSpace.ParentNameSpace has only one value
this.NextNode.NodeNameSpace.ImportedNameSpaceList == null
this.NextNode.NodeNameSpace.DefinedTokenMatrix == null
this.NextNode.NodeNameSpace.ImportedTokenMatrix has only one value
this.NextNode.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.NextNode.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.NextNode.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.NextNode.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.NextNode.NodeNameSpace.DefinedSymbolTable == null
this.NextNode.NodeNameSpace.ImportedSymbolTable has only one value
this.NextNode.Syntax has only one value
this.NextNode.Syntax.PackageNameSpace has only one value
this.NextNode.Syntax.SyntaxName has only one value
this.NextNode.Syntax.SyntaxName.toString == "=="
this.NextNode.Syntax.SyntaxFlag == 12802
this.NextNode.Syntax.ParseObject has only one value
this.NextNode.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.NextNode.Syntax.ParseMethod == null
this.NextNode.Syntax.TypeObject == null
this.NextNode.Syntax.TypeMethod == null
this.NextNode.Syntax.ParentSyntax == null
this.NextNode.KeyToken has only one value
this.NextNode.KeyToken.uline == 2
this.NextNode.KeyToken.ParsedText has only one value
this.NextNode.KeyToken.ParsedText.toString == "=="
this.NextNode.KeyToken.flag == 0
this.NextNode.KeyToken.ResolvedSyntax has only one value
this.NextNode.KeyToken.ResolvedObject has only one value
this.NextNode.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
this.NextNode.NodeList has only one value
this.NextNode.NodeList[] contains no nulls and has only one value, of length 2
this.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
this.NodeNameSpace has only one value
this.NodeNameSpace != null
this.NodeNameSpace.KonohaContext has only one value
this.NodeNameSpace.KonohaContext != null
this.NodeNameSpace.KonohaContext.RootNameSpace has only one value
this.NodeNameSpace.KonohaContext.RootNameSpace != null
this.NodeNameSpace.KonohaContext.DefaultNameSpace has only one value
this.NodeNameSpace.KonohaContext.DefaultNameSpace != null
this.NodeNameSpace.KonohaContext.SymbolTable has only one value
this.NodeNameSpace.KonohaContext.SymbolTable != null
this.NodeNameSpace.KonohaContext.VoidType has only one value
this.NodeNameSpace.KonohaContext.VoidType != null
this.NodeNameSpace.KonohaContext.BooleanType has only one value
this.NodeNameSpace.KonohaContext.BooleanType != null
this.NodeNameSpace.ParentNameSpace has only one value
this.NodeNameSpace.ParentNameSpace != null
this.NodeNameSpace.ParentNameSpace.KonohaContext has only one value
this.NodeNameSpace.ParentNameSpace.KonohaContext != null
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == null
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == null
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix has only one value
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix != null
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix has only one value
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix != null
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable has only one value
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable != null
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable has only one value
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable != null
this.NodeNameSpace.ImportedNameSpaceList == null
this.NodeNameSpace.DefinedTokenMatrix == null
this.NodeNameSpace.ImportedTokenMatrix has only one value
this.NodeNameSpace.ImportedTokenMatrix != null
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.NodeNameSpace.DefinedSymbolTable == null
this.NodeNameSpace.ImportedSymbolTable has only one value
this.NodeNameSpace.ImportedSymbolTable != null
this.Syntax != null
this.Syntax.PackageNameSpace.KonohaContext has only one value
this.Syntax.PackageNameSpace.KonohaContext != null
this.Syntax.PackageNameSpace.ParentNameSpace == null
this.Syntax.PackageNameSpace.ImportedNameSpaceList == null
this.Syntax.PackageNameSpace.DefinedTokenMatrix has only one value
this.Syntax.PackageNameSpace.DefinedTokenMatrix != null
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] has only one value, of length 41
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.Syntax.PackageNameSpace.ImportedTokenMatrix has only one value
this.Syntax.PackageNameSpace.ImportedTokenMatrix != null
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] has only one value, of length 41
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.Syntax.PackageNameSpace.DefinedSymbolTable has only one value
this.Syntax.PackageNameSpace.DefinedSymbolTable != null
this.Syntax.PackageNameSpace.ImportedSymbolTable has only one value
this.Syntax.PackageNameSpace.ImportedSymbolTable != null
this.Syntax.SyntaxName != null
this.Syntax.SyntaxFlag >= 1
this.Syntax.ParseObject != null
this.Syntax.TypeObject == null
this.Syntax.ParentSyntax.PackageNameSpace has only one value
this.Syntax.ParentSyntax.PackageNameSpace != null
this.Syntax.ParentSyntax.SyntaxName has only one value
this.Syntax.ParentSyntax.SyntaxName != null
this.Syntax.ParentSyntax.SyntaxName.toString == "$Type"
this.Syntax.ParentSyntax.SyntaxFlag == 1
this.Syntax.ParentSyntax.ParseObject has only one value
this.Syntax.ParentSyntax.ParseObject != null
this.Syntax.ParentSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.ParentSyntax.TypeObject == null
this.Syntax.ParentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == "$Error"
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject != null
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == null
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName != null
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == "$Indent"
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == 32000
org.KonohaScript.KSyntax.IndentSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseObject != null
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod != null
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == null
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == null
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName != null
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == "$Empty"
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == 27200
org.KonohaScript.KSyntax.EmptySyntax.ParseObject has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseObject != null
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod != null
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == null
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == null
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == null
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName != null
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == "$Type"
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.TypeSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseObject != null
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod != null
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == null
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == null
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == "$Const"
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ConstSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseObject != null
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == null
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName != null
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == "$Member"
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.MemberSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseObject != null
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod != null
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == null
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == null
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == "$ApplyMethod"
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == 16
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod != null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == null
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == null
this.KeyToken != null
this.KeyToken.uline one of { 2, 1000 }
this.KeyToken.ParsedText != null
this.KeyToken.flag one of { 0, 1 }
this.KeyToken.ResolvedSyntax != null
this.KeyToken.ResolvedSyntax.SyntaxName != null
this.KeyToken.ResolvedSyntax.SyntaxFlag >= 1
this.KeyToken.ResolvedSyntax.ParseObject != null
this.KeyToken.ResolvedSyntax.TypeObject == null
size(this.PreviousNode.NextNode.NodeList[]) == 2
size(this.PreviousNode.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(this.PreviousNode.NodeList[]) == 2
size(this.NextNode.PreviousNode.NodeList[]) == 2
size(this.NextNode.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(this.NextNode.NodeList[]) == 2
size(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(this.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(this.Syntax.PackageNameSpace.DefinedTokenMatrix[]) == 41
size(this.Syntax.PackageNameSpace.ImportedTokenMatrix[]) == 41
size(this.NodeList[]) one of { 1, 2, 3 }
===========================================================================
org.KonohaScript.UntypedNode.BinaryNode(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, org.KonohaScript.KToken, org.KonohaScript.UntypedNode):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1.Parent == null
arg1.PreviousNode == null
arg1.NextNode == null
arg1.NodeNameSpace has only one value
arg1.NodeNameSpace.KonohaContext has only one value
arg1.NodeNameSpace.ParentNameSpace has only one value
arg1.NodeNameSpace.ImportedNameSpaceList == null
arg1.NodeNameSpace.DefinedTokenMatrix == null
arg1.NodeNameSpace.ImportedTokenMatrix has only one value
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg1.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.NodeNameSpace.DefinedSymbolTable == null
arg1.NodeNameSpace.ImportedSymbolTable has only one value
arg1.Syntax has only one value
arg1.Syntax.PackageNameSpace has only one value
arg1.Syntax.SyntaxName has only one value
arg1.Syntax.SyntaxName.toString == "$Symbol"
arg1.Syntax.SyntaxFlag == 1
arg1.Syntax.ParseObject has only one value
arg1.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.Syntax.ParseMethod has only one value
arg1.Syntax.TypeObject == null
arg1.Syntax.TypeMethod == null
arg1.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg1.KeyToken.uline == 2
arg1.KeyToken.flag == 0
arg1.KeyToken.ResolvedSyntax has only one value
arg1.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg1.NodeList == null
arg2.uline == 2
arg2.ParsedText.toString one of { "+", "==" }
arg2.flag == 0
arg2.ResolvedSyntax.PackageNameSpace has only one value
arg2.ResolvedSyntax.SyntaxName.toString one of { "+", "==" }
arg2.ResolvedSyntax.SyntaxFlag one of { 8003, 12802 }
arg2.ResolvedSyntax.ParseObject has only one value
arg2.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg2.ResolvedSyntax.TypeObject == null
arg2.ResolvedSyntax.TypeMethod == null
arg2.ResolvedSyntax.ParentSyntax == null
arg2.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg3.Parent == null
arg3.PreviousNode == null
arg3.NextNode.Parent == null
arg3.NextNode.NextNode == null
arg3.NextNode.NodeNameSpace has only one value
arg3.NextNode.Syntax has only one value
arg3.NextNode.KeyToken has only one value
arg3.NextNode.NodeList has only one value
arg3.NextNode.NodeList[] contains no nulls and has only one value, of length 2
arg3.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg3.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg3.NodeNameSpace has only one value
arg3.NodeNameSpace.KonohaContext has only one value
arg3.NodeNameSpace.ParentNameSpace has only one value
arg3.NodeNameSpace.ImportedNameSpaceList == null
arg3.NodeNameSpace.DefinedTokenMatrix == null
arg3.NodeNameSpace.ImportedTokenMatrix has only one value
arg3.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg3.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg3.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg3.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg3.NodeNameSpace.DefinedSymbolTable == null
arg3.NodeNameSpace.ImportedSymbolTable has only one value
arg3.Syntax.PackageNameSpace has only one value
arg3.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
arg3.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
arg3.Syntax.ParseObject has only one value
arg3.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg3.Syntax.TypeObject == null
arg3.Syntax.TypeMethod == null
arg3.Syntax.ParentSyntax == null
arg3.KeyToken.uline == 2
arg3.KeyToken.flag == 0
arg3.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg3.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg3.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg1.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg3.NextNode.NodeList[]) == 2
size(arg3.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg3.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.BinaryNode(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, org.KonohaScript.KToken, org.KonohaScript.UntypedNode):::EXIT163
arg3.NextNode == orig(arg3.NextNode)
arg1.KeyToken has only one value
arg1.KeyToken.ParsedText has only one value
arg1.KeyToken.ParsedText.toString == "D"
arg2.ParsedText has only one value
arg2.ParsedText.toString == "+"
arg2.ResolvedSyntax has only one value
arg2.ResolvedSyntax.SyntaxName has only one value
arg2.ResolvedSyntax.SyntaxName.toString == "+"
arg2.ResolvedSyntax.SyntaxFlag == 8003
arg2.ResolvedSyntax.ParseMethod has only one value
arg2.ResolvedObject has only one value
arg3.Syntax has only one value
arg3.Syntax.SyntaxName has only one value
arg3.Syntax.SyntaxName.toString == "=="
arg3.Syntax.SyntaxFlag == 12802
arg3.Syntax.ParseMethod == null
arg3.KeyToken has only one value
arg3.KeyToken.ParsedText has only one value
arg3.KeyToken.ParsedText.toString == "=="
arg3.KeyToken.ResolvedSyntax has only one value
arg3.KeyToken.ResolvedObject has only one value
arg3.NodeList has only one value
arg3.NodeList[] contains no nulls and has only one value, of length 2
return has only one value
return.NextNode == null
return.Syntax has only one value
return.Syntax.SyntaxName has only one value
return.Syntax.SyntaxName.toString == "=="
return.Syntax.SyntaxFlag == 12802
return.Syntax.ParseMethod == null
return.KeyToken has only one value
return.KeyToken.ParsedText has only one value
return.KeyToken.ParsedText.toString == "=="
return.KeyToken.ResolvedSyntax has only one value
return.KeyToken.ResolvedObject has only one value
return.NodeList has only one value
return.NodeList[] contains no nulls and has only one value, of length 2
orig(arg1) has only one value
orig(arg2) has only one value
orig(arg3) has only one value
orig(arg3.NodeList[]) contains no nulls and has only one value, of length 2
===========================================================================
org.KonohaScript.UntypedNode.BinaryNode(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, org.KonohaScript.KToken, org.KonohaScript.UntypedNode):::EXIT173
arg3.NodeList[] == orig(arg3.NodeList[])
arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" }
arg3.Syntax.SyntaxName.toString one of { "$Symbol", "+" }
arg3.Syntax.SyntaxFlag one of { 1, 8003 }
arg3.KeyToken.ParsedText.toString one of { "+", "C", "F" }
arg3.NodeList[] contains no nulls and has only one value, of length 2
===========================================================================
org.KonohaScript.UntypedNode.BinaryNode(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, org.KonohaScript.KToken, org.KonohaScript.UntypedNode):::EXIT
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.Parent == orig(arg1.Parent)
arg1.PreviousNode == orig(arg1.PreviousNode)
arg1.NextNode == orig(arg1.NextNode)
arg1.NodeNameSpace == orig(arg1.NodeNameSpace)
arg1.NodeNameSpace.KonohaContext == orig(arg1.NodeNameSpace.KonohaContext)
arg1.NodeNameSpace.ParentNameSpace == orig(arg1.NodeNameSpace.ParentNameSpace)
arg1.NodeNameSpace.ImportedNameSpaceList == orig(arg1.NodeNameSpace.ImportedNameSpaceList)
arg1.NodeNameSpace.DefinedTokenMatrix == orig(arg1.NodeNameSpace.DefinedTokenMatrix)
arg1.NodeNameSpace.ImportedTokenMatrix == orig(arg1.NodeNameSpace.ImportedTokenMatrix)
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg1.NodeNameSpace.ImportedTokenMatrix[] == orig(arg1.NodeNameSpace.ImportedTokenMatrix[])
arg1.NodeNameSpace.DefinedSymbolTable == orig(arg1.NodeNameSpace.DefinedSymbolTable)
arg1.NodeNameSpace.ImportedSymbolTable == orig(arg1.NodeNameSpace.ImportedSymbolTable)
arg1.Syntax == orig(arg1.Syntax)
arg1.Syntax.PackageNameSpace == orig(arg1.Syntax.PackageNameSpace)
arg1.Syntax.SyntaxName == orig(arg1.Syntax.SyntaxName)
arg1.Syntax.SyntaxName.toString == orig(arg1.Syntax.SyntaxName.toString)
arg1.Syntax.SyntaxFlag == orig(arg1.Syntax.SyntaxFlag)
arg1.Syntax.ParseObject == orig(arg1.Syntax.ParseObject)
arg1.Syntax.ParseObject.getClass().getName() == orig(arg1.Syntax.ParseObject.getClass().getName())
arg1.Syntax.ParseMethod == orig(arg1.Syntax.ParseMethod)
arg1.Syntax.TypeObject == orig(arg1.Syntax.TypeObject)
arg1.Syntax.TypeMethod == orig(arg1.Syntax.TypeMethod)
arg1.Syntax.ParentSyntax == orig(arg1.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
arg1.KeyToken == orig(arg1.KeyToken)
arg1.KeyToken.uline == orig(arg1.KeyToken.uline)
arg1.KeyToken.ParsedText == orig(arg1.KeyToken.ParsedText)
arg1.KeyToken.ParsedText.toString == orig(arg1.KeyToken.ParsedText.toString)
arg1.KeyToken.flag == orig(arg1.KeyToken.flag)
arg1.KeyToken.ResolvedSyntax == orig(arg1.KeyToken.ResolvedSyntax)
arg1.KeyToken.ResolvedObject == orig(arg1.KeyToken.ResolvedObject)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg1.NodeList == orig(arg1.NodeList)
arg2.uline == orig(arg2.uline)
arg2.ParsedText == orig(arg2.ParsedText)
arg2.ParsedText.toString == orig(arg2.ParsedText.toString)
arg2.flag == orig(arg2.flag)
arg2.ResolvedSyntax == orig(arg2.ResolvedSyntax)
arg2.ResolvedSyntax.PackageNameSpace == orig(arg2.ResolvedSyntax.PackageNameSpace)
arg2.ResolvedSyntax.SyntaxName == orig(arg2.ResolvedSyntax.SyntaxName)
arg2.ResolvedSyntax.SyntaxName.toString == orig(arg2.ResolvedSyntax.SyntaxName.toString)
arg2.ResolvedSyntax.SyntaxFlag == orig(arg2.ResolvedSyntax.SyntaxFlag)
arg2.ResolvedSyntax.ParseObject == orig(arg2.ResolvedSyntax.ParseObject)
arg2.ResolvedSyntax.ParseObject.getClass().getName() == orig(arg2.ResolvedSyntax.ParseObject.getClass().getName())
arg2.ResolvedSyntax.ParseMethod == orig(arg2.ResolvedSyntax.ParseMethod)
arg2.ResolvedSyntax.TypeObject == orig(arg2.ResolvedSyntax.TypeObject)
arg2.ResolvedSyntax.TypeMethod == orig(arg2.ResolvedSyntax.TypeMethod)
arg2.ResolvedSyntax.ParentSyntax == orig(arg2.ResolvedSyntax.ParentSyntax)
arg2.ResolvedObject == orig(arg2.ResolvedObject)
arg2.ResolvedObject.getClass().getName() == orig(arg2.ResolvedObject.getClass().getName())
arg3.Parent == orig(arg3.Parent)
arg3.PreviousNode == orig(arg3.PreviousNode)
arg3.NodeNameSpace == orig(arg3.NodeNameSpace)
arg3.NodeNameSpace.KonohaContext == orig(arg3.NodeNameSpace.KonohaContext)
arg3.NodeNameSpace.ParentNameSpace == orig(arg3.NodeNameSpace.ParentNameSpace)
arg3.NodeNameSpace.ImportedNameSpaceList == orig(arg3.NodeNameSpace.ImportedNameSpaceList)
arg3.NodeNameSpace.DefinedTokenMatrix == orig(arg3.NodeNameSpace.DefinedTokenMatrix)
arg3.NodeNameSpace.ImportedTokenMatrix == orig(arg3.NodeNameSpace.ImportedTokenMatrix)
arg3.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg3.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg3.NodeNameSpace.ImportedTokenMatrix[] == orig(arg3.NodeNameSpace.ImportedTokenMatrix[])
arg3.NodeNameSpace.DefinedSymbolTable == orig(arg3.NodeNameSpace.DefinedSymbolTable)
arg3.NodeNameSpace.ImportedSymbolTable == orig(arg3.NodeNameSpace.ImportedSymbolTable)
arg3.Syntax == orig(arg3.Syntax)
arg3.Syntax.PackageNameSpace == orig(arg3.Syntax.PackageNameSpace)
arg3.Syntax.SyntaxName == orig(arg3.Syntax.SyntaxName)
arg3.Syntax.SyntaxName.toString == orig(arg3.Syntax.SyntaxName.toString)
arg3.Syntax.SyntaxFlag == orig(arg3.Syntax.SyntaxFlag)
arg3.Syntax.ParseObject == orig(arg3.Syntax.ParseObject)
arg3.Syntax.ParseObject.getClass().getName() == orig(arg3.Syntax.ParseObject.getClass().getName())
arg3.Syntax.ParseMethod == orig(arg3.Syntax.ParseMethod)
arg3.Syntax.TypeObject == orig(arg3.Syntax.TypeObject)
arg3.Syntax.TypeMethod == orig(arg3.Syntax.TypeMethod)
arg3.Syntax.ParentSyntax == orig(arg3.Syntax.ParentSyntax)
arg3.KeyToken == orig(arg3.KeyToken)
arg3.KeyToken.uline == orig(arg3.KeyToken.uline)
arg3.KeyToken.ParsedText == orig(arg3.KeyToken.ParsedText)
arg3.KeyToken.ParsedText.toString == orig(arg3.KeyToken.ParsedText.toString)
arg3.KeyToken.flag == orig(arg3.KeyToken.flag)
arg3.KeyToken.ResolvedSyntax == orig(arg3.KeyToken.ResolvedSyntax)
arg3.KeyToken.ResolvedObject == orig(arg3.KeyToken.ResolvedObject)
arg3.KeyToken.ResolvedObject.getClass().getName() == orig(arg3.KeyToken.ResolvedObject.getClass().getName())
arg3.NodeList == orig(arg3.NodeList)
size(arg3.NodeList[]) == orig(size(arg3.NodeList[]))
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.KeyToken.ParsedText.toString == "==")
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.KeyToken.ResolvedObject has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.NodeList has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.NodeList[] contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.Syntax.ParseMethod == null)
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.Syntax.SyntaxFlag == 12802)
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (arg3.Syntax.SyntaxName.toString == "==")
(arg1.KeyToken.ParsedText.toString == "D")  <==>  (orig(arg3.NodeList[]) contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg1.KeyToken has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg1.KeyToken.ParsedText has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ParsedText has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ParsedText.toString == "+")
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ResolvedObject has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ResolvedSyntax has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ResolvedSyntax.ParseMethod has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ResolvedSyntax.SyntaxFlag == 8003)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ResolvedSyntax.SyntaxName has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg2.ResolvedSyntax.SyntaxName.toString == "+")
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg3.KeyToken has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg3.KeyToken.ParsedText has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg3.KeyToken.ResolvedSyntax has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg3.NextNode == orig(arg3.NextNode))
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg3.Syntax has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (arg3.Syntax.SyntaxName has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (orig(arg1) has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (orig(arg2) has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (orig(arg3) has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (orig(arg3.NextNode) == null)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.KeyToken has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.KeyToken.ParsedText has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.KeyToken.ParsedText.toString == "==")
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.KeyToken.ResolvedObject has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.KeyToken.ResolvedSyntax has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.NextNode == null)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.NodeList has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.NodeList[] contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.Syntax has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.Syntax.ParseMethod == null)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.Syntax.SyntaxFlag == 12802)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.Syntax.SyntaxName has only one value)
(arg1.KeyToken.ParsedText.toString == "D")  ==>  (return.Syntax.SyntaxName.toString == "==")
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  <==>  (arg3.KeyToken.ParsedText.toString one of { "+", "C", "F" })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  <==>  (arg3.NodeList[] contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  <==>  (arg3.Syntax.SyntaxFlag one of { 1, 8003 })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  <==>  (arg3.Syntax.SyntaxName.toString one of { "$Symbol", "+" })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  <==>  (orig(arg3.NodeList[]) contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (arg2.ParsedText.toString one of { "+", "==" })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (arg2.ResolvedSyntax.SyntaxFlag one of { 8003, 12802 })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (arg2.ResolvedSyntax.SyntaxName.toString one of { "+", "==" })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (arg3.NodeList[] == orig(arg3.NodeList[]))
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.KeyToken) has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.NextNode) == null)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.NodeList) has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.NodeList[]) contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.NodeList[].getClass().getName()) == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode])
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.NodeList[].getClass().getName()) elements == org.KonohaScript.UntypedNode.class)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.NodeNameSpace) has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.Parent) == null)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (orig(arg3.NextNode.Syntax) has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.KeyToken.ParsedText.toString one of { "+", "==" })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.KeyToken has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.NextNode == null)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.NodeList has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.NodeList[] contains no nulls and has only one value, of length 2)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode])
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.NodeNameSpace has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.Parent == null)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.NextNode.Syntax has only one value)
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.Syntax.SyntaxFlag one of { 8003, 12802 })
(arg1.KeyToken.ParsedText.toString one of { "a", "b", "e" })  ==>  (return.Syntax.SyntaxName.toString one of { "+", "==" })
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1.Parent == null
arg1.PreviousNode == null
arg1.NextNode == null
arg1.NodeNameSpace has only one value
arg1.NodeNameSpace.KonohaContext has only one value
arg1.NodeNameSpace.ParentNameSpace has only one value
arg1.NodeNameSpace.ImportedNameSpaceList == null
arg1.NodeNameSpace.DefinedTokenMatrix == null
arg1.NodeNameSpace.ImportedTokenMatrix has only one value
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg1.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.NodeNameSpace.DefinedSymbolTable == null
arg1.NodeNameSpace.ImportedSymbolTable has only one value
arg1.Syntax has only one value
arg1.Syntax.PackageNameSpace has only one value
arg1.Syntax.SyntaxName has only one value
arg1.Syntax.SyntaxName.toString == "$Symbol"
arg1.Syntax.SyntaxFlag == 1
arg1.Syntax.ParseObject has only one value
arg1.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.Syntax.ParseMethod has only one value
arg1.Syntax.TypeObject == null
arg1.Syntax.TypeMethod == null
arg1.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg1.KeyToken.uline == 2
arg1.KeyToken.flag == 0
arg1.KeyToken.ResolvedSyntax has only one value
arg1.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg1.NodeList == null
arg2.uline == 2
arg2.ParsedText.toString one of { "+", "==" }
arg2.flag == 0
arg2.ResolvedSyntax.PackageNameSpace has only one value
arg2.ResolvedSyntax.SyntaxName.toString one of { "+", "==" }
arg2.ResolvedSyntax.SyntaxFlag one of { 8003, 12802 }
arg2.ResolvedSyntax.ParseObject has only one value
arg2.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg2.ResolvedSyntax.TypeObject == null
arg2.ResolvedSyntax.TypeMethod == null
arg2.ResolvedSyntax.ParentSyntax == null
arg2.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg3.Parent == null
arg3.PreviousNode == null
arg3.NextNode == null
arg3.NodeNameSpace has only one value
arg3.NodeNameSpace.KonohaContext has only one value
arg3.NodeNameSpace.ParentNameSpace has only one value
arg3.NodeNameSpace.ImportedNameSpaceList == null
arg3.NodeNameSpace.DefinedTokenMatrix == null
arg3.NodeNameSpace.ImportedTokenMatrix has only one value
arg3.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg3.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg3.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg3.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg3.NodeNameSpace.DefinedSymbolTable == null
arg3.NodeNameSpace.ImportedSymbolTable has only one value
arg3.Syntax.PackageNameSpace has only one value
arg3.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
arg3.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
arg3.Syntax.ParseObject has only one value
arg3.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg3.Syntax.TypeObject == null
arg3.Syntax.TypeMethod == null
arg3.Syntax.ParentSyntax == null
arg3.KeyToken.uline == 2
arg3.KeyToken.flag == 0
arg3.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg3.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg3.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
return.Parent == null
return.PreviousNode == null
return.NextNode.Parent == null
return.NextNode.NextNode == null
return.NextNode.NodeNameSpace has only one value
return.NextNode.Syntax has only one value
return.NextNode.KeyToken has only one value
return.NextNode.NodeList has only one value
return.NextNode.NodeList[] contains no nulls and has only one value, of length 2
return.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
return.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
return.NodeNameSpace has only one value
return.NodeNameSpace.KonohaContext has only one value
return.NodeNameSpace.ParentNameSpace has only one value
return.NodeNameSpace.ImportedNameSpaceList == null
return.NodeNameSpace.DefinedTokenMatrix == null
return.NodeNameSpace.ImportedTokenMatrix has only one value
return.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
return.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.NodeNameSpace.DefinedSymbolTable == null
return.NodeNameSpace.ImportedSymbolTable has only one value
return.Syntax.PackageNameSpace has only one value
return.Syntax.SyntaxName.toString one of { "+", "==" }
return.Syntax.SyntaxFlag one of { 8003, 12802 }
return.Syntax.ParseObject has only one value
return.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.Syntax.TypeObject == null
return.Syntax.TypeMethod == null
return.Syntax.ParentSyntax == null
return.KeyToken.uline == 2
return.KeyToken.ParsedText.toString one of { "+", "==" }
return.KeyToken.flag == 0
return.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
return.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
return.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg1.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg3.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg3.NodeList[]) == 2
size(return.NextNode.NodeList[]) == 2
size(return.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(return.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.IsAllowNoMatch(int):::ENTER
arg0 == 8
===========================================================================
org.KonohaScript.UntypedNode.IsAllowNoMatch(int):::EXIT
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
return == true
===========================================================================
org.KonohaScript.UntypedNode.IsAllowNoMatch(int):::EXIT;condition="return == true"
===========================================================================
org.KonohaScript.UntypedNode.LinkNode(org.KonohaScript.UntypedNode):::ENTER
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken.uline == 2
this.KeyToken.ParsedText.toString one of { "+", "==", "C" }
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
this.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg0 has only one value
arg0.Parent == null
arg0.PreviousNode.Parent == null
arg0.PreviousNode.PreviousNode == null
arg0.PreviousNode.NextNode has only one value
arg0.PreviousNode.NodeNameSpace has only one value
arg0.PreviousNode.NodeList[] contains no nulls and has only one value, of length 2
arg0.PreviousNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg0.PreviousNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "=="
arg0.Syntax.SyntaxFlag == 12802
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod == null
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod == null
arg0.Syntax.ParentSyntax == null
arg0.KeyToken has only one value
arg0.KeyToken.uline == 2
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "=="
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg0.NodeList has only one value
arg0.NodeList[] contains no nulls and has only one value, of length 2
arg0.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg0.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(this.NodeList[]) == 2
size(arg0.PreviousNode.NodeList[]) == 2
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.LinkNode(org.KonohaScript.UntypedNode):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.KeyToken.ResolvedObject.getClass().getName() == orig(this.KeyToken.ResolvedObject.getClass().getName())
this.NodeList == orig(this.NodeList)
this.NodeList[] == orig(this.NodeList[])
arg0.Parent == orig(arg0.Parent)
arg0.PreviousNode.Parent == orig(arg0.PreviousNode.Parent)
arg0.PreviousNode.PreviousNode == orig(arg0.PreviousNode.PreviousNode)
arg0.PreviousNode.NextNode == orig(arg0.PreviousNode.NextNode)
arg0.PreviousNode.NodeNameSpace == orig(arg0.PreviousNode.NodeNameSpace)
arg0.PreviousNode.NodeList[].getClass().getName() == orig(arg0.PreviousNode.NodeList[].getClass().getName())
arg0.NextNode == orig(arg0.NextNode)
arg0.NodeNameSpace == orig(arg0.NodeNameSpace)
arg0.NodeNameSpace.KonohaContext == orig(arg0.NodeNameSpace.KonohaContext)
arg0.NodeNameSpace.ParentNameSpace == orig(arg0.NodeNameSpace.ParentNameSpace)
arg0.NodeNameSpace.ImportedNameSpaceList == orig(arg0.NodeNameSpace.ImportedNameSpaceList)
arg0.NodeNameSpace.DefinedTokenMatrix == orig(arg0.NodeNameSpace.DefinedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix == orig(arg0.NodeNameSpace.ImportedTokenMatrix)
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.NodeNameSpace.ImportedTokenMatrix[] == orig(arg0.NodeNameSpace.ImportedTokenMatrix[])
arg0.NodeNameSpace.DefinedSymbolTable == orig(arg0.NodeNameSpace.DefinedSymbolTable)
arg0.NodeNameSpace.ImportedSymbolTable == orig(arg0.NodeNameSpace.ImportedSymbolTable)
arg0.Syntax == orig(arg0.Syntax)
arg0.Syntax.PackageNameSpace == orig(arg0.Syntax.PackageNameSpace)
arg0.Syntax.SyntaxName == orig(arg0.Syntax.SyntaxName)
arg0.Syntax.SyntaxName.toString == orig(arg0.Syntax.SyntaxName.toString)
arg0.Syntax.SyntaxFlag == orig(arg0.Syntax.SyntaxFlag)
arg0.Syntax.ParseObject == orig(arg0.Syntax.ParseObject)
arg0.Syntax.ParseObject.getClass().getName() == orig(arg0.Syntax.ParseObject.getClass().getName())
arg0.Syntax.ParseMethod == orig(arg0.Syntax.ParseMethod)
arg0.Syntax.TypeObject == orig(arg0.Syntax.TypeObject)
arg0.Syntax.TypeMethod == orig(arg0.Syntax.TypeMethod)
arg0.Syntax.ParentSyntax == orig(arg0.Syntax.ParentSyntax)
arg0.KeyToken == orig(arg0.KeyToken)
arg0.KeyToken.uline == orig(arg0.KeyToken.uline)
arg0.KeyToken.ParsedText == orig(arg0.KeyToken.ParsedText)
arg0.KeyToken.ParsedText.toString == orig(arg0.KeyToken.ParsedText.toString)
arg0.KeyToken.flag == orig(arg0.KeyToken.flag)
arg0.KeyToken.ResolvedSyntax == orig(arg0.KeyToken.ResolvedSyntax)
arg0.KeyToken.ResolvedObject == orig(arg0.KeyToken.ResolvedObject)
arg0.KeyToken.ResolvedObject.getClass().getName() == orig(arg0.KeyToken.ResolvedObject.getClass().getName())
arg0.NodeList == orig(arg0.NodeList)
arg0.NodeList[] == orig(arg0.NodeList[])
size(arg0.PreviousNode.NodeList[]) == orig(size(arg0.PreviousNode.NodeList[]))
this.PreviousNode == null
this.NextNode has only one value
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken.uline == 2
this.KeyToken.ParsedText.toString one of { "+", "==", "C" }
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
this.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg0.Parent == null
arg0.PreviousNode.Parent == null
arg0.PreviousNode.PreviousNode == null
arg0.PreviousNode.NextNode has only one value
arg0.PreviousNode.NodeNameSpace has only one value
arg0.PreviousNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg0.PreviousNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg0.NextNode == null
arg0.NodeNameSpace has only one value
arg0.NodeNameSpace.KonohaContext has only one value
arg0.NodeNameSpace.ParentNameSpace has only one value
arg0.NodeNameSpace.ImportedNameSpaceList == null
arg0.NodeNameSpace.DefinedTokenMatrix == null
arg0.NodeNameSpace.ImportedTokenMatrix has only one value
arg0.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.NodeNameSpace.DefinedSymbolTable == null
arg0.NodeNameSpace.ImportedSymbolTable has only one value
arg0.Syntax has only one value
arg0.Syntax.PackageNameSpace has only one value
arg0.Syntax.SyntaxName has only one value
arg0.Syntax.SyntaxName.toString == "=="
arg0.Syntax.SyntaxFlag == 12802
arg0.Syntax.ParseObject has only one value
arg0.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.Syntax.ParseMethod == null
arg0.Syntax.TypeObject == null
arg0.Syntax.TypeMethod == null
arg0.Syntax.ParentSyntax == null
arg0.KeyToken has only one value
arg0.KeyToken.uline == 2
arg0.KeyToken.ParsedText has only one value
arg0.KeyToken.ParsedText.toString == "=="
arg0.KeyToken.flag == 0
arg0.KeyToken.ResolvedSyntax has only one value
arg0.KeyToken.ResolvedObject has only one value
arg0.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg0.NodeList has only one value
arg0.NodeList[] contains no nulls and has only one value, of length 2
arg0.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg0.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(this.NodeList[]) == 2
size(arg0.PreviousNode.NodeList[]) == 2
size(arg0.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.NodeList[]) == 2
arg0.PreviousNode.NodeList[].getClass().getName() == orig(arg0.PreviousNode.NodeList[].getClass().getName()) (elementwise)
===========================================================================
org.KonohaScript.UntypedNode.MatchKeyword(int, java.lang.String, java.util.ArrayList, int, int, int):::ENTER
this has only one value
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Type"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "int"
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Type"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod has only one value
this.KeyToken.ResolvedSyntax.ParentSyntax has only one value
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
this.NodeList[].getClass().getName() one of { [null, org.KonohaScript.UntypedNode, org.KonohaScript.KToken], [org.KonohaScript.KToken] }
arg0 == -1
arg1.toString one of { "()", "=" }
arg2 has only one value
arg2[] contains no nulls and has only one value, of length 39
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 == 37
arg4 == 39
arg5 one of { 5, 8, 12 }
size(this.NodeList[]) one of { 1, 3 }
size(arg2[]) == 39
===========================================================================
org.KonohaScript.UntypedNode.MatchKeyword(int, java.lang.String, java.util.ArrayList, int, int, int):::EXIT334
===========================================================================
org.KonohaScript.UntypedNode.MatchKeyword(int, java.lang.String, java.util.ArrayList, int, int, int):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName())
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax.PackageNameSpace == orig(this.Syntax.ParentSyntax.PackageNameSpace)
this.Syntax.ParentSyntax.SyntaxName == orig(this.Syntax.ParentSyntax.SyntaxName)
this.Syntax.ParentSyntax.SyntaxName.toString == orig(this.Syntax.ParentSyntax.SyntaxName.toString)
this.Syntax.ParentSyntax.SyntaxFlag == orig(this.Syntax.ParentSyntax.SyntaxFlag)
this.Syntax.ParentSyntax.ParseObject == orig(this.Syntax.ParentSyntax.ParseObject)
this.Syntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.Syntax.ParentSyntax.ParseObject.getClass().getName())
this.Syntax.ParentSyntax.ParseMethod == orig(this.Syntax.ParentSyntax.ParseMethod)
this.Syntax.ParentSyntax.TypeObject == orig(this.Syntax.ParentSyntax.TypeObject)
this.Syntax.ParentSyntax.TypeMethod == orig(this.Syntax.ParentSyntax.TypeMethod)
this.Syntax.ParentSyntax.ParentSyntax == orig(this.Syntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.NodeList[].getClass().getName() == orig(this.NodeList[].getClass().getName())
arg1.toString == orig(arg1.toString)
arg2[] == orig(arg2[])
this.PreviousNode == null
this.NextNode == null
this.Syntax.SyntaxName.toString one of { "$Error", "$Type" }
this.Syntax.SyntaxFlag one of { 1, 27200 }
this.Syntax.ParentSyntax.ParseMethod has only one value
this.Syntax.ParentSyntax.ParentSyntax has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText.toString one of { "fibo", "int" }
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Error", "$Type" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 27200 }
this.NodeList[] contains no nulls and has only one value, of length 1
this.NodeList[] elements has only one value
this.NodeList[].getClass().getName() == [org.KonohaScript.KToken]
this.NodeList[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1.toString one of { "()", "=" }
arg2[] contains no nulls and has only one value, of length 39
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
return one of { -1, 37 }
size(this.NodeList[]) == 1
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[]) (elementwise)
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName()) (elementwise)
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[]) (elementwise)
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName()) (elementwise)
this.NodeList[] == orig(this.NodeList[]) (elementwise)
this.NodeList[] is the reverse of orig(this.NodeList[])
this.NodeList[].getClass().getName() == orig(this.NodeList[].getClass().getName()) (elementwise)
===========================================================================
org.KonohaScript.UntypedNode.MatchSyntax(int, java.lang.String, java.util.ArrayList, int, int, int):::ENTER
this has only one value
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Type"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "int"
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Type"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod has only one value
this.KeyToken.ResolvedSyntax.ParentSyntax has only one value
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
this.NodeList[] has only one value, of length 2
this.NodeList[].getClass().getName() == [null, org.KonohaScript.UntypedNode]
arg1.toString one of { "$Symbol", "$Type" }
arg2 has only one value
arg2[] contains no nulls and has only one value, of length 39
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 == 36
arg4 == 39
arg5 one of { 5, 8 }
size(this.NodeList[]) == 2
size(arg2[]) == 39
===========================================================================
org.KonohaScript.UntypedNode.MatchSyntax(int, java.lang.String, java.util.ArrayList, int, int, int):::EXIT343
arg1.toString == "$Symbol"
return == 37
orig(arg0) one of { -1, 0, 2 }
orig(arg1) has only one value
orig(arg5) == 8
===========================================================================
org.KonohaScript.UntypedNode.MatchSyntax(int, java.lang.String, java.util.ArrayList, int, int, int):::EXIT346
this.NodeList == orig(this.NodeList)
this.Syntax has only one value
this.Syntax.ParseMethod has only one value
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax has only one value
this.Syntax.ParentSyntax.ParseMethod == null
this.Syntax.ParentSyntax.ParentSyntax == null
this.NodeList == null
arg1.toString == "$Type"
return == 36
orig(arg0) == 1
orig(arg1) has only one value
orig(arg5) == 5
===========================================================================
org.KonohaScript.UntypedNode.MatchSyntax(int, java.lang.String, java.util.ArrayList, int, int, int):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
this.Syntax.ParentSyntax.PackageNameSpace == orig(this.Syntax.ParentSyntax.PackageNameSpace)
this.Syntax.ParentSyntax.SyntaxName == orig(this.Syntax.ParentSyntax.SyntaxName)
this.Syntax.ParentSyntax.SyntaxName.toString == orig(this.Syntax.ParentSyntax.SyntaxName.toString)
this.Syntax.ParentSyntax.SyntaxFlag == orig(this.Syntax.ParentSyntax.SyntaxFlag)
this.Syntax.ParentSyntax.ParseObject == orig(this.Syntax.ParentSyntax.ParseObject)
this.Syntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.Syntax.ParentSyntax.ParseObject.getClass().getName())
this.Syntax.ParentSyntax.ParseMethod == orig(this.Syntax.ParentSyntax.ParseMethod)
this.Syntax.ParentSyntax.TypeObject == orig(this.Syntax.ParentSyntax.TypeObject)
this.Syntax.ParentSyntax.TypeMethod == orig(this.Syntax.ParentSyntax.TypeMethod)
this.Syntax.ParentSyntax.ParentSyntax == orig(this.Syntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.KeyToken.ResolvedObject.getClass().getName() == orig(this.KeyToken.ResolvedObject.getClass().getName())
arg1.toString == orig(arg1.toString)
arg2[] == orig(arg2[])
size(this.NodeList[])-1 == orig(size(this.NodeList[]))
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Type"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "int"
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Type"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod has only one value
this.KeyToken.ResolvedSyntax.ParentSyntax has only one value
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
this.NodeList[].getClass().getName() one of { [null, org.KonohaScript.UntypedNode, org.KonohaScript.KToken], [org.KonohaScript.KToken] }
arg1.toString one of { "$Symbol", "$Type" }
arg2[] contains no nulls and has only one value, of length 39
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
return one of { 36, 37 }
size(this.NodeList[]) one of { 1, 3 }
===========================================================================
org.KonohaScript.UntypedNode.NewNullNode(org.KonohaScript.KNameSpace, java.util.ArrayList, int):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg2 == 36
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg1[]) == 39
===========================================================================
org.KonohaScript.UntypedNode.NewNullNode(org.KonohaScript.KNameSpace, java.util.ArrayList, int):::EXIT
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1[] == orig(arg1[])
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1[] contains no nulls and has only one value, of length 39
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
return has only one value
return.Parent == null
return.PreviousNode == null
return.NextNode == null
return.NodeNameSpace has only one value
return.NodeNameSpace.KonohaContext has only one value
return.NodeNameSpace.ParentNameSpace has only one value
return.NodeNameSpace.ImportedNameSpaceList == null
return.NodeNameSpace.DefinedTokenMatrix == null
return.NodeNameSpace.ImportedTokenMatrix has only one value
return.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
return.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.NodeNameSpace.DefinedSymbolTable == null
return.NodeNameSpace.ImportedSymbolTable has only one value
return.Syntax has only one value
return.Syntax.PackageNameSpace == null
return.Syntax.SyntaxName has only one value
return.Syntax.SyntaxName.toString == "$Empty"
return.Syntax.SyntaxFlag == 27200
return.Syntax.ParseObject has only one value
return.Syntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
return.Syntax.ParseMethod has only one value
return.Syntax.TypeObject == null
return.Syntax.TypeMethod == null
return.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
return.KeyToken has only one value
return.KeyToken.uline == 1000
return.KeyToken.ParsedText has only one value
return.KeyToken.ParsedText.toString == ""
return.KeyToken.flag == 0
return.KeyToken.ResolvedSyntax has only one value
return.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
return.NodeList == null
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(return.NodeNameSpace.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.UntypedNode.ParseNewNode2(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::ENTER
arg0 has only one value
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1.Parent == null
arg1.PreviousNode == null
arg1.NextNode == null
arg1.NodeNameSpace has only one value
arg1.NodeNameSpace.KonohaContext has only one value
arg1.NodeNameSpace.ParentNameSpace has only one value
arg1.NodeNameSpace.ImportedNameSpaceList == null
arg1.NodeNameSpace.DefinedTokenMatrix == null
arg1.NodeNameSpace.ImportedTokenMatrix has only one value
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg1.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.NodeNameSpace.DefinedSymbolTable == null
arg1.NodeNameSpace.ImportedSymbolTable has only one value
arg1.Syntax has only one value
arg1.Syntax.PackageNameSpace has only one value
arg1.Syntax.SyntaxName has only one value
arg1.Syntax.SyntaxName.toString == "$Symbol"
arg1.Syntax.SyntaxFlag == 1
arg1.Syntax.ParseObject has only one value
arg1.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.Syntax.ParseMethod has only one value
arg1.Syntax.TypeObject == null
arg1.Syntax.TypeMethod == null
arg1.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg1.KeyToken has only one value
arg1.KeyToken.uline == 2
arg1.KeyToken.ParsedText has only one value
arg1.KeyToken.ParsedText.toString == "C"
arg1.KeyToken.flag == 0
arg1.KeyToken.ResolvedSyntax has only one value
arg1.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg1.NodeList == null
arg2 has only one value
arg2[] contains no nulls and has only one value, of length 24
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
arg4 == 24
arg5 one of { 0, 1 }
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg1.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg2[]) == 24
===========================================================================
org.KonohaScript.UntypedNode.ParseNewNode2(org.KonohaScript.KNameSpace, org.KonohaScript.UntypedNode, java.util.ArrayList, int, int, int):::EXIT
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.Parent == orig(arg1.Parent)
arg1.PreviousNode == orig(arg1.PreviousNode)
arg1.NodeNameSpace == orig(arg1.NodeNameSpace)
arg1.NodeNameSpace.KonohaContext == orig(arg1.NodeNameSpace.KonohaContext)
arg1.NodeNameSpace.ParentNameSpace == orig(arg1.NodeNameSpace.ParentNameSpace)
arg1.NodeNameSpace.ImportedNameSpaceList == orig(arg1.NodeNameSpace.ImportedNameSpaceList)
arg1.NodeNameSpace.DefinedTokenMatrix == orig(arg1.NodeNameSpace.DefinedTokenMatrix)
arg1.NodeNameSpace.ImportedTokenMatrix == orig(arg1.NodeNameSpace.ImportedTokenMatrix)
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg1.NodeNameSpace.ImportedTokenMatrix[] == orig(arg1.NodeNameSpace.ImportedTokenMatrix[])
arg1.NodeNameSpace.DefinedSymbolTable == orig(arg1.NodeNameSpace.DefinedSymbolTable)
arg1.NodeNameSpace.ImportedSymbolTable == orig(arg1.NodeNameSpace.ImportedSymbolTable)
arg1.Syntax == orig(arg1.Syntax)
arg1.Syntax.PackageNameSpace == orig(arg1.Syntax.PackageNameSpace)
arg1.Syntax.SyntaxName == orig(arg1.Syntax.SyntaxName)
arg1.Syntax.SyntaxName.toString == orig(arg1.Syntax.SyntaxName.toString)
arg1.Syntax.SyntaxFlag == orig(arg1.Syntax.SyntaxFlag)
arg1.Syntax.ParseObject == orig(arg1.Syntax.ParseObject)
arg1.Syntax.ParseObject.getClass().getName() == orig(arg1.Syntax.ParseObject.getClass().getName())
arg1.Syntax.ParseMethod == orig(arg1.Syntax.ParseMethod)
arg1.Syntax.TypeObject == orig(arg1.Syntax.TypeObject)
arg1.Syntax.TypeMethod == orig(arg1.Syntax.TypeMethod)
arg1.Syntax.ParentSyntax == orig(arg1.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
arg1.KeyToken == orig(arg1.KeyToken)
arg1.KeyToken.uline == orig(arg1.KeyToken.uline)
arg1.KeyToken.ParsedText == orig(arg1.KeyToken.ParsedText)
arg1.KeyToken.ParsedText.toString == orig(arg1.KeyToken.ParsedText.toString)
arg1.KeyToken.flag == orig(arg1.KeyToken.flag)
arg1.KeyToken.ResolvedSyntax == orig(arg1.KeyToken.ResolvedSyntax)
arg1.KeyToken.ResolvedObject == orig(arg1.KeyToken.ResolvedObject)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg1.NodeList == orig(arg1.NodeList)
arg2[] == orig(arg2[])
arg0.KonohaContext has only one value
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.BooleanType has only one value
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable has only one value
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg1.Parent == null
arg1.PreviousNode == null
arg1.NextNode has only one value
arg1.NextNode.Parent == null
arg1.NextNode.PreviousNode has only one value
arg1.NextNode.NextNode == null
arg1.NextNode.NodeNameSpace has only one value
arg1.NextNode.Syntax has only one value
arg1.NextNode.KeyToken has only one value
arg1.NextNode.NodeList has only one value
arg1.NextNode.NodeList[] contains no nulls and has only one value, of length 2
arg1.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg1.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg1.NodeNameSpace has only one value
arg1.NodeNameSpace.KonohaContext has only one value
arg1.NodeNameSpace.ParentNameSpace has only one value
arg1.NodeNameSpace.ImportedNameSpaceList == null
arg1.NodeNameSpace.DefinedTokenMatrix == null
arg1.NodeNameSpace.ImportedTokenMatrix has only one value
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg1.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.NodeNameSpace.DefinedSymbolTable == null
arg1.NodeNameSpace.ImportedSymbolTable has only one value
arg1.Syntax has only one value
arg1.Syntax.PackageNameSpace has only one value
arg1.Syntax.SyntaxName has only one value
arg1.Syntax.SyntaxName.toString == "$Symbol"
arg1.Syntax.SyntaxFlag == 1
arg1.Syntax.ParseObject has only one value
arg1.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.Syntax.ParseMethod has only one value
arg1.Syntax.TypeObject == null
arg1.Syntax.TypeMethod == null
arg1.Syntax.ParentSyntax == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
arg1.KeyToken has only one value
arg1.KeyToken.uline == 2
arg1.KeyToken.ParsedText has only one value
arg1.KeyToken.ParsedText.toString == "C"
arg1.KeyToken.flag == 0
arg1.KeyToken.ResolvedSyntax has only one value
arg1.KeyToken.ResolvedObject == null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
arg1.NodeList == null
arg2[] contains no nulls and has only one value, of length 24
arg2[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg2[].getClass().getName() elements == org.KonohaScript.KToken.class
return.Parent == null
return.PreviousNode.Parent == null
return.PreviousNode.PreviousNode == null
return.PreviousNode.NextNode has only one value
return.PreviousNode.NodeNameSpace has only one value
return.PreviousNode.Syntax has only one value
return.PreviousNode.KeyToken has only one value
return.PreviousNode.NodeList == null
return.NextNode.Parent == null
return.NextNode.NextNode == null
return.NextNode.NodeNameSpace has only one value
return.NextNode.Syntax has only one value
return.NextNode.KeyToken has only one value
return.NextNode.NodeList has only one value
return.NextNode.NodeList[] contains no nulls and has only one value, of length 2
return.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
return.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
return.NodeNameSpace has only one value
return.NodeNameSpace.KonohaContext has only one value
return.NodeNameSpace.ParentNameSpace has only one value
return.NodeNameSpace.ImportedNameSpaceList == null
return.NodeNameSpace.DefinedTokenMatrix == null
return.NodeNameSpace.ImportedTokenMatrix has only one value
return.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
return.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.NodeNameSpace.DefinedSymbolTable == null
return.NodeNameSpace.ImportedSymbolTable has only one value
return.Syntax.PackageNameSpace has only one value
return.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
return.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
return.Syntax.ParseObject has only one value
return.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
return.Syntax.TypeObject == null
return.Syntax.TypeMethod == null
return.Syntax.ParentSyntax == null
return.KeyToken.uline == 2
return.KeyToken.flag == 0
return.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
return.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
return.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
size(arg1.NextNode.NodeList[]) == 2
size(arg1.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(return.NextNode.NodeList[]) == 2
size(return.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(return.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.ParseToken(org.KonohaScript.KToken, java.util.ArrayList, int, int):::ENTER
this.PreviousNode == null
this.NextNode == null
this.Syntax has only one value
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Symbol"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.ParseMethod has only one value
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken.uline == 2
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Symbol"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject == null
this.NodeList == null
arg0.uline == 2
arg0.flag == 0
arg0.ResolvedSyntax has only one value
arg0.ResolvedSyntax.PackageNameSpace has only one value
arg0.ResolvedSyntax.SyntaxName has only one value
arg0.ResolvedSyntax.SyntaxName.toString == "$Symbol"
arg0.ResolvedSyntax.SyntaxFlag == 1
arg0.ResolvedSyntax.ParseObject has only one value
arg0.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ResolvedSyntax.ParseMethod has only one value
arg0.ResolvedSyntax.TypeObject == null
arg0.ResolvedSyntax.TypeMethod == null
arg0.ResolvedSyntax.ParentSyntax == null
arg0.ResolvedObject == null
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 24
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3 == 24
size(arg1[]) == 24
===========================================================================
org.KonohaScript.UntypedNode.ParseToken(org.KonohaScript.KToken, java.util.ArrayList, int, int):::EXIT139
===========================================================================
org.KonohaScript.UntypedNode.ParseToken(org.KonohaScript.KToken, java.util.ArrayList, int, int):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.NodeList == orig(this.NodeList)
arg0.uline == orig(arg0.uline)
arg0.ParsedText == orig(arg0.ParsedText)
arg0.ParsedText.toString == orig(arg0.ParsedText.toString)
arg0.flag == orig(arg0.flag)
arg0.ResolvedSyntax == orig(arg0.ResolvedSyntax)
arg0.ResolvedSyntax.PackageNameSpace == orig(arg0.ResolvedSyntax.PackageNameSpace)
arg0.ResolvedSyntax.SyntaxName == orig(arg0.ResolvedSyntax.SyntaxName)
arg0.ResolvedSyntax.SyntaxName.toString == orig(arg0.ResolvedSyntax.SyntaxName.toString)
arg0.ResolvedSyntax.SyntaxFlag == orig(arg0.ResolvedSyntax.SyntaxFlag)
arg0.ResolvedSyntax.ParseObject == orig(arg0.ResolvedSyntax.ParseObject)
arg0.ResolvedSyntax.ParseObject.getClass().getName() == orig(arg0.ResolvedSyntax.ParseObject.getClass().getName())
arg0.ResolvedSyntax.ParseMethod == orig(arg0.ResolvedSyntax.ParseMethod)
arg0.ResolvedSyntax.TypeObject == orig(arg0.ResolvedSyntax.TypeObject)
arg0.ResolvedSyntax.TypeMethod == orig(arg0.ResolvedSyntax.TypeMethod)
arg0.ResolvedSyntax.ParentSyntax == orig(arg0.ResolvedSyntax.ParentSyntax)
arg0.ResolvedObject == orig(arg0.ResolvedObject)
arg1[] == orig(arg1[])
this.PreviousNode == null
this.NextNode == null
this.Syntax has only one value
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Symbol"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.ParseMethod has only one value
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken.uline == 2
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Symbol"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject == null
this.NodeList == null
arg0.uline == 2
arg0.flag == 0
arg0.ResolvedSyntax has only one value
arg0.ResolvedSyntax.PackageNameSpace has only one value
arg0.ResolvedSyntax.SyntaxName has only one value
arg0.ResolvedSyntax.SyntaxName.toString == "$Symbol"
arg0.ResolvedSyntax.SyntaxFlag == 1
arg0.ResolvedSyntax.ParseObject has only one value
arg0.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ResolvedSyntax.ParseMethod has only one value
arg0.ResolvedSyntax.TypeObject == null
arg0.ResolvedSyntax.TypeMethod == null
arg0.ResolvedSyntax.ParentSyntax == null
arg0.ResolvedObject == null
arg1[] contains no nulls and has only one value, of length 24
arg1[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg1[].getClass().getName() elements == org.KonohaScript.KToken.class
===========================================================================
org.KonohaScript.UntypedNode.ReportError(org.KonohaScript.KToken, java.lang.String, int):::ENTER
this has only one value
this.PreviousNode == null
this.NextNode == null
this.Syntax has only one value
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Type"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.ParseMethod has only one value
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax has only one value
this.Syntax.ParentSyntax.ParseMethod == null
this.Syntax.ParentSyntax.ParentSyntax == null
this.KeyToken has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "int"
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Type"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod has only one value
this.KeyToken.ResolvedSyntax.ParentSyntax has only one value
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
this.NodeList has only one value
this.NodeList[] has only one value, of length 3
this.NodeList[].getClass().getName() == [null, org.KonohaScript.UntypedNode, org.KonohaScript.KToken]
arg0 has only one value
arg0.uline == 1000
arg0.ParsedText has only one value
arg0.ParsedText.toString == "fibo"
arg0.flag == 0
arg0.ResolvedSyntax has only one value
arg0.ResolvedSyntax.PackageNameSpace has only one value
arg0.ResolvedSyntax.SyntaxName has only one value
arg0.ResolvedSyntax.SyntaxName.toString == "$Symbol"
arg0.ResolvedSyntax.SyntaxFlag == 1
arg0.ResolvedSyntax.ParseObject has only one value
arg0.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg0.ResolvedSyntax.ParseMethod has only one value
arg0.ResolvedSyntax.TypeObject == null
arg0.ResolvedSyntax.TypeMethod == null
arg0.ResolvedSyntax.ParentSyntax == null
arg0.ResolvedObject == null
arg1 has only one value
arg1.toString == "() is expected after fibo"
arg2 == 8
size(this.NodeList[]) == 3
===========================================================================
org.KonohaScript.UntypedNode.ReportError(org.KonohaScript.KToken, java.lang.String, int):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
arg0.uline == orig(arg0.uline)
arg0.ParsedText == orig(arg0.ParsedText)
arg0.ParsedText.toString == orig(arg0.ParsedText.toString)
arg0.ResolvedSyntax.TypeObject == orig(arg0.ResolvedSyntax.TypeObject)
arg0.ResolvedSyntax.TypeMethod == orig(arg0.ResolvedSyntax.TypeMethod)
arg0.ResolvedSyntax.ParentSyntax == orig(arg0.ResolvedSyntax.ParentSyntax)
arg1.toString == orig(arg1.toString)
this.PreviousNode == null
this.NextNode == null
this.Syntax has only one value
this.Syntax.PackageNameSpace == null
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Error"
this.Syntax.SyntaxFlag == 27200
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
this.Syntax.ParseMethod has only one value
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "fibo"
this.KeyToken.flag == 1
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace == null
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Error"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 27200
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == java.lang.String.class
this.NodeList == null
arg0.uline == 1000
arg0.ParsedText has only one value
arg0.ParsedText.toString == "fibo"
arg0.flag == 1
arg0.ResolvedSyntax has only one value
arg0.ResolvedSyntax.PackageNameSpace == null
arg0.ResolvedSyntax.SyntaxName has only one value
arg0.ResolvedSyntax.SyntaxName.toString == "$Error"
arg0.ResolvedSyntax.SyntaxFlag == 27200
arg0.ResolvedSyntax.ParseObject has only one value
arg0.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
arg0.ResolvedSyntax.ParseMethod has only one value
arg0.ResolvedSyntax.TypeObject == null
arg0.ResolvedSyntax.TypeMethod == null
arg0.ResolvedSyntax.ParentSyntax == null
arg0.ResolvedObject has only one value
arg0.ResolvedObject.getClass().getName() == java.lang.String.class
arg1.toString == "() is expected after fibo"
return == -1
===========================================================================
org.KonohaScript.UntypedNode.ReportExpectedAfter(java.util.ArrayList, int, int, java.lang.String, int):::ENTER
this has only one value
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Type"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken has only one value
this.KeyToken.uline == 1000
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "int"
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Type"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod has only one value
this.KeyToken.ResolvedSyntax.ParentSyntax has only one value
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
this.NodeList[].getClass().getName() one of { [null, org.KonohaScript.UntypedNode, org.KonohaScript.KToken], [org.KonohaScript.KToken] }
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 39
arg0[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg0[].getClass().getName() elements == org.KonohaScript.KToken.class
arg1 one of { 36, 37 }
arg2 == 39
arg3.toString one of { "$Type", "()", "=" }
arg4 one of { 5, 8, 12 }
size(this.NodeList[]) one of { 1, 3 }
size(arg0[]) == 39
===========================================================================
org.KonohaScript.UntypedNode.ReportExpectedAfter(java.util.ArrayList, int, int, java.lang.String, int):::EXIT178
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.KeyToken.ResolvedObject.getClass().getName() == orig(this.KeyToken.ResolvedObject.getClass().getName())
this.NodeList == orig(this.NodeList)
this.NodeList[] == orig(this.NodeList[])
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Type"
this.Syntax.SyntaxFlag == 1
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken has only one value
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "int"
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Type"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 1
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod has only one value
this.KeyToken.ResolvedSyntax.ParentSyntax has only one value
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KClass.class
return one of { 36, 37 }
orig(arg4) one of { 5, 12 }
===========================================================================
org.KonohaScript.UntypedNode.ReportExpectedAfter(java.util.ArrayList, int, int, java.lang.String, int):::EXIT181
this.Syntax has only one value
this.Syntax.PackageNameSpace == null
this.Syntax.SyntaxName has only one value
this.Syntax.SyntaxName.toString == "$Error"
this.Syntax.SyntaxFlag == 27200
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
this.Syntax.ParseMethod has only one value
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken has only one value
this.KeyToken.ParsedText has only one value
this.KeyToken.ParsedText.toString == "fibo"
this.KeyToken.flag == 1
this.KeyToken.ResolvedSyntax has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace == null
this.KeyToken.ResolvedSyntax.SyntaxName has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString == "$Error"
this.KeyToken.ResolvedSyntax.SyntaxFlag == 27200
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.CommonSyntax.class
this.KeyToken.ResolvedSyntax.ParseMethod has only one value
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject has only one value
this.KeyToken.ResolvedObject.getClass().getName() == java.lang.String.class
this.NodeList == null
arg3.toString == "()"
return == -1
orig(this.Syntax) has only one value
orig(this.Syntax.ParseMethod) has only one value
orig(this.Syntax.ParentSyntax) has only one value
orig(this.Syntax.ParentSyntax.ParseMethod) == null
orig(this.Syntax.ParentSyntax.ParentSyntax) == null
orig(this.NodeList) has only one value
orig(this.NodeList[]) has only one value, of length 3
orig(this.NodeList[].getClass().getName()) == [null, org.KonohaScript.UntypedNode, org.KonohaScript.KToken]
orig(arg1) == 37
orig(arg3) has only one value
orig(arg4) == 8
orig(size(this.NodeList[])) == 3
===========================================================================
org.KonohaScript.UntypedNode.ReportExpectedAfter(java.util.ArrayList, int, int, java.lang.String, int):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[].getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[].getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName())
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax.PackageNameSpace == orig(this.Syntax.ParentSyntax.PackageNameSpace)
this.Syntax.ParentSyntax.SyntaxName == orig(this.Syntax.ParentSyntax.SyntaxName)
this.Syntax.ParentSyntax.SyntaxName.toString == orig(this.Syntax.ParentSyntax.SyntaxName.toString)
this.Syntax.ParentSyntax.SyntaxFlag == orig(this.Syntax.ParentSyntax.SyntaxFlag)
this.Syntax.ParentSyntax.ParseObject == orig(this.Syntax.ParentSyntax.ParseObject)
this.Syntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.Syntax.ParentSyntax.ParseObject.getClass().getName())
this.Syntax.ParentSyntax.ParseMethod == orig(this.Syntax.ParentSyntax.ParseMethod)
this.Syntax.ParentSyntax.TypeObject == orig(this.Syntax.ParentSyntax.TypeObject)
this.Syntax.ParentSyntax.TypeMethod == orig(this.Syntax.ParentSyntax.TypeMethod)
this.Syntax.ParentSyntax.ParentSyntax == orig(this.Syntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.NodeList[].getClass().getName() == orig(this.NodeList[].getClass().getName())
arg0[] == orig(arg0[])
arg3.toString == orig(arg3.toString)
this.PreviousNode == null
this.NextNode == null
this.Syntax.SyntaxName.toString one of { "$Error", "$Type" }
this.Syntax.SyntaxFlag one of { 1, 27200 }
this.KeyToken.uline == 1000
this.KeyToken.ParsedText.toString one of { "fibo", "int" }
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Error", "$Type" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 27200 }
this.NodeList[] contains no nulls and has only one value, of length 1
this.NodeList[] elements has only one value
this.NodeList[].getClass().getName() == [org.KonohaScript.KToken]
this.NodeList[].getClass().getName() elements == org.KonohaScript.KToken.class
arg0[] contains no nulls and has only one value, of length 39
arg0[].getClass().getName() == [org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken, org.KonohaScript.KToken]
arg0[].getClass().getName() elements == org.KonohaScript.KToken.class
arg3.toString one of { "$Type", "()", "=" }
return one of { -1, 36, 37 }
size(this.NodeList[]) == 1
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[]) (elementwise)
this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[].callee.getClass().getName()) (elementwise)
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[]) (elementwise)
this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[].callee.getClass().getName()) (elementwise)
this.NodeList[] == orig(this.NodeList[]) (elementwise)
this.NodeList[] is the reverse of orig(this.NodeList[])
this.NodeList[].getClass().getName() == orig(this.NodeList[].getClass().getName()) (elementwise)
===========================================================================
org.KonohaScript.UntypedNode.SetAt(int, java.lang.Object):::ENTER
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.PackageNameSpace != null
this.Syntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ParsedText.toString one of { "+", "==", "int" }
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace != null
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedObject != null
this.NodeList[].getClass().getName() one of { [null, org.KonohaScript.UntypedNode], [org.KonohaScript.UntypedNode] }
arg1 != null
size(this.NodeList[]) one of { 1, 2 }
===========================================================================
org.KonohaScript.UntypedNode.SetAt(int, java.lang.Object):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
this.Syntax.ParentSyntax.PackageNameSpace == orig(this.Syntax.ParentSyntax.PackageNameSpace)
this.Syntax.ParentSyntax.SyntaxName == orig(this.Syntax.ParentSyntax.SyntaxName)
this.Syntax.ParentSyntax.SyntaxName.toString == orig(this.Syntax.ParentSyntax.SyntaxName.toString)
this.Syntax.ParentSyntax.SyntaxFlag == orig(this.Syntax.ParentSyntax.SyntaxFlag)
this.Syntax.ParentSyntax.ParseObject == orig(this.Syntax.ParentSyntax.ParseObject)
this.Syntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.Syntax.ParentSyntax.ParseObject.getClass().getName())
this.Syntax.ParentSyntax.ParseMethod == orig(this.Syntax.ParentSyntax.ParseMethod)
this.Syntax.ParentSyntax.TypeObject == orig(this.Syntax.ParentSyntax.TypeObject)
this.Syntax.ParentSyntax.TypeMethod == orig(this.Syntax.ParentSyntax.TypeMethod)
this.Syntax.ParentSyntax.ParentSyntax == orig(this.Syntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.KeyToken.ResolvedObject.getClass().getName() == orig(this.KeyToken.ResolvedObject.getClass().getName())
size(this.NodeList[])-1 == orig(size(this.NodeList[]))
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.PackageNameSpace != null
this.Syntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ParsedText.toString one of { "+", "==", "int" }
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.PackageNameSpace != null
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedObject != null
===========================================================================
org.KonohaScript.UntypedNode.SetAtNode(int, org.KonohaScript.UntypedNode):::ENTER
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax.ParseMethod == null
this.Syntax.ParentSyntax.ParentSyntax == null
this.KeyToken.ParsedText.toString one of { "+", "==", "int" }
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode]
this.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg0 one of { 0, 1 }
arg1.Parent == null
arg1.PreviousNode == null
arg1.NextNode.Parent == null
arg1.NextNode.NextNode == null
arg1.NextNode.NodeNameSpace has only one value
arg1.NextNode.Syntax has only one value
arg1.NextNode.KeyToken has only one value
arg1.NextNode.NodeList has only one value
arg1.NextNode.NodeList[] contains no nulls and has only one value, of length 2
arg1.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg1.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg1.NodeNameSpace has only one value
arg1.NodeNameSpace.KonohaContext has only one value
arg1.NodeNameSpace.ParentNameSpace has only one value
arg1.NodeNameSpace.ImportedNameSpaceList == null
arg1.NodeNameSpace.DefinedTokenMatrix == null
arg1.NodeNameSpace.ImportedTokenMatrix has only one value
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg1.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.NodeNameSpace.DefinedSymbolTable == null
arg1.NodeNameSpace.ImportedSymbolTable has only one value
arg1.Syntax.SyntaxName.toString one of { "$Empty", "$Symbol", "+" }
arg1.Syntax.SyntaxFlag one of { 1, 8003, 27200 }
arg1.Syntax.TypeObject == null
arg1.Syntax.TypeMethod == null
arg1.Syntax.ParentSyntax == null
arg1.KeyToken.uline one of { 2, 1000 }
arg1.KeyToken.flag == 0
arg1.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg1.NodeList[] contains no nulls and has only one value, of length 2
arg1.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg1.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(this.NodeList[]) == 1
size(arg1.NextNode.NodeList[]) == 2
size(arg1.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg1.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.SetAtNode(int, org.KonohaScript.UntypedNode):::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.NextNode == orig(this.NextNode)
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
this.Syntax.ParentSyntax.PackageNameSpace == orig(this.Syntax.ParentSyntax.PackageNameSpace)
this.Syntax.ParentSyntax.SyntaxName == orig(this.Syntax.ParentSyntax.SyntaxName)
this.Syntax.ParentSyntax.SyntaxName.toString == orig(this.Syntax.ParentSyntax.SyntaxName.toString)
this.Syntax.ParentSyntax.SyntaxFlag == orig(this.Syntax.ParentSyntax.SyntaxFlag)
this.Syntax.ParentSyntax.ParseObject == orig(this.Syntax.ParentSyntax.ParseObject)
this.Syntax.ParentSyntax.ParseObject.getClass().getName() == orig(this.Syntax.ParentSyntax.ParseObject.getClass().getName())
this.Syntax.ParentSyntax.ParseMethod == orig(this.Syntax.ParentSyntax.ParseMethod)
this.Syntax.ParentSyntax.TypeObject == orig(this.Syntax.ParentSyntax.TypeObject)
this.Syntax.ParentSyntax.TypeMethod == orig(this.Syntax.ParentSyntax.TypeMethod)
this.Syntax.ParentSyntax.ParentSyntax == orig(this.Syntax.ParentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.KeyToken.ResolvedObject.getClass().getName() == orig(this.KeyToken.ResolvedObject.getClass().getName())
arg1.Parent == orig(arg1.Parent)
arg1.PreviousNode == orig(arg1.PreviousNode)
arg1.NextNode == orig(arg1.NextNode)
arg1.NextNode.Parent == orig(arg1.NextNode.Parent)
arg1.NextNode.PreviousNode == orig(arg1.NextNode.PreviousNode)
arg1.NextNode.NextNode == orig(arg1.NextNode.NextNode)
arg1.NextNode.NodeNameSpace == orig(arg1.NextNode.NodeNameSpace)
arg1.NextNode.Syntax == orig(arg1.NextNode.Syntax)
arg1.NextNode.KeyToken == orig(arg1.NextNode.KeyToken)
arg1.NextNode.NodeList == orig(arg1.NextNode.NodeList)
arg1.NextNode.NodeList[] == orig(arg1.NextNode.NodeList[])
arg1.NodeNameSpace == orig(arg1.NodeNameSpace)
arg1.NodeNameSpace.KonohaContext == orig(arg1.NodeNameSpace.KonohaContext)
arg1.NodeNameSpace.ParentNameSpace == orig(arg1.NodeNameSpace.ParentNameSpace)
arg1.NodeNameSpace.ImportedNameSpaceList == orig(arg1.NodeNameSpace.ImportedNameSpaceList)
arg1.NodeNameSpace.DefinedTokenMatrix == orig(arg1.NodeNameSpace.DefinedTokenMatrix)
arg1.NodeNameSpace.ImportedTokenMatrix == orig(arg1.NodeNameSpace.ImportedTokenMatrix)
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
arg1.NodeNameSpace.ImportedTokenMatrix[] == orig(arg1.NodeNameSpace.ImportedTokenMatrix[])
arg1.NodeNameSpace.DefinedSymbolTable == orig(arg1.NodeNameSpace.DefinedSymbolTable)
arg1.NodeNameSpace.ImportedSymbolTable == orig(arg1.NodeNameSpace.ImportedSymbolTable)
arg1.Syntax == orig(arg1.Syntax)
arg1.Syntax.PackageNameSpace == orig(arg1.Syntax.PackageNameSpace)
arg1.Syntax.SyntaxName == orig(arg1.Syntax.SyntaxName)
arg1.Syntax.SyntaxName.toString == orig(arg1.Syntax.SyntaxName.toString)
arg1.Syntax.SyntaxFlag == orig(arg1.Syntax.SyntaxFlag)
arg1.Syntax.ParseObject == orig(arg1.Syntax.ParseObject)
arg1.Syntax.ParseObject.getClass().getName() == orig(arg1.Syntax.ParseObject.getClass().getName())
arg1.Syntax.ParseMethod == orig(arg1.Syntax.ParseMethod)
arg1.Syntax.TypeObject == orig(arg1.Syntax.TypeObject)
arg1.Syntax.TypeMethod == orig(arg1.Syntax.TypeMethod)
arg1.Syntax.ParentSyntax == orig(arg1.Syntax.ParentSyntax)
arg1.KeyToken == orig(arg1.KeyToken)
arg1.KeyToken.uline == orig(arg1.KeyToken.uline)
arg1.KeyToken.ParsedText == orig(arg1.KeyToken.ParsedText)
arg1.KeyToken.ParsedText.toString == orig(arg1.KeyToken.ParsedText.toString)
arg1.KeyToken.flag == orig(arg1.KeyToken.flag)
arg1.KeyToken.ResolvedSyntax == orig(arg1.KeyToken.ResolvedSyntax)
arg1.KeyToken.ResolvedObject == orig(arg1.KeyToken.ResolvedObject)
arg1.KeyToken.ResolvedObject.getClass().getName() == orig(arg1.KeyToken.ResolvedObject.getClass().getName())
arg1.NodeList == orig(arg1.NodeList)
arg1.NodeList[] == orig(arg1.NodeList[])
size(this.NodeList[])-1 == orig(size(this.NodeList[]))
this.PreviousNode == null
this.NextNode == null
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax.ParseMethod == null
this.Syntax.ParentSyntax.ParentSyntax == null
this.KeyToken.ParsedText.toString one of { "+", "==", "int" }
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Type", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
arg1.Parent == null
arg1.PreviousNode == null
arg1.NextNode.Parent == null
arg1.NextNode.NextNode == null
arg1.NextNode.NodeNameSpace has only one value
arg1.NextNode.Syntax has only one value
arg1.NextNode.KeyToken has only one value
arg1.NextNode.NodeList has only one value
arg1.NextNode.NodeList[] contains no nulls and has only one value, of length 2
arg1.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg1.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
arg1.NodeNameSpace has only one value
arg1.NodeNameSpace.KonohaContext has only one value
arg1.NodeNameSpace.ParentNameSpace has only one value
arg1.NodeNameSpace.ImportedNameSpaceList == null
arg1.NodeNameSpace.DefinedTokenMatrix == null
arg1.NodeNameSpace.ImportedTokenMatrix has only one value
arg1.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg1.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg1.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg1.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg1.NodeNameSpace.DefinedSymbolTable == null
arg1.NodeNameSpace.ImportedSymbolTable has only one value
arg1.Syntax.SyntaxName.toString one of { "$Empty", "$Symbol", "+" }
arg1.Syntax.SyntaxFlag one of { 1, 8003, 27200 }
arg1.Syntax.TypeObject == null
arg1.Syntax.TypeMethod == null
arg1.Syntax.ParentSyntax == null
arg1.KeyToken.uline one of { 2, 1000 }
arg1.KeyToken.flag == 0
arg1.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
arg1.NodeList[] contains no nulls and has only one value, of length 2
arg1.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
arg1.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
return.Parent == null
return.PreviousNode == null
return.NextNode.Parent == null
return.NextNode.NextNode == null
return.NextNode.NodeNameSpace has only one value
return.NextNode.Syntax has only one value
return.NextNode.KeyToken has only one value
return.NextNode.NodeList has only one value
return.NextNode.NodeList[] contains no nulls and has only one value, of length 2
return.NextNode.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
return.NextNode.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
return.NodeNameSpace has only one value
return.NodeNameSpace.KonohaContext has only one value
return.NodeNameSpace.ParentNameSpace has only one value
return.NodeNameSpace.ImportedNameSpaceList == null
return.NodeNameSpace.DefinedTokenMatrix == null
return.NodeNameSpace.ImportedTokenMatrix has only one value
return.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
return.NodeNameSpace.ImportedTokenMatrix[] has only one value, of length 41
return.NodeNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
return.NodeNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
return.NodeNameSpace.DefinedSymbolTable == null
return.NodeNameSpace.ImportedSymbolTable has only one value
return.Syntax.SyntaxName.toString one of { "$Empty", "$Symbol", "+" }
return.Syntax.SyntaxFlag one of { 1, 8003, 27200 }
return.Syntax.TypeObject == null
return.Syntax.TypeMethod == null
return.Syntax.ParentSyntax == null
return.KeyToken.uline one of { 2, 1000 }
return.KeyToken.flag == 0
return.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
return.NodeList[] contains no nulls and has only one value, of length 2
return.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
return.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(this.NodeList[]) one of { 1, 2 }
size(arg1.NextNode.NodeList[]) == 2
size(arg1.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(arg1.NodeList[]) == 2
size(return.NextNode.NodeList[]) == 2
size(return.NodeNameSpace.ImportedTokenMatrix[]) == 41
size(return.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.UntypedNode(org.KonohaScript.KNameSpace, org.KonohaScript.KToken):::ENTER
arg0 has only one value
arg0 != null
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
org.KonohaScript.KNameSpace.MacroPrefix has only one value
org.KonohaScript.KNameSpace.MacroPrefix != null
org.KonohaScript.KNameSpace.MacroPrefix.toString == "@$"
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
org.KonohaScript.KNameSpace.$assertionsDisabled == false
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg0.ImportedSymbolTable != null
arg1 != null
arg1.uline one of { 2, 1000 }
arg1.ParsedText != null
arg1.flag == 0
arg1.ResolvedSyntax != null
arg1.ResolvedSyntax.SyntaxName != null
arg1.ResolvedSyntax.SyntaxFlag >= 1
arg1.ResolvedSyntax.ParseObject != null
arg1.ResolvedSyntax.TypeObject == null
org.KonohaScript.KSyntax.baseSyntax has only one value
org.KonohaScript.KSyntax.baseSyntax != null
org.KonohaScript.KSyntax.ErrorSyntax has only one value
org.KonohaScript.KSyntax.ErrorSyntax != null
org.KonohaScript.KSyntax.IndentSyntax has only one value
org.KonohaScript.KSyntax.IndentSyntax != null
org.KonohaScript.KSyntax.EmptySyntax has only one value
org.KonohaScript.KSyntax.EmptySyntax != null
org.KonohaScript.KSyntax.TypeSyntax has only one value
org.KonohaScript.KSyntax.TypeSyntax != null
org.KonohaScript.KSyntax.ConstSyntax has only one value
org.KonohaScript.KSyntax.ConstSyntax != null
org.KonohaScript.KSyntax.MemberSyntax has only one value
org.KonohaScript.KSyntax.MemberSyntax != null
org.KonohaScript.KSyntax.ApplyMethodSyntax has only one value
org.KonohaScript.KSyntax.ApplyMethodSyntax != null
org.KonohaScript.KToken.Tab has only one value
org.KonohaScript.KToken.Tab != null
org.KonohaScript.KToken.Tab.toString == "  "
org.KonohaScript.KToken.$assertionsDisabled == false
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.UntypedNode.UntypedNode(org.KonohaScript.KNameSpace, org.KonohaScript.KToken):::EXIT
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
arg0.KonohaContext == orig(arg0.KonohaContext)
arg0.KonohaContext.RootNameSpace == orig(arg0.KonohaContext.RootNameSpace)
arg0.KonohaContext.DefaultNameSpace == orig(arg0.KonohaContext.DefaultNameSpace)
arg0.KonohaContext.SymbolTable == orig(arg0.KonohaContext.SymbolTable)
arg0.KonohaContext.VoidType == orig(arg0.KonohaContext.VoidType)
arg0.KonohaContext.BooleanType == orig(arg0.KonohaContext.BooleanType)
arg0.ParentNameSpace == orig(arg0.ParentNameSpace)
arg0.ParentNameSpace.KonohaContext == orig(arg0.ParentNameSpace.KonohaContext)
arg0.ParentNameSpace.ParentNameSpace == orig(arg0.ParentNameSpace.ParentNameSpace)
arg0.ParentNameSpace.ImportedNameSpaceList == orig(arg0.ParentNameSpace.ImportedNameSpaceList)
arg0.ParentNameSpace.DefinedTokenMatrix == orig(arg0.ParentNameSpace.DefinedTokenMatrix)
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.DefinedTokenMatrix[] == orig(arg0.ParentNameSpace.DefinedTokenMatrix[])
arg0.ParentNameSpace.ImportedTokenMatrix == orig(arg0.ParentNameSpace.ImportedTokenMatrix)
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
arg0.ParentNameSpace.ImportedTokenMatrix[] == orig(arg0.ParentNameSpace.ImportedTokenMatrix[])
arg0.ParentNameSpace.DefinedSymbolTable == orig(arg0.ParentNameSpace.DefinedSymbolTable)
arg0.ParentNameSpace.ImportedSymbolTable == orig(arg0.ParentNameSpace.ImportedSymbolTable)
arg0.ImportedNameSpaceList == orig(arg0.ImportedNameSpaceList)
arg0.DefinedTokenMatrix == orig(arg0.DefinedTokenMatrix)
arg0.ImportedTokenMatrix == orig(arg0.ImportedTokenMatrix)
arg0.ImportedTokenMatrix.getClass().getName() == orig(arg0.ImportedTokenMatrix.getClass().getName())
arg0.ImportedTokenMatrix[] == orig(arg0.ImportedTokenMatrix[])
arg0.DefinedSymbolTable == orig(arg0.DefinedSymbolTable)
arg0.ImportedSymbolTable == orig(arg0.ImportedSymbolTable)
arg1.uline == orig(arg1.uline)
arg1.ParsedText == orig(arg1.ParsedText)
arg1.ParsedText.toString == orig(arg1.ParsedText.toString)
arg1.flag == orig(arg1.flag)
arg1.ResolvedSyntax == orig(arg1.ResolvedSyntax)
arg1.ResolvedSyntax.PackageNameSpace == orig(arg1.ResolvedSyntax.PackageNameSpace)
arg1.ResolvedSyntax.SyntaxName == orig(arg1.ResolvedSyntax.SyntaxName)
arg1.ResolvedSyntax.SyntaxName.toString == orig(arg1.ResolvedSyntax.SyntaxName.toString)
arg1.ResolvedSyntax.SyntaxFlag == orig(arg1.ResolvedSyntax.SyntaxFlag)
arg1.ResolvedSyntax.ParseObject == orig(arg1.ResolvedSyntax.ParseObject)
arg1.ResolvedSyntax.ParseObject.getClass().getName() == orig(arg1.ResolvedSyntax.ParseObject.getClass().getName())
arg1.ResolvedSyntax.ParseMethod == orig(arg1.ResolvedSyntax.ParseMethod)
arg1.ResolvedSyntax.TypeObject == orig(arg1.ResolvedSyntax.TypeObject)
arg1.ResolvedSyntax.TypeMethod == orig(arg1.ResolvedSyntax.TypeMethod)
arg1.ResolvedSyntax.ParentSyntax == orig(arg1.ResolvedSyntax.ParentSyntax)
arg1.ResolvedObject == orig(arg1.ResolvedObject)
arg1.ResolvedObject.getClass().getName() == orig(arg1.ResolvedObject.getClass().getName())
this.PreviousNode == null
this.NextNode == null
this.Syntax.ParentSyntax.ParseMethod has only one value
this.Syntax.ParentSyntax.ParentSyntax has only one value
this.KeyToken.flag == 0
this.NodeList == null
arg0.KonohaContext has only one value
arg0.KonohaContext != null
arg0.KonohaContext.RootNameSpace has only one value
arg0.KonohaContext.RootNameSpace != null
arg0.KonohaContext.DefaultNameSpace has only one value
arg0.KonohaContext.DefaultNameSpace != null
arg0.KonohaContext.SymbolTable has only one value
arg0.KonohaContext.SymbolTable != null
arg0.KonohaContext.VoidType has only one value
arg0.KonohaContext.VoidType != null
arg0.KonohaContext.BooleanType has only one value
arg0.KonohaContext.BooleanType != null
arg0.ParentNameSpace has only one value
arg0.ParentNameSpace != null
arg0.ParentNameSpace.KonohaContext has only one value
arg0.ParentNameSpace.KonohaContext != null
arg0.ParentNameSpace.ParentNameSpace == null
arg0.ParentNameSpace.ImportedNameSpaceList == null
arg0.ParentNameSpace.DefinedTokenMatrix has only one value
arg0.ParentNameSpace.DefinedTokenMatrix != null
arg0.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.DefinedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.DefinedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.DefinedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.ImportedTokenMatrix has only one value
arg0.ParentNameSpace.ImportedTokenMatrix != null
arg0.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ParentNameSpace.ImportedTokenMatrix[] has only one value, of length 41
arg0.ParentNameSpace.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ParentNameSpace.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.ParentNameSpace.DefinedSymbolTable has only one value
arg0.ParentNameSpace.DefinedSymbolTable != null
arg0.ParentNameSpace.ImportedSymbolTable has only one value
arg0.ParentNameSpace.ImportedSymbolTable != null
arg0.ImportedNameSpaceList == null
arg0.DefinedTokenMatrix == null
arg0.ImportedTokenMatrix has only one value
arg0.ImportedTokenMatrix != null
arg0.ImportedTokenMatrix.getClass().getName() == org.KonohaScript.KFunc[].class
arg0.ImportedTokenMatrix[] has only one value, of length 41
arg0.ImportedTokenMatrix[].getClass().getName() == [null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, org.KonohaScript.KFunc, org.KonohaScript.KFunc, null, null, org.KonohaScript.KFunc, null, null, null, null]
arg0.ImportedTokenMatrix[].callee.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, org.KonohaScript.GrammarSet.MiniKonoha, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
arg0.DefinedSymbolTable == null
arg0.ImportedSymbolTable has only one value
arg0.ImportedSymbolTable != null
arg1.uline one of { 2, 1000 }
arg1.ParsedText != null
arg1.flag == 0
arg1.ResolvedSyntax != null
arg1.ResolvedSyntax.SyntaxName != null
arg1.ResolvedSyntax.SyntaxFlag >= 1
arg1.ResolvedSyntax.ParseObject != null
arg1.ResolvedSyntax.TypeObject == null
size(arg0.ParentNameSpace.DefinedTokenMatrix[]) == 41
size(arg0.ParentNameSpace.ImportedTokenMatrix[]) == 41
size(arg0.ImportedTokenMatrix[]) == 41
===========================================================================
org.KonohaScript.UntypedNode.toString():::ENTER
this.NextNode.PreviousNode has only one value
this.NextNode.PreviousNode.Syntax has only one value
this.NextNode.PreviousNode.KeyToken has only one value
this.NextNode.PreviousNode.NodeList has only one value
this.NextNode.PreviousNode.NodeList[] contains no nulls and has only one value, of length 2
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken.uline == 2
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
this.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(this.NodeList[]) == 2
===========================================================================
org.KonohaScript.UntypedNode.toString():::EXIT
this.Parent == orig(this.Parent)
org.KonohaScript.UntypedNode.$assertionsDisabled == orig(org.KonohaScript.UntypedNode.$assertionsDisabled)
org.KonohaScript.KNameSpace.MacroPrefix == orig(org.KonohaScript.KNameSpace.MacroPrefix)
org.KonohaScript.KNameSpace.MacroPrefix.toString == orig(org.KonohaScript.KNameSpace.MacroPrefix.toString)
org.KonohaScript.KNameSpace.$assertionsDisabled == orig(org.KonohaScript.KNameSpace.$assertionsDisabled)
org.KonohaScript.KSyntax.baseSyntax == orig(org.KonohaScript.KSyntax.baseSyntax)
org.KonohaScript.KSyntax.ErrorSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax)
org.KonohaScript.KSyntax.IndentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax)
org.KonohaScript.KSyntax.EmptySyntax == orig(org.KonohaScript.KSyntax.EmptySyntax)
org.KonohaScript.KSyntax.TypeSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax)
org.KonohaScript.KSyntax.ConstSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax)
org.KonohaScript.KSyntax.MemberSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax)
org.KonohaScript.KToken.Tab == orig(org.KonohaScript.KToken.Tab)
org.KonohaScript.KToken.Tab.toString == orig(org.KonohaScript.KToken.Tab.toString)
org.KonohaScript.KToken.$assertionsDisabled == orig(org.KonohaScript.KToken.$assertionsDisabled)
this.PreviousNode == orig(this.PreviousNode)
this.PreviousNode.Parent == orig(this.PreviousNode.Parent)
this.PreviousNode.PreviousNode == orig(this.PreviousNode.PreviousNode)
this.PreviousNode.NextNode == orig(this.PreviousNode.NextNode)
this.PreviousNode.NextNode.Parent == orig(this.PreviousNode.NextNode.Parent)
this.PreviousNode.NextNode.PreviousNode == orig(this.PreviousNode.NextNode.PreviousNode)
this.PreviousNode.NextNode.NextNode == orig(this.PreviousNode.NextNode.NextNode)
this.PreviousNode.NextNode.NodeNameSpace == orig(this.PreviousNode.NextNode.NodeNameSpace)
this.PreviousNode.NextNode.Syntax == orig(this.PreviousNode.NextNode.Syntax)
this.PreviousNode.NextNode.KeyToken == orig(this.PreviousNode.NextNode.KeyToken)
this.PreviousNode.NextNode.NodeList == orig(this.PreviousNode.NextNode.NodeList)
this.PreviousNode.NextNode.NodeList[] == orig(this.PreviousNode.NextNode.NodeList[])
this.PreviousNode.NodeNameSpace == orig(this.PreviousNode.NodeNameSpace)
this.PreviousNode.NodeNameSpace.KonohaContext == orig(this.PreviousNode.NodeNameSpace.KonohaContext)
this.PreviousNode.NodeNameSpace.ParentNameSpace == orig(this.PreviousNode.NodeNameSpace.ParentNameSpace)
this.PreviousNode.NodeNameSpace.ImportedNameSpaceList == orig(this.PreviousNode.NodeNameSpace.ImportedNameSpaceList)
this.PreviousNode.NodeNameSpace.DefinedTokenMatrix == orig(this.PreviousNode.NodeNameSpace.DefinedTokenMatrix)
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix == orig(this.PreviousNode.NodeNameSpace.ImportedTokenMatrix)
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.PreviousNode.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.PreviousNode.NodeNameSpace.ImportedTokenMatrix[] == orig(this.PreviousNode.NodeNameSpace.ImportedTokenMatrix[])
this.PreviousNode.NodeNameSpace.DefinedSymbolTable == orig(this.PreviousNode.NodeNameSpace.DefinedSymbolTable)
this.PreviousNode.NodeNameSpace.ImportedSymbolTable == orig(this.PreviousNode.NodeNameSpace.ImportedSymbolTable)
this.PreviousNode.Syntax == orig(this.PreviousNode.Syntax)
this.PreviousNode.Syntax.PackageNameSpace == orig(this.PreviousNode.Syntax.PackageNameSpace)
this.PreviousNode.Syntax.SyntaxName == orig(this.PreviousNode.Syntax.SyntaxName)
this.PreviousNode.Syntax.SyntaxName.toString == orig(this.PreviousNode.Syntax.SyntaxName.toString)
this.PreviousNode.Syntax.SyntaxFlag == orig(this.PreviousNode.Syntax.SyntaxFlag)
this.PreviousNode.Syntax.ParseObject == orig(this.PreviousNode.Syntax.ParseObject)
this.PreviousNode.Syntax.ParseObject.getClass().getName() == orig(this.PreviousNode.Syntax.ParseObject.getClass().getName())
this.PreviousNode.Syntax.ParseMethod == orig(this.PreviousNode.Syntax.ParseMethod)
this.PreviousNode.Syntax.TypeObject == orig(this.PreviousNode.Syntax.TypeObject)
this.PreviousNode.Syntax.TypeMethod == orig(this.PreviousNode.Syntax.TypeMethod)
this.PreviousNode.Syntax.ParentSyntax == orig(this.PreviousNode.Syntax.ParentSyntax)
this.PreviousNode.KeyToken == orig(this.PreviousNode.KeyToken)
this.PreviousNode.KeyToken.uline == orig(this.PreviousNode.KeyToken.uline)
this.PreviousNode.KeyToken.ParsedText == orig(this.PreviousNode.KeyToken.ParsedText)
this.PreviousNode.KeyToken.ParsedText.toString == orig(this.PreviousNode.KeyToken.ParsedText.toString)
this.PreviousNode.KeyToken.flag == orig(this.PreviousNode.KeyToken.flag)
this.PreviousNode.KeyToken.ResolvedSyntax == orig(this.PreviousNode.KeyToken.ResolvedSyntax)
this.PreviousNode.KeyToken.ResolvedObject == orig(this.PreviousNode.KeyToken.ResolvedObject)
this.PreviousNode.KeyToken.ResolvedObject.getClass().getName() == orig(this.PreviousNode.KeyToken.ResolvedObject.getClass().getName())
this.PreviousNode.NodeList == orig(this.PreviousNode.NodeList)
this.PreviousNode.NodeList[] == orig(this.PreviousNode.NodeList[])
this.NextNode == orig(this.NextNode)
this.NextNode.Parent == orig(this.NextNode.Parent)
this.NextNode.PreviousNode == orig(this.NextNode.PreviousNode)
this.NextNode.PreviousNode.Parent == orig(this.NextNode.PreviousNode.Parent)
this.NextNode.PreviousNode.PreviousNode == orig(this.NextNode.PreviousNode.PreviousNode)
this.NextNode.PreviousNode.NextNode == orig(this.NextNode.PreviousNode.NextNode)
this.NextNode.PreviousNode.NodeNameSpace == orig(this.NextNode.PreviousNode.NodeNameSpace)
this.NextNode.PreviousNode.Syntax == orig(this.NextNode.PreviousNode.Syntax)
this.NextNode.PreviousNode.KeyToken == orig(this.NextNode.PreviousNode.KeyToken)
this.NextNode.PreviousNode.NodeList == orig(this.NextNode.PreviousNode.NodeList)
this.NextNode.PreviousNode.NodeList[] == orig(this.NextNode.PreviousNode.NodeList[])
this.NextNode.NextNode == orig(this.NextNode.NextNode)
this.NextNode.NodeNameSpace == orig(this.NextNode.NodeNameSpace)
this.NextNode.NodeNameSpace.KonohaContext == orig(this.NextNode.NodeNameSpace.KonohaContext)
this.NextNode.NodeNameSpace.ParentNameSpace == orig(this.NextNode.NodeNameSpace.ParentNameSpace)
this.NextNode.NodeNameSpace.ImportedNameSpaceList == orig(this.NextNode.NodeNameSpace.ImportedNameSpaceList)
this.NextNode.NodeNameSpace.DefinedTokenMatrix == orig(this.NextNode.NodeNameSpace.DefinedTokenMatrix)
this.NextNode.NodeNameSpace.ImportedTokenMatrix == orig(this.NextNode.NodeNameSpace.ImportedTokenMatrix)
this.NextNode.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NextNode.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NextNode.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NextNode.NodeNameSpace.ImportedTokenMatrix[])
this.NextNode.NodeNameSpace.DefinedSymbolTable == orig(this.NextNode.NodeNameSpace.DefinedSymbolTable)
this.NextNode.NodeNameSpace.ImportedSymbolTable == orig(this.NextNode.NodeNameSpace.ImportedSymbolTable)
this.NextNode.Syntax == orig(this.NextNode.Syntax)
this.NextNode.Syntax.PackageNameSpace == orig(this.NextNode.Syntax.PackageNameSpace)
this.NextNode.Syntax.SyntaxName == orig(this.NextNode.Syntax.SyntaxName)
this.NextNode.Syntax.SyntaxName.toString == orig(this.NextNode.Syntax.SyntaxName.toString)
this.NextNode.Syntax.SyntaxFlag == orig(this.NextNode.Syntax.SyntaxFlag)
this.NextNode.Syntax.ParseObject == orig(this.NextNode.Syntax.ParseObject)
this.NextNode.Syntax.ParseObject.getClass().getName() == orig(this.NextNode.Syntax.ParseObject.getClass().getName())
this.NextNode.Syntax.ParseMethod == orig(this.NextNode.Syntax.ParseMethod)
this.NextNode.Syntax.TypeObject == orig(this.NextNode.Syntax.TypeObject)
this.NextNode.Syntax.TypeMethod == orig(this.NextNode.Syntax.TypeMethod)
this.NextNode.Syntax.ParentSyntax == orig(this.NextNode.Syntax.ParentSyntax)
this.NextNode.KeyToken == orig(this.NextNode.KeyToken)
this.NextNode.KeyToken.uline == orig(this.NextNode.KeyToken.uline)
this.NextNode.KeyToken.ParsedText == orig(this.NextNode.KeyToken.ParsedText)
this.NextNode.KeyToken.ParsedText.toString == orig(this.NextNode.KeyToken.ParsedText.toString)
this.NextNode.KeyToken.flag == orig(this.NextNode.KeyToken.flag)
this.NextNode.KeyToken.ResolvedSyntax == orig(this.NextNode.KeyToken.ResolvedSyntax)
this.NextNode.KeyToken.ResolvedObject == orig(this.NextNode.KeyToken.ResolvedObject)
this.NextNode.KeyToken.ResolvedObject.getClass().getName() == orig(this.NextNode.KeyToken.ResolvedObject.getClass().getName())
this.NextNode.NodeList == orig(this.NextNode.NodeList)
this.NextNode.NodeList[] == orig(this.NextNode.NodeList[])
this.NodeNameSpace == orig(this.NodeNameSpace)
this.NodeNameSpace.KonohaContext == orig(this.NodeNameSpace.KonohaContext)
this.NodeNameSpace.KonohaContext.RootNameSpace == orig(this.NodeNameSpace.KonohaContext.RootNameSpace)
this.NodeNameSpace.KonohaContext.DefaultNameSpace == orig(this.NodeNameSpace.KonohaContext.DefaultNameSpace)
this.NodeNameSpace.KonohaContext.SymbolTable == orig(this.NodeNameSpace.KonohaContext.SymbolTable)
this.NodeNameSpace.KonohaContext.VoidType == orig(this.NodeNameSpace.KonohaContext.VoidType)
this.NodeNameSpace.KonohaContext.BooleanType == orig(this.NodeNameSpace.KonohaContext.BooleanType)
this.NodeNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.KonohaContext == orig(this.NodeNameSpace.ParentNameSpace.KonohaContext)
this.NodeNameSpace.ParentNameSpace.ParentNameSpace == orig(this.NodeNameSpace.ParentNameSpace.ParentNameSpace)
this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ParentNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.DefinedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ParentNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ParentNameSpace.ImportedSymbolTable)
this.NodeNameSpace.ImportedNameSpaceList == orig(this.NodeNameSpace.ImportedNameSpaceList)
this.NodeNameSpace.DefinedTokenMatrix == orig(this.NodeNameSpace.DefinedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix == orig(this.NodeNameSpace.ImportedTokenMatrix)
this.NodeNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.NodeNameSpace.ImportedTokenMatrix.getClass().getName())
this.NodeNameSpace.ImportedTokenMatrix[] == orig(this.NodeNameSpace.ImportedTokenMatrix[])
this.NodeNameSpace.DefinedSymbolTable == orig(this.NodeNameSpace.DefinedSymbolTable)
this.NodeNameSpace.ImportedSymbolTable == orig(this.NodeNameSpace.ImportedSymbolTable)
this.Syntax == orig(this.Syntax)
this.Syntax.PackageNameSpace == orig(this.Syntax.PackageNameSpace)
this.Syntax.PackageNameSpace.KonohaContext == orig(this.Syntax.PackageNameSpace.KonohaContext)
this.Syntax.PackageNameSpace.ParentNameSpace == orig(this.Syntax.PackageNameSpace.ParentNameSpace)
this.Syntax.PackageNameSpace.ImportedNameSpaceList == orig(this.Syntax.PackageNameSpace.ImportedNameSpaceList)
this.Syntax.PackageNameSpace.DefinedTokenMatrix == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix)
this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.DefinedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.DefinedTokenMatrix[])
this.Syntax.PackageNameSpace.ImportedTokenMatrix == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix)
this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName() == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix.getClass().getName())
this.Syntax.PackageNameSpace.ImportedTokenMatrix[] == orig(this.Syntax.PackageNameSpace.ImportedTokenMatrix[])
this.Syntax.PackageNameSpace.DefinedSymbolTable == orig(this.Syntax.PackageNameSpace.DefinedSymbolTable)
this.Syntax.PackageNameSpace.ImportedSymbolTable == orig(this.Syntax.PackageNameSpace.ImportedSymbolTable)
this.Syntax.SyntaxName == orig(this.Syntax.SyntaxName)
this.Syntax.SyntaxName.toString == orig(this.Syntax.SyntaxName.toString)
this.Syntax.SyntaxFlag == orig(this.Syntax.SyntaxFlag)
this.Syntax.ParseObject == orig(this.Syntax.ParseObject)
this.Syntax.ParseObject.getClass().getName() == orig(this.Syntax.ParseObject.getClass().getName())
this.Syntax.ParseMethod == orig(this.Syntax.ParseMethod)
this.Syntax.TypeObject == orig(this.Syntax.TypeObject)
this.Syntax.TypeMethod == orig(this.Syntax.TypeMethod)
this.Syntax.ParentSyntax == orig(this.Syntax.ParentSyntax)
org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ErrorSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ErrorSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject)
org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParseMethod)
org.KonohaScript.KSyntax.ErrorSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeObject)
org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ErrorSyntax.TypeMethod)
org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ErrorSyntax.ParentSyntax)
org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.IndentSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.IndentSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject)
org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.IndentSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.ParseMethod)
org.KonohaScript.KSyntax.IndentSyntax.TypeObject == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeObject)
org.KonohaScript.KSyntax.IndentSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.IndentSyntax.TypeMethod)
org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.IndentSyntax.ParentSyntax)
org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.EmptySyntax.PackageNameSpace)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.EmptySyntax.SyntaxFlag)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject)
org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.EmptySyntax.ParseMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.ParseMethod)
org.KonohaScript.KSyntax.EmptySyntax.TypeObject == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeObject)
org.KonohaScript.KSyntax.EmptySyntax.TypeMethod == orig(org.KonohaScript.KSyntax.EmptySyntax.TypeMethod)
org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.EmptySyntax.ParentSyntax)
org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.TypeSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.TypeSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject)
org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.TypeSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.ParseMethod)
org.KonohaScript.KSyntax.TypeSyntax.TypeObject == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeObject)
org.KonohaScript.KSyntax.TypeSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.TypeSyntax.TypeMethod)
org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.TypeSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ConstSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ConstSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject)
org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ConstSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.ParseMethod)
org.KonohaScript.KSyntax.ConstSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeObject)
org.KonohaScript.KSyntax.ConstSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ConstSyntax.TypeMethod)
org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ConstSyntax.ParentSyntax)
org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.MemberSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.MemberSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject)
org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.MemberSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.ParseMethod)
org.KonohaScript.KSyntax.MemberSyntax.TypeObject == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeObject)
org.KonohaScript.KSyntax.MemberSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.MemberSyntax.TypeMethod)
org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.MemberSyntax.ParentSyntax)
org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.PackageNameSpace)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxName.toString)
org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.SyntaxFlag)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName() == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseObject.getClass().getName())
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParseMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeObject)
org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.TypeMethod)
org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax == orig(org.KonohaScript.KSyntax.ApplyMethodSyntax.ParentSyntax)
this.KeyToken == orig(this.KeyToken)
this.KeyToken.uline == orig(this.KeyToken.uline)
this.KeyToken.ParsedText == orig(this.KeyToken.ParsedText)
this.KeyToken.ParsedText.toString == orig(this.KeyToken.ParsedText.toString)
this.KeyToken.flag == orig(this.KeyToken.flag)
this.KeyToken.ResolvedSyntax == orig(this.KeyToken.ResolvedSyntax)
this.KeyToken.ResolvedSyntax.PackageNameSpace == orig(this.KeyToken.ResolvedSyntax.PackageNameSpace)
this.KeyToken.ResolvedSyntax.SyntaxName == orig(this.KeyToken.ResolvedSyntax.SyntaxName)
this.KeyToken.ResolvedSyntax.SyntaxName.toString == orig(this.KeyToken.ResolvedSyntax.SyntaxName.toString)
this.KeyToken.ResolvedSyntax.SyntaxFlag == orig(this.KeyToken.ResolvedSyntax.SyntaxFlag)
this.KeyToken.ResolvedSyntax.ParseObject == orig(this.KeyToken.ResolvedSyntax.ParseObject)
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == orig(this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName())
this.KeyToken.ResolvedSyntax.ParseMethod == orig(this.KeyToken.ResolvedSyntax.ParseMethod)
this.KeyToken.ResolvedSyntax.TypeObject == orig(this.KeyToken.ResolvedSyntax.TypeObject)
this.KeyToken.ResolvedSyntax.TypeMethod == orig(this.KeyToken.ResolvedSyntax.TypeMethod)
this.KeyToken.ResolvedSyntax.ParentSyntax == orig(this.KeyToken.ResolvedSyntax.ParentSyntax)
this.KeyToken.ResolvedObject == orig(this.KeyToken.ResolvedObject)
this.KeyToken.ResolvedObject.getClass().getName() == orig(this.KeyToken.ResolvedObject.getClass().getName())
this.NodeList == orig(this.NodeList)
this.NodeList[] == orig(this.NodeList[])
this.NextNode.PreviousNode has only one value
this.NextNode.PreviousNode.Syntax has only one value
this.NextNode.PreviousNode.KeyToken has only one value
this.NextNode.PreviousNode.NodeList has only one value
this.NextNode.PreviousNode.NodeList[] contains no nulls and has only one value, of length 2
this.Syntax.PackageNameSpace has only one value
this.Syntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.Syntax.SyntaxFlag one of { 1, 8003, 12802 }
this.Syntax.ParseObject has only one value
this.Syntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.Syntax.TypeMethod == null
this.Syntax.ParentSyntax == null
this.KeyToken.uline == 2
this.KeyToken.flag == 0
this.KeyToken.ResolvedSyntax.PackageNameSpace has only one value
this.KeyToken.ResolvedSyntax.SyntaxName.toString one of { "$Symbol", "+", "==" }
this.KeyToken.ResolvedSyntax.SyntaxFlag one of { 1, 8003, 12802 }
this.KeyToken.ResolvedSyntax.ParseObject has only one value
this.KeyToken.ResolvedSyntax.ParseObject.getClass().getName() == org.KonohaScript.GrammarSet.MiniKonoha.class
this.KeyToken.ResolvedSyntax.TypeMethod == null
this.KeyToken.ResolvedSyntax.ParentSyntax == null
this.KeyToken.ResolvedObject.getClass().getName() == org.KonohaScript.KSyntax.class
this.NodeList[].getClass().getName() == [org.KonohaScript.UntypedNode, org.KonohaScript.UntypedNode]
this.NodeList[].getClass().getName() elements == org.KonohaScript.UntypedNode.class
size(this.NodeList[]) == 2
Exiting Daikon.
